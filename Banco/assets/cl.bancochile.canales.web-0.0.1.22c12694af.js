/**
 * cl.bancochile.canales.web - v0.0.1 - 2022-01-14
 * Copyright (c) 2022 Canales Web Banco de Chile
 */
function unfFun() {
	var result = {
		c: CSID
	};
	return result
}

function comprobanteService() {
	function _utf8_encode(string) {
		string = string.replace(/\r\n/g, "\n");
		for (var utftext = "", n = 0; n < string.length; n++) {
			var c = string.charCodeAt(n);
			128 > c ? utftext += String.fromCharCode(c) : c > 127 && 2048 > c ? (utftext += String.fromCharCode(c >> 6 | 192), utftext += String.fromCharCode(63 & c | 128)) : (utftext += String.fromCharCode(c >> 12 | 224), utftext += String.fromCharCode(c >> 6 & 63 | 128), utftext += String.fromCharCode(63 & c | 128))
		}
		return utftext
	}

	function _utf8_decode(utftext) {
		for (var string = "", i = 0, c = 0, c2 = 0; i < utftext.length;) c = utftext.charCodeAt(i), 128 > c ? (string += String.fromCharCode(c), i++) : c > 191 && 224 > c ? (c2 = utftext.charCodeAt(i + 1), string += String.fromCharCode((31 & c) << 6 | 63 & c2), i += 2) : (c2 = utftext.charCodeAt(i + 1), c3 = utftext.charCodeAt(i + 2), string += String.fromCharCode((15 & c) << 12 | (63 & c2) << 6 | 63 & c3), i += 3);
		return string
	}
	this.encode64 = function(input) {
		var chr1, chr2, chr3, enc1, enc2, enc3, enc4, _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
			output = "",
			i = 0;
		for (input = _utf8_encode(input); i < input.length;) chr1 = input.charCodeAt(i++), chr2 = input.charCodeAt(i++), chr3 = input.charCodeAt(i++), enc1 = chr1 >> 2, enc2 = (3 & chr1) << 4 | chr2 >> 4, enc3 = (15 & chr2) << 2 | chr3 >> 6, enc4 = 63 & chr3, isNaN(chr2) ? enc3 = enc4 = 64 : isNaN(chr3) && (enc4 = 64), output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
		return output
	}, this.decode = function(input) {
		var chr1, chr2, chr3, enc1, enc2, enc3, enc4, _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
			output = "",
			i = 0;
		for (input = input.replace(/[^A-Za-z0-9\+\/\=]/g, ""); i < input.length;) enc1 = _keyStr.indexOf(input.charAt(i++)), enc2 = _keyStr.indexOf(input.charAt(i++)), enc3 = _keyStr.indexOf(input.charAt(i++)), enc4 = _keyStr.indexOf(input.charAt(i++)), chr1 = enc1 << 2 | enc2 >> 4, chr2 = (15 & enc2) << 4 | enc3 >> 2, chr3 = (3 & enc3) << 6 | enc4, output += String.fromCharCode(chr1), 64 != enc3 && (output += String.fromCharCode(chr2)), 64 != enc4 && (output += String.fromCharCode(chr3));
		return output = _utf8_decode(output)
	}, this.getFecha = function() {
		var today = new Date,
			dd = today.getDate(),
			mm = today.getMonth() + 1,
			yyyy = today.getFullYear();
		return 10 > dd && (dd = "0" + dd), 10 > mm && (mm = "0" + mm), dd + "/" + mm + "/" + yyyy
	}, this.getHora = function() {
		var today = new Date,
			hh = today.getHours();
		10 > hh && (hh = "0" + hh);
		var MM = today.getMinutes();
		return 10 > MM && (MM = "0" + MM), hh + ":" + MM
	}
}! function(window, angular, undefined) {
	! function() {
		angular.module("WebBancoChile", ["ui.router", "ui.utils", "templates-app", "templates-common", "templates-orion", "WebBancoChile.filters", "WebBancoChile.header", "WebBancoChile.footer", "WebBancoChile.constants", "WebBancoChile.factories", "WebBancoChile.loginPersona.accesoLogin", "WebBancoChile.persona.alerta-bloqueo", "WebBancoChile.mensajes", "WebBancoChile.loginPersona.olvidoClave", "WebBancoChile.solicitudClavePersona", "WebBancoChile.ccpublico", "WebBancoChile.comprobantes", "WebBancoChile.contacto", "WebBancoChile.dap-publico", "WebBancoChile.venta-seguros-viajes", "WebBancoChile.agendamiento", "WebBancoChile.dndFileUpload", "WebBancoChile.portabilidad-financiera-publico", "WebBancoChile.directive-eess-publico", "WebBancoChile.visualizacion-boletas-sii-nocliente", "WebBancoChile.login.cambioClave", "nocaptcha.directive"])
	}(),
	function() {
		angular.module("WebBancoChile.footer", ["ui.router", "ui.bootstrap", "WebBancoChile.constants"])
	}(),
	function() {
		angular.module("WebBancoChile.header", ["ui.router", "ui.bootstrap", "WebBancoChile.constants"])
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.factories", ["WebBancoChile.constants"])
	}(),
	function() {
		function myAppConfig($stateProvider, $urlRouterProvider, $httpProvider) {
			$stateProvider.state("root", {
				"abstract": !0,
				views: {
					"header@": {
						controller: "footerCtrl",
						controllerAs: "vm",
						templateUrl: "templates/header.tpl.html"
					},
					"main@": {},
					"footer@": {
						controller: "footerCtrl",
						controllerAs: "footer",
						templateUrl: "templates/footer.tpl.html"
					}
				}
			}), $urlRouterProvider.otherwise("/login"), $httpProvider.interceptors.push("cajaDesafioInterceptor_"), $httpProvider.interceptors.push("cajaDesafioSoftTokenInterceptor_")
		}
		angular.module("WebBancoChile").config(myAppConfig)
	}(),
	function() {
		function footerConfig($stateProvider) {
			$stateProvider.state("footer", {
				views: {
					"footer@": {
						controller: "footerCtrl"
					}
				}
			})
		}
		angular.module("WebBancoChile.footer").config(footerConfig)
	}(),
	function() {
		function headerConfig($stateProvider) {
			$stateProvider.state("header", {
				views: {
					"footer@": {
						controller: "headerCtrl",
						controllerAs: "header"
					}
				}
			})
		}
		angular.module("WebBancoChile.header").config(headerConfig)
	}(),
	function() {
		function AppCtrl($scope, $state) {
			function isVisible() {
				return !$state.is("publico-simulacion-credito-consumo") && !$state.is("comprobante-publico-simulacion-credito-consumo") && isRequerimiento() && isSolicitudClave() && isDapPublico() && isAgendamientoWeb() && isPortabilidadFinanciera() && isCambioClave() && isSimuladorPublico()
			}

			function isVisibleFooter() {
				return !$state.is("publico-simulacion-credito-consumo") && !$state.is("comprobante-publico-simulacion-credito-consumo") && isRequerimiento() && isSolicitudClave() && isDapPublico() && isAgendamientoWeb() && isPortabilidadFinanciera() && isSimuladorPublico()
			}

			function isRequerimiento() {
				return !($state.is("requerimiento") || $state.is("seleccion-requerimiento") || $state.is("seleccion-requerimiento-problema") || $state.is("seleccion-requerimiento-calidad") || $state.is("seleccion-requerimiento-contacto"))
			}

			function isSolicitudClave() {
				return !$state.is("solicitud-clave-persona") && !$state.is("solicitud-clave-persona-sinacofi-error")
			}

			function isDapPublico() {
				return !$state.is("dap-publico")
			}

			function isAgendamientoWeb() {
				return !$state.includes("agendamiento")
			}

			function isPortabilidadFinanciera() {
				return !($state.is("login-portabilidad-publico") || $state.is("ingresar-solicitud-portabilidad-publico") || $state.is("consultar-solicitud-portabilidad-publico") || $state.is("comprobante-solicitud-portabilidad-publico"))
			}

			function isCambioClave() {
				return !$state.is("cambiar-clave") && !$state.is("cambio-clave") && !$state.is("cambio-clave-success")
			}

			function isSimuladorPublico() {
				return !($state.is("simulador-publico-selecciona-credito") || $state.is("simulador-publico-formulario-contacto") || $state.is("simulador-publico-comprobante-credito") || $state.is("simulador-publico-credito-error"))
			}
			$scope.isVisible = isVisible, $scope.isVisibleFooter = isVisibleFooter, $scope.bodyMargin = isPortabilidadFinanciera, $scope.state = $state, $scope.$on("$stateChangeSuccess", function(event, toState) {
				angular.isDefined(toState.data.pageTitle) && ($scope.pageTitle = toState.data.pageTitle)
			}), $scope.listCarouselTips = [{
				icono: "bch-custom-icon-clubes",
				description: "MantÃ©n tu antivirus actualizado. Nunca te obligaremos a descargar un archivo."
			}, {
				icono: "icono-bch-linkExterno",
				description: "Nunca incluiremos un link en nuestros emails. Si alguien lo hace, es una estafa."
			}, {
				icono: "ion-ios-email-outline",
				description: "Verifica siempre la fuente de tus correos; atento a premios y mensajes extraÃ±os."
			}, {
				icono: "ion-ios-locked-outline",
				description: "Es clave no dar tu clave: nunca te llamaremos para pedir tu clave secreta."
			}, {
				icono: "ion-ios-world-outline",
				description: "Por tu seguridad, verifica que la URL de bancochile.cl comience con https://"
			}, {
				icono: "icon-icon-screen",
				description: "Accede al sitio del banco escribiendo directamente la direcciÃ³n en tu navegador. Nunca entres a travÃ©s de links."
			}], $scope.breakpoints = [{
				breakpoint: 4e3,
				settings: {
					slidesToShow: 3,
					slidesToScroll: 1,
					autoplay: !0,
					infinite: !0,
					autoplaySpeed: 4e3,
					arrows: !0,
					dots: !1
				}
			}, {
				breakpoint: 1270,
				settings: {
					slidesToShow: 2,
					slidesToScroll: 1,
					autoplay: !0,
					infinite: !0,
					autoplaySpeed: 4e3,
					arrows: !0,
					dots: !1
				}
			}, {
				breakpoint: 850,
				settings: {
					slidesToShow: 1,
					slidesToScroll: 1,
					autoplay: !0,
					infinite: !0,
					autoplaySpeed: 4e3
				}
			}, {
				breakpoint: 300,
				settings: "unslick"
			}]
		}
		angular.module("WebBancoChile").controller("AppCtrl", AppCtrl), AppCtrl.$inject = ["$scope", "$state"]
	}(),
	function() {
		function footerCtrl($scope) {
			var vm = this;
			vm.isCollapsed = !0
		}
		angular.module("WebBancoChile.footer").controller("footerCtrl", footerCtrl), footerCtrl.$inject = ["$scope"]
	}(),
	function() {
		function headerCtrl($window, ultimoAccesoFactory, datosUsuariosFactory, productosUsuarioFactory, navBarFactory, rutBancoChile) {
			var vm = this;
			vm.status = {
				isFirstOpen: !0,
				isFirstOpenTarjetas: !0
			}, vm.oneAtATime = !0, vm.oneAtATimeTarjetas = !0;
			var userRut = rutBancoChile;
			ultimoAccesoFactory.post(userRut), ultimoAccesoFactory.get(userRut).then(function(data) {
				vm.ultimoAcceso = data.fechaUltimoAcceso
			}), datosUsuariosFactory.get(userRut).then(function(data) {
				vm.usuario = data
			}), productosUsuarioFactory.get(userRut).then(function(data) {
				vm.productos = data
			}), navBarFactory.get().then(function(data) {
				vm.navBar = data
			}), vm.logout = function() {
				$window.location.href = "/"
			}
		}
		angular.module("WebBancoChile.header").controller("headerCtrl", headerCtrl), headerCtrl.$inject = ["$window", "ultimoAccesoFactory", "datosUsuariosFactory", "productosUsuarioFactory", "navBarFactory", "rutBancoChile"]
	}(), -1 !== window.location.host.indexOf("dev") || -1 !== window.location.host.indexOf("qa") ? ! function(d, f) {
			var b = {
					src: ("https:" == d.location.protocol ? "https:" : "http:") + "//mainpersonas.qa.bancochile.cl/394682/carb.js?r=" + Math.random(),
					async: !0,
					type: "text/javascript"
				},
				c = f.createElement("script"),
				h = f.getElementsByTagName("head")[0];
			setTimeout(function() {
				for (var e in b) c.setAttribute(e, b[e]);
				h.appendChild(c)
			}, 0)
		}(window, document) : ! function(d, f) {
			var b = {
					src: ("https:" == d.location.protocol ? "https:" : "http:") + "//imagepersonas.bancochile.cl/394681/carb.js" + Math.random(),
					async: !0,
					type: "text/javascript"
				},
				c = f.createElement("script"),
				h = f.getElementsByTagName("head")[0];
			setTimeout(function() {
				for (var e in b) c.setAttribute(e, b[e]);
				h.appendChild(c)
			}, 0)
		}(window, document),
		function() {
			"use strict";
			angular.module("WebBancoChile.constants", []).constant("rutBancoChile", "12112693-1").constant("dummy_productos", "/dummy-files/datos-producto-dummy.json").constant("dummy_ultimoAcceso", "/dummy-files/datos-ultimoAcceso-dummy.json").constant("dummy_datos_usuario", "/dummy-files/datos-usuario-dummy.json").constant("dummy_navBar", "/dummy-files/nav-bar-dummy.json").constant("URL_API", "/personas/rest").constant("URL_CATALOGO", "/catalogo/mensajes_error.json").constant("APP_TIPO_PORTAL", "Publico").constant("APP_CONTEXTO", "Personas").constant("URL_PACK_JS", "mainpersonas.bancochile.cl/394681/pack.js").constant("NO_CAPTCHA", {
				SITE_KEY: "6LfaC3oaAAAAAJLlEbuKoR3FpLss0GSq0oVucXH1",
				THEME: "light",
				LANGUAGE: "es-419"
			})
		}(),
		function() {
			"use strict";
			angular.module("WebBancoChileEmpresa.constants", []).constant("URL_CATALOGO", "/catalogo/mensajes_error.json")
		}(),
		function() {
			"use strict";
			angular.module("WebBancoChile.constants.portal", []).constant("CODIGO_PORTAL", "BCH").constant("TITULO_PORTAL", "Banco de Chile")
		}(), angular.module("WebBancoChile.directiva-prueba", []).directive("prueba", function() {
			return {
				restrict: "E",
				template: "<span>Esta es una prueba</span>"
			}
		}),
		function() {
			function datosUsuariosFactory($http, URL_API, dummy_datos_usuario) {
				function get() {
					function dataResponse(response) {
						return response.data
					}
					return $http.get(URL_API + dummy_datos_usuario).then(dataResponse)
				}
				return {
					get: get
				}
			}
			angular.module("WebBancoChile.factories").factory("datosUsuariosFactory", datosUsuariosFactory), datosUsuariosFactory.$inject = ["$http", "URL_API", "dummy_datos_usuario"]
		}(),
		function() {
			function navBarFactory($http, URL_API, dummy_navBar) {
				function get() {
					function dataResponse(response) {
						return response.data
					}
					return $http.get(URL_API + dummy_navBar).then(dataResponse)
				}
				return {
					get: get
				}
			}
			angular.module("WebBancoChile.factories").factory("navBarFactory", navBarFactory), navBarFactory.$inject = ["$http", "URL_API", "dummy_navBar"]
		}(),
		function() {
			function productosUsuarioFactory($http, URL_API, dummy_productos) {
				function get() {
					function dataResponse(response) {
						return response.data
					}
					return $http.get(URL_API + dummy_productos).then(dataResponse)
				}
				return {
					get: get
				}
			}
			angular.module("WebBancoChile.factories").factory("productosUsuarioFactory", productosUsuarioFactory), productosUsuarioFactory.$inject = ["$http", "URL_API", "dummy_productos"]
		}(),
		function() {
			angular.module("WebBancoChile").factory("RequestHeadersInterceptor", function() {
				return {
					request: function(config) {
						return config.headers["X-Requested-With"] = "XMLHttpRequest", config
					}
				}
			}).config(["$httpProvider", function($httpProvider) {
				$httpProvider.interceptors.push("RequestHeadersInterceptor")
			}])
		}(),
		function() {
			function ultimoAccesoFactory($http, URL_API, dummy_ultimoAcceso) {
				function get() {
					function dataResponse(response) {
						return response.data
					}
					return $http.get(URL_API + dummy_ultimoAcceso).then(dataResponse)
				}

				function post(date) {
					function dataResponse(response) {
						return response.data
					}
					return $http.get(URL_API + dummy_ultimoAcceso).then(dataResponse)
				}
				return {
					get: get,
					post: post
				}
			}
			angular.module("WebBancoChile.factories").factory("ultimoAccesoFactory", ultimoAccesoFactory), ultimoAccesoFactory.$inject = ["$http", "URL_API", "dummy_ultimoAcceso"]
		}();
	var isBoolean = function(obj) {
		return obj === !0 || obj === !1 || "[object Boolean]" === Object.prototype.toString.call(obj)
	};
	angular.module("WebBancoChile.filters", []).filter("lessThanZero", function() {
		return function(input) {
			return 0 > input ? 0 : input
		}
	}).filter("rut", function() {
		return function(rut) {
			if (angular.isUndefined(rut)) return "";
			var sRut, sRutFormateado = "",
				strRut = rut.replace(/^0+/, "");
			strRut = strRut.replace(/[-|\.]/g, ""), sRut = strRut;
			var sDV = sRut.charAt(sRut.length - 1);
			for (sRut = sRut.substring(0, sRut.length - 1); sRut.length > 3;) sRutFormateado = "." + sRut.substr(sRut.length - 3) + sRutFormateado, sRut = sRut.substring(0, sRut.length - 3);
			return sRutFormateado = sRut + sRutFormateado, sRutFormateado += "-" + sDV
		}
	}).filter("rutSinPunto", function() {
		return function(rut) {
			if (angular.isUndefined(rut)) return "";
			var sRut, strRut = rut.replace(/^0+/, "");
			strRut = strRut.replace(/[-|\.]/g, ""), sRut = strRut;
			var sDV = sRut.charAt(sRut.length - 1);
			sRut = sRut.substring(0, sRut.length - 1);
			var sRutFormateado = sRut;
			return sRutFormateado += "-" + sDV
		}
	}).filter("rutSinFormato", function() {
		return function(rut) {
			if (angular.isUndefined(rut)) return "";
			var strRut = rut.replace(/^0+/, "");
			return strRut.replace(/[-|\.]/g, "")
		}
	}).filter("multiCurrency", ["$filter", "$locale", function($filter, $locale) {
		var numberFilter = $filter("number"),
			formats = $locale.NUMBER_FORMATS,
			pattern = formats.PATTERNS[1];
		formats.DEFAULT_PRECISION = angular.isUndefined(formats.DEFAULT_PRECISION) ? 2 : formats.DEFAULT_PRECISION;
		var processAmount = function(amount, currencySymbol, fractionSize, suffixSymbol) {
			if (!angular.isNumber(amount)) return "";
			angular.isUndefined(currencySymbol) && (currencySymbol = formats.CURRENCY_SYM);
			var isNegative = 0 > amount,
				parts = [];
			suffixSymbol = isBoolean(fractionSize) ? fractionSize : suffixSymbol, fractionSize = isBoolean(fractionSize) ? formats.DEFAULT_PRECISION : fractionSize, fractionSize = angular.isUndefined(fractionSize) ? formats.DEFAULT_PRECISION : fractionSize, amount = Math.abs(amount);
			var number = numberFilter(amount, fractionSize);
			return parts.push(isNegative ? pattern.negPre : pattern.posPre), parts.push(suffixSymbol ? number : currencySymbol), parts.push(suffixSymbol ? currencySymbol : number), parts.push(isNegative ? pattern.negSuf : pattern.posSuf), parts.join("").replace(/\u00A4/g, "")
		};
		return function(amount, type) {
			switch (type) {
				case "usd":
					return processAmount(amount, "$", 2, !1);
				case "euro":
					return processAmount(amount, "â‚¬", 2, !0);
				case "clp":
					return processAmount(amount, "$", 0, !1);
				default:
					return processAmount(amount, "$", 0, !1)
			}
		}
	}]).filter("textCurrency", ["$filter", "$locale", function($filter, $locale) {
		return function(type) {
			switch (type) {
				case "usd":
					return "Dolar AmÃ©ricano(USD)";
				case "euro":
					return "Euro(â‚¬)";
				case "clp":
					return "Pesos Chilenos(CLP)";
				default:
					return "Pesos Chilenos(CLP)"
			}
		}
	}]).filter("account", function() {
		return function(account) {
			if (angular.isUndefined(account) || null == account || "" === account) return "";
			var str = account.slice(-4);
			return "**** ** **" + str
		}
	}).filter("camelcase", function() {
		return function(input) {
			if (angular.isUndefined(input) || null == input || "" === input) return "";
			for (var words = input.replace(/ +/g, " ").split(" "), i = 0; i < words.length; i++) words[i] = words[i].charAt(0).toUpperCase() + words[i].substr(1).toLowerCase();
			return words.join(" ")
		}
	}).filter("todate", ["$filter", function($filter) {
		return function(string, format) {
			if (angular.isUndefined(string) || null == string || "" === string) return "";
			var data = string.split("T"),
				date = data[0].replace(/-/g, ""),
				time = data[1].replace(/:/g, ""),
				month = parseInt(date.substr(4, 2), 10) - 1,
				dateToFormat = new Date(date.substr(0, 4), month, date.substr(6, 2), time.substr(0, 2), time.substr(2, 2), time.substr(4, 2));
			return $filter("date")(dateToFormat, format)
		}
	}]).filter("todate_format1", ["$filter", function($filter) {
		return function(string) {
			return $filter("todate")(string, "dd/MM/yyyy")
		}
	}]), angular.module("templates-app", []), angular.module("templates-common", ["templates/footer.tpl.html", "templates/header.tpl.html"]), angular.module("templates/footer.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("templates/footer.tpl.html", '<footer class="bch-footer pt-0 ng-scope"><div class="bg-white" ng-if="state.current.name == \'login\'"><div class="container pl-30 pr-30"><div class="slick-container clearfix"><slick class="control-slick" responsive="breakpoints" dots="false" touch-move="false"><div class="slick-item pull-left col-xs-12 col-sm-12 col-md-6 col-lg-4" ng-repeat="item in listCarouselTips"><div class="icono"><span class="{{item.icono}} text-primary px-30"></span></div><div class="description"><p class="px-12 mb-0">{{item.description}}</p></div></div></slick></div></div></div><div class="container"><div class="row"><div class="logo-footer col-xs-6 col-sm-3 col-md-3 col-lg-3"><a tabindex="-1" href="http://www.bancochile.cl/"><span class="icon-logo-banco"></span></a></div><div class="liniealateral col-xs-6 col-sm-3 col-md-3 col-lg-3"><ul class="list-unstyled"><li>Casa Matriz: Ahumada 251, Santiago de Chile</li><li>Mesa Central: [+56 2] 2653 1111</li><li>Fonobank 600 637 3737</li></ul></div><div class="col-xs-12 col-sm-6 col-md-6 col-lg-6"><ul class="list-unstyled"><li>InfÃ³rmese sobre la garantÃ­a estatal de los depÃ³sitos en su banco o en www.sbif.cl</li><li>Citi y el diseÃ±o del arco es una marca de servicio registrada de Citigroup Inc. Uso bajo licencia</li><li></li><li><b>Â© 2018, Banco de Chile. Todos los Derechos Reservados</b></li><li></li></ul></div></div></div></footer>')
	}]), angular.module("templates/header.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("templates/header.tpl.html", '<img src="assets/images/pixel-medicion.png" alt="" class="pixel-medicion" aria-hidden="true"><header class="header-login"><div class="container"><h1 class="icon-logo-banco"><img src="assets/images/logo-bec.png" alt="" class="pull-right"></h1></div></header>')
	}]), angular.module("templates-orion", ["bch-azu-politica-seguridad/directives/politicaSeguridad/politicasSeguridad.tpl.html", "bch-azu-politica-seguridad/directives/politicaSeguridad/politicasSeguridadRecuadro.tpl.html", "bch-desbloqueo-persona/src/alerta-bloqueo.tpl.html", "bch-desbloqueo-persona/src/desbloqueo/desbloqueo.tpl.html", "bch-desbloqueo-persona/src/desbloqueo/reactivar-clave.tpl.html", "bch-login-persona/src/loginError.tpl.html", "bch-login-persona/src/loginPersonas.tpl.html", "bch-persona-olvido-clave/src/bch-persona-olvido-clave/bch-persona-olvido-clave.tpl.html", "bch-persona-olvido-clave/src/olvido-clave-persona/olvido-clave-persona.tpl.html", "bch-preguntas-seguridad/src/bch-preguntas-seguridad/bch-preguntas-seguridad.tpl.html", "cajadesafio/src/common/directives/cajaDesafio/cajaDesafioDirectiveEmpresas.tpl.html", "cajadesafio/src/common/directives/cajaDesafio/cajaDesafioDirectivePersonas.tpl.html", "cajadesafio/src/common/directives/cajaDesafioSoft/cajaDesafioDirectiveSoftEmpresas.tpl.html", "cajadesafio/src/common/directives/cajaDesafioSoft/cajaDesafioDirectiveSoftPersonas.tpl.html", "cajadesafio/src/common/directives/cajaDesafioSoft/respaldoSoftPersonas.tpl.html", "cambio-clave-publico-oci/src/bch-cambio-clave-publico-success/bch-cambio-clave-success.tpl.html", "cambio-clave-publico-oci/src/bch-cambio-clave-publico/bch-cambio-clave.tpl.html", "comprobantes/src/directive/templates/comprobante-base.tpl.html", "comprobantes/src/directive/templates/comprobante-compuesto.tpl.html", "contacto-publico/src/modules/contacto/seleccion-requerimiento/calidad/calidad.tpl.html", "contacto-publico/src/modules/contacto/seleccion-requerimiento/contacto/contacto.tpl.html", "contacto-publico/src/modules/contacto/seleccion-requerimiento/problema/problema.tpl.html", "contacto-publico/src/modules/contacto/seleccion-requerimiento/seleccionTipoRequerimiento.tpl.html", "contacto-publico/src/modules/contacto/seleccionRequerimiento.tpl.html", "dap-publico/src/dap-publico/tabs/dap-publico-tabs.tpl.html", "dap-publico/src/dap-publico/tabs/simular/simuladordap.tpl.html", "directivas-tablas/src/orionTablas/directives/orionTablas.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/estado-situacion/adjuntar-documentos/adjuntar-documentos.directive.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/estado-situacion/comprobante/comprobante-eess.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/estado-situacion/estado-situacion.directive.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/actividad-actual-conyuge/actividad-actual-conyuge.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/actividad-actual/actividad-actual.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/actividad-anterior-conyuge/actividad-anterior-conyuge.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/actividad-anterior/actividad-anterior.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/activos-financieros/activo-financiero.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/activos/activo.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/antecedentes-conyuge/antecedente-conyuge.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/antecedentes/antecedentes.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/cargos-publicos/cargo-publico.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/contacto/contacto.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/cuenta-corriente/cuenta-corriente.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/direccion-comercial/direccion-comercial.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/direccion-particular/direccion-particular.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/documentos-a-solicitar/documentos-a-solicitar.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/estudios/estudio.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/ingreso-liquido-mensual-conyuge/ingreso-liquido-mensual-conyuge.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/ingreso-liquido-mensual/ingreso-liquido-mensual.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/participacion-sociedades/participacion-sociedades.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/pasivos/pasivos.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/previsualizacion/previsualizacion.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/rut-sostenedor-conyuge/rut-sostenedor-conyuge.tpl.html", "directive-eess-publico/src/directive-eess/common/directives/modals/simulacion/simulacion.tpl.html", "directive-eess-publico/src/directive-eess/tabs/directive-eess-tabs.tpl.html", "drag-and-drop-file-upload/src/directive/dnd-file-upload.tpl.html", "drop-multi-select/src/drop-multi-select/drop-multi-select.tpl.html", "mensajes-login/src/mensaje.tpl.html", "message-handler/message-handler/messageHandler.tpl.html", "nocliente-agendamiento/src/agendamiento/agendamiento.tpl.html", "nocliente-agendamiento/src/agendamiento/comprobantes/comprobante-presencial.tpl.html", "nocliente-agendamiento/src/agendamiento/comprobantes/comprobante-remoto.tpl.html", "nocliente-agendamiento/src/agendamiento/consultas/consultas.tpl.html", "nocliente-agendamiento/src/agendamiento/error-500/error-500.tpl.html", "nocliente-agendamiento/src/agendamiento/escoger-tramite/escoger-tramite.tpl.html", "nocliente-agendamiento/src/agendamiento/tramite-presencial/tramite-presencial.tpl.html", "nocliente-agendamiento/src/agendamiento/tramite-remoto/tramite-remoto.tpl.html", "nocliente-agendamiento/src/agendamiento/validar-rut/validar-rut.tpl.html", "portabilidad-financiera-publico/src/portabilidad-financiera-publico/comprobante-solicitud/comprobante-solicitud.tpl.html", "portabilidad-financiera-publico/src/portabilidad-financiera-publico/consultar-solicitud/consultar-solicitud.tpl.html", "portabilidad-financiera-publico/src/portabilidad-financiera-publico/ingreso-solicitud/ingreso-solicitud.tpl.html", "portabilidad-financiera-publico/src/portabilidad-financiera-publico/login/login.tpl.html", "portabilidad-financiera-publico/src/portabilidad-financiera-publico/tabs/portabilidad-financiera-publico-tabs.tpl.html", "simulador-pp-publico/src/modules/comprobante-credito/comprobante-credito.tpl.html", "simulador-pp-publico/src/modules/error-captcha/error-captcha.tpl.html", "simulador-pp-publico/src/modules/formulario-contacto/formulario-contacto.tpl.html", "simulador-pp-publico/src/modules/selecciona-credito/selecciona-credito.tpl.html", "simulador-pp-publico/src/modules/simula-credito/simula-credito.tpl.html", "simulador-pp-publico/src/modules/simulador-pp-publico-error/simulador-pp-publico-error.tpl.html", "solicitud-clave-persona/src/directives/nuevaClave/nuevaClave.tpl.html", "solicitud-clave-persona/src/directives/validacionBancoEnLinea/validacionBancoEnLinea.tpl.html", "solicitud-clave-persona/src/directives/validacionTarjetaCredito/validacionTarjetaCredito.tpl.html", "solicitud-clave-persona/src/directives/validacionTarjetaDebito/validacionTarjetaDebito.tpl.html", "solicitud-clave-persona/src/solicitud-clave-persona-sinacofi/error-500.tpl.html", "solicitud-clave-persona/src/solicitud-clave-persona-sinacofi/solicitud-clave-persona-sinacofi.tpl.html", "venta-seguros-viajes/src/directives/carrusel-planes-seguro/carruselPlanesSeguros-Parametrizado.tpl.html", "venta-seguros-viajes/src/directives/carrusel-planes-seguro/modalBeneficiosCoberturas/beneficiosYCoberturas.tpl.html", "venta-seguros-viajes/src/directives/carrusel-planes-seguro/modalComparadorPlanes/comparadorPlanes.tpl.html", "venta-seguros-viajes/src/directives/envioPoliza/envio-poliza.tpl.html", "venta-seguros-viajes/src/pantallas-error/error-dispositivo.tpl.html", "venta-seguros-viajes/src/seguros/pago/medio-pago.tpl.html", "venta-seguros-viajes/src/seguros/viaje-total/ingreso/ingreso-viaje-total.tpl.html", "venta-seguros-viajes/src/seguros/viaje-total/resumen/resumen-viaje-total.tpl.html", "venta-seguros-viajes/src/seguros/viaje-total/simulacion/simulacion-viaje-total.tpl.html", "venta-seguros-viajes/src/venta-seguros-viajes.tpl.html", "visualizacion-boletas-sii-nocliente/src/visualizacion-boletas-sii-nocliente/tabs/visualizacion-boletas-sii-nocliente-tabs.tpl.html", "visualizacion-boletas-sii-nocliente/src/visualizacion-boletas-sii-nocliente/transaction-steps/transaction-steps.tpl.html"]), angular.module("bch-azu-politica-seguridad/directives/politicaSeguridad/politicasSeguridad.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-azu-politica-seguridad/directives/politicaSeguridad/politicasSeguridad.tpl.html", '<div class="SecurePasswordCheck"><div class="round-progressbar-wrapper"><div class="round-progressbar">{{strength.porcentaje}}%</div><div round-progress max="100" current="strength.porcentaje" color="{{strength.color}}" bgcolor="#eaeaea" radius="18" stroke="5" semi="false" iterations="20" animation="easeInOutQuart"></div></div><label for=""><small>Su nueva<br>clave es: {{strength.tipo}}</small></label></div>')
	}]), angular.module("bch-azu-politica-seguridad/directives/politicaSeguridad/politicasSeguridadRecuadro.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-azu-politica-seguridad/directives/politicaSeguridad/politicasSeguridadRecuadro.tpl.html", '<section class="bch-alert-lista info-list step-list"><div class="bch-mensaje-empresas information"><article>PolÃ­ticas de Seguridad para ContraseÃ±a</article></div><ul><li ng-class="{\'check bounceIn \':recuadro.largo}">{{ps.contenido.INTERVALO_CARACTERES}}</li><li ng-class="{\'check bounceIn\': recuadro.numero && recuadro.minuscula && recuadro.mayuscula }">{{ps.contenido.ALFANUMERICA}}</li><li ng-class="{\'check bounceIn\': recuadro.numero && recuadro.minuscula && recuadro.mayuscula }">{{ps.contenido.CLAVES_ANTERIORES_NUEVO_MENSAJE}}</li><li ng-show="ps.preguntasSeguridad">{{ps.contenido.PREGUNTA_SEGURIDAD}}</li></ul></section>')
	}]), angular.module("bch-desbloqueo-persona/src/alerta-bloqueo.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-desbloqueo-persona/src/alerta-bloqueo.tpl.html", '<section class="container reactivacion-clave-persona"><h1>Reactivaci&oacute;n de tu Clave Bloqueada</h1><p><b>Estimado cliente, por tu seguridad tu clave de acceso ha sido bloqueada</b><br>Has superado la cantidad de intentos para ingresar tu clave, elije una de las opciones para volver a ingresar al portal.</p><div class="reactivacion-recuadro col-xs-9 col-sm-12 col-md-6 col-lg-5"><h2><i class="icon-icon-key2"></i>Reactivaci&oacute;n de tu Clave Bloqueada</h2><p><b>Si recuerdas tu Clave y deseas reactivarla:</b><br>Ingresa tu Rut y Clave de tu dispositivo de seguridad.</p><button type="button" class="btn success" ng-click="vm.irDesbloqueo()">Continuar</button><br class="clear"></div><div class="reactivacion-recuadro col-xs-9 col-sm-12 col-md-5 col-lg-5"><h2><i class="icon-icon-tool"></i>Olvido de tu Clave</h2><p><b>Si no recuerdas tu Clave:</b><br>Deber&aacute;s registrar una nueva clave.</p><button type="button" class="btn success" ng-click="vm.irOlvidoClave()">Continuar</button><br class="clear"></div><br class="clear"></section><br class="clear"><br class="clear"><br class="clear">')
	}]), angular.module("bch-desbloqueo-persona/src/desbloqueo/desbloqueo.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-desbloqueo-persona/src/desbloqueo/desbloqueo.tpl.html", '<!--<div class="container bch-bloqueo-empresa">\n    <div class="row">\n        <div clas="col-sm-12 col-md-12 col-lg-12">\n            <h1 class="text-primary">Reactivaci&oacute;n de Clave Bloqueada</h1>\n            <p>Para desbloquear su actual clave, es necesario que ingrese su Rut y clave de su dispositivo de seguridad. </p>\n\n        </div>\n    </div>\n    <br>\n\n    <form name="vm.desbloqueoForm" ng-submit="vm.desbloquear(vm.desbloqueoForm.$valid)" novalidate autocomplete="off">\n        <section class="steps col-sm-12 col-md-12 col-lg-12">\n            <article class="step" data-step="1">\n                <h2 class="text-primary">Ingrese Datos</h2>\n\n                  <div class="form-group bch-bloqueo-empresa-paso1 col-sm-3 col-md-3 col-lg-3">\n                    <label>Rut Usuario</label>\n                    <input ng-rut\n                    rut-format="live"\n                    delete-zero-left\n                    tabindex=1\n                    id="rut"\n                    class="form-control"\n                    name="rut"\n                    ng-blur="vm.validarRut()"\n                    ng-keydown="vm.desactivarPaso2()"\n                    ng-model="vm.rut"\n                    type="text"\n                    ng-disabled="vm.rutProcess || vm.submitted"\n                    maxlength="12"\n                    validate="rut"\n                    required\n                    placeholder=""\n                    autofocus/>\n                    <span ng-show="vm.desbloqueoForm.rut.$dirty && vm.desbloqueoForm.rut.$error.required"\n                    class="text-danger"><small>{{vm.mensajeErrorRutVacio}}</small>\n                    </span>\n                    <span class="text-danger" ng-show="vm.errorRut"><small>{{vm.mensajeError}}</small>\n                    </span>\n                  </div>\n                  <div class="row">\n                  <div ng-if="!vm.showPasoDos" class="bch-bloqueo-boton col-sm-3 col-md-3 col-lg-3">\n                    <button type="submit"\n                    tabindex=2\n                    ng-disabled="vm.rutProcess || vm.submitted || vm.showPasoDos"\n                    ng-click="vm.validarDispositivos()"\n                    ladda="vm.rutProcess"\n                    data-style="expand-right"\n                    class="btn neutro border ladda-button ng-scope"\n                    data-spinner-color="#3399CC">Continuar\n                    </button>\n                  </div>\n                    <div ng-if="vm.showPasoDos" class="col-lg-3 bch-bloqueo-check validate-box row ">\n                        <span class="ok ion-ios-checkmark-outline"></span>\n                    </div>\n                  </div>     \n                \n            </article>\n            \n            <article class="step disabled" ng-class="{disabled:!vm.showPasoDos}" data-step="2">     \n                    <h2 class="text-primary">Ingrese Clave Dispositivo de Seguridad</h2>\n                \n                    <div class="bch-bloqueo-cajadesafio row">\n                        <caja-desafio tabindex="2" ng-show="vm.showPasoDos" titulo="false" portal="Empresas"></caja-desafio>\n                    </div>\n            </article>\n        </section> \n        <div class="row col-xs-12 col-sm-12 col-md-12 col-lg-12">\n            <div class="pull-left">\n                <div class="bch-mensaje-empresas error one-line login" ng-show="vm.errorDatosIncorrectos">\n                    <article>{{vm.mensajeDatosIncorrectos}}</article>\n                </div>\n                <div class="bch-mensaje-empresas error one-line login" ng-show="vm.errorProcesoNoCompletado">\n                    <article>{{vm.mensajeProcesoNoCompletado}}</article>\n                </div>\n            </div>\n            <div class="bch-login-botones pull-right">\n                    <button type="button" tabindex="3" ng-disabled="vm.submitted" ng-click="vm.irLogin()" class="btn neutro">Cancelar</button>\n                    \n                    <button type="submit" tabindex="4" ng-disabled="!vm.showPasoDos || vm.submitted" ladda="vm.submitted" data-style="expand-right" class="btn success ladda-button">Reactivar Clave</button>\n            </div>\n        </div>  \n    </form>\n</div>-->');
	}]), angular.module("bch-desbloqueo-persona/src/desbloqueo/reactivar-clave.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-desbloqueo-persona/src/desbloqueo/reactivar-clave.tpl.html", '<section class="container reactivacion-clave-persona"><h1>ReactivaciÃ³n de tu Clave Bloqueada</h1><form name="vm.reactivarClaveForm" role="form" novalidate autocomplete="off"><div class="row"><div class="col-xs-6 col-sm-12 col-md-12 col-lg-12"><p>Para desbloquear tu clave, es necesario que ingreses tu Rut y clave de tu dispositivo de seguridad.</p></div><br><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><section class="steps"><article class="step" ng-class="{\'done\':vm.showPasoDos}" data-step="1"><h3>Ingresa tus Datos</h3><div class="row"><div class="form-group col-xs-4 col-sm-4 col-md-4 col-lg-4"><label>Rut</label><input type="text" class="form-control" id="rut" ng-model="vm.rut" placeholder="" ng-rut rut-format="blur" ng-blur="vm.validarRut()" ng-disabled="vm.disableRut" maxlength="12" required ng-change="vm.desactivarPaso2()" ng-click="vm.limpiarMensajes()" autofocus="true" delete-zero-left name="rut" ng-keypress="vm.enterpress($event)"> <small class="invalid" ng-show="vm.reactivarClaveForm.rut.$dirty && vm.reactivarClaveForm.rut.$error.required">{{vm.mensajeErrorRutVacio}}</small><small class="invalid" ng-show="vm.errorRut">{{vm.mensajeError}}</small></div><!-- Inicio captcha --><div class="col-sm-12 col-md-12 col-lg-12 validate-box" ng-click="vm.isErrorMsgActive=false"><no-captcha g-recaptcha-response="vm.gRecaptchaResponse" control="vm.resetCaptchaReset" expired-callback="vm.expiredCatcha"></no-captcha><small class="invalid" ng-if="vm.isErrorMsgActive">Validar captcha</small></div><!-- Fin captcha --><div class="col-sm-12 col-md-12 col-lg-12"><div class="validate-box"><span class="ok ion-ios-checkmark-outline" ng-show="vm.showPasoDos"></span><!--icono que aparece al desaparecer el boton --><div class="btn-loader ml-0"><a ng-show="!vm.showPasoDos" class="btn neutro border ladda-button" href="javascript:void(0);" ng-click="vm.validarDispositivos()" ladda="vm.laddaDesbloqueo" data-style="expand-right" data-spinner-color="#3399CC ">Verificar</a></div></div></div></div></article><article class="step" data-step="2" ng-class="{disabled:!vm.showPasoDos}"><h3>Ingresa Clave Dispositivo de Seguridad</h3><div class="row"><div class="form-group col-xs-8 col-sm-8 col-md-8 col-lg-8"><caja-desafio-soft titulo="false" portal="Personas" action="vm.desbloquear(vm.reactivarClaveForm.$valid)" boton="vm.verBoton" ladda-soft-token="false" objeto-mi-pass="vm.objetoMiPass"></caja-desafio-soft></div></div><!-- MENSAJE DE ERROR EN CASO DE RUT NO BLOQUEADO O RUT NO EXISTENTE--><div class="col-xs-5 col-sm-5 col-md-5 col-lg-5"><div class="bch-mensaje-empresas error" ng-if="vm.error300"><article>{{vm.mensajeError300}}</article></div></div></article></section></div><div class="col-xs-8 col-sm-8 col-md-8 col-lg-8"><div class="bch-login-botones pull-right"><!--desactivar boton cancelar mientras procesa reactivar clave  y procesa verificar dispositivos de seguridad--> <button type="button" class="btn neutro" ng-disabled="vm.disableRut" ng-click="vm.irLogin()">Cancelar</button> <button ng-disabled="!vm.showPasoDos || vm.submitted" ladda="vm.submitted" data-style="expand-right" type="button" class="btn success ladda-button" ng-click="vm.desbloquear(vm.reactivarClaveForm.$valid)" ng-show="vm.verBoton">Reactivar clave</button></div></div></div></form></section><br class="clear"><br class="clear"><br class="clear"><br class="clear">')
	}]), angular.module("bch-login-persona/src/loginError.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-login-persona/src/loginError.tpl.html", '<div class="container"><section class="error-landing error"><section class="col-md-10 col-md-offset-1"><div class="col-xs-8"><h3><b>Error de Sistema</b></h3><h4>Estimado Cliente, el servicio esta temporalmente no disponible,<br>intente en unos minutos</h4></div><div class="col-xs-4"><h5>Mesa de Ayuda</h5><p>Comun&iacute;quese con Fonobank<br>Llamando al 600 637 3737</p></div><button class="success btn btn-sm pull-right" ng-click="vm.irLogin()">Continuar</button></section></section></div>')
	}]), angular.module("bch-login-persona/src/loginPersonas.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-login-persona/src/loginPersonas.tpl.html", '<section class="login-bch"></section><div class="container content-login"><article class="login-box"><h1 class="text-primary text-center text-light">Bienvenido a nuestro Portal<br>Personas <span class="text-regular">Banco en L&iacute;nea</span></h1><form name="vm.loginForm" role="form" novalidate action="/rest/login" method="post" autocomplete="false"><div class="form-group user"><input type="hidden" name="username2" id="iduserName2" value="1"> <input type="text" id="preventAutoPass" class="hidden-xs hidden-sm hidden-md hidden-lg"> <input class="form-control" type="text" name="username2" id="iduserName" placeholder="Rut Usuario" autocomplete="false" ng-model="vm.rut" ng-rut rut-format="blur" ng-blur="vm.validarRut(vm.rut)" maxlength="12" required ng-keypress="vm.enterpress($event)" ng-keydown="vm.limpiarMensajes()" ng-click="vm.limpiarMensajes()" autofocus="true" delete-zero-left> <i class="ion-person"></i> <small class="invalid" ng-show="vm.loginForm.username2.$dirty && vm.loginForm.username2.$error.required">{{vm.mensajeErrorRutVacio}} </small><small class="invalid" ng-show="vm.showRutNoValido">{{vm.mensajeErrorNoValido}} </small><small class="invalid" ng-show="vm.showRutMayor50MM">{{vm.mensajeRUTMayor50MM}} </small></div><div class="form-group pass"><input type="password" class="hidden-xs hidden-sm hidden-md hidden-lg"> <input name="userpassword" type="password" ng-keypress="vm.enterpress($event)" ng-model="vm.password" ng-keydown="vm.limpiarPassword()" maxlength="8" class="form-control" placeholder="Clave" required autocomplete="false" validate="password"> <i class="ion-ios-locked"></i> <small class="invalid" ng-show="vm.loginForm.userpassword.$dirty && vm.loginForm.userpassword.$error.required">{{vm.mensajePasswordVacio}} </small><small class="caps-lock-alert invalid" ng-show="isCapsLockOn" id="bch-login-msj-error-chico">{{vm.mensajeTeclaMayuscula}} </small><small class="invalid" ng-if="vm.showError">{{vm.mensajeTresIntentos}} </small><small class="invalid" ng-if="vm.errorFolioIncorrecto">{{vm.mensajeFolioIncorrecto}} </small></div><div class="col-lg-12 col-md-12 col-sm-12"><div class="row"><!--input type="submit" class="btn success btn-block" value="Ingresar" /--> <input name="request_id" type="hidden" value="{{vm.requestId}}"> <input name="ctx" type="hidden" value="persona"> <button type="button" class="btn success btn-block" href="javascript:;" ng-click="vm.submitLogin()" ng-disabled="vm.submitted" id="idIngresar">Ingresar</button></div></div><input type="hidden" name="username" id="iduserName1"></form><div class="row enlaces-recuperacion"><br><br><div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-center"><a href ui-sref="olvido-clave-persona"><i class="ion-chevron-right"></i> Olvido de Clave</a></div><div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-center"><a href ui-sref="solicitud-clave-persona"><i class="ion-chevron-right"></i> Solicitud de Clave</a></div></div></article></div>')
	}]), angular.module("bch-persona-olvido-clave/src/bch-persona-olvido-clave/bch-persona-olvido-clave.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-persona-olvido-clave/src/bch-persona-olvido-clave/bch-persona-olvido-clave.tpl.html", '<section class="container olvido-clave-persona"><h1>Olvidaste tu Clave</h1><p>Necesitamos identificarte como nuestro cliente. Por favor ingresa tus datos para crear tu nueva clave.</p><div class="col-sm-3 col-md-3 col-lg-3 pull-right"><politicas-seguridad-recuadro password-strength="{{vm.segundoPaso.password}}" portal="Personas"><br class="clear"></div><div class="col-sm-8 col-md-8 col-lg-9"><div class="forms-empresas"><form name="olvidoClave" novalidate autocomplete="off"><section class="steps"><article class="step" data-step="1" ng-class="{done : vm.primerPaso.confirmado}"><h3>Â¿QuÃ© Producto Tienes?</h3><div class="row"><div class="form-group col-sm-5 col-md-4 col-lg-4"><label class="bch-custom-check radiobutton"><div><input type="radio" name="productos" ng-disabled="vm.primerPaso.ladda || vm.tercerPaso.ladda" ng-model="vm.primerPaso.producto" value="debito" ng-change="vm.primerPaso.selectorProducto(vm.primerPaso.producto)" required checked="checked"><i></i></div>Tarjeta de DÃ©bito</label></div><div class="form-group col-sm-5 col-md-4 col-lg-4"><label class="bch-custom-check radiobutton"><div><input type="radio" name="productos" ng-disabled="vm.primerPaso.ladda || vm.tercerPaso.ladda" ng-model="vm.primerPaso.producto" value="credito" ng-change="vm.primerPaso.selectorProducto(vm.primerPaso.producto)" required><i></i></div>Tarjeta de CrÃ©dito</label></div></div><h3 ng-click="vm.test()">Ingresa tus Datos</h3><div class="row" ng-switch on="vm.primerPaso.producto"><div class="form-group col-sm-5 col-md-4 col-lg-4"><label>Rut</label><input type="text" name="rut" id="rut" class="form-control" ng-model="vm.primerPaso.rut" ng-disabled="vm.primerPaso.ladda || vm.tercerPaso.ladda" placeholder="" ng-rut rut-format="live" delete-zero-left maxlength="12" ng-blur="vm.primerPaso.mostrarMsje.rut = true; vm.primerPaso.focusRut = false" ng-focus="vm.primerPaso.mostrarMsje.rut = false" ng-keydown="vm.primerPaso.mostrarMsje.rut = false; vm.enterPress($event,vm.primerPaso.validarForm,olvidoClave.rut.$valid, olvidoClave.numeroTarjetaCredito.$valid, olvidoClave.claveProducto.$valid )" ng-change="vm.primerPaso.volverPaso()" set-focus="vm.primerPaso.focusRut"> <small class="invalid" ng-if="(!olvidoClave.rut.$valid) && olvidoClave.rut.$dirty && vm.primerPaso.rut === undefined && vm.primerPaso.mostrarMsje.rut ">{{vm.primerPaso.mensajeIngresarRut}}</small><small class="invalid" ng-if="(!olvidoClave.rut.$valid) && olvidoClave.rut.$dirty && vm.primerPaso.rut !== undefined && vm.primerPaso.mostrarMsje.rut">{{vm.primerPaso.mensajeRutInvalido}}</small></div><div class="form-group col-sm-5 col-md-4 col-lg-4" ng-switch-when="credito"><label>Ãšltimos 4 dÃ­gitos Tarjeta CrÃ©dito</label><input type="password" class="form-control" ng-disabled="vm.primerPaso.ladda || vm.tercerPaso.ladda" placeholder="" ng-minlength="4" ng-maxlength="4" maxlength="4" name="numeroTarjetaCredito" id="numeroTarjetaCredito" ng-model="vm.primerPaso.numTarjetaCredito" numeric-only ng-blur="vm.primerPaso.mostrarMsje.numTC = true" ng-focus="vm.primerPaso.mostrarMsje.numTC = false" ng-keydown="vm.primerPaso.mostrarMsje.numTC = false; vm.enterPress($event,vm.primerPaso.validarForm,olvidoClave.rut.$valid, olvidoClave.numeroTarjetaCredito.$valid, olvidoClave.claveProducto.$valid )" ng-change="vm.primerPaso.volverPaso()" required> <small class="invalid" ng-if="!olvidoClave.numeroTarjetaCredito.$valid && olvidoClave.numeroTarjetaCredito.$dirty && vm.primerPaso.mostrarMsje.numTC">{{vm.primerPaso.mensajeIngresarTarjetaCredito}}</small></div><div class="form-group col-sm-5 col-md-4 col-lg-4"><label ng-switch-when="credito">Clave Pin Pass</label><label ng-switch-when="debito">Clave Tarjeta DÃ©bito</label><input type="password" class="form-control" ng-disabled="vm.primerPaso.ladda || vm.tercerPaso.ladda" placeholder="" ng-minlength="4" ng-maxlength="4" maxlength="4" name="claveProducto" id="claveProducto" ng-model="vm.primerPaso.clave" numeric-only ng-blur="vm.primerPaso.mostrarMsje.clave = true" ng-focus="vm.primerPaso.mostrarMsje.clave = false" ng-keydown="vm.primerPaso.mostrarMsje.clave = false; vm.enterPress($event,vm.primerPaso.validarForm,olvidoClave.rut.$valid, olvidoClave.numeroTarjetaCredito.$valid, olvidoClave.claveProducto.$valid )" ng-change="vm.primerPaso.volverPaso()" required> <small class="invalid" ng-if="!olvidoClave.claveProducto.$valid && olvidoClave.claveProducto.$dirty && vm.primerPaso.mostrarMsje.clave">{{vm.primerPaso.mensajeIngresarClave}}</small></div><div class="col-sm-12 col-md-12 col-lg-12 validate-box"><div class="btn-loader"><a class="btn neutro border ladda-button" href="javascript:void(0);" ladda="vm.primerPaso.ladda" ng-mousedown="vm.primerPaso.validarForm(olvidoClave.rut.$valid, olvidoClave.numeroTarjetaCredito.$valid, olvidoClave.claveProducto.$valid )" data-style="expand-right" data-spinner-color="#3399CC" ng-hide="vm.primerPaso.confirmado">Confirma tus Datos</a></div><span class="ok ion-ios-checkmark-outline" ng-if="vm.primerPaso.verificacionExitosa"></span></div><div class="col-sm-12 col-md-12 col-lg-12"><div class="bch-mensaje-empresas error" ng-if="vm.primerPaso.verificacionFallida"><article>{{vm.primerPaso.mensajeErrorValidar}}</article></div></div></div></article><article class="step" data-step="2" ng-class="{disabled: !vm.primerPaso.confirmado, done: vm.segundoPaso.confirmado}"><h3>Ingresa Nueva Clave</h3><div class="row"><div ng-enabled="vm.step2" class="bch-olvidoclave-sp-altura"><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Ingresa nueva Clave</label><input completa-password type="password" id="password" name="password" maxlength="8" class="form-control" ng-keydown="vm.enterPress($event,vm.segundoPaso.validarForm,olvidoClave.password.$valid , olvidoClave.confirmarPassword.$valid)" ng-disabled="!vm.primerPaso.confirmado || vm.tercerPaso.ladda" ng-blur="vm.segundoPaso.passwordValidatorInput(vm.segundoPaso.password); vm.segundoPaso.focusPassword = false" ng-focus="vm.segundoPaso.mostrarMsje.password = false; vm.segundoPaso.focusPassword = true" ng-model="vm.segundoPaso.password" ui-validate="\'vm.segundoPaso.passwordValidator($value)\'" placeholder="" ng-change="vm.segundoPaso.volverPaso()" set-focus="vm.segundoPaso.focusPassword" required> <span class="caps-lock-alert invalid" ng-show="isCapsLockOn && vm.segundoPaso.focusPassword"><small>{{ vm.mayusculaActivadaMessage }}</small></span><span class="invalid" ng-show="vm.segundoPaso.mostrarMsje.password"><small>{{ vm.segundoPaso.passwordInvalidoMensaje }}</small></span></div><div class="form-group form-group-pass col-lg-4 col-md-6 col-sm-6 col-xs-10"><label class="bch-olvidoclave-label">Reingresar nueva Clave</label><input completa-password type="password" id="confirmarPassword" name="confirmarPassword" maxlength="8" class="form-control" ng-keydown="vm.enterPress($event,vm.segundoPaso.validarForm,olvidoClave.password.$valid , olvidoClave.confirmarPassword.$valid); " ng-disabled="!vm.primerPaso.confirmado || vm.tercerPaso.ladda" ng-blur="vm.segundoPaso.confirmarPasswordValidatorInput(vm.segundoPaso.password , vm.segundoPaso.confirmarPassword); vm.segundoPaso.focusConfirmarPassword = false" ng-model="vm.segundoPaso.confirmarPassword" ui-validate=" \'vm.segundoPaso.confirmarPasswordValidator(vm.segundoPaso.password, $value)\' " ui-validate-watch="\'vm.segundoPaso.password\'" ng-change="vm.segundoPaso.volverPaso()" ng-focus="vm.segundoPaso.mostrarMsje.confirmarPassword = false ; vm.segundoPaso.focusConfirmarPassword = true" placeholder=""> <span class="caps-lock-alert invalid" ng-show="isCapsLockOn && vm.segundoPaso.focusConfirmarPassword"><small>{{ vm.mayusculaActivadaMessage }}</small></span><span class="invalid" ng-show="vm.segundoPaso.mostrarMsje.confirmarPassword"><small>{{ vm.segundoPaso.confirmarPasswordInvalidoMensaje }}</small></span></div><div class="form-group col-xs-12 col-sm-12 col-md-3 col-lg-4 bch-olvidoclave-sp-seguridad"><politicas-seguridad password-strength="{{vm.segundoPaso.password}}"></politicas-seguridad></div></div></div></article><article class="step" data-step="3" ng-class="{disabled: !vm.segundoPaso.confirmado}"><h3>Ingresa Clave Dispositivos de Seguridad</h3><div class="row col-sm-12 col-md-12 col-lg-12" ng-show="vm.segundoPaso.confirmado"><caja-desafio-soft titulo="false" portal="Personas" action="vm.tercerPaso.validarForm();" boton="vm.verBoton" ladda-soft-token="false" objeto-mi-pass="vm.objetoMiPass"></caja-desafio-soft></div></article></section></form></div><div class="col-sm-12 col-md-12 col-lg-12" ng-if="vm.tercerPaso.verificacionFallida"><div class="bch-mensaje-empresas error"><article>{{vm.tercerPaso.errorUsuarioNoExiste}}</article></div></div><div class="text-right col-sm-12 col-md-12 col-lg-12"><button type="button" class="btn neutro" ng-disabled="vm.tercerPaso.ladda" ng-click="vm.tercerPaso.cancelar()">Cancelar</button> <button type="button" class="btn success ladda-button" ladda="vm.tercerPaso.ladda" data-style="expand-right" ng-disabled="!vm.segundoPaso.confirmado" ng-click="vm.tercerPaso.validarForm()" ng-show="vm.verBoton">Solicitar clave</button><br class="clear"><br class="clear"><br class="clear"></div></div><br class="clear"></section><br class="clear">')
	}]), angular.module("bch-persona-olvido-clave/src/olvido-clave-persona/olvido-clave-persona.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-persona-olvido-clave/src/olvido-clave-persona/olvido-clave-persona.tpl.html", '<section class="container olvido-clave-persona"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><h1>Olvido de Clave</h1><form><section class="steps forms-empresas"><article class="step done pb-30" data-step="1"><h3 class="mb-20">IdentificaciÃ³n</h3><p class="text-light px-14 mb-25">Ingresa tu rut y clave de tu tarjeta de crÃ©dito o dÃ©bito.</p><div class="row"><div class="col-lg-9 col-md-9 col-sm-9"><div class="row"><div class="col-lg-8 col-md-8 col-sm-8"><div class="row"><div class="col-lg-6 col-md-6 col-sm-6 form-group"><label>Rut</label><input id="inputRutCliente" type="text" class="form-control" ng-model="ocl.olvClaveData.data.rut" ng-blur="ocl.validaRut();" ng-change="ocl.changeRut();" maxlength="12" delete-zero-left ng-disabled="ocl.olvClaveData.disableCampos"> <small class="invalid">{{ocl.datosCliente.msjErrorRut}}</small></div><div class="col-lg-6 col-md-6 col-sm-6 form-group"><label>Clave Tarjeta de 4 DÃ­gitos</label><input id="inputClaveCliente" type="password" class="form-control" placeholder="" ng-model="ocl.olvClaveData.data.clave" ng-blur="ocl.validaClaveATM();" ng-change="ocl.changeClaveATM();" maxlength="4" ng-disabled="ocl.olvClaveData.disableCampos"> <small class="invalid">{{ocl.datosCliente.msjErrorATM}}</small></div></div></div><div class="col-lg-12 col-md-12 col-sm-12"><div class="bch-mensaje-empresas warning" ng-if="ocl.olvClaveData.mostrarMsjNoRegistrado"><article><h5 class="mb-0">No estÃ¡s registrado para usar esta opciÃ³n</h5><p class="mb-0">Para obtener tu clave de internet ingresa a <a href="#/clave-persona/solicitud-clave-persona" ui-sref="solicitud-clave-persona"><u>Solicitud de Clave</u></a> o solicÃ­tala en una sucursal, y si aÃºn no eres cliente Hazte Cliente <a href="javascript:void(0)"><u>AquÃ­</u></a>.</p></article></div><div class="bch-mensaje-empresas error" ng-if="ocl.olvClaveData.verMsjError"><article><p class="mb-0">{{ocl.olvClaveData.msjError}}</p></article></div><div class="bch-mensaje-empresas error" ng-if="!ocl.olvClaveData.tieneDispositivos && ocl.olvClaveData.datosValidos\n                                                   && ocl.msjErrorDispositivos"><article><p class="mb-0">{{ocl.msjErrorDispositivos}}</p></article></div><div class="btn-loader" ng-if="ocl.mostrarBotonValidar"><a href="javascript:;" class="btn neutro border ladda-button" ng-click="ocl.validarDatos();" data-style="expand-right" data-spinner-color="#3399CC" ladda="ocl.olvClaveData.laddaValidaDatos"><span class="ladda-label">Validar</span> <span class="ladda-spinner"></span></a></div><span ng-if="ocl.olvClaveData.mostrarOk" class="ok ion-ios-checkmark-outline"></span></div></div></div><div class="col-sm-3 col-md-3 col-lg-3 pull-right"><politicas-seguridad-recuadro password-strength="{{ocl.olvClaveData.datosCliente.claveNueva}}" portal="Personas"></div></div></article><article class="step done pb-30" data-step="2" ng-class="{disabled: (!ocl.olvClaveData.pasos.pasoUnoOk || !ocl.olvClaveData.tieneDispositivos) ,done: (ocl.olvClaveData.pasos.pasoDosOk)}"><h3 class="mb-20">Nueva Clave</h3><div class="row"><div class="col-lg-6 col-md-6 col-sm-6"><div class="row"><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Ingresar nueva Clave</label><input id="inputNuevaClave" type="password" class="form-control" placeholder="" ng-model="ocl.olvClaveData.datosCliente.claveNueva" ng-change="ocl.validaNuevaClave();" ng-change="" maxlength="8" ng-disabled="ocl.olvClaveData.disableCampos"> <small class="invalid">{{ocl.solicitudClave.nuevaClaveError}}</small></div><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Reingresar nueva Clave</label><input id="inputReingresoNuevaClave" type="password" class="form-control" placeholder="" ng-model="ocl.olvClaveData.datosCliente.repiteClaveNueva" ng-change="ocl.validaClaveReingreso();" ng-change="" maxlength="8" ng-disabled="ocl.olvClaveData.disableCampos"> <small class="invalid">{{ocl.solicitudClave.nuevaClaveRepiteError}}</small></div><div class="form-group col-sm-4 col-md-4 col-lg-4 politica-scp"><politicas-seguridad password-strength="{{ocl.olvClaveData.datosCliente.claveNueva}}"></politicas-seguridad></div></div><div class="row"><div class="form-group col-lg-6 col-md-6 col-sm-6"><small class="invalid">{{ocl.solicitudClave.msjErrorPoliticas}}</small></div></div></div></div></article><article class="step done pb-30" data-step="3" ng-class="{disabled: (!ocl.tieneDispositivos), done: ocl.olvClaveData.pasos.pasoTresOk}" ng-if="ocl.tieneDispositivos"><h3>ConfirmaciÃ³n</h3><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><caja-desafio-soft titulo="false" portal="Personas" action="ocl.solicitarClave();" boton="ocl.verBoton" ladda-soft-token="false" objeto-mi-pass="ocl.objetoMiPass"></caja-desafio-soft></div></div></article></section></form><div class="col-lg-12 col-md-12 col-sm-12"><div class="bch-mensaje-empresas error" ng-if="ocl.olvClaveData.mostrarMsjFalloSinacofi"><article> {{ocl.olvClaveData.msjValidacion}} </article></div></div></div><div class="col-lg-12 col-md-12 col-sm-12 text-right pb-30 mb-30" ng-if="ocl.showBtn"><button class="btn neutro border" ng-click="ocl.cancelar()">Cancelar</button> <button class="btn success" ng-click="ocl.solicitarClave();" ng-show="ocl.verBoton" ladda="ocl.olvClaveData.laddaSolicitudClave" ng-disabled="ocl.olvClaveData.disableBotonSol">Solicitar Clave</button></div></div></section>')
	}]), angular.module("bch-preguntas-seguridad/src/bch-preguntas-seguridad/bch-preguntas-seguridad.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("bch-preguntas-seguridad/src/bch-preguntas-seguridad/bch-preguntas-seguridad.tpl.html", '<div ng-repeat="pregunta in ps.value"><div class="row"><div class="form-group col-xs-8 col-sm-8 col-md-8 col-lg-8"><label>Selecciona Pregunta NÂ° {{pregunta.id + 1}}</label><ui-select ng-required="true" ng-model="ps.value[$index].pregunta" name="{{\'pregunta\'+ pregunta.id}}" ng-change="ps.seleccionarPregunta($index); ps.validarFormRespuestas()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.glosa}} </ui-select-match><ui-select-choices repeat="pregunta in ps.preguntas | filterPreguntasRepetidas:ps.value"> {{ pregunta.glosa }} </ui-select-choices></ui-select><small class="invalid" ng-show="ps.mostrarMsjePregunta[$index]">Selecciona una pregunta</small></div></div><div class="row"><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Ingresar Respuesta</label><input ng-attr-id="{{\'respuesta\'+ pregunta.id}}" name="{{\'respuesta\'+ pregunta.id}}" type="text" class="form-control" placeholder="" ng-model="ps.value[pregunta.id].respuesta" ng-minlength="1" ui-validate="\'ps.validarRespuestaInput($value,$index)\';" ui-validate-watch="\'ps.value[$index].confirmar\'" ng-change="ps.validarFormRespuestas()" ng-focus="respuesta[$index] = true" ng-blur="respuesta[$index] = false; ps.validarRespuestaBlur(ps.value[pregunta.id].respuesta, $index)" ng-keydown="ps.mostrarRespuesta[$index] = false; ps.enterPress($event)" ng-caracteres-especiales> <small class="invalid" ng-show="ps.mostrarMsjeRespuesta[$index] && (!respuesta[$index] || ps.mostrarRespuesta[$index])">{{ps.errorRespuesta}}</small></div><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Reingresar Respuesta</label><input ng-attr-id="{{\'confirmar\'+pregunta.id}}" name="{{\'confirmar\'+pregunta.id}}" type="text" class="form-control" placeholder="" ng-model="ps.confirmarRespuesta[$index]" ui-validate="\'ps.confirmarRespuestaValidator(ps.value[pregunta.id].respuesta,$value, $index)\'" ui-validate-watch="\'ps.value[$index].respuesta\'" ng-change="ps.validarFormRespuestas()" ng-focus="confirmar[$index] = true" ng-blur="confirmar[$index] = false; ps.validarConfirmarBlur(ps.value[pregunta.id].respuesta,ps.confirmarRespuesta[$index], $index)" ng-keydown=" ps.mostrarConfirmar[$index] = false; ps.enterPress($event)" ng-caracteres-especiales> <small class="invalid" ng-show="ps.mostrarMsjeConfirmacion[$index] && (!confirmar[$index] || ps.mostrarConfirmar[$index])">{{ps.errorConfirmacion[pregunta.id]}}</small></div></div></div>')
	}]), angular.module("cajadesafio/src/common/directives/cajaDesafio/cajaDesafioDirectiveEmpresas.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("cajadesafio/src/common/directives/cajaDesafio/cajaDesafioDirectiveEmpresas.tpl.html", '<div class="cajadesafio-23"><div ng-if="titulo==\'true\'"><h3>{{cd.cajaDesafio.titulo}}</h3></div><div class="form-group"><section class="caja-desafio-new"><div class="row" ng-if="cd.condiciones.mostrarRadios"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><ul class="list-inline list-unstyled"><li ng-repeat="device in cd.dispositivos"><!--DIGICARD--><div ng-if="device.tipo == 1"><label class="bch-custom-check radiobutton"><div><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGICARD\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGICARD;\'+device.numeroSerie}}"> <i></i></div>DigiCard</label></div><!--Digipass--><div ng-if="device.tipo == 8 && device.soportaFirma == false"><label class="bch-custom-check radiobutton"><div ng-if="cd.condiciones.mostrarRadios"><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGIPASS\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGIPASS;\'+device.numeroSerie}}"><i></i></div>DigiPass</label></div></li></ul></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><ul class="list-inline list-unstyled"><div ng-repeat="device in cd.dispositivos"><li><!--DIGICARD--><div ng-if="device.tipo == 1"><div ng-if="cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)"><label>Ingresa Clave DigiCard (Serie: {{device.numeroSerie}})</label><div class="form-group separacion"><label>{{device.coordenadas[0]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada1" ui-validate="\'cd.digicardValidator($value, 1, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="form-group separacion"><label>{{device.coordenadas[1]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada2" ui-validate="\'cd.digicardValidator($value, 2, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="form-group separacion"><label>{{device.coordenadas[2]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada3" ui-validate="\'cd.digicardValidator($value, 3, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigicard">{{cd.errorCajaDesafio.textoErrorValidacionDigicard}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorDigicard" class="bch-mensaje-empresas error one-line login"><article>{{ cd.errorCajaDesafio.textoErrorDigicard }}</article></div></div></div><!--DIGIPASS--><div ng-if="device.tipo == 8 && device.soportaFirma == false"><div ng-if="cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)"><div class="pull-left"><label>Ingresa Clave DigiPass (Serie: {{device.numeroSerie}})</label><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token1" ui-validate="\'cd.digipassValidator($value, 1, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token2" ui-validate="\'cd.digipassValidator($value, 2, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token3" ui-validate="\'cd.digipassValidator($value, 3, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token4" ui-validate="\'cd.digipassValidator($value, 4, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[3] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[3]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token5" ui-validate="\'cd.digipassValidator($value, 5, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[4] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[4]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token6" ui-validate="\'cd.digipassValidator($value, 6, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[5] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[5]" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigipass">{{cd.errorCajaDesafio.textoErrorValidacionDigipass}}</small></div><div class="pull-left caja-vacman"><!-- Input Rut Empresa--><div ng-if="cd.muestraInputRutEmpresa()" class="form-group"><label>Ingrese Rut Empresa:</label><input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';rutEmpresa\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';rutEmpresa\'}}" maxlength="12" type="text" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.rutEmpresaIngresado.valor" ui-validate="\'cd.digipassRutEmpresaValidator($value)\'" ng-focus="cd.focus($event)" set-focus="cd.dispositivoSeleccionado.isRutEmpresaFocus" ng-blur="cd.setErrorRutEmpresa(device.numeroSerie); cd.dispositivoSeleccionado.isRutEmpresaFocus = false;" ng-rut rut-format="live" delete-zero-left required></div><!--Mensaje Error Rut Invalido --> <small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionRutEmpresa">{{cd.errorCajaDesafio.textoErrorValidacionRutEmpresa}}</small></div><div ng-show="cd.errorCajaDesafio.mostrarErrorDigipass" class="bch-mensaje-empresas error one-line mensaje-vacman clear"><article>{{ cd.errorCajaDesafio.textoErrorDigipass }}</article></div></div></div><!--claveInternet--><div ng-if="device.tipo == \'CI\'"><div class="bch-caja-desafio bch-caja-clave-internet"><div ng-if="cd.dispositivoSeleccionado.llave == (\'CLAVEINTERNET;\'+device.numeroSerie)"><div class="row"><div class="form-group col-lg-3 col-md-4 col-sm-4"><input class="form-control" id="{{\'CLAVEINTERNET\'}}" name="{{\'CLAVEINTERNET\'}}" maxlength="8" type="password" ng-model="cd.claveInternetIngresada.valor" required></div></div><small class="text-danger caja0" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionClaveInternet">{{cd.errorCajaDesafio.textoErrorValidacionClaveInternet}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorClaveInternet" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorClaveInternet }}</article></div></div></div></div><!--TerceraClave--><div ng-if="device.tipo == 5"><div ng-if="cd.dispositivoSeleccionado.llave == (\'TERCERACLAVE;\'+device.numeroSerie)"><div class="col-lg-12 col-md-12 col-sm-12 forms-empresas"><div class="bch-mensaje-empresas information"><article>Por tu seguridad, enviamos a tu celular registrado en Datos de Seguridad, una clave de ocho dÃ­gitos para autorizar esta transacciÃ³n.</article></div><div class="form-group"><label>Ingresa clave dinÃ¡mica enviada a tu celular</label><input class="form-control" id="{{\'TERCERACLAVE\'}}" name="{{\'TERCERACLAVE\'}}" maxlength="8" type="password" ng-model="cd.terceraClaveIngresada.valor" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionTerceraClave">{{cd.errorCajaDesafio.textoErrorValidacionTerceraClave}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorTerceraClave" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorTerceraClave }}</article></div></div></div></div></li></div></ul></div></div></section></div><div class="row caja-espacio invalid"><small class="" ng-show="cd.errorCajaDesafio.mostrarErrorValidacion">{{cd.errorCajaDesafio.textoErrorValidacion}}</small><div class="pull-left"><div ng-show="cd.errorCajaDesafio.mostrarErrorGeneral" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorGeneral }}</article></div></div></div></div>');
	}]), angular.module("cajadesafio/src/common/directives/cajaDesafio/cajaDesafioDirectivePersonas.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("cajadesafio/src/common/directives/cajaDesafio/cajaDesafioDirectivePersonas.tpl.html", '<div class="cajadesafio-23"><div ng-if="titulo==\'true\'"><h3>{{cd.cajaDesafio.titulo}}</h3></div><div class="form-group"><section class="caja-desafio-new neutro"><div class="row form-group" ng-if="cd.condiciones.mostrarRadios"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 cont-radios" ng-repeat="device in cd.dispositivos"><!--DIGICARD--><div ng-if="device.tipo == 1"><label class="bch-custom-check radiobutton"><div><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGICARD\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGICARD;\'+device.numeroSerie}}"> <i></i></div>DigiCard</label></div><!--Digipass--><div ng-if="device.tipo == 8 && device.soportaFirma == false"><label class="bch-custom-check radiobutton"><div ng-if="cd.condiciones.mostrarRadios"><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGIPASS\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGIPASS;\'+device.numeroSerie}}"><i></i></div>DigiPass</label></div></div></div></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><ul class="list-inline list-unstyled col-xs-12 col-sm-12 col-md-12 col-lg-12 inputs-dispositivos"><div ng-repeat="device in cd.dispositivos"><li><!--DIGICARD--><div ng-if="device.tipo == 1"><div ng-if="cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)"><label>Ingresa Clave DigiCard (Serie: {{device.numeroSerie}})</label><div class="form-group separacion"><label>{{device.coordenadas[0]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada1" ui-validate="\'cd.digicardValidator($value, 1, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="form-group separacion"><label>{{device.coordenadas[1]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada2" ui-validate="\'cd.digicardValidator($value, 2, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="form-group separacion"><label>{{device.coordenadas[2]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada3" ui-validate="\'cd.digicardValidator($value, 3, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigicard">{{cd.errorCajaDesafio.textoErrorValidacionDigicard}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorDigicard" class="bch-mensaje-empresas error one-line login"><article>{{ cd.errorCajaDesafio.textoErrorDigicard }}</article></div></div></div><!--DIGIPASS--><div ng-if="device.tipo == 8 && device.soportaFirma == false"><div ng-if="cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)"><label>Ingresa Clave DigiPass (Serie: {{device.numeroSerie}})</label><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token1" ui-validate="\'cd.digipassValidator($value, 1, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token2" ui-validate="\'cd.digipassValidator($value, 2, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token3" ui-validate="\'cd.digipassValidator($value, 3, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token4" ui-validate="\'cd.digipassValidator($value, 4, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[3] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[3]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token5" ui-validate="\'cd.digipassValidator($value, 5, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[4] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[4]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token6" ui-validate="\'cd.digipassValidator($value, 6, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[5] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[5]" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigipass">{{cd.errorCajaDesafio.textoErrorValidacionDigipass}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorDigipass" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorDigipass }}</article></div></div></div><!--claveInternet--><div ng-if="device.tipo == \'CI\'"><div class="bch-caja-desafio bch-caja-clave-internet"><div ng-if="cd.dispositivoSeleccionado.llave == (\'CLAVEINTERNET;\'+device.numeroSerie)"><div class="row"><div class="form-group col-lg-3 col-md-4 col-sm-4"><input class="form-control" id="{{\'CLAVEINTERNET\'}}" name="{{\'CLAVEINTERNET\'}}" maxlength="8" type="password" ng-model="cd.claveInternetIngresada.valor" required></div></div><small class="text-danger caja0" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionClaveInternet">{{cd.errorCajaDesafio.textoErrorValidacionClaveInternet}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorClaveInternet" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorClaveInternet }}</article></div></div></div></div><!--TerceraClave--><div ng-if="device.tipo == 5"><div ng-if="cd.dispositivoSeleccionado.llave == (\'TERCERACLAVE;\'+device.numeroSerie)"><div class="col-lg-12 col-md-12 col-sm-12 forms-empresas clave-dimanica-old"><div class="row"><div class="col-lg-2 col-md-2 col-sm-2 icono text-center"><div class="row"><i class="ion-iphone text-marketing-blue-one"></i></div></div><div class="col-lg-10 col-md-10 col-sm-10 texto forms-empresas"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><h2>Ingresa tu Clave DinÃ¡mica</h2><h6 class="text-light">Por tu seguridad, <span class="text-regular text-marketing-blue-one">enviamos a tu celular</span> registrado en Datos de Seguridad, una clave para autorizar esta transacciÃ³n.</h6></div><div class="col-lg-3 col-md-4 col-sm-4 form-group"><input class="form-control" id="{{\'TERCERACLAVE\'}}" name="{{\'TERCERACLAVE\'}}" numeric-only maxlength="8" type="password" ng-model="cd.terceraClaveIngresada.valor" required></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionTerceraClave">{{cd.errorCajaDesafio.textoErrorValidacionTerceraClave}}</small><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorTerceraClave" class="bch-mensaje-empresas error one-line"> {{ cd.errorCajaDesafio.textoErrorTerceraClave }}</small></div></div></div></div></div></div></li></div></ul></div></div></div></section></div><div class="row caja-espacio invalid"><small class="" ng-show="cd.errorCajaDesafio.mostrarErrorValidacion">{{cd.errorCajaDesafio.textoErrorValidacion}}</small><div class="pull-left"><div ng-show="cd.errorCajaDesafio.mostrarErrorGeneral" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorGeneral }}</article></div></div></div></div>')
	}]), angular.module("cajadesafio/src/common/directives/cajaDesafioSoft/cajaDesafioDirectiveSoftEmpresas.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("cajadesafio/src/common/directives/cajaDesafioSoft/cajaDesafioDirectiveSoftEmpresas.tpl.html", '<div class="cajadesafio-23"><div ng-if="titulo==\'true\'"><h3>{{cd.cajaDesafio.titulo}}</h3></div><div class="form-group"><section class="caja-desafio-new"><div class="row" ng-if="cd.condiciones.mostrarRadios"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><ul class="list-inline list-unstyled"><li ng-repeat="device in cd.dispositivos"><!--DIGICARD--><div ng-if="device.tipo == 1"><label class="bch-custom-check radiobutton"><div><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGICARD\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGICARD;\'+device.numeroSerie}}"> <i></i></div>DigiCard</label></div><!--Digipass--><div ng-if="device.tipo == 8 && device.soportaFirma == false"><label class="bch-custom-check radiobutton"><div ng-if="cd.condiciones.mostrarRadios"><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGIPASS\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGIPASS;\'+device.numeroSerie}}"><i></i></div>DigiPass</label></div></li></ul></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><ul class="list-inline list-unstyled"><div ng-repeat="device in cd.dispositivos"><li><!--DIGICARD--><div ng-if="device.tipo == 1"><div ng-if="cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)"><p>Ingresa Clave DigiCard (Serie: {{device.numeroSerie}})</p><div class="form-group separacion"><label>{{device.coordenadas[0]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada1" ui-validate="\'cd.digicardValidator($value, 1, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="form-group separacion"><label>{{device.coordenadas[1]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada2" ui-validate="\'cd.digicardValidator($value, 2, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="form-group separacion"><label>{{device.coordenadas[2]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada3" ui-validate="\'cd.digicardValidator($value, 3, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigicard">{{cd.errorCajaDesafio.textoErrorValidacionDigicard}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorDigicard" class="bch-mensaje-empresas error one-line login"><article>{{ cd.errorCajaDesafio.textoErrorDigicard }}</article></div></div></div><!--DIGIPASS--><div ng-if="device.tipo == 8 && device.soportaFirma == false"><div ng-if="cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)"><p>Ingresa Clave DigPass (Serie: {{device.numeroSerie}})</p><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token1" ui-validate="\'cd.digipassValidator($value, 1, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token2" ui-validate="\'cd.digipassValidator($value, 2, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token3" ui-validate="\'cd.digipassValidator($value, 3, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token4" ui-validate="\'cd.digipassValidator($value, 4, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[3] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[3]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token5" ui-validate="\'cd.digipassValidator($value, 5, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[4] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[4]" required></div><div class="form-group separacion2"><input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token6" ui-validate="\'cd.digipassValidator($value, 6, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[5] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[5]" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigipass">{{cd.errorCajaDesafio.textoErrorValidacionDigipass}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorDigipass" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorDigipass }}</article></div></div></div><!--claveInternet--><div ng-if="device.tipo == \'CI\'"><div class="bch-caja-desafio"><div ng-if="cd.dispositivoSeleccionado.llave == (\'CLAVEINTERNET;\'+device.numeroSerie)" class="row"><div class="form-group col-lg-5 col-md-5 col-sm-5"><input id="{{\'CLAVEINTERNET\'}}" name="{{\'CLAVEINTERNET\'}}" maxlength="8" type="password" ng-model="cd.claveInternetIngresada.valor" required></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionClaveInternet">{{cd.errorCajaDesafio.textoErrorValidacionClaveInternet}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorClaveInternet" class="invalid"><article>{{ cd.errorCajaDesafio.textoErrorClaveInternet }}</article></div></div></div></div><!--TerceraClave--><div ng-if="device.tipo == 5"><div ng-if="cd.dispositivoSeleccionado.llave == (\'TERCERACLAVE;\'+device.numeroSerie)"><div class="col-lg-12 col-md-12 col-sm-12 forms-empresas"><div class="bch-mensaje-empresas information"><article>Por tu seguridad, enviamos a tu celular registrado en Datos de Seguridad, una clave de ocho dÃ­gitos para autorizar esta transacciÃ³n.</article></div><div class="form-group"><label>Ingresa clave dinÃ¡mica enviada a tu celular</label><input class="form-control" id="{{\'TERCERACLAVE\'}}" name="{{\'TERCERACLAVE\'}}" maxlength="8" type="password" ng-model="cd.terceraClaveIngresada.valor" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionTerceraClave">{{cd.errorCajaDesafio.textoErrorValidacionTerceraClave}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorTerceraClave" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorTerceraClave }}</article></div></div></div></div></li></div></ul></div></div></section></div><div class="row caja-espacio invalid"><small class="" ng-show="cd.errorCajaDesafio.mostrarErrorValidacion">{{cd.errorCajaDesafio.textoErrorValidacion}}</small><div class="pull-left"><div ng-show="cd.errorCajaDesafio.mostrarErrorGeneral" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorGeneral }}</article></div></div></div></div>')
	}]), angular.module("cajadesafio/src/common/directives/cajaDesafioSoft/cajaDesafioDirectiveSoftPersonas.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("cajadesafio/src/common/directives/cajaDesafioSoft/cajaDesafioDirectiveSoftPersonas.tpl.html", '<div class="cajadesafio-23"><div ng-if="titulo==\'true\'"><h3>{{cd.cajaDesafio.titulo}}</h3></div><div class="container-sin-clave-dinamica col-lg-12 col-md-12 col-sm-12" ng-if="!cd.mostrarCaja.valor"><div class="row"><div class="text-center col-lg-2 col-md-2 col-sm-3"><i class="ion-iphone text-marketing-blue-one icono"></i></div><div class="col-lg-10 col-md-10 col-sm-9"><h2 class="text-light px-22 mb-10 mt-5">Importante</h2><p class="text-light px-14 mb-5">Actualmente no tienes un Celular de Seguridad registrado en el Banco. Para inscribirlo, puedes llamar al 600 637 3737, contactar</p><p class="text-light px-14">a tu ejecutivo(a) o acudir al mesÃ³n de atenciÃ³n a clientes en cualquier de nuestras sucursales.</p><p class="text-light px-14">Esta transacciÃ³n no se ha efectuado.</p></div></div></div><section class="modulo-caja-desafio" ng-if="cd.mostrarCaja.valor"><!-- Bloque SoftToken--><!-- RENOMBRAR VARIABLE MIPASS a UNA MAS PNEMOTECNICA--><div class="contenedor-caja-desafio animacion" ng-class="{\'mover\': cd.animacionSoftokenclaveDinamica.valor}"><!-- MUESTRA OPCION SOFTOKEN--><div class="grey-five container-mi-pass col-lg-12 col-md-12 col-sm-12" ng-repeat="device in cd.dispositivos" ng-if="device.tipo == 9"><div class="cont-switch-mi-pass" ng-if="device.tipo == 9"><label class="switch-mi-pass"><!--  ng-click="cd.miPass = !cd.miPass" ver si influye en linea de abajo--> <input ng-disabled="laddaSoftToken || cd.disableSoftToken.valor" type="checkbox" name="demo" ng-model="cd.multipasSelected.value" ng-click="cd.seleccionaMultipass(\'SOFTOKEN;\'+device.numeroSerie)"><div class="interruptor"><i class="bch-q1-Iconomipass"></i> <span>Autoriza con Mi Pass</span></div></label></div><div class="separador" ng-if="device.tipo == 9"></div><!--BLOQUE MENSAJES INFORMATIVOS --><!-- BLOQUE EXITO--><div class="texto-mi-pass" ng-if="device.tipo == 9 && !cd.errorCajaDesafio.mostrarErrorValidacionSofToken"><h2>Autoriza</h2><p class="text-light">Tu operaciÃ³n mediante tu telÃ©fono de manera fÃ¡cil, rÃ¡pida y segura.</p></div><!-- BLOQUE ERROR--><div class="texto-mi-pass" ng-if="device.tipo == 9 && cd.errorCajaDesafio.mostrarErrorValidacionSofToken"><h2>{{cd.errorCajaDesafio.tituloErrorValidacionSofToken}}</h2><p class="text-light">{{ cd.errorCajaDesafio.textoErrorValidacionSofToken }}</p><!--<p class="text-light">Al presionar <span class="text-primary text-regular">Utilizar Mi Pass</span> podrÃ¡s autorizar la transacciÃ³n mediante tu telÃ©fono de manera fÃ¡cil, rÃ¡pida y segura. AsegÃºrate de chequear la aplicaciÃ³n una vez que presiones <span class="text-primary text-regular">Utilizar Mi Pass.</span></p>--><!--div class="bch-mensaje-empresas information">\n                      <article>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quis voluptate nulla voluptatibus</article>\n                   </div--></div></div><!--  Donde van mensajes de Error?--><!-- FIN MUESTRA OPCION SOFTOKEN--><!-- ACORDEON DE OTROS DISPOSITIVOS --><div class="row bch-empresas-acordeon bch-acordeon-active" ng-if="cd.tieneMiPass && cd.cantDispNoSoftoken>0"><div class="col-lg-12 col-md-12 col-sm-12"><accordion close-others="oneAtATime"><accordion-group is-open="cd.abreAcordeon" is-disabled="cd.deshabilitaAcordeon || cd.disableSoftToken.valor"><!--Autorizar con Otros Dispositivos --><!--TITULO DINAMICO --><accordion-heading><div ng-class="{\'active\': cd.abreAcordeon}" ng-click="cd.compruebaSoloUnDispositivoNoSoftToken(cd.abreAcordeon)"><!-- titulo con clave internet y clave dinamica?? --> <u class="text-regular" ng-if="cd.tieneDigiPass.valor && !cd.tieneDigiCard.valor">Autorizar con DigiPass</u> <i ng-if="false" class="pull-right icon" ng-class="{\'ion-ios-arrow-up\': cd.abreAcordeon&&!cd.deshabilitaAcordeon, \'ion-ios-arrow-down\': !cd.abreAcordeon&&!cd.deshabilitaAcordeon}"></i> <u class="text-regular" ng-if="!cd.tieneDigiPass.valor && cd.tieneDigiCard.valor">Autorizar con DigiCard</u> <i ng-if="false" class="pull-right icon" ng-class="{\'ion-ios-arrow-up\': cd.abreAcordeon&&!cd.deshabilitaAcordeon, \'ion-ios-arrow-down\': !cd.abreAcordeon&&!cd.deshabilitaAcordeon}"></i> <u class="text-regular" ng-if="cd.tieneDigiPass.valor && cd.tieneDigiCard.valor">Autorizar con DigiPass o DigiCard</u> <i ng-if="true" class="pull-right icon" ng-class="{\'ion-ios-arrow-up\': cd.abreAcordeon&&!cd.deshabilitaAcordeon, \'ion-ios-arrow-down\': !cd.abreAcordeon&&!cd.deshabilitaAcordeon}"></i></div></accordion-heading><div class="col-lg-12 col-md-12 col-sm-12 contenedor-otros-dispositivos"><!--CICLO RADIO BUTTON OTROS DISPOSITIVOS --><div class="col-lg-12 col-md-12 col-sm-12 default" ng-if="cd.condiciones.mostrarRadios"><div class="col-lg-3 col-md-3 col-sm-4" ng-repeat="device in cd.dispositivos"><!-- RADIO BUTTON DIGICARD--><label class="bch-custom-check radiobutton" ng-if="device.tipo == 1"><div ng-show="cd.condiciones.mostrarRadios"><input type="radio" name="dispositivo" ng-click="cd.setDispositivoSeleccionado(\'DIGICARD\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGICARD;\'+device.numeroSerie}}"> <i></i></div>DigiCard</label><!-- RADIO BUTTON DIGIPASS--><label class="bch-custom-check radiobutton" ng-if="device.tipo == 8 && device.soportaFirma == false"><div ng-show="cd.condiciones.mostrarRadios"><input type="radio" name="dispositivo" ng-click="cd.setDispositivoSeleccionado(\'DIGIPASS\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGIPASS;\'+device.numeroSerie}}"> <i></i></div>DigiPass</label></div></div><!-- FIN CICLO RADIO BUTTON OTROS DISPOSITIVOS --><!-- BLOQUE INGRESO DE CLAVES DE DISPOSITIVOS--><!-- Bloque Chile-Pass --><!--<div class="col-lg-12 col-md-12 col-sm-12 default">\n                                    <p class="text-light col-lg-10 col-md-10 col-sm-10">Ingresa el siguiente cÃ³digo de seguridad en tu dispositivo ChilePass <span class="text-primary text-regular">584556.</span><br /> Presiona OK e  ingresa clave ChilePass a continuaciÃ³n (Serie: XXX3667)</p>\n                                    <p class="text-regular col-lg-10 col-md-10 col-sm-10">Presiona el botÃ³n 9 e ingresa clave ChilePass (Serie: XXX3667)</p>\n                                    <p class="text-regular col-lg-10 col-md-10 col-sm-10">Ingresa Clave DigiPass (Serie: XXX3667)</p>\n                                </div>--><div class="col-lg-12 col-md-12 col-sm-12 default forms-empresas"><div ng-repeat="device in cd.dispositivos"><!-- CLAVE DIGICARD --><div class="form-group col-lg-12 col-md-12 col-sm-12" ng-if="((device.tipo == 1) && (cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)))"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><label class="text-regular" ng-if="((device.tipo == 1) && (cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)))">Ingresa Clave DigiCard (Serie: {{device.numeroSerie}})</label></div><div class="col-lg-12 col-md-12 col-sm-12"><div class="sector"><label>{{device.coordenadas[0]}}</label><input class="form-control digicard" id="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada1" ui-validate="\'cd.digicardValidator($value, 1, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="sector"><label>{{device.coordenadas[1]}}</label><input class="form-control digicard" id="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada2" ui-validate="\'cd.digicardValidator($value, 2, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="sector"><label>{{device.coordenadas[2]}}</label><input class="form-control digicard" id="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada3" ui-validate="\'cd.digicardValidator($value, 3, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div></div></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigicard">{{cd.errorCajaDesafio.textoErrorValidacionDigicard}}</small><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorDigicard">{{ cd.errorCajaDesafio.textoErrorDigicard }}</small></div><!-- CLAVE DIGIPASS --><div class="form-group col-lg-12 col-md-12 col-sm-12" ng-if="((device.tipo == 8 && device.soportaFirma == false) && (cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)))"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><label class="text-regular" ng-if="((device.tipo == 8 && device.soportaFirma == false) && (cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)))">Ingresa Clave DigiPass (Serie: {{device.numeroSerie}})</label></div><div class="col-lg-12 col-md-12 col-sm-12"><!-- TOKEN-1--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token1" ui-validate="\'cd.digipassValidator($value, 1, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required><!-- TOKEN-2--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token2" ui-validate="\'cd.digipassValidator($value, 2, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required><!-- TOKEN-3--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token3" ui-validate="\'cd.digipassValidator($value, 3, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required><!-- TOKEN-4--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token4" ui-validate="\'cd.digipassValidator($value, 4, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[3] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[3]" required><!-- TOKEN-5--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token5" ui-validate="\'cd.digipassValidator($value, 5, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[4] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[4]" required><!-- TOKEN-6--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token6" ui-validate="\'cd.digipassValidator($value, 6, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[5] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[5]" required></div></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigipass">{{cd.errorCajaDesafio.textoErrorValidacionDigipass}}</small><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorDigipass">{{ cd.errorCajaDesafio.textoErrorDigipass }}</small></div></div></div></div></accordion-group></accordion><!--Accordion--></div><!--Accordion--></div><!-- BLOQUE DISPOSITIVOS SIN SOFTOKEN --><div class="col-lg-12 col-md-12 col-sm-12 contenedor-otros-dispositivos neutro" ng-if="!cd.tieneMiPass"><!-- BLOQUE TITULO DINAMICO--><!--CICLO RADIO BUTTON OTROS DISPOSITIVOS --><div class="col-lg-12 col-md-12 col-sm-12 default" ng-if="cd.condiciones.mostrarRadios"><div class="col-lg-3 col-md-3 col-sm-4" ng-repeat="device in cd.dispositivos"><!-- RADIO BUTTON DIGICARD--><label class="bch-custom-check radiobutton" ng-if="device.tipo == 1"><div ng-show="cd.condiciones.mostrarRadios"><input type="radio" name="dispositivo" ng-click="cd.setDispositivoSeleccionado(\'DIGICARD\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGICARD;\'+device.numeroSerie}}"> <i></i></div>DigiCard</label><!-- RADIO BUTTON DIGIPASS--><label class="bch-custom-check radiobutton" ng-if="device.tipo == 8 && device.soportaFirma == false"><div ng-show="cd.condiciones.mostrarRadios"><input type="radio" name="dispositivo" ng-click="cd.setDispositivoSeleccionado(\'DIGIPASS\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGIPASS;\'+device.numeroSerie}}"> <i></i></div>DigiPass</label></div></div><!-- FIN CICLO RADIO BUTTON OTROS DISPOSITIVOS --><!-- BLOQUE INGRESO DE CLAVES DE DISPOSITIVOS--><div class="col-lg-12 col-md-12 col-sm-12 default forms-empresas"><div ng-repeat="device in cd.dispositivos"><!-- CLAVE DIGICARD --><div class="form-group col-lg-12 col-md-12 col-sm-12" ng-if="((device.tipo == 1) && (cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)))"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><label class="text-regular" ng-if="((device.tipo == 1) && (cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)))">Ingresa Clave DigiCard (Serie: {{device.numeroSerie}})</label></div><div class="col-lg-12 col-md-12 col-sm-12"><div class="sector"><label>{{device.coordenadas[0]}}</label><input class="form-control digicard" id="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada1" ui-validate="\'cd.digicardValidator($value, 1, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="sector"><label>{{device.coordenadas[1]}}</label><input class="form-control digicard" id="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada2" ui-validate="\'cd.digicardValidator($value, 2, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="sector"><label>{{device.coordenadas[2]}}</label><input class="form-control digicard" id="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada3" ui-validate="\'cd.digicardValidator($value, 3, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div></div></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigicard">{{cd.errorCajaDesafio.textoErrorValidacionDigicard}}</small><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorDigicard">{{ cd.errorCajaDesafio.textoErrorDigicard }}</small></div><!-- CLAVE DIGIPASS --><div class="form-group col-lg-12 col-md-12 col-sm-12" ng-if="((device.tipo == 8 && device.soportaFirma == false) && (cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)))"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><label class="text-regular" ng-if="((device.tipo == 8 && device.soportaFirma == false) && (cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)))">Ingresa Clave DigiPass (Serie: {{device.numeroSerie}})</label></div><div class="col-lg-12 col-md-12 col-sm-12"><!-- TOKEN-1--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token1" ui-validate="\'cd.digipassValidator($value, 1, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required><!-- TOKEN-2--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token2" ui-validate="\'cd.digipassValidator($value, 2, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required><!-- TOKEN-3--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token3" ui-validate="\'cd.digipassValidator($value, 3, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required><!-- TOKEN-4--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token4" ui-validate="\'cd.digipassValidator($value, 4, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[3] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[3]" required><!-- TOKEN-5--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token5" ui-validate="\'cd.digipassValidator($value, 5, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[4] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[4]" required><!-- TOKEN-6--> <input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token6" ui-validate="\'cd.digipassValidator($value, 6, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[5] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[5]" required></div></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigipass">{{cd.errorCajaDesafio.textoErrorValidacionDigipass}}</small><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorDigipass">{{ cd.errorCajaDesafio.textoErrorDigipass }}</small></div><!-- CLAVE INTERNET --><div class="form-group col-lg-12 col-md-12 col-sm-12 clave-inet" ng-if="device.tipo == \'CI\' && cd.dispositivoSeleccionado.llave == (\'CLAVEINTERNET;\'+device.numeroSerie)"><label>Clave Internet</label><div class="row"><div class="col-lg-4 col-md-4 col-sm-4"><input class="form-control" type="password" maxlength="8" id="{{\'CLAVEINTERNET\'}}" name="{{\'CLAVEINTERNET\'}}" ng-model="cd.claveInternetIngresada.valor" required></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionClaveInternet">{{cd.errorCajaDesafio.textoErrorValidacionClaveInternet}}</small><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorClaveInternet">{{ cd.errorCajaDesafio.textoErrorClaveInternet }}</small></div></div><!-- CLAVE DINAMICA --><div ng-if="device.tipo == 5"><div class="col-lg-12 col-md-12 col-sm-12 clave-dinamica" ng-if="cd.dispositivoSeleccionado.llave == (\'TERCERACLAVE;\'+device.numeroSerie)"><div class="row"><div class="col-lg-2 col-md-2 col-sm-2 icono text-center"><div class="row"><i class="ion-iphone text-marketing-blue-one"></i></div></div><div class="col-lg-10 col-md-10 col-sm-10 texto forms-empresas"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><h2>Ingresa tu Clave DinÃ¡mica</h2><h6 class="text-light">Por tu seguridad enviamos a tu celular registrado en datos de seguridad una clave para autorizar transacciones.</h6></div><div class="col-lg-3 col-md-4 col-sm-4 form-group"><input class="form-control largo" id="{{\'TERCERACLAVE\'}}" name="{{\'TERCERACLAVE\'}}" numeric-only maxlength="8" type="password" ng-model="cd.terceraClaveIngresada.valor" required></div><div class="col-lg-12 col-md-12 col-sm-12"><h6 class="text-light">IMPORTANTE: Si no has recibido la clave dinÃ¡mica, puedes llamar al 600 637 3737, contactar con tu Ejecutivo(a) o acudir al mesÃ³n</h6><h6 class="text-light">de atenciÃ³n a clientes en cualquiera de nuestras sucursales.</h6></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionTerceraClave">{{cd.errorCajaDesafio.textoErrorValidacionTerceraClave}}</small><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorTerceraClave">{{ cd.errorCajaDesafio.textoErrorTerceraClave }}</small></div></div></div></div></div></div></div></div></div><!-- Clase Mover, para Softoken y Clave Dinamica--><div class="contenedor-caja-slide animacion" ng-class="{\'mover\': cd.animacionSoftokenclaveDinamica.valor}"><!-- Bloque Animacion Softoken--><div class="col-lg-12 col-md-12 col-sm-12 ingresa-app" ng-show="cd.bloqueAnimacionSofToken"><div class="row"><div class="col-lg-2 col-md-3 col-sm-3 icono text-center"><div class="row"><i class="bch-q1-pantalla text-marketing-blue-one"></i></div></div><div class="col-lg-2 col-md-2 col-sm-2 loader text-center"><div class="load1"></div><div class="load2"></div><div class="load3"></div></div><div class="col-lg-7 col-md-7 col-sm-7 texto"><div class="row"><div class="col-lg-2 col-md-3 col-sm-3 text-center"><i class="ion-iphone text-marketing-blue-one"></i></div><div class="col-lg-10 col-md-9 col-sm-9"><h2>Ingresa a tu App <span class="text-regular">Mi Pass</span></h2><h5>Abre la aplicaciÃ³n Mi Pass para autorizar la operaciÃ³n.</h5></div></div></div></div></div></div></section><div class="row caja-espacio invalid"><small class="" ng-show="cd.errorCajaDesafio.mostrarErrorValidacion">{{cd.errorCajaDesafio.textoErrorValidacion}}</small><div class="pull-left"><div ng-show="cd.errorCajaDesafio.mostrarErrorGeneral" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorGeneral }}</article></div></div></div></div>');
	}]), angular.module("cajadesafio/src/common/directives/cajaDesafioSoft/respaldoSoftPersonas.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("cajadesafio/src/common/directives/cajaDesafioSoft/respaldoSoftPersonas.tpl.html", '<!-- NUEVA CAJA DESAFIO --><div class="cajadesafio-23"><div ng-if="titulo==\'true\'"><h3>{{cd.cajaDesafio.titulo}}</h3></div><section class="modulo-caja-desafio"><!-- MULTI PASS --><div class="grey-five container-mi-pass col-lg-12 col-md-12 col-sm-12" ng-repeat="device in cd.dispositivos" ng-if="device.tipo == 9"><label class="switch-mi-pass" ng-if="device.tipo == 9"><input type="checkbox" name="demo" ng-model="cd.multipasSelected.value" ng-click="cd.seleccionaMultipass(\'SOFTOKEN;\'+device.numeroSerie)"><div class="interruptor"><i></i> <span>Utilizar Mi Pass</span></div></label><div class="separador" ng-if="device.tipo == 9"></div><div class="texto-mi-pass" ng-if="device.tipo == 9"><p class="text-light">Al presionar <span class="text-primary text-regular">Utilizar Mi Pass</span> podrÃ¡s autorizar la transacciÃ³n mediante tu telÃ©fono de manera fÃ¡cil, rÃ¡pida y segura. AsegÃºrate de chequear la aplicaciÃ³n una vez que presiones <span class="text-primary text-regular">Utilizar Mi Pass.</span></p></div></div><div ng-show="cd.errorCajaDesafio.mostrarErrorValidacionSofToken" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorValidacionSofToken }}</article></div><!-- FIN MULTI PASS --><div class="row bch-empresas-acordeon bch-acordeon-active" ng-if="cd.tieneMiPass"><div class="col-lg-12 col-md-12 col-sm-12"><accordion close-others="oneAtATime"><accordion-group ng-show="cd.condiciones.mostrarRadios" is-open="status.openacoActive"><accordion-heading><div ng-class="{\'active\': status.openacoActive}"><i class="icono-dispositivo icon-ad-dispositivosseguridad"></i> Utilizar Otro Dispositivo <i class="pull-right icon" ng-class="{\'ion-ios-arrow-up\': status.openacoActive, \'ion-ios-arrow-down\': !status.openacoActive}"></i></div></accordion-heading><div class="col-lg-12 col-md-12 col-sm-12 contenedor-otros-dispositivos" ng-if="cd.condiciones.mostrarRadios"><div class="col-lg-12 col-md-12 col-sm-12 default"><!-- radio button DIGICARD --><div class="col-lg-3 col-md-3 col-sm-4" ng-repeat="device in cd.dispositivos"><label class="bch-custom-check radiobutton" ng-if="device.tipo == 1"><div><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGICARD\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGICARD;\'+device.numeroSerie}}"> <i></i></div>DigiCard</label><!--FIN  RADIO button DIGICARD --><!-- radio button DIGIPASS --><label class="bch-custom-check radiobutton" ng-if="device.tipo == 8 && device.soportaFirma == false"><div ng-if="cd.condiciones.mostrarRadios"><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGIPASS\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGIPASS;\'+device.numeroSerie}}"><i></i> <i></i></div>DigiPass</label><!-- FIN radio button DIGIPASS --></div></div><!-- CLAVES --><div class="col-lg-12 col-md-12 col-sm-12 default forms-empresas"><div ng-repeat="device in cd.dispositivos"><!-- CLAVE DIGICARD --><div class="form-group col-lg-12 col-md-12 col-sm-12" ng-if="((device.tipo == 1) && (cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)))"><p class="text-regular" ng-if="((device.tipo == 1) && (cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)))">Ingresa Clave DigiCard (Serie: {{device.numeroSerie}})</p><div class="sector"><label>{{device.coordenadas[0]}}</label><input class="form-control" id="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada1" ui-validate="\'cd.digicardValidator($value, 1, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="sector"><label>{{device.coordenadas[1]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada2" ui-validate="\'cd.digicardValidator($value, 2, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="sector"><label>{{device.coordenadas[2]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada3" ui-validate="\'cd.digicardValidator($value, 3, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigicard">{{cd.errorCajaDesafio.textoErrorValidacionDigicard}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorDigicard" class="bch-mensaje-empresas error one-line login"><article>{{ cd.errorCajaDesafio.textoErrorDigicard }}</article></div></div><!-- FIN CLAVE DIGICARD --><!-- CLAVE DIGIPASS --><div class="form-group col-lg-12 col-md-12 col-sm-12" ng-if="((device.tipo == 8 && device.soportaFirma == false) && (cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)))"><p class="text-regular" ng-if="((device.tipo == 8 && device.soportaFirma == false) && (cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)))">Ingresa Clave DigiPass (Serie: {{device.numeroSerie}})</p><input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token1" ui-validate="\'cd.digipassValidator($value, 1, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token2" ui-validate="\'cd.digipassValidator($value, 2, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token3" ui-validate="\'cd.digipassValidator($value, 3, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token4" ui-validate="\'cd.digipassValidator($value, 4, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[3] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[3]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token5" ui-validate="\'cd.digipassValidator($value, 5, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[4] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[4]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token6" ui-validate="\'cd.digipassValidator($value, 6, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[5] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[5]" required> <small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigipass">{{cd.errorCajaDesafio.textoErrorValidacionDigipass}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorDigipass" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorDigipass }}</article></div></div><!-- FIN CLAVE DIGIPASS --><!--claveInternet--><div ng-if="device.tipo == \'CI\'"><div class="bch-caja-desafio"><div ng-if="cd.dispositivoSeleccionado.llave == (\'CLAVEINTERNET;\'+device.numeroSerie)" class="row"><div class="form-group col-lg-5 col-md-5 col-sm-5"><input id="{{\'CLAVEINTERNET\'}}" name="{{\'CLAVEINTERNET\'}}" maxlength="8" type="password" ng-model="cd.claveInternetIngresada.valor" required></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionClaveInternet">{{cd.errorCajaDesafio.textoErrorValidacionClaveInternet}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorClaveInternet" class="invalid"><article>{{ cd.errorCajaDesafio.textoErrorClaveInternet }}</article></div></div></div></div><!--TerceraClave--><div ng-if="device.tipo == 5"><div ng-if="cd.dispositivoSeleccionado.llave == (\'TERCERACLAVE;\'+device.numeroSerie)"><div class="col-lg-12 col-md-12 col-sm-12 forms-empresas"><div class="bch-mensaje-empresas information"><article>Por tu seguridad, enviamos a tu celular registrado en Datos de Seguridad, una clave de ocho dÃ­gitos para autorizar esta transacciÃ³n.</article></div><div class="form-group"><label>Ingresa clave dinÃ¡mica enviada a tu celular</label><input class="form-control" id="{{\'TERCERACLAVE\'}}" name="{{\'TERCERACLAVE\'}}" numeric-only maxlength="8" type="password" ng-model="cd.terceraClaveIngresada.valor" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionTerceraClave">{{cd.errorCajaDesafio.textoErrorValidacionTerceraClave}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorTerceraClave" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorTerceraClave }}</article></div></div></div></div></div></div></div></accordion-group></accordion><!--Accordion--></div><!--Accordion--></div><!-- SIN MI PASS --><div class="col-lg-12 col-md-12 col-sm-12 contenedor-otros-dispositivos" ng-if="!cd.tieneMiPass"><div class="col-lg-12 col-md-12 col-sm-12 default"><!-- radio button DIGICARD --><div class="col-lg-3 col-md-3 col-sm-4" ng-repeat="device in cd.dispositivos"><label class="bch-custom-check radiobutton" ng-if="device.tipo == 1"><div><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGICARD\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGICARD;\'+device.numeroSerie}}"> <i></i></div>DigiCard</label><!--FIN  RADIO button DIGICARD --><!-- radio button DIGIPASS --><label class="bch-custom-check radiobutton" ng-if="device.tipo == 8 && device.soportaFirma == false"><div ng-if="cd.condiciones.mostrarRadios"><input type="radio" name="radioDevice" ng-click="cd.setDispositivoSeleccionado(\'DIGIPASS\', device.numeroSerie)" ng-model="cd.dispositivoSeleccionado.llave" set-focus="device.isFocus" ng-blur="device.isFocus=false" ng-show="cd.condiciones.mostrarRadios" value="{{\'DIGIPASS;\'+device.numeroSerie}}"><i></i> <i></i></div>DigiPass</label><!-- FIN radio button DIGIPASS --></div></div><div class="col-lg-12 col-md-12 col-sm-12 default"><!--p class="text-light col-lg-10 col-md-10 col-sm-10">Ingresa el siguiente cÃ³digo de seguridad en tu dispositivo ChilePass <span class="text-primary text-regular">584556.</span><br /> Presiona OK e  ingresa clave ChilePass a continuaciÃ³n (Serie: XXX3667)</p>\n                <p class="text-regular col-lg-10 col-md-10 col-sm-10">Presiona el botÃ³n 9 e ingresa clave ChilePass (Serie: XXX3667)</p--></div><!-- CLAVES --><div class="col-lg-12 col-md-12 col-sm-12 default forms-empresas" ng-repeat="device in cd.dispositivos"><p class="text-regular col-lg-10 col-md-10 col-sm-10" ng-if="((device.tipo == 1) && (cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)))">Ingresa Clave DigiCard (Serie: {{device.numeroSerie}})</p><!-- CLAVE DIGICARD --><div class="form-group col-lg-12 col-md-12 col-sm-12" ng-if="((device.tipo == 1) && (cd.dispositivoSeleccionado.llave == (\'DIGICARD;\'+device.numeroSerie)))"><div class="sector"><label>{{device.coordenadas[0]}}</label><input class="form-control" id="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';1\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada1" ui-validate="\'cd.digicardValidator($value, 1, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required></div><div class="sector"><label>{{device.coordenadas[1]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';2\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada2" ui-validate="\'cd.digicardValidator($value, 2, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required></div><div class="sector"><label>{{device.coordenadas[2]}}</label><input class="form-control bch-cd-digicard-2" id="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGICARD;\'+device.numeroSerie+\';3\'}}" maxlength="2" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.coordenadasIngresadas.coordenada3" ui-validate="\'cd.digicardValidator($value, 3, true)\'" ng-blur="cd.setErrorDigicard(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigicard">{{cd.errorCajaDesafio.textoErrorValidacionDigicard}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorDigicard" class="bch-mensaje-empresas error one-line login"><article>{{ cd.errorCajaDesafio.textoErrorDigicard }}</article></div></div><!-- FIN CLAVE DIGICARD --><!-- CLAVE DIGIPASS --><div class="form-group col-lg-12 col-md-12 col-sm-12" ng-if="((device.tipo == 8 && device.soportaFirma == false) && (cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)))"><p class="text-regular col-lg-12 col-md-12 col-sm-12" ng-if="((device.tipo == 8 && device.soportaFirma == false) && (cd.dispositivoSeleccionado.llave == (\'DIGIPASS;\'+device.numeroSerie)))">Ingresa Clave DigiPass (Serie: {{device.numeroSerie}})</p><input class="form-control" id="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';1\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token1" ui-validate="\'cd.digipassValidator($value, 1, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[0] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[0]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';2\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token2" ui-validate="\'cd.digipassValidator($value, 2, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[1] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[1]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';3\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token3" ui-validate="\'cd.digipassValidator($value, 3, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[2] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[2]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';4\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token4" ui-validate="\'cd.digipassValidator($value, 4, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[3] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[3]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';5\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token5" ui-validate="\'cd.digipassValidator($value, 5, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[4] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[4]" required> <input class="form-control bch-cd-digipass-1" id="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" name="{{\'DIGIPASS;\'+device.numeroSerie+\';6\'}}" maxlength="1" type="password" ng-keydown="cd.keyDown($event)" ng-keyup="cd.keyUp($event)" ng-model="cd.tokenIngresado.token6" ui-validate="\'cd.digipassValidator($value, 6, true)\'" ng-blur="cd.setErrorDigipass(device.numeroSerie); cd.dispositivoSeleccionado.isInputFocus[5] = false;" ng-focus="cd.focus($event)" numeric-only set-focus="cd.dispositivoSeleccionado.isInputFocus[5]" required> <small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionDigipass">{{cd.errorCajaDesafio.textoErrorValidacionDigipass}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorDigipass" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorDigipass }}</article></div></div><!-- FIN CLAVE DIGIPASS --><!--claveInternet--><div ng-if="device.tipo == \'CI\'"><div class="bch-caja-desafio"><div ng-if="cd.dispositivoSeleccionado.llave == (\'CLAVEINTERNET;\'+device.numeroSerie)" class="row"><div class="form-group col-lg-5 col-md-5 col-sm-5"><input id="{{\'CLAVEINTERNET\'}}" name="{{\'CLAVEINTERNET\'}}" maxlength="8" type="password" ng-model="cd.claveInternetIngresada.valor" required></div><small class="invalid" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionClaveInternet">{{cd.errorCajaDesafio.textoErrorValidacionClaveInternet}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorClaveInternet" class="invalid"><article>{{ cd.errorCajaDesafio.textoErrorClaveInternet }}</article></div></div></div></div><!--TerceraClave--><div ng-if="device.tipo == 5"><div ng-if="cd.dispositivoSeleccionado.llave == (\'TERCERACLAVE;\'+device.numeroSerie)"><div class="col-lg-12 col-md-12 col-sm-12 forms-empresas"><div class="bch-mensaje-empresas information"><article>Por tu seguridad, enviamos a tu celular registrado en Datos de Seguridad, una clave de ocho dÃ­gitos para autorizar esta transacciÃ³n.</article></div><div class="form-group"><label>Ingresa clave dinÃ¡mica enviada a tu celular</label><input class="form-control" id="{{\'TERCERACLAVE\'}}" name="{{\'TERCERACLAVE\'}}" maxlength="8" type="password" ng-model="cd.terceraClaveIngresada.valor" required></div><small class="text-danger caja" ng-show="cd.errorCajaDesafio.mostrarErrorValidacionTerceraClave">{{cd.errorCajaDesafio.textoErrorValidacionTerceraClave}}</small><div ng-show="cd.errorCajaDesafio.mostrarErrorTerceraClave" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorTerceraClave }}</article></div></div></div></div></div></div><!-- FIN SIN MI PASS --></section><div class="row caja-espacio invalid"><small class="" ng-show="cd.errorCajaDesafio.mostrarErrorValidacion">{{cd.errorCajaDesafio.textoErrorValidacion}}</small><div class="pull-left"><div ng-show="cd.errorCajaDesafio.mostrarErrorGeneral" class="bch-mensaje-empresas error one-line"><article>{{ cd.errorCajaDesafio.textoErrorGeneral }}</article></div></div></div></div>')
	}]), angular.module("cambio-clave-publico-oci/src/bch-cambio-clave-publico-success/bch-cambio-clave-success.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("cambio-clave-publico-oci/src/bch-cambio-clave-publico-success/bch-cambio-clave-success.tpl.html", '<header class="bch-header-personas container-fluid primary"><div class="container"><div class="row"><div class="col-lg-3 col-md-3 col-sm-3 col-xs-3"><a href="javascript:void(0);"><i class="icon-logo-banco"></i></a></div><div class="col-lg-9 col-md-9 col-sm-9 col-xs-9"><img class="img-responsive pull-right firma-header" src="assets/images/firmabanco.png"></div></div></div></header><section class="container"><div class="row"><section class="error-landing-v2 success"><section class="col-md-10 col-md-offset-1"><div class="cont-error-landing"><div class="col-xs-8"><h1><b>Proceso Completado</b></h1><p>Su clave ha sido cambiada exitosamente. Pulse continuar para ir a Login</p></div><div class="col-xs-4"><h4>Mesa de Ayuda</h4><p>Comun&iacute;quese con Fonobank<br>Llamando al 600 637 3838</p></div></div><button class="success btn pull-right" ng-click="vm.submit()">Continuar</button></section></section></div></section>')
	}]), angular.module("cambio-clave-publico-oci/src/bch-cambio-clave-publico/bch-cambio-clave.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("cambio-clave-publico-oci/src/bch-cambio-clave-publico/bch-cambio-clave.tpl.html", '<header class="bch-header-personas container-fluid primary"><div class="container"><div class="row"><div class="col-lg-3 col-md-3 col-sm-3 col-xs-3"><a href="javascript:void(0);"><i class="icon-logo-banco"></i></a></div><div class="col-lg-9 col-md-9 col-sm-9 col-xs-9"><img class="img-responsive pull-right firma-header" src="assets/images/firmabanco.png"></div></div></div></header><section class="container enrolamiento-persona"><div class="col-sm-8 col-md-8 col-lg-8"><div class="forms-empresas"><form class="stylenormal" name="postForm" id="ChangePassword" method="post" action="/idcs/changepwd" novalidate autocomplete="off"><section class="steps"><article><h1>Bienvenido</h1><h3>Cambio de Clave</h3><h3 id="msg_usuario">Por su seguridad le informamos que su clave ha expirado. Para ingresar al Portal debe cambiarla.</h3><div class="row"><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Clave Actual</label><input type="password" class="form-control" id="folio" name="oldUserPswd" maxlength="8" ng-keydown="vm.primerPaso.mostrarMsje.oldPswd = false; vm.enterPress($event,1)" ng-blur="vm.primerPaso.folioValidatorInput(vm.primerPaso.oldPswd); vm.primerPaso.focusFolio = false" ng-focus="vm.primerPaso.mostrarMsje.oldPswd = false; vm.primerPaso.focusFolio = true;" ng-model="vm.primerPaso.oldPswd" placeholder="" ng-change="vm.primerPaso.volverPaso()" ng-disabled="vm.primerPaso.ladda" set-focus="vm.primerPaso.focusFolio" required> <span class="caps-lock-alert invalid" ng-show="isCapsLockOn && vm.primerPaso.focusFolio"><small>{{ vm.mayusculaActivadaMessage }}</small></span><span class="invalid" ng-show="vm.primerPaso.mostrarMsje.oldPswd"><small>{{ vm.primerPaso.folioInvalidoMensaje }}</small></span></div></div><div class="row"><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Nueva Clave</label><input type="password" class="form-control" id="password" name="newPswd" maxlength="8" ng-keydown="vm.primerPaso.mostrarMsje.newPswd = false; vm.enterPress($event,1)" ng-blur="vm.primerPaso.passwordValidatorInput(vm.primerPaso.newPswd); vm.primerPaso.focusPassword = false" ng-focus="vm.primerPaso.mostrarMsje.newPswd = false; vm.primerPaso.focusPassword = true" ng-model="vm.primerPaso.newPswd" ui-validate="\'vm.primerPaso.passwordValidator($value)\'" placeholder="" ng-change="vm.primerPaso.volverPaso()" ng-disabled="vm.primerPaso.ladda" required> <span class="caps-lock-alert invalid" ng-show="isCapsLockOn && vm.primerPaso.focusPassword"><small>{{ vm.mayusculaActivadaMessage }}</small></span><span class="invalid" ng-show="vm.primerPaso.mostrarMsje.newPswd"><small>{{ vm.primerPaso.passwordInvalidoMensaje }}</small></span></div><div class="form-group col-sm-4 col-md-4 col-lg-4"><label class="bch-olvidoclave-label">Reingresar Nueva Clave</label><input type="password" class="form-control" id="confirmarPassword" name="confirmNewPswd" maxlength="8" ng-keydown="vm.primerPaso.mostrarMsje.confirmNewPswd = false; vm.enterPress($event,1); " ng-blur="vm.primerPaso.confirmarPasswordValidatorInput(vm.primerPaso.oldPswd,vm.primerPaso.newPswd, vm.primerPaso.confirmNewPswd); vm.primerPaso.focusConfirmarPassword = false" ng-model="vm.primerPaso.confirmNewPswd" ui-validate="\'vm.primerPaso.confirmarPasswordValidator(vm.primerPaso.oldPswd,vm.primerPaso.newPswd, $value)\'" ui-validate-watch="\'vm.primerPaso.newPswd\'" ng-focus="vm.primerPaso.mostrarMsje.confirmNewPswd = false ; vm.primerPaso.focusConfirmarPassword = true" placeholder="" ng-change="vm.primerPaso.volverPaso()" ng-disabled="vm.primerPaso.ladda"> <span class="caps-lock-alert invalid" ng-show="isCapsLockOn &&  vm.primerPaso.focusConfirmarPassword"><small>{{ vm.mayusculaActivadaMessage }}</small></span><span class="invalid" ng-show="vm.primerPaso.mostrarMsje.confirmNewPswd"><small>{{ vm.primerPaso.confirmarPasswordInvalidoMensaje }}</small></span></div><div class="form-group col-sm-4 col-md-4 col-lg-4"><politicas-seguridad password-strength="{{vm.primerPaso.newPswd}}"></politicas-seguridad></div></div><div class="row" ng-show="vm.changeErrorExistParam"><div class="form-group col-sm-12 col-md-12 col-lg-12"><span class="invalid"><small id="changeErrorMessage">{{vm.showChangeErrorParam}}</small></span></div></div><div class="bch-mensaje-empresas error" ng-if="vm.error"><article>{{vm.errorMensaje}}</article></div></article></section><input id="changePswd" class="margin-top5" maxlength="50" name="changePswd" value="true" style="width:200px" type="hidden"><div class="text-right col-sm-12 col-md-12 col-lg-12"></div><div class="text-right col-sm-12 col-md-12 col-lg-12"><button type="button" class="btn success pull-right" ladda="vm.primerPaso.ladda" ng-disabled="!postForm.$valid || (postForm.$valid && vm.sendingPost)" data-style="expand-right" ng-click="vm.submit()">Aceptar</button> &nbsp;&nbsp; <button style="margin-right: 10px" type="button" class="btn neutro border pull-right" ladda="vm.primerPaso.ladda" data-style="expand-right" ng-click="vm.cancelar()">Cancelar</button></div></form></div></div><div class="col-sm-3 col-md-3 col-lg-3 col-sm-offset-1 col-md-offset-1col-lg-offset-1"><politicas-seguridad-recuadro password-strength="{{vm.primerPaso.newPswd}}" portal="Personas" preguntas-seguridad="true"></div></section>')
	}]), angular.module("comprobantes/src/directive/templates/comprobante-base.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("comprobantes/src/directive/templates/comprobante-base.tpl.html", '<!--Inicio Mensaje exito/error--><div class="bch-mensaje-empresas {{comprobante.data.header.status}} hidden-print" ng-if="comprobante.data.header.status"><article><b ng-bind="comprobante.data.header.boldMsg"></b> {{comprobante.data.header.msg}} </article></div><!--Inicio Comprobante--><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 comprobante-tef-personas" ng-if="comprobante.data.header.status==\'success\' || (comprobante.data.header.status==\'warning\' && comprobante.mostrarEnWarning())"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><div class="row titulos"><div class="col-lg-4 col-md-4 col-sm-4 col-xs-4"><p ng-bind="comprobante.data.header.title"></p></div><div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">&nbsp;</div></div><div class="row"><div class="col-lg-4 col-md-4 col-sm-4 col-xs-4"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 caja-datos-comprobante-tef-personas"><div ng-repeat="item in comprobante.data.rows[0].subRows[0].columns[0].content"><div class="col-lg-12 col-md-12 col-sm-12" ng-class="{\'titulo-dato\':$index>0}"><b ng-bind="item.title"></b></div><div class="col-lg-12 col-md-12 col-sm-12" ng-bind="item.value"></div></div></div></div><div class="col-lg-4 col-md-4 col-sm-4 col-xs-4"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 caja-datos-comprobante-tef-personas"><div ng-repeat="item in comprobante.data.rows[0].subRows[0].columns[1].content"><div class="col-lg-12 col-md-12 col-sm-12" ng-class="{\'titulo-dato\':$index>0}"><b ng-bind="item.title"></b></div><div class="col-lg-12 col-md-12 col-sm-12" ng-bind="item.value"></div></div></div></div><div class="col-lg-4 col-md-4 col-sm-4 col-xs-4"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 caja-datos-comprobante-tef-personas adicionales"><div class="col-lg-8 col-md-8 col-sm-8"><b>{{comprobante.data.header.title1}}</b></div><div class="col-lg-8 col-md-8 col-sm-8"> {{comprobante.data.header.value1}} </div><div class="col-lg-8 col-md-8 col-sm-8">&nbsp;</div><div class="col-lg-8 col-md-8 col-sm-8">&nbsp;</div><div class="col-lg-8 col-md-8 col-sm-8 titulo-dato">&nbsp;</div><div class="col-lg-8 col-md-8 col-sm-8"><b>{{comprobante.data.header.title2}}</b></div><div class="col-lg-8 col-md-8 col-sm-8"> {{comprobante.data.header.value2}} </div><div class="col-lg-8 col-md-8 col-sm-8">&nbsp;</div><div class="col-lg-8 col-md-8 col-sm-8">&nbsp;</div><img ng-if="comprobante.codPortal === \'BCH\' || comprobante.banca === \'BCH\'" class="timbre" src="assets/images/timbre-bch.png" width="98" height="98" alt=""> <img ng-if="comprobante.codPortal === \'CCH\' ||Â comprobante.banca === \'CCH\'" class="timbre" src="assets/images/timbre-cch.png" width="98" height="98" alt=""> <img ng-if="comprobante.codPortal === \'BEC\' ||Â comprobante.banca === \'BEC\'" class="timbre" src="assets/images/timbre-bec.png" width="98" height="98" alt=""></div></div></div></div></div><div class="comprobante-portal" ng-if="comprobante.data.header.status==\'success\' && comprobante.data.header.urlDescarga"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 acciones-comprobante" ng-hide="comprobante.hideUrlDescarga"><a href="{{comprobante.data.header.urlDescarga}}" target="_blank"><i class="ion-ios-download-outline"></i> Descargar Comprobante</a></div><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 acciones-comprobante" ng-show="comprobante.hideDescargas"><a ng-repeat="descarga in comprobante.data.header.descargas" href="{{descarga.urlDescarga}}" target="_blank"><i class="ion-ios-download-outline"></i> {{descarga.etiqueta}} </a></div></div><div class="clear"></div>');
	}]), angular.module("comprobantes/src/directive/templates/comprobante-compuesto.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("comprobantes/src/directive/templates/comprobante-compuesto.tpl.html", '<!--Inicio Mensaje exito/error--><div class="bch-mensaje-empresas {{comprobante.data.header.status}} hidden-print" ng-if="comprobante.data.header.status"><article><b ng-bind-html="comprobante.data.header.boldMsg | bypass" ng-if="comprobante.data.header.boldMsg"></b><br ng-if="comprobante.data.header.boldMsg"> {{comprobante.data.header.msg}} </article></div><!--Inicio Comprobante--><div class="comprobante-portal" ng-if="comprobante.data.header.status==\'success\' || (comprobante.data.header.status==\'warning\' && comprobante.mostrarEnWarning())"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 neutro cont-comprobante"><div class="row num-comprobante" ng-hide="comprobante.data.header.codigoTransaccion==\'\'"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><p><b ng-bind="comprobante.data.header.labelCodigo?comprobante.data.header.labelCodigo:\'NÂ°\'"></b> {{comprobante.data.header.codigoTransaccion}}</p></div></div><div class="row"><header class="col-lg-12 col-md-12 col-sm-12"><div class="row"><div class="datos mb-20" ng-class="{\'col-lg-6 col-md-6 col-sm-6 col-xs-6\': comprobante.data.header.montoTitle || comprobante.data.header.monto, \'col-lg-9 col-md-9 col-sm-9 col-xs-9\': !comprobante.data.header.montoTitle || !comprobante.data.header.monto}"><h2 ng-bind="comprobante.data.header.title"></h2><h6 ng-bind="comprobante.data.header.fecha + \' - \' + comprobante.data.header.hora + \' Hrs.\'"></h6></div><div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 datos" ng-if="comprobante.data.header.montoTitle || comprobante.data.header.monto"><h6 class="text-regular">{{comprobante.data.header.montoTitle}}</h6><h2 class="text-regular word-break">{{comprobante.data.header.monto}}</h2></div><div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 timbre text-right" ng-if="comprobante.setTimbre(comprobante.data.header.timbre)==\'default\'"><img ng-if="comprobante.codPortal === \'BCH\' || comprobante.banca === \'BCH\'" src="assets/images/timbre-bch.png" height="97" width="97"> <img ng-if="comprobante.codPortal === \'CCH\' || comprobante.banca === \'CCH\'" src="assets/images/timbre-cch.png" height="97" width="97"> <img ng-if="comprobante.codPortal === \'BEC\' ||Â comprobante.banca === \'BEC\'" src="assets/images/timbre-bec.png" height="97" width="97"></div><div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 timbre text-right" ng-if="comprobante.setTimbre(comprobante.data.header.timbre)==\'custom\'"><img ng-if="comprobante.codPortal === \'BCH\' || comprobante.banca === \'BCH\'|| comprobante.codPortal === \'CCH\' ||Â comprobante.banca === \'CCH\'" ng-src="assets/images/timbre-{{comprobante.data.header.timbre}}.png" height="100%" width="100%"> <img ng-if="comprobante.codPortal === \'BEC\' ||Â comprobante.banca === \'BEC\'" ng-src="assets/images/timbre-banchile-edwards.png" height="100%" width="100%"></div></div></header></div><div ng-repeat="row in comprobante.data.rows" ng-class="{\'extendido\':row.subRows.length>1 || row.subRows[0].columns[0].content[0].values || row.subRows[0].columns.length==3 || ($index>0 && row.subRows[0].columns.length>2)}" class="row container-columna"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 detalle" ng-repeat="subRow in row.subRows"><div class="col-lg-6 col-md-6 col-sm-6 col-xs-6" ng-repeat="column in subRow.columns" ng-if="column.title"><h5 ng-bind="column.title"></h5></div><!-- diseÃ±o para 1 columna --><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 default listado-unico" ng-if="subRow.columns.length==1"><div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 columna" ng-repeat="column in subRow.columns"><div class="linea-dato" ng-repeat="item in column.content"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><p class="text-regular" ng-bind="item.title"></p><h6 ng-bind="value" ng-repeat="value in item.values"></h6></div></div></div></div><!-- diseÃ±o para 2 columnas --><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 default" ng-if="subRow.columns.length==2"><div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 columna" ng-repeat="column in subRow.columns"><div class="linea-dato" ng-repeat="item in column.content"><div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 clear-left"><p class="text-regular" ng-bind="item.title"></p></div><div class="col-lg-6 col-md-6 col-sm-6 col-xs-6"><h6 ng-bind="item.value"></h6></div></div></div></div><!-- diseÃ±o para 3 columnas --><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 default listado-extendido tres-columnas" ng-if="subRow.columns.length==3"><div class="col-lg-4 col-md-4 col-sm-4 col-xs-4 columna" ng-repeat="column in subRow.columns"><div class="linea-dato" ng-repeat="item in column.content"><p class="text-regular" ng-bind="item.title"></p><h6 ng-bind="item.value"></h6></div></div></div><!-- diseÃ±o para mas de 3 columnas --><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 default listado-extendido cuatro-columnas" ng-if="subRow.columns.length>3"><div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 columna" ng-repeat="column in subRow.columns"><div class="linea-dato" ng-repeat="item in column.content"><p class="text-regular" ng-bind="item.title"></p><h6 ng-bind="item.value"></h6></div></div></div></div></div><div class="row mt-15" ng-if="comprobante.data.header.msgImportanteTitle || comprobante.data.header.msgImportanteBajada"><div class="col-xs-12"><p class="mb-0">{{comprobante.data.header.msgImportanteTitle}}</p><p class="mb-0">{{comprobante.data.header.msgImportanteBajada}}</p></div></div></div><div class="col-lg-12 col-md-12 col-ls-12" ng-if="comprobante.data.header.condiciones"><br><p ng-repeat="condicion in comprobante.data.header.condiciones" class="col-lg-12 col-md-12 col-ls-12">{{ condicion}}</p></div><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 acciones-comprobante" ng-hide="comprobante.hideUrlDescarga || comprobante.isDescarga()"><a href="{{comprobante.data.header.urlDescarga}}" target="_blank"><i class="ion-ios-download-outline"></i> Descargar Comprobante</a></div><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 acciones-comprobante" ng-if="comprobante.isDescarga()"><a href="javascript:void(0);" ng-click="comprobante.descarga()"><i class="ion-ios-download-outline"></i> Descargar Comprobante</a></div><div class="bch-mensaje-empresas error" ng-if="comprobante.error"><article><b>Estimado Cliente</b><br>En este momento no es posible descargar el comprobante, por favor intenta mÃ¡s tarde.</article></div><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 acciones-comprobante" ng-hide="comprobante.hideDescargas || comprobante.isDescarga()"><a ng-repeat="descarga in comprobante.data.header.descargas" href="{{descarga.urlDescarga}}" target="_blank"><i class="ion-ios-download-outline"></i> {{descarga.etiqueta}} </a></div></div>')
	}]), angular.module("contacto-publico/src/modules/contacto/seleccion-requerimiento/calidad/calidad.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("contacto-publico/src/modules/contacto/seleccion-requerimiento/calidad/calidad.tpl.html", '<section><div class="bch-mensaje-empresas success" ng-if="vm.success"><article>Se ha ingresado su requerimiento con Ã©xito.</article></div><form name="vm.calidad" novalidate autocomplete="off" ng-if="!vm.success"><h2>Ingresa tus datos</h2><article><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Nombre <span class="text-danger">*</span></label><input type="text" name="nombre" ng-model="vm.datosCliente.nombre" ng-required="true" class="form-control" placeholder="Ingrese Nombre Completo"> <small class="invalid" ng-if="vm.calidad.nombre.$error.required && !vm.calidad.nombre.$pristine">Ingrese Nombre</small> <small class="invalid" ng-if="vm.calidad.nombre.$touched && vm.calidad.nombre.$pristine">Ingrese Nombre</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>RUT <span class="text-danger">*</span></label><input ng-rut rut-format="blur" maxlength="12" type="text" name="rut" ng-required="true" placeholder="Ingrese Rut" class="form-control" ng-model="vm.datosCliente.rut" delete-zero-left> <small class="invalid" ng-if="vm.calidad.rut.$error.required && !vm.calidad.rut.$pristine">Ingrese Rut</small> <small class="invalid" ng-if="vm.calidad.rut.$error.rut && !vm.calidad.rut.$error.required && !vm.calidad.rut.$pristine">Rut invÃ¡lido</small> <small class="invalid" ng-if="vm.calidad.rut.$error.maxlength && !vm.calidad.rut.$pristine">Rut invÃ¡lido</small> <small class="invalid" ng-if="vm.calidad.rut.$touched && vm.calidad.rut.$pristine">Ingrese rut</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Email <span class="text-danger">*</span></label><input name="email" type="email" ng-model="vm.datosCliente.email" class="form-control" maxlength="40" ng-minlength="6" ng-required="true" placeholder="correo@correo.com" ng-pattern="/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,15}(?:\\.[a-z]{2})?)$/i"> <small class="invalid" ng-if="(vm.calidad.email.$error.minlength || vm.calidad.email.$error.pattern) && !vm.calidad.email.$pristine">Correo invÃ¡lido</small> <small class="invalid" ng-if="vm.calidad.email.$error.required && !vm.calidad.email.$pristine">Ingrese Correo</small> <small class="invalid" ng-if="vm.calidad.email.$touched && vm.calidad.email.$pristine">Ingrese Correo</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>TelÃ©fono Celular <span class="text-danger">*</span></label><div class="row preNumRow"><div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 preNum pl-0 pr-0"><span>+56 9</span></div><div class="col-xs-10 col-sm-11 col-md-11 col-lg-11 pr-0"><input name="celular" type="text" class="form-control" ng-model="vm.datosCliente.celular" ng-required="true" numbers-only maxlength="8" ng-minlength="7" placeholder="73214567"></div></div><small class="invalid" ng-if="vm.calidad.celular.$error.minlength && !vm.calidad.celular.$error.required && !vm.calidad.celular.$pristine">TelÃ©fono celular invÃ¡lido</small> <small class="invalid" ng-if="vm.calidad.celular.$error.required && !vm.calidad.celular.$pristine">Ingrese TelÃ©fono Celular</small> <small class="invalid" ng-if="vm.calidad.celular.$touched && vm.calidad.celular.$pristine">Ingrese TelÃ©fono Celular</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>TelÃ©fono Fijo</label><div class="row preNumRow"><div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 preNum pl-0 pr-0"><span>+56 2</span></div><div class="col-xs-10 col-sm-11 col-md-11 col-lg-11 pr-0"><input name="telefono" type="text" class="form-control" ng-model="vm.datosCliente.telefono" numbers-only maxlength="8" ng-minlength="7" placeholder="21234567"></div></div><small class="invalid" ng-if="vm.calidad.telefono.$error.minlength && !vm.calidad.telefono.$error.required && !vm.calidad.telefono.$pristine">TelÃ©fono fijo invÃ¡lido</small></div></div><h2>Selecciona tu sugerencia o felicitaciÃ³n</h2><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Calidad de atenciÃ³n / sugerencias</label><ui-select name="tipoContacto" ng-model="vm.tipo" ng-change="vm.subtipo=null" ng-required="true"><ui-select-match placeholder="Seleccione"><span ng-bind="$select.selected.descripcion"></span></ui-select-match><ui-select-choices repeat="consulta in vm.tipos"><span ng-bind="consulta.descripcion"></span></ui-select-choices></ui-select></div><small class="invalid" ng-if="vm.calidad.tipoContacto.$error.required && !vm.calidad.tipoContacto.$pristine">Seleccione clasificaciÃ³n</small></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Seleccione servicio</label><ui-select name="producto" ng-disabled="!vm.tipo" ng-model="vm.subtipo" ng-required="true"><ui-select-match placeholder="Seleccione"><span ng-bind="$select.selected.descripcion"></span></ui-select-match><ui-select-choices repeat="producto in vm.tipo.subtipos"><span ng-bind="producto.descripcion"></span></ui-select-choices></ui-select></div><small class="invalid" ng-if="vm.calidad.producto.$error.required && !vm.calidad.producto.$pristine">Seleccione servicio</small></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Asunto</label><textarea class="form-control" cols="10" rows="6" ng-model="vm.comentario" maxlength="350" disabled="disabled" ng-disabled="!vm.subtipo"></textarea><span class="pull-right px-14 mt-5"><span ng-class="{\'text-danger\': vm.comentario.length >= 340}">{{vm.comentario.length}}</span>/ <span ng-class="{\'text-danger\': vm.comentario.length == 350}">350</span></span></div></div><!--  --><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><!-- Inicio captcha --><no-captcha g-recaptcha-response="vm.captcha.gRecaptchaResponse" control="vm.captcha.resetCaptchaReset" expired-callback="vm.captcha.expiredCatcha"></no-captcha><small class="invalid" ng-if="vm.captcha.isErrorMsgCaptchaActive">Validar captcha</small><!-- Fin captcha --></div></div></article><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7 justify-end"><button type="button" class="btn neutro">Cancelar</button> <button type="button" class="btn success" ng-disabled="vm.calidad.$invalid || vm.captcha.gRecaptchaResponse === \'\' || vm.captcha.gRecaptchaResponse == null || vm.deactivate" ng-click="vm.enviar()">Enviar</button></div></div></form></section>')
	}]), angular.module("contacto-publico/src/modules/contacto/seleccion-requerimiento/contacto/contacto.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("contacto-publico/src/modules/contacto/seleccion-requerimiento/contacto/contacto.tpl.html", '<section><div class="bch-mensaje-empresas success" ng-if="vm.success"><article>Se ha ingresado su requerimiento con Ã©xito.</article></div><form name="vm.contacto" novalidate autocomplete="off" ng-if="!vm.success"><h2>Ingresa tus datos</h2><article><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Nombre <span class="text-danger">*</span></label><input type="text" name="nombre" ng-model="vm.datosCliente.nombre" ng-required="true" class="form-control" placeholder="Ingrese Nombre Completo"> <small class="invalid" ng-if="vm.contacto.nombre.$error.required && !vm.contacto.nombre.$pristine">Ingrese Nombre</small> <small class="invalid" ng-if="vm.contacto.nombre.$touched && vm.contacto.nombre.$pristine">Ingrese Nombre</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>RUT <span class="text-danger">*</span></label><input ng-rut rut-format="blur" maxlength="12" type="text" name="rut" ng-required="true" placeholder="Ingrese Rut" class="form-control" ng-model="vm.datosCliente.rut" delete-zero-left> <small class="invalid" ng-if="vm.contacto.rut.$error.required && !vm.contacto.rut.$pristine">Ingrese Rut</small> <small class="invalid" ng-if="vm.contacto.rut.$touched && vm.contacto.rut.$pristine">Ingrese rut</small> <small class="invalid" ng-if="vm.contacto.rut.$error.rut && !vm.contacto.rut.$error.required && !vm.contacto.rut.$pristine">Rut no vÃ¡lido</small> <small class="invalid" ng-if="vm.contacto.rut.$error.maxlength && !vm.contacto.rut.$pristine">Rut invÃ¡lido</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Email <span class="text-danger">*</span></label><input name="email" type="email" ng-model="vm.datosCliente.email" class="form-control" maxlength="40" ng-minlength="6" ng-required="true" placeholder="correo@correo.com" ng-pattern="/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,15}(?:\\.[a-z]{2})?)$/i"> <small class="invalid" ng-if="(vm.contacto.email.$error.minlength || vm.contacto.email.$error.pattern) && !vm.contacto.email.$pristine">Correo invÃ¡lido</small> <small class="invalid" ng-if="vm.contacto.email.$error.required && !vm.contacto.email.$pristine">Ingrese Correo</small> <small class="invalid" ng-if="vm.contacto.email.$touched && vm.contacto.email.$pristine">Ingrese Correo</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>TelÃ©fono Celular <span class="text-danger">*</span></label><div class="row preNumRow"><div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 preNum pl-0 pr-0"><span>+56 9</span></div><div class="col-xs-10 col-sm-11 col-md-11 col-lg-11 pr-0"><input name="celular" type="text" class="form-control" numbers-only ng-model="vm.datosCliente.celular" ng-required="true" maxlength="8" ng-minlength="7" placeholder="73214567"></div></div><small class="invalid" ng-if="vm.contacto.celular.$error.required && !vm.contacto.celular.$pristine">Ingrese TelÃ©fono Celular</small> <small class="invalid" ng-if="vm.contacto.celular.$error.minlength && !vm.contacto.celular.$error.required && !vm.contacto.celular.$pristine">TelÃ©fono celular invÃ¡lido</small> <small class="invalid" ng-if="vm.contacto.celular.$touched && vm.contacto.celular.$pristine">Ingrese TelÃ©fono Celular</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>TelÃ©fono Fijo</label><div class="row preNumRow"><div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 preNum pl-0 pr-0"><span>+56 2</span></div><div class="col-xs-10 col-sm-11 col-md-11 col-lg-11 pr-0"><input name="telefono" type="text" class="form-control" numbers-only ng-model="vm.datosCliente.telefono" maxlength="8" ng-minlength="7" placeholder="21234567"></div></div><small class="invalid" ng-if="vm.contacto.telefono.$error.minlength && !vm.contacto.telefono.$error.required && !vm.contacto.telefono.$pristine">TelÃ©fono fijo invÃ¡lido</small></div></div><h2>Selecciona tu tipo de solicitud / contacto</h2><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Seleccione tipo de contacto</label><ui-select name="solicitud" ng-model="vm.tipo" ng-change="vm.subtipo=vm.tipo.subtipos[0]" ng-required="true"><ui-select-match placeholder="Seleccione"><span ng-bind="$select.selected.descripcion"></span></ui-select-match><ui-select-choices repeat="solicitud in vm.tipos"><span ng-bind="solicitud.descripcion"></span></ui-select-choices></ui-select></div><small class="invalid" ng-if="vm.contacto.solicitud.$error.required && !vm.contacto.solicitud.$pristine">Seleccione tipo de contacto</small></div><!-- Si selecciona Producto --><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Seleccione producto</label><ui-select name="producto" ng-model="vm.categoria" ng-disabled="!vm.subtipo" ng-required="true"><ui-select-match placeholder="Seleccione"><span ng-bind="$select.selected.descripcion"></span></ui-select-match><ui-select-choices repeat="producto in vm.subtipo.categorias"><span ng-bind="producto.descripcion"></span></ui-select-choices></ui-select></div><small class="invalid" ng-if="vm.contacto.producto.$error.required && !vm.contacto.producto.$pristine">Seleccione producto</small></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Asunto</label><textarea class="form-control" cols="10" rows="6" ng-model="vm.comentario" maxlength="350" disabled="disabled" ng-disabled="!vm.categoria"></textarea><span class="pull-right px-14 mt-5"><span ng-class="{\'text-danger\': vm.comentario.length >= 340}">{{vm.comentario.length}}</span>/ <span ng-class="{\'text-danger\': vm.comentario.length == 350}">350</span></span></div></div><!--  --><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><!-- Inicio captcha --><no-captcha g-recaptcha-response="vm.captcha.gRecaptchaResponse" control="vm.captcha.resetCaptchaReset" expired-callback="vm.captcha.expiredCatcha"></no-captcha><small class="invalid" ng-if="vm.captcha.isErrorMsgCaptchaActive">Validar captcha</small><!-- Fin captcha --></div></div></article><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7 justify-end"><button type="button" class="btn neutro">Cancelar</button> <button type="button" class="btn success" ng-click="vm.enviar()" ng-disabled="vm.contacto.$invalid || vm.captcha.gRecaptchaResponse === \'\' || vm.captcha.gRecaptchaResponse == null || vm.deactivate">Enviar</button></div></div></form></section>')
	}]), angular.module("contacto-publico/src/modules/contacto/seleccion-requerimiento/problema/problema.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("contacto-publico/src/modules/contacto/seleccion-requerimiento/problema/problema.tpl.html", '<section><div class="bch-mensaje-empresas success" ng-if="vm.success"><article>Se ha ingresado su requerimiento con Ã©xito.</article></div><form name="vm.problema" novalidate autocomplete="off" ng-if="!vm.success"><h2>Ingresa tus datos</h2><article><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Nombre <span class="text-danger">*</span></label><input type="text" name="nombre" ng-model="vm.datosCliente.nombre" ng-required="true" ng-change="vm.valida()" class="form-control" placeholder="Ingrese Nombre Completo"> <small class="invalid" ng-if="vm.problema.nombre.$error.required && !vm.problema.nombre.$pristine">Ingrese Nombre</small> <small class="invalid" ng-if="vm.problema.nombre.$touched && vm.problema.nombre.$pristine">Ingrese Nombre</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>RUT <span class="text-danger">*</span></label><input ng-rut rut-format="blur" maxlength="12" type="text" name="rut" ng-required="true" placeholder="Ingrese Rut" class="form-control" ng-model="vm.datosCliente.rut" delete-zero-left> <small class="invalid" ng-if="vm.problema.rut.$error.required && !vm.problema.rut.$pristine">Ingrese Rut</small> <small class="invalid" ng-if="vm.problema.rut.$touched && vm.problema.rut.$pristine">Ingrese rut</small> <small class="invalid" ng-if="vm.problema.rut.$error.rut && !vm.problema.rut.$error.required && !vm.problema.rut.$pristine">Rut invÃ¡lido</small> <small class="invalid" ng-if="vm.problema.rut.$error.maxlength && !vm.problema.rut.$pristine">Rut invÃ¡lido</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Email <span class="text-danger">*</span></label><input name="email" type="email" ng-model="vm.datosCliente.email" class="form-control" maxlength="40" ng-minlength="6" ng-required="true" placeholder="correo@correo.com" ng-pattern="/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,15}(?:\\.[a-z]{2})?)$/i"> <small class="invalid" ng-if="(vm.problema.email.$error.minlength || vm.problema.email.$error.pattern) && !vm.problema.email.$pristine">Correo invÃ¡lido</small> <small class="invalid" ng-if="vm.problema.email.$error.required && !vm.problema.email.$pristine">Ingrese Correo</small> <small class="invalid" ng-if="vm.problema.email.$touched && vm.problema.email.$pristine">Ingrese Correo</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>TelÃ©fono Celular <span class="text-danger">*</span></label><div class="row preNumRow"><div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 preNum pl-0 pr-0"><span>+56 9</span></div><div class="col-xs-10 col-sm-11 col-md-11 col-lg-11 pr-0"><input name="celular" type="text" class="form-control" numbers-only ng-model="vm.datosCliente.celular" maxlength="8" ng-minlength="7" ng-required="true" placeholder="73214567"></div></div><small class="invalid" ng-if="vm.problema.celular.$error.required && !vm.problema.celular.$pristine">Ingrese TelÃ©fono Celular</small> <small class="invalid" ng-if="vm.problema.celular.$touched && vm.problema.celular.$pristine">Ingrese TelÃ©fono Celular</small> <small class="invalid" ng-if="vm.problema.celular.$error.minlength && !vm.problema.celular.$error.required && !vm.problema.celular.$pristine">TelÃ©fono celular invÃ¡lido</small></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>TelÃ©fono Fijo</label><div class="row preNumRow"><div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 preNum pl-0 pr-0"><span>+56 2</span></div><div class="col-xs-10 col-sm-11 col-md-11 col-lg-11 pr-0"><input name="telefono" type="text" class="form-control" numbers-only ng-model="vm.datosCliente.telefono" maxlength="8" ng-minlength="7" placeholder="21234567"></div></div><small class="invalid" ng-if="vm.problema.telefono.$error.minlength && !vm.problema.telefono.$error.required && !vm.problema.telefono.$pristine">TelÃ©fono fijo invÃ¡lido</small></div></div></article><h2>Selecciona tu tipo de problema / consulta</h2><article><div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Producto</label><textarea class="form-control" cols="10" rows="6" ng-model="vm.producto" maxlength="50"></textarea><span class="pull-right px-14 mt-5"><span ng-class="{\'text-danger\': vm.producto.length >= 40}">{{vm.producto.length}}</span>/ <span ng-class="{\'text-danger\': vm.producto.length == 50}">50</span></span></div></div><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><label>Problema / Consulta</label><textarea class="form-control" cols="10" rows="6" ng-model="vm.comentario" maxlength="350" disabled="disabled" ng-disabled="vm.producto === \'\'"></textarea><span class="pull-right px-14 mt-5"><span ng-class="{\'text-danger\': vm.comentario.length >= 340}">{{vm.comentario.length}}</span>/ <span ng-class="{\'text-danger\': vm.comentario.length == 350}">350</span></span></div></div><!--  --><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7"><!-- Inicio captcha --><no-captcha g-recaptcha-response="vm.captcha.gRecaptchaResponse" control="vm.captcha.resetCaptchaReset" expired-callback="vm.captcha.expiredCatcha"></no-captcha><small class="invalid" ng-if="vm.captcha.isErrorMsgCaptchaActive">Validar captcha</small><!-- <small class="invalid" ng-if="vm..captcha.msjCaptcha!==\'\'">Captcha invÃ¡lido</small> --><!-- Fin captcha --></div></div></div></article><div class="row"><div class="form-group col-xs-10 col-sm-9 col-md-7 col-lg-7 justify-end"><button type="button" class="btn neutro" href="http://ww3.bancochile.cl/wps/wcm/connect/Personas/Portal/Inicio">Cancelar</button> <button type="button" class="btn success" ng-click="vm.enviar()" ng-disabled="vm.problema.$invalid || vm.captcha.gRecaptchaResponse === \'\' || vm.captcha.gRecaptchaResponse == null || vm.deactivate">Enviar</button></div></div></form></section>')
	}]), angular.module("contacto-publico/src/modules/contacto/seleccion-requerimiento/seleccionTipoRequerimiento.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("contacto-publico/src/modules/contacto/seleccion-requerimiento/seleccionTipoRequerimiento.tpl.html", '<section class="view-sugerencias-reclamos"><div class="bch-mensaje-empresas information"><article><h5>Si eres cliente banca en lÃ­nea persona, ingresa a tu portal privado, secciÃ³n <b>Centro de ayuda y Ejecutivo/EscrÃ­benos</b>, para enviarte en forma mÃ¡s Ã¡gil lo solicitado</h5></article></div><!-- INICIO Tabs y Subtabs --><section><div class="bch-empresas-tabs"><tabset class="hidden-xs"><tab heading="Consultas, sugerencias y felicitaciones" ui-sref="seleccion-requerimiento-calidad" active="vm.calidad"></tab><tab heading="Solicitud / contacto" ui-sref="seleccion-requerimiento-contacto" active="vm.contacto"></tab></tabset><!-- INICIO MenÃº Lateral --><div class="bch-empresas-acordeon bch-acordeon-active bch-list-menu-acco col-lg-4 mb-10 padd-none hidden-sm hidden-md hidden-lg mobileBtns"><accordion close-others="oneAtATime"><accordion-group is-open="status.openM"><accordion-heading><div ng-class="{\'active\': status.openM}">Requerimiento</div></accordion-heading><div class="submenu-acco"><ul><li class="estado-success"><a ui-sref="seleccion-requerimiento-problema" class="btn-link">Problemas y consultas</a></li><li class="estado-info"><a ui-sref="seleccion-requerimiento-calidad" class="btn-link">Sugerencias y felicitaciones</a></li><li class="estado-danger"><a ui-sref="seleccion-requerimiento-contacto" class="btn-link">Solicitud / contacto</a></li></ul></div></accordion-group></accordion></div><!-- FIN MenÃº Lateral --><div ui-view></div></div></section><!-- FIN Tabs y Subtabs --></section>')
	}]), angular.module("contacto-publico/src/modules/contacto/seleccionRequerimiento.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("contacto-publico/src/modules/contacto/seleccionRequerimiento.tpl.html", '<section class="view-sugerencias-reclamos-prev"><div class="bch-mensaje-empresas success" ng-if="vm.success"><article>Se ha ingresado su requerimiento con Ã©xito.</article></div><div class="col-xs-12 col-sm-8 col-md-7 col-lg-7" ng-if="!vm.success"><h1>Elige tu tipo de contacto</h1><section><div class="row contactTypeWrapper pl-20"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><div class="row contactItem flex-center"><a ui-sref="seleccion-requerimiento({state: \'seleccion-requerimiento-calidad\', tabActive: \'calidad\', cliente: vm.cliente})"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><div class="row"><div class="col-xs-2 min-height-64 flex-center justify-center"><i class="bch-q1-derechoClienteBancario2 text-color-4 px-60"></i></div><div class="col-xs-8"><div class="row"><div class="col-xs-12"><h5 class="text-color-4">Consultas, Sugerencias y Felicitaciones</h5></div></div><div class="row"><div class="col-xs-12"><p class="px-14 mb-0">Â¿QuÃ© tal ha sido tu experiencia con nuestra atenciÃ³n y servicios?</p></div></div></div><div class="col-xs-2 min-height-64 flex-center justify-center"><div class=""><i class="ion-android-arrow-forward px-30 text-color-6"></i></div></div></div></div></a></div><div class="row contactItem flex-center"><a ui-sref="seleccion-requerimiento({state: \'seleccion-requerimiento-contacto\', tabActive: \'contacto\', cliente: vm.cliente})"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><div class="row"><div class="col-xs-2 min-height-58 flex-center justify-center"><i class="bch-q1-telefonista text-color-4 px-60"></i></div><div class="col-xs-8"><div class="row"><div class="col-xs-12"><h5 class="text-color-4">Solicitud</h5></div></div><div class="row"><div class="col-xs-12"><p class="px-14 mb-0">Â¿Requieres algÃºn producto, servicio o contacto?</p></div></div></div><div class="col-xs-2 min-height-58 flex-center justify-center"><div class=""><i class="ion-android-arrow-forward px-30 text-color-6"></i></div></div></div></div></a></div></div></div></section></div></section>')
	}]), angular.module("dap-publico/src/dap-publico/tabs/dap-publico-tabs.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("dap-publico/src/dap-publico/tabs/dap-publico-tabs.tpl.html", '<div class="spinner" ng-if="tabs.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><section class="container" ng-hide="tabs.loading"><h1>Front Base</h1><div class="bch-empresas-tabs"><tabset><!-- <pre>{{tabs.estado | json}}</pre> --><!-- TODO ng-if="tabs.permisos.consultar" --><tab heading="Hello World" active="tabs.state.helloWorld" ng-if="tabs.permissions.helloWorld" ui-sref="dap-publico-hello-world"><tab heading="Usuarios" active="tabs.state.users" ng-if="tabs.permissions.users" ui-sref="dap-publico-users"><tab heading="Formulario con etapas" active="tabs.state.transactionSteps" ng-if="tabs.permissions.transactionSteps" ui-sref="dap-publico-transaction-steps"></tabset><div ui-view></div></div></section>')
	}]), angular.module("dap-publico/src/dap-publico/tabs/simular/simuladordap.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("dap-publico/src/dap-publico/tabs/simular/simuladordap.tpl.html", '<section class="simulador-dap"><section class="container"><div class="row"><div class="col-xs-12 intro"><h1 class="text-light">Simulador de DepÃ³sito a Plazo</h1></div></div><div class="row"><div class="col-xs-12"><hr></div></div><div class="row"><div class="col-xs-12"><section class="steps"><article class="step" ng-class="{\'done\':dap.stepCompleted(1)}" data-step="1"><form name="dap.step1" novalidate autocomplete="off"><h3>CaracterÃ­sticas del DepÃ³sito</h3><div class="row"><div class="col-xs-12 col-md-8"><div class="row"><div class="col-xs-12"><h4 class="text-color-thin-blue mb-15">Tipo de DepÃ³sito</h4></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-8 form-group mb-15"><label class="bch-custom-check radiobutton"><div><input type="radio" name="deposito" value="fijo" ng-model="dap.tipoDeposito" ng-click="dap.setOpcionesPlazo()"> <i></i></div><span class="text-light mb-10">DepÃ³sito a Plazo Fijo</span><ul class="list-unstyled"><li><p class="text-light text-justify ml-25 mt-5">Invierte en una alternativa de bajo riesgo, y al plazo que se ajuste a tus necesidades. Al vencimiento recibirÃ¡s siempre el monto de tu inversiÃ³n mÃ¡s intereses, que previamente ya son conocidos.</p></li></ul></label></div></div><div class="row"><div class="col-xs-12 col-md-8 form-group mb-5"><label class="bch-custom-check radiobutton"><div><input type="radio" name="deposito" value="indefinido" ng-model="dap.tipoDeposito" ng-click="dap.setOpcionesPlazo()"> <i></i></div><span class="text-light mb-10">DepÃ³sito Renovable Indefinido</span><ul class="list-unstyled"><li><p class="text-light text-justify ml-25 mt-5">Tu inversiÃ³n se renueva automÃ¡ticamente, sin perder ni un sÃ³lo dÃ­a de interÃ©s. Al vencimiento del periodo que elijas, en caso que lo necesites, podrÃ¡s rescatar parte o la totalidad del dinero durante los 3 dÃ­as hÃ¡biles siguientes al vencimiento.</p></li></ul></label></div></div><div class="row mt-20" ng-class="{\'content-disabled\':dap.tipoDepositoIsNotSelected}"><div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 form-group mb-10"><label class="text-light">Monto a Invertir en Pesos</label><input class="form-control" currency-type="$" fraction-size="0" maxlength="12" min="50000" name="monto" ng-change="dap.cleanSimulacion()" ng-currency ng-maxlength="12" ng-minlength="5" ng-model="dap.simulacion.monto" ng-required="true" placeholder="Valor desde $50.000" onkeypress="if (event.keyCode === 46 ) event.returnValue = false" type="text"><div ng-show="dap.step1.monto.$dirty || dap.step1.monto.$touched"><small class="invalid display-block text-light" ng-show="dap.step1.monto.$error.min && !(dap.step1.monto.$error.invalid || dap.step1.monto.$error.required)">Monto no debe ser inferior a $50.000. </small><small class="invalid display-block text-light" ng-show="dap.step1.monto.$error.invalid || dap.step1.monto.$error.required">Debe ingresar un monto.</small></div></div><div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 form-group"><label class="text-light">Plazo (en dÃ­as)</label><ui-select name="plazoSelected" ng-change="dap.cleanSimulacion()" ng-click="$select.search = \'\'" ng-model="dap.plazoSelected" required="true"><ui-select-match placeholder="Seleccione..."> {{$select.selected}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="plazo in dap.plazos"> {{ plazo }} </ui-select-choices></ui-select><div ng-show="(dap.step1.plazoSelected.$dirty || dap.step1.plazoSelected.$touched)"><small class="invalid display-block text-light" ng-show="dap.step1.plazoSelected.$error.$invalid || dap.step1.plazoSelected.$error.required">Debe seleccionar un plazo.</small></div></div><div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 form-group mb-10" ng-if="dap.plazoSelected === \'Otro\' && dap.tipoDeposito === \'fijo\'"><label class="text-light">Otro Plazo</label><input class="form-control ng-invalid" currency-type="\'\'" fraction-size="0" max="89" maxlength="3" min="7" name="otroPlazo" ng-change="dap.cleanSimulacion()" ng-currency ng-model="dap.otroPlazo" placeholder="Ingrese valor desde 7 a 89 dÃ­as" required="dap.plazoSelected === \'Otro\'" type="text"><div ng-show="(dap.step1.otroPlazo.$dirty || dap.step1.otroPlazo.$touched) && dap.tipoDeposito !== \'indefinido\'"><small class="invalid display-block text-light" ng-show="(dap.step1.otroPlazo.$error.min || dap.step1.otroPlazo.$error.max) && !(dap.step1.otroPlazo.$error.invalid || dap.step1.otroPlazo.$error.required)">Valor debe ser entre 7 y 89 dÃ­as. </small><small class="invalid display-block text-light" ng-show="dap.step1.otroPlazo.$error.invalid || dap.step1.otroPlazo.$error.required">Debe ingresar un plazo.</small></div></div></div><div class="row mt-20" ng-if="!dap.tipoDepositoIsNotSelected"><div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 form-group mb-10"><re-captcha control="dap.captchaReload" expired-callback="dap.captchaCallback" g-recaptcha-response="dap.captchaResponse"></re-captcha></div></div><div class="row"><div class="col-xs-12"><div class="bch-mensaje-empresas {{dap.error.severidad}}" ng-if="dap.error.show"><article><b>Estimado Cliente</b><br>{{dap.error.errorMessage}} </article></div></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-8 text-right"><button class="btn success" data-spinner-color="#fff" data-style="expand-right" ladda="dap.simulando" ng-click="dap.simular()" ng-disabled="dap.step1.$invalid || !dap.validacionCaptcha">Simular</button></div></div></div></div></form></article><article class="step" ng-class="{\'disabled\':dap.stepCompleted(2)}" data-step="2"><h3>Resultado de la SimulaciÃ³n</h3><div class="row"><div class="col-lg-4 col-md-4 col-sm-12 mb-15" ng-repeat="simulacion in dap.simulaciones"><!-- Caja --><div class="caja-opciones" ng-class="{\'active\': dap.isFirstOption(simulacion.index) }"><div class="caja-opciones-header"><div class="col-lg-12 col-md-12 col-sm-12"><!--<h5 ng-if="simulacion.index === 0">Su OpciÃ³n</h5> --><!-- <h5 ng-if="simulacion.index > 0">OpciÃ³n NÂ° {{ simulacion.index }}</h5> --><h5>OpciÃ³n NÂ° {{ simulacion.index + 1 }}</h5></div></div><div class="caja-opciones-body"><!-- [INICIA] HEADERS --><dl class="dl-headers"><dt class="text-light">Monto a Invertir</dt><dd class="text-light">{{ simulacion.montoDeposito | formatCurrency : \'$\' : 0 }}</dd></dl><dl class="dl-headers mb-15"><dt class="text-light">Monto a Recibir</dt><dd class="text-light">{{ simulacion.montoAlVencimiento | formatCurrency : \'$\' : 0}}</dd></dl><!-- [TERMINA] HEADERS --><dl><dt class="text-light">Tipo de DepÃ³sito</dt><dd class="text-light">{{ dap.simulacion.tipoDepositoTitle }}</dd></dl><dl><dt class="text-light">Plazo</dt><dd class="text-light">{{ simulacion.plazo }}</dd></dl><dl><dt class="text-light">Tasa base (30 dÃ­as)</dt><dd class="text-light">{{ simulacion.tasaBaseMensual.toString().replace(\'.\', \',\') }}%</dd></dl><dl><dt class="text-light">Tasa perÃ­odo</dt><dd class="text-light">{{ simulacion.tasaInteres.toString().replace(\'.\', \',\') }}%</dd></dl><dl><dt class="text-light">Ganancia</dt><dd class="text-light">{{ simulacion.montoInteres | formatCurrency : \'$\' : 0 }}</dd></dl><dl><dt class="text-light">Fecha de Vencimiento</dt><dd class="text-light">{{ simulacion.fechaVencimiento | fechaVtoDap | date : \'EEEE, d MMM y\' }}</dd></dl></div></div><!-- fin Caja --></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-4 col-lg-4"></div></div><div class="row" ng-show="dap.simulado"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-right"><a class="btn-link btn-descargar text-light" ng-click="dap.descargaSimulacion()"><i class="ion-ios-download-outline px-20 pr-5"></i> <span popover="Descargar" popover-placement="top" popover-trigger="mouseenter" popover-animation="false">Descargar SimulaciÃ³n</span></a></div></div><div class="row" ng-show="dap.simulado"><div class="col-xs-12"><div class="bch-mensaje-empresas information bch-mensaje-btn"><article><p class="text-justify width-text">Para contratar depÃ³sito a plazo debes tener registrada una ficha de inversiÃ³n, por lo cuÃ¡l dirÃ­gete a cualquiera de nuestras sucursales, o comunÃ­cate con nuestra Mesa de Ayuda llamando al 600 637 3737.</p></article><a class="btn btn-primary" href="{{dap.linkSucursales}}" target="_blank">Ver Sucursales</a></div></div></div></article></section></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-12"><hr></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-12"><p class="text-default text-light text-justify">* La presente simulaciÃ³n solo es de carÃ¡cter informativo sujeta a las condiciones comerciales vigentes al minuto de contratar el depÃ³sito a plazo.</p><p class="text-default text-light text-justify">1. Tasa de interÃ©s preferencial al contratarlo por Internet. En el caso de depÃ³sitos renovables automÃ¡ticamente esta tasa aplica sÃ³lo para el primer perÃ­odo de vigencia. La tasa de interÃ©s que regirÃ¡ respecto de las renovaciones de depÃ³sitos a plazo renovables de manera automÃ¡tica corresponderÃ¡ a la tasa de pizarra vigente en la respectiva fecha de renovaciÃ³n. La informaciÃ³n diaria de estas tasas de pizarra se encuentra disponible en lugares visibles destacados de las sucursales del Banco.</p><p class="text-default text-light text-justify">2. Para mayor seguridad los depÃ³sitos son extendidos en forma nominativa. AdemÃ¡s, consideran un monto mÃ­nimo de $50.000.</p><p class="text-default text-light text-justify">3. Banco de Chile, Banco Edwards-Citi y Banco CrediChile informan que no autorizan retiros anticipados de DepÃ³sitos a Plazo.</p></div></div></section></section>');
	}]), angular.module("directivas-tablas/src/orionTablas/directives/orionTablas.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directivas-tablas/src/orionTablas/directives/orionTablas.tpl.html", '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 mensaje-info-tabla text-default" collpase="orionTablas.collapseInfo"><!-- Mensaje cantidad maxima de elementos --><p class="text-bold mb-10" ng-if="cantidadSeleccionados > cantidadMinimaColumnas">Las tablas muestran hasta un mÃ¡ximo de {{cantidadMaximaColumnas}} columnas</p><p class="mb-0 px-11" ng-if="cantidadSeleccionados > cantidadMinimaColumnas"><b class="text-bold">Para reemplazar una columna:</b> debes deseleccionar alguno de los elementos activos y marcar otro.</p><!-- Mensaje cantidad minima de elementos --><p class="text-bold mb-10 pt-15" ng-if="cantidadSeleccionados <= cantidadMinimaColumnas">Las tablas sÃ³lo muestran hasta un Minimo de {{cantidadMinimaColumnas}} columnas</p><!-- Icono cerrar mensaje info en tabla --><!-- <a href="javascript:void(0)" class="cerrar" ng-click="orionTablas.!collapseInfo">\n    <i class="ion-ios-close-empty px-30"></i>\n  </a> --></div><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 border-bottom mt-5 pb-5"><h6 class="text-marketing-blue-one mb-0">Ãtems seleccionados: <span>{{cantidadSeleccionados}}/{{cantidadMaximaColumnas}}</span></h6></div><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 pt-5"><label class="bch-custom-check" ng-class="{\'disabled\': columnaDisabled(status), \'obligatorio\': !status.ocultable}" ng-repeat="status in statusColumnas"><i ng-show="!status.ocultable" class="ion-ios-locked-outline"></i><div><input type="checkbox" ng-value="true" data-index="{{status.index}}" ng-disabled="columnaDisabled(status)" ng-model="status.visible" ng-click="mostrarOcultarColumnas(status)"> <i></i></div><span class="nombre">{{status.nombre}}</span></label></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/estado-situacion/adjuntar-documentos/adjuntar-documentos.directive.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/estado-situacion/adjuntar-documentos/adjuntar-documentos.directive.tpl.html", '<div class="firma-electronica" ng-if="adjunta.indicarPantalla === 2"><div class="col-xs-12"><h2 class="text-color-1 text-bold pl-30">Estado de SituaciÃ³n</h2><section class="steps"><article ng-class="{disabled: adjunta.cargandoDocumentos && adjunta.primeraCarga}" class="step" data-step="1"><h3>Adjuntar los documentos solicitados</h3><div class="row"><div class="col-xs-9"><div class="bch-mensaje-empresas information"><article><p>Recuerda que puedes adjuntar archivos formatos .png .jpg o .pdf con un peso mÃ¡ximo de 2 MB.</p></article></div></div></div><div><div class="row pt-30 pl-15 pr-15"><h4>Documentos Generales</h4><div class="col-xs-12"><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'identidad\')"><input ng-model="adjunta.flgIdentidad" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Identidad y domicilio</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgIdentidad"><div class="row"><div class="col-xs-6"><p class="bold">CÃ©dula de identidad (por ambos lados)</p></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="CEDULA" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CEDULA\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="CEDULA" type="file" attach-file idtipo="CEDULA" grupo="identidad"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'CEDULA\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'CEDULA\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'CEDULA\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'CEDULA\'">{{adjunta.mensajeAdjunto}}</small><label for="CEDULA" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CEDULA\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="CEDULA" type="file" attach-file idtipo="CEDULA" grupo="identidad"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgIdentidad"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Estado de Cuenta o Boleta de Servicios</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="Debe tener tu nombre y direcciÃ³n. En caso de presentar Estados de Cuenta a nombre del cÃ³nyuge o conviviente civil, debes acreditar el vÃ­nculo legal (adjuntando certificado de matrimonio o conviviente civil). En caso que seas Estudiante, puedes acreditar documento a nombre de tus padres (acreditando parentesco con certificado de nacimiento) o del Sostenedor EconÃ³mico" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div><p class="px-12">Estado de Servicio BÃ¡sicos (electricidad, agua, gas), de Cuentas Bancarias, de Cuentas de Grandes Tiendas Comerciales, con antiguedad menor a 2 meses; o Licencia de Conducir vigente.</p></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="ESTADO_CUENTA" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'ESTADO_CUENTA\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="ESTADO_CUENTA" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="ESTADO_CUENTA" grupo="identidad"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'ESTADO_CUENTA\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'ESTADO_CUENTA\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'ESTADO_CUENTA\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'ESTADO_CUENTA\'">{{adjunta.mensajeAdjunto}}</small><label for="ESTADO_CUENTA" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'ESTADO_CUENTA\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="ESTADO_CUENTA" type="file" attach-file idtipo="ESTADO_CUENTA" grupo="identidad"></span></div></div></div></div></div><p>El resto de los documentos opcionales de adjuntar, dependerÃ¡ de tu situaciÃ³n:</p><div class="col-xs-12 pt-10"><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'dependiente\')"><input ng-model="adjunta.flgDependiente" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-5 ml-30">Si trabajas con contrato de trabajo (dependiente)</p><p class="px-12 mb-0 ml-30">Si has autorizado rescatar informaciÃ³n de tu renta a previred y no estÃ¡s solicitando un CrÃ©dito Hipotecario, no necesitas adjuntar esta informaciÃ³n.</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgDependiente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Certificado empleador con antigÃ¼edad no mayor a 30 dÃ­as.</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="Pide en tu trabajo un certificado de empleador. Si llevas menos de un mes en tu empresa puedes adjuntar solo el contrato laboral" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="CERTIFICADO_EMPLEADOR" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_EMPLEADOR\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="CERTIFICADO_EMPLEADOR" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_EMPLEADOR" grupo="dependiente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'CERTIFICADO_EMPLEADOR\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'CERTIFICADO_EMPLEADOR\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'CERTIFICADO_EMPLEADOR\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'CERTIFICADO_EMPLEADOR\'">{{adjunta.mensajeAdjunto}}</small><label for="CERTIFICADO_EMPLEADOR" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_EMPLEADOR\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="CERTIFICADO_EMPLEADOR" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_EMPLEADOR" grupo="dependiente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgDependiente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Liquidaciones de sueldo de los tres Ãºltimos meses.</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="Solicita a tu empleador las liquidaciones de sueldo de los Ãºltimos 3 meses" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="LIQUIDACION" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'LIQUIDACION\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="LIQUIDACION" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="LIQUIDACION" grupo="dependiente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'LIQUIDACION\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'LIQUIDACION\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'LIQUIDACION\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'LIQUIDACION\'">{{adjunta.mensajeAdjunto}}</small><label for="LIQUIDACION" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'LIQUIDACION\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="LIQUIDACION" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="LIQUIDACION" grupo="dependiente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgDependiente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Certificado AFP con antigÃ¼edad no mayor a 30 dÃ­as.</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="EncuÃ©ntralo en el sitio web de la instituciÃ³n a la que estÃ©s afiliado, debes contar con el rut y la clave de acceso. Debe indicar RUT de Empleador y folio validador del documento." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="CERTIFICADO_AFP" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_AFP\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="CERTIFICADO_AFP" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_AFP" grupo="dependiente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'CERTIFICADO_AFP\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'CERTIFICADO_AFP\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'CERTIFICADO_AFP\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'CERTIFICADO_AFP\'">{{adjunta.mensajeAdjunto}}</small><label for="CERTIFICADO_AFP" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_AFP\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="CERTIFICADO_AFP" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_AFP" grupo="dependiente"></span></div></div></div></div><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'independiente\')"><input ng-model="adjunta.flgIndependiente" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si trabajas a honorarios o eres independiente</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgIndependiente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Boletas de honorarios de los Ãºltimos 4 meses</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="En el sitio web del SII, en menÃº Boleta de Honorarios ElectrÃ³nica (detalle de boletas), dirÃ­gete a la opciÃ³n Consulta sobre boletas." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="BOLETA_HONORARIOS" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'BOLETA_HONORARIOS\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="BOLETA_HONORARIOS" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="BOLETA_HONORARIOS" grupo="independiente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'BOLETA_HONORARIOS\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'BOLETA_HONORARIOS\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'BOLETA_HONORARIOS\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'BOLETA_HONORARIOS\'">{{adjunta.mensajeAdjunto}}</small><label for="BOLETA_HONORARIOS" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'BOLETA_HONORARIOS\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="BOLETA_HONORARIOS" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="BOLETA_HONORARIOS" grupo="independiente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgIndependiente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">DeclaraciÃ³n Anual de Impuesto a la renta (del Ãºltimo aÃ±o)</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="Debes obtenerlo en el sitio web del SII" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="DECLARACION_ANUAL_IND" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_IND\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="DECLARACION_ANUAL_IND" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_IND" grupo="independiente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'DECLARACION_ANUAL_IND\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'DECLARACION_ANUAL_IND\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'DECLARACION_ANUAL_IND\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'DECLARACION_ANUAL_IND\'">{{adjunta.mensajeAdjunto}}</small><label for="DECLARACION_ANUAL_IND" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_IND\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="DECLARACION_ANUAL_IND" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_IND" grupo="independiente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgIndependiente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Inicio de Actividades del Servicio de Impuestos Internos</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="Debes obtenerlo en el sitio web del SII" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="INICIO_ACTIVIDADES_IND" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'INICIO_ACTIVIDADES_IND\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="INICIO_ACTIVIDADES_IND" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="INICIO_ACTIVIDADES_IND" grupo="independiente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'INICIO_ACTIVIDADES_IND\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'INICIO_ACTIVIDADES_IND\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'INICIO_ACTIVIDADES_IND\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'INICIO_ACTIVIDADES_IND\'">{{adjunta.mensajeAdjunto}}</small><label for="INICIO_ACTIVIDADES_IND" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'INICIO_ACTIVIDADES_IND\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="INICIO_ACTIVIDADES_IND" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="INICIO_ACTIVIDADES_IND" grupo="independiente"></span></div></div></div></div><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'pensionado\')"><input ng-model="adjunta.flgPensionado" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si eres pensionado, jubilado o montepÃ­o</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgPensionado"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Recibo de pago del Ãºltimo mes</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="Depende de cÃ³mo lo recibas, puedes entregar la Ãºltima liquidaciÃ³n de pago de pensiÃ³n o recibo de pago del Ãºltimo mes" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="RECIBO_PAGO_JUB" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'RECIBO_PAGO_JUB\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="RECIBO_PAGO_JUB" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="RECIBO_PAGO_JUB" grupo="pensionado"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'RECIBO_PAGO_JUB\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'RECIBO_PAGO_JUB\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'RECIBO_PAGO_JUB\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'RECIBO_PAGO_JUB\'">{{adjunta.mensajeAdjunto}}</small><label for="RECIBO_PAGO_JUB" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'RECIBO_PAGO_JUB\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="RECIBO_PAGO_JUB" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="RECIBO_PAGO_JUB" grupo="pensionado"></span></div></div></div></div><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'rentaAPlazo\')"><input ng-model="adjunta.flgRentaAPlazo" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si percibes renta por depÃ³sitos a plazo</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgRentaAPlazo"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">TÃ­tulo o certificado vigente cuya fecha de emisiÃ³n no sea superior a 30 dÃ­as</p></div><div class="align-self-start"><div class="circulo circulo-help" popover="EncuÃ©ntralo en la instituciÃ³n donde se encuentre tu inversiÃ³n, sitio web o documento fÃ­sico" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="TITULO_VIGENTE_DAP" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'TITULO_VIGENTE_DAP\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="TITULO_VIGENTE_DAP" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="TITULO_VIGENTE_DAP" grupo="renta_a_plazo"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'TITULO_VIGENTE_DAP\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'TITULO_VIGENTE_DAP\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'TITULO_VIGENTE_DAP\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'TITULO_VIGENTE_DAP\'">{{adjunta.mensajeAdjunto}}</small><label for="TITULO_VIGENTE_DAP" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'TITULO_VIGENTE_DAP\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="TITULO_VIGENTE_DAP" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="TITULO_VIGENTE_DAP" grupo="renta_a_plazo"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgRentaAPlazo"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">DeclaraciÃ³n Anual de Impuesto a la renta (del Ãºltimo aÃ±o)</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="Debes obtenerlo en el sitio web del SII" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="DECLARACION_ANUAL_DAP" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_DAP\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="DECLARACION_ANUAL_DAP" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_DAP" grupo="renta_a_plazo"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'DECLARACION_ANUAL_DAP\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'DECLARACION_ANUAL_DAP\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'DECLARACION_ANUAL_DAP\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'DECLARACION_ANUAL_DAP\'">{{adjunta.mensajeAdjunto}}</small><label for="DECLARACION_ANUAL_DAP" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_DAP\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="DECLARACION_ANUAL_DAP" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_DAP" grupo="renta_a_plazo"></span></div></div></div></div><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'socioEmpresaNoCliente\')"><input ng-model="adjunta.flgSocioEmpresaNoCliente" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si eres socio de una empresa que es NO cliente de Banco de Chile</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaNoCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15" style="max-width: 70%"><p class="bold">Escritura de constituciÃ³n de la sociedad</p></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="ESCRITURA_SOCIEDAD_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'ESCRITURA_SOCIEDAD_NO_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="ESCRITURA_SOCIEDAD_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="ESCRITURA_SOCIEDAD_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'ESCRITURA_SOCIEDAD_NO_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'ESCRITURA_SOCIEDAD_NO_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'ESCRITURA_SOCIEDAD_NO_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'ESCRITURA_SOCIEDAD_NO_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="ESCRITURA_SOCIEDAD_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'ESCRITURA_SOCIEDAD_NO_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="ESCRITURA_SOCIEDAD_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="ESCRITURA_SOCIEDAD_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaNoCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Carpeta tributaria</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="SÃ³lo para socios de Sociedades de Profesionales y/o inversiÃ³n con ingreso anuales menores a 10.000 UF" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="CARPETA_TRIB_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CARPETA_TRIB_NO_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="CARPETA_TRIB_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CARPETA_TRIB_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'CARPETA_TRIB_NO_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'CARPETA_TRIB_NO_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'CARPETA_TRIB_NO_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'CARPETA_TRIB_NO_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="CARPETA_TRIB_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CARPETA_TRIB_NO_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="CARPETA_TRIB_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CARPETA_TRIB_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaNoCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15" style="max-width: 70%"><p class="bold">DeclaraciÃ³n Anual de Impuesto a la renta de los dos Ãºltimos aÃ±os de la sociedad</p></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaNoCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15" style="max-width: 70%"><p class="bold">Balances de los 2 Ãºltimos aÃ±os</p></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="BALANCES_SOCIEDAD_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'BALANCES_SOCIEDAD_NO_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="BALANCES_SOCIEDAD_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="BALANCES_SOCIEDAD_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'BALANCES_SOCIEDAD_NO_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'BALANCES_SOCIEDAD_NO_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'BALANCES_SOCIEDAD_NO_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'BALANCES_SOCIEDAD_NO_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="BALANCES_SOCIEDAD_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'BALANCES_SOCIEDAD_NO_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="BALANCES_SOCIEDAD_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="BALANCES_SOCIEDAD_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaNoCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15" style="max-width: 70%"><p class="bold">DeclaraciÃ³n Anual de Imuesto a la renta de los dos Ãºltimos aÃ±os del socio</p></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="DECLARACION_ANUAL_SOCIO_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_SOCIO_NO_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="DECLARACION_ANUAL_SOCIO_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_SOCIO_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'DECLARACION_ANUAL_SOCIO_NO_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'DECLARACION_ANUAL_SOCIO_NO_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'DECLARACION_ANUAL_SOCIO_NO_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'DECLARACION_ANUAL_SOCIO_NO_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="DECLARACION_ANUAL_SOCIO_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_SOCIO_NO_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="DECLARACION_ANUAL_SOCIO_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_SOCIO_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaNoCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15" style="max-width: 70%"><p class="bold">PPM de los Ãºltimos 4 meses de la sociedad</p></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="PPM_SOCIEDAD_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'PPM_SOCIEDAD_NO_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="PPM_SOCIEDAD_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="PPM_SOCIEDAD_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'PPM_SOCIEDAD_NO_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'PPM_SOCIEDAD_NO_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'PPM_SOCIEDAD_NO_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'PPM_SOCIEDAD_NO_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="PPM_SOCIEDAD_NO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'PPM_SOCIEDAD_NO_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="PPM_SOCIEDAD_NO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="PPM_SOCIEDAD_NO_CLIENTE" grupo="socio_empresa_no_cliente"></span></div></div></div></div><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'socioEmpresaCliente\')"><input ng-model="adjunta.flgSocioEmpresaCliente" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si eres socio de una Empresa que es cliente Banco de Chile</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15" style="max-width: 70%"><p class="bold">DeclaraciÃ³n Anual de Impuesto a la renta del Ãºltimo aÃ±o de la sociedad</p></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="DECLARACION_ANUAL_SOCIEDAD_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_SOCIEDAD_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="DECLARACION_ANUAL_SOCIEDAD_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_SOCIEDAD_CLIENTE" grupo="socio_empresa_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'DECLARACION_ANUAL_SOCIEDAD_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'DECLARACION_ANUAL_SOCIEDAD_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'DECLARACION_ANUAL_SOCIEDAD_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'DECLARACION_ANUAL_SOCIEDAD_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="DECLARACION_ANUAL_SOCIEDAD_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_SOCIEDAD_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="DECLARACION_ANUAL_SOCIEDAD_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_SOCIEDAD_CLIENTE" grupo="socio_empresa_cliente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15" style="max-width: 70%"><p class="bold">DeclaraciÃ³n Anual de Impuesto a la renta del Ãºltimo aÃ±o del socio</p></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="DECLARACION_ANUAL_SOCIO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_SOCIO_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="DECLARACION_ANUAL_SOCIO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_SOCIO_CLIENTE" grupo="socio_empresa_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'DECLARACION_ANUAL_SOCIO_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'DECLARACION_ANUAL_SOCIO_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'DECLARACION_ANUAL_SOCIO_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'DECLARACION_ANUAL_SOCIO_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="DECLARACION_ANUAL_SOCIO_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'DECLARACION_ANUAL_SOCIO_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="DECLARACION_ANUAL_SOCIO_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="DECLARACION_ANUAL_SOCIO_CLIENTE" grupo="socio_empresa_cliente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">PPM de los Ãºltimos 4 meses de la sociedad</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="SÃ³lo para socios de Sociedades de Profesionales y/o InversiÃ³n con ingresos anuales menores a 10.000 UF" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="PPM_SOCIEDAD_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'PPM_SOCIEDAD_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="PPM_SOCIEDAD_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="PPM_SOCIEDAD_CLIENTE" grupo="socio_empresa_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'PPM_SOCIEDAD_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'PPM_SOCIEDAD_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'PPM_SOCIEDAD_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'PPM_SOCIEDAD_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="PPM_SOCIEDAD_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'PPM_SOCIEDAD_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="PPM_SOCIEDAD_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="PPM_SOCIEDAD_CLIENTE" grupo="socio_empresa_cliente"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgSocioEmpresaCliente"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">IVAS de los Ãºltimos 3 meses de la sociedad</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="SÃ³lo para socios de Otras Sociedades (NO Profesionales y/o inversiÃ³n con ingresos anuales menores a 10.000 UF)" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="IVAS_SOCIEDAD_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'IVAS_SOCIEDAD_CLIENTE\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="IVAS_SOCIEDAD_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="IVAS_SOCIEDAD_CLIENTE" grupo="socio_empresa_cliente"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'IVAS_SOCIEDAD_CLIENTE\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'IVAS_SOCIEDAD_CLIENTE\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'IVAS_SOCIEDAD_CLIENTE\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'IVAS_SOCIEDAD_CLIENTE\'">{{adjunta.mensajeAdjunto}}</small><label for="IVAS_SOCIEDAD_CLIENTE" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'IVAS_SOCIEDAD_CLIENTE\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="IVAS_SOCIEDAD_CLIENTE" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="IVAS_SOCIEDAD_CLIENTE" grupo="socio_empresa_cliente"></span></div></div></div></div><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'estudiante\')"><input ng-model="adjunta.flgEstudiante" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si eres estudiante</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgEstudiante"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Certificado de estudios</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="SolicÃ­talo en la instituciÃ³n donde eres alumno regular y debe indicar aÃ±o y carrera que cursas con folio validador." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="CERTIFICADO_ESTUDIOS" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_ESTUDIOS\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="CERTIFICADO_ESTUDIOS" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_ESTUDIOS" grupo="estudiante"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'CERTIFICADO_ESTUDIOS\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'CERTIFICADO_ESTUDIOS\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i> </a><a ng-if="(!adjunta.isIE && !adjunta.isEdge) || arch.extension != \'pdf\'" ng-click="adjunta.openModalPrevisualizacion(arch.id)" href="javascript:void(0);" class="link"><i class="ion-chevron-right px-18 ml-10 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'CERTIFICADO_ESTUDIOS\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'CERTIFICADO_ESTUDIOS\'">{{adjunta.mensajeAdjunto}}</small><label for="CERTIFICADO_ESTUDIOS" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_ESTUDIOS\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="CERTIFICADO_ESTUDIOS" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_ESTUDIOS" grupo="estudiante"></span></div></div></div></div><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'arriendaBienesRaices\')"><input ng-model="adjunta.flgArriendaBienesRaices" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si arriendas tus bienes raÃ­ces</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgArriendaBienesRaices"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Contrato de arriendo notariado</p></div><div class="align-self-start ml-10"><div class="circulo circulo-help" popover="En caso de no tenerlo, debes solicitar una copia a tu corredor de propiedades o bien en la notarÃ­a donde suscribiste el contrato" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="CONTRATO_ARRIENDO" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CONTRATO_ARRIENDO\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="CONTRATO_ARRIENDO" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CONTRATO_ARRIENDO" grupo="arrienda_bienes_raices"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'CONTRATO_ARRIENDO\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'CONTRATO_ARRIENDO\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i> </a><a ng-if="(!adjunta.isIE && !adjunta.isEdge) || arch.extension != \'pdf\'" ng-click="adjunta.openModalPrevisualizacion(arch.id)" href="javascript:void(0);" class="link"><i class="ion-chevron-right px-18 ml-10 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'CONTRATO_ARRIENDO\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'CONTRATO_ARRIENDO\'">{{adjunta.mensajeAdjunto}}</small><label for="CONTRATO_ARRIENDO" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CONTRATO_ARRIENDO\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="CONTRATO_ARRIENDO" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CONTRATO_ARRIENDO" grupo="arrienda_bienes_raices"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgArriendaBienesRaices"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15" style="max-width: 70%"><p class="bold">Recibo de Arriendo del Ãºltimo mes o identificaciÃ³n de cÃ¡nones de arriendo depositados en cuenta corriente/vista de Banco de Chile u otro Banco en los Ãºltimos meses.</p></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="RECIBO_ARRIENDO" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'RECIBO_ARRIENDO\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="RECIBO_ARRIENDO" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="RECIBO_ARRIENDO" grupo="arrienda_bienes_raices"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'RECIBO_ARRIENDO\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'RECIBO_ARRIENDO\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i> </a><a ng-if="(!adjunta.isIE && !adjunta.isEdge) || arch.extension != \'pdf\'" ng-click="adjunta.openModalPrevisualizacion(arch.id)" href="javascript:void(0);" class="link"><i class="ion-chevron-right px-18 ml-10 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'RECIBO_ARRIENDO\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'RECIBO_ARRIENDO\'">{{adjunta.mensajeAdjunto}}</small><label for="RECIBO_ARRIENDO" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'RECIBO_ARRIENDO\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="RECIBO_ARRIENDO" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="RECIBO_ARRIENDO" grupo="arrienda_bienes_raices"></span></div></div></div><div class="col-xs-12 content" ng-if="adjunta.flgArriendaBienesRaices"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15" style="max-width: 70%"><p class="bold">Acreditar que bien raÃ­z dado en arriendo es tuyo</p></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="ACREDITAR_BIEN_RAIZ" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'ACREDITAR_BIEN_RAIZ\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="ACREDITAR_BIEN_RAIZ" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="ACREDITAR_BIEN_RAIZ" grupo="arrienda_bienes_raices"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'ACREDITAR_BIEN_RAIZ\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'ACREDITAR_BIEN_RAIZ\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i> </a><a ng-if="(!adjunta.isIE && !adjunta.isEdge) || arch.extension != \'pdf\'" ng-click="adjunta.openModalPrevisualizacion(arch.id)" href="javascript:void(0);" class="link"><i class="ion-chevron-right px-18 ml-10 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'ACREDITAR_BIEN_RAIZ\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'ACREDITAR_BIEN_RAIZ\'">{{adjunta.mensajeAdjunto}}</small><label for="ACREDITAR_BIEN_RAIZ" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'ACREDITAR_BIEN_RAIZ\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="ACREDITAR_BIEN_RAIZ" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="ACREDITAR_BIEN_RAIZ" grupo="arrienda_bienes_raices"></span></div></div></div></div></div></div><div class="row pt-30 pl-15 pr-15"><h4>Documentos Adicionales (que ayudan a respaldar tu solicitud)</h4><p class="pb-20">- La documentaciÃ³n que acredite los activos debe estar a nombre del cliente y si es de dominio compartido debe estar acreditado con Certificado de Matrimonio o con Certificado de UniÃ³n Civil.</p><p class="pb-10">- Si el Activo estÃ¡ dado en garantÃ­a al Banco de Chile, no es necesaria su acreditaciÃ³n.</p><div class="col-xs-12"><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'poseeVehiculo\')"><input ng-model="adjunta.flgPoseeVehiculo" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si declaras que posees vehÃ­culo</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgPoseeVehiculo"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Permiso de circulaciÃ³n vigente o Certificado de InscripciÃ³n en el Registro Nacional de VehÃ­culos Motorizados (R.N.V.M) con antigÃ¼edad no mayor a 45 dÃ­as</p></div><div class="align-self-start"><div class="circulo circulo-help" popover="Puedes encontrarlo en el sitio web del Servicio de Registro Civil e IdentificaciÃ³n" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="CERTIFICADO_VEHICULO" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_VEHICULO\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="CERTIFICADO_VEHICULO" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_VEHICULO" grupo="vehiculos"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'CERTIFICADO_VEHICULO\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'CERTIFICADO_VEHICULO\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'CERTIFICADO_VEHICULO\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'CERTIFICADO_VEHICULO\'">{{adjunta.mensajeAdjunto}}</small><label for="CERTIFICADO_VEHICULO" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_VEHICULO\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="CERTIFICADO_VEHICULO" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_VEHICULO" grupo="vehiculos"></span></div></div></div></div><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'declaraInversiones\')"><input ng-model="adjunta.flgDeclaraInversiones" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si declaras inversiones</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgDeclaraInversiones"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">TÃ­tulo o certificado vigente cuya fecha de emisiÃ³n no sea superior a 30 dÃ­as</p></div><div class="align-self-start"><div class="circulo circulo-help" popover="EncuÃ©ntralo en la instituciÃ³n donde se encuentre tu inversiÃ³n, sitio web o documento fÃ­sico" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="CERTIFICADO_INVERSION" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_INVERSION\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="CERTIFICADO_INVERSION" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_INVERSION" grupo="inversiones"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'CERTIFICADO_INVERSION\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'CERTIFICADO_INVERSION\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'CERTIFICADO_INVERSION\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'CERTIFICADO_INVERSION\'">{{adjunta.mensajeAdjunto}}</small><label for="CERTIFICADO_INVERSION" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_INVERSION\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="CERTIFICADO_INVERSION" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_INVERSION" grupo="inversiones"></span></div></div></div></div><div class="row accordionSwitch"><div class="col-xs-12 header"><div class="form-group mb-0"><label class="switch success mb-0 pt-0 pb-0 flex-start" ng-click="adjunta.switchActivos(\'declaraBienRaiz\')"><input ng-model="adjunta.flgDeclaraBienRaiz" type="checkbox"> <i></i><div class="text-default inline-block pl-15"><p class="mb-0 ml-30">Si declaras que posees un bien raÃ­z</p></div></label></div></div><div class="col-xs-12 content" ng-if="adjunta.flgDeclaraBienRaiz"><div class="row"><div class="col-xs-6"><div class="row display-flex flex-wrap"><div class="pl-15 pt-3" style="max-width: 70%"><p class="bold">Certificado de AvalÃºo fiscal con individualizaciÃ³n de propietario (con antigÃ¼edad no mayor a 30 dÃ­as) o Registro de propiedades del cliente en Carpeta tributaria (antigÃ¼edad no mayor a 30 dÃ­as).</p></div><div class="align-self-start"><div class="circulo circulo-help" popover="DescÃ¡rgalo desde el sitio web del Servicio de Impuestos Internos" popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-6 content-file"><span class="adjuntar"><label for="CERTIFICADO_BIEN_RAIZ" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_BIEN_RAIZ\').length == 0"><i class="ion-paperclip px-18 ml-5 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">ADJUNTAR</span></label><input id="CERTIFICADO_BIEN_RAIZ" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_BIEN_RAIZ" grupo="bienes_raices"></span><div class="row mb-5"><div class="col" ng-repeat="arch in adjunta.listadoArchivos" ng-if="adjunta.listadoArchivos.length > 0"><div class="flex-center" ng-if="arch.tipo == \'CERTIFICADO_BIEN_RAIZ\'"><i ng-if="arch.extension == \'pdf\'" class="icon-icon-pdf px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'png\'" class="icon-icon-png px-30 mr-5 text-color-6"></i> <i ng-if="arch.extension == \'jpeg\'" class="icon-icon-jpg px-30 mr-5 text-color-6"></i> <span class="px-14 ml-0 mr-0 width-20">{{arch.nombre.slice(0, -4)}} </span><span ng-if="arch.extension == \'pdf\'" class="px-14 ml-0 mr-0 width-10"><strong>.pdf</strong></span> <span ng-if="arch.extension == \'png\'" class="px-14 ml-0 mr-0 width-10"><strong>.png</strong></span> <span ng-if="arch.extension == \'jpeg\'" class="px-14 ml-0 mr-0 width-10"><strong>.jpg</strong></span> <a ng-click="adjunta.eliminarDocumento(arch.id,\'CERTIFICADO_BIEN_RAIZ\')" href="javascript:void(0);" class="link"><i class="ion-ios-trash-outline px-18 ml-15 mr-5 text-color-6"></i></a></div></div></div><span class="adjuntar"><span ng-if="adjunta.idAdjuntoGif == \'CERTIFICADO_BIEN_RAIZ\'" class="display-flex flex-center width-30"><section class="spinner ml-10"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></span><small class="invalid ng-binding" ng-if="adjunta.mensajeAdjunto.length && adjunta.idAdjunto == \'CERTIFICADO_BIEN_RAIZ\'">{{adjunta.mensajeAdjunto}}</small><label for="CERTIFICADO_BIEN_RAIZ" class="a-link flex-center mb-5" ng-if="adjunta.subArray(\'CERTIFICADO_BIEN_RAIZ\').length > 0"><i class="ion-android-add-circle px-18 mr-5 text-color-6"></i> <span class="px-14 btn btn-link ml-0 mr-0">AGREGAR NUEVO</span></label><input id="CERTIFICADO_BIEN_RAIZ" type="file" attach-file idestado="{{adjunta.estadoSituacion.estadoSituacion.id}}" idtipo="CERTIFICADO_BIEN_RAIZ" grupo="bienes_raices"></span></div></div></div></div></div></div><div class="flex-center justify-content-space-between mt-15 mb-15"><a href="javascript:void(0);" class="" ng-click="adjunta.volverAtras();"><span class="button-link px-14 ml-0 mr-0"><strong>VOLVER</strong></span> </a><button ng-disabled="adjunta.flgGuardandoBorrador" ng-click="adjunta.guardarBorrador();" type="button" class="btn info pt-8 pb-8">GUARDAR BORRADOR Y SALIR</button></div></div></article><article ng-class="{disabled: adjunta.cargandoDocumentos && adjunta.primeraCarga}" ng-if="true" class="step" data-step="2"><h3>Aceptar declaraciÃ³n</h3><div class="row pl-15 pt-10"><div class="col-xs-9 card-declaration"><div class="row"><div class="col-xs-12"><p>Declaro que todos los datos y antecedentes que acompaÃ±o son fidedignos y que conozco el ArtÃ­culo 160 de la Ley General de Bancos que dice: "El que obtuviere crÃ©ditos de Instituciones de crÃ©dito pÃºblicas o privadas, suministrando o proporcionando datos falsos o maliciosamente incompletos acerca de su identidad, actividades o estados de situaciÃ³n o patrimonio, ocasionando perjuicios a la instituciÃ³n, sufrirÃ¡ la pena de presidio menor en sus grados medio y mÃ¡ximo"</p></div><div class="col-xs-12 pt-15"><div class="form-group"><label class="bch-custom-check"><div><input type="checkbox" ng-model="adjunta.aceptoTerminos" ng-click="adjunta.activaCajaDesafio()"> <i></i></div><span>He leÃ­do y acepto</span></label></div></div></div></div></div></article><article ng-if="adjunta.esPrivado && adjunta.aceptoTerminos" class="step" data-step="3"><h3>Firmar estado de situaciÃ³n con dispositivo de seguridad</h3><form name="adjunta.stepCaja" ng-show="!adjunta.errorCajaDesafio"><div class="form-group"><caja-desafio-soft titulo="false" portal="Personas" action="adjunta.firmaDocumentos()" boton="adjunta.showBotones" ladda-soft-token="adjunta.loadingCajaDesafio" objeto-mi-pass="adjunta.objetoSoftToken"></caja-desafio-soft></div></form></article></section><div class="acciones-tabla-tef" ng-if="!adjunta.esPrivado"><div class="col-xs-12 ml-20"><div class="mb-5"><button type="submit" ladda="adjunta.loading" data-style="expand-right" class="btn primary ladda-button pb-10 pt-10" ng-disabled="vm.loading || !adjunta.aceptoTerminos" ng-click="adjunta.firmaDocumentosPublico();">Firmar</button></div></div><small class="invalid ng-binding mt-5" ng-if="adjunta.mensajeErrorFirma.length">{{adjunta.mensajeErrorFirma}}</small></div><div class="row"><div class="col-xs-12"><div class="bch-mensaje-empresas {{adjunta.severidad}}" ng-if="adjunta.errorArchivos"><article><b>Ha ocurrido un error</b><br>{{adjunta.errorMessageArchivo}} </article></div></div></div></div></div><comprobante-eess-directive ng-if="adjunta.indicarPantalla == 3"></comprobante-eess-directive>');
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/estado-situacion/comprobante/comprobante-eess.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/estado-situacion/comprobante/comprobante-eess.tpl.html", '<div class="container-fluid"><div class="row comprobante pt-30 pb-30"><div class="col-xs-12 pb-20"><div class="row justify-content-center pt-20"><div class="card-info col-xs-10 pt-30 pb-30"><div class="col-xs-12 text-center"><i class="ion-ios-checkmark-outline i-success-color"></i></div><div class="col-xs-12 text-center pt-15"><h3 class="title-comprobante-success">Hemos recibido con Ã©xito tu Estado de SituaciÃ³n</h3></div><div class="col-xs-12 pt-20 pb-20 text-center"><p><strong>Prontamente te contactarÃ¡ un ejecutivo para continuar el proceso.</strong></p><p><strong>Para consultar el estado de tu solicitud ingresa nuevamente desde el Home de Portabilidad</strong></p></div><div class="col-xs-12 justify-content-center mt-30 mb-30"><button ng-click="comprobante.volverAlInicio()" type="button" class="btn info" ui-sref="bancoChile">VOLVER AL INICIO</button> <button type="button" class="btn primary" ui-sref="ingresar-solicitud-portabilidad-publico">NUEVA SOLICITUD</button></div></div></div></div></div></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/estado-situacion/estado-situacion.directive.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/estado-situacion/estado-situacion.directive.tpl.html", '<div class="firma-electronica estado-situacion ui-minerva" ng-if="eess.estadoSituacionEnviado !== \'Enviado\'"><div class="row" ng-if="eess.indicarPantalla === 1"><div class="col-xs-12 pl-30"><h2 class="text-color-1 text-bold pl-30">Estado de SituaciÃ³n</h2></div><div class="steps-horizontales-numerados pull-right container mt-10 mb-30 pl-30"><section class="steps pb-20 mb-20"><article class="step done pr-0" data-step="1"><h3>IdentificaciÃ³n Cliente</h3><div class="row"><div class="col-xs-12 mt-0"><article class="mb-10"><h5 class="text-bold px-12 mb-0">Este paso es Obligatorio</h5></article></div><accordion class="panel-collapse__step col-xs-12"><accordion-group class="accordion-group mb-10" is-open="eess.acorAntecedentes" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorAntecedentes, \'panel-close\': !eess.acorAntecedentes}"><accordion-heading><div class="title" ng-click="eess.flechaAntecedentes=!eess.flechaAntecedentes; eess.flechaDirCome = true; eess.flechaDirPart = true">Antecedentes <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaAntecedentes, \'flecha-gris\': eess.flechaAntecedentes, \'ion-ios-arrow-up\': !eess.flechaAntecedentes}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardado" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div ng-if="eess.flgMsgObligatorio" class="bch-mensaje-empresas warning mt-0"><article><h5>Los datos con* son obligatorios</h5><p>Debes editar y completar los datos requeridos</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Fecha de nacimiento*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonales.fechaNacimiento !== null ? (eess.estadoSituacion.datosPersonales.fechaNacimiento | date:\'dd/MM/yyyy\') : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Sexo*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonales.sexo !== null ? eess.buscar(\'genero\', eess.estadoSituacion.datosPersonales.sexo) : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Estado civil*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonales.estadoCivil !== null ? eess.buscar(\'estadoCivil\', eess.estadoSituacion.datosPersonales.estadoCivil) : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Nacionalidad*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonales.nacionalidad !== null ? eess.buscar(\'nacionalidad\', eess.estadoSituacion.datosPersonales.nacionalidad) : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">PaÃ­s de Origen*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{ eess.estadoSituacion.datosPersonales.paisOrigen !== null ?  eess.estadoSituacion.datosPersonales.paisOrigen : \'-\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">RÃ©gimen matrimonial / UniÃ³n Civil*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonales.regimenMatrimonial !== null ? eess.buscar(\'regimenMatrimonial\', eess.estadoSituacion.datosPersonales.regimenMatrimonial) : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">NÃºmero de dependientes</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonales.nroDependientes !== null ? eess.estadoSituacion.datosPersonales.nroDependientes : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Vivienda que habita</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{ eess.estadoSituacion.datosPersonales.tipoVivienda !== null ? eess.buscar(\'vivienda\', eess.estadoSituacion.datosPersonales.tipoVivienda) :\'-\' }} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Monto arriendo</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonales.montoArriendo !== null ? (eess.estadoSituacion.datosPersonales.montoArriendo | formatoMonedaEESS) : \'-\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Residencia tributaria en el extranjero*</p></div><div class="col-xs-6 pr-0" ng-if="eess.estadoSituacion.datosPersonales.residenciaExtranjera != null"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.datosPersonales.nacionalidad == 3 || eess.estadoSituacion.datosPersonales.nacionalidad == 2">{{ eess.estadoSituacion.datosPersonales.residenciaExtranjera }}</p></div><div class="col-xs-6 pr-0" ng-if="eess.estadoSituacion.datosPersonales.residenciaExtranjera == null"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">-</p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">PaÃ­s de residencia tributaria*</p></div><div class="col-xs-6 pr-0" ng-if="eess.estadoSituacion.datosPersonales.paisResTributaria != null"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.datosPersonales.nacionalidad == 3 || eess.estadoSituacion.datosPersonales.nacionalidad == 2"> {{eess.estadoSituacion.datosPersonales.paisResTributaria}} </p></div><div class="col-xs-6 pr-0" ng-if="eess.estadoSituacion.datosPersonales.paisResTributaria == null"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">-</p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">NÃºmero de identificaciÃ³n tributaria*</p></div><div class="col-xs-6 pr-0" ng-if="eess.estadoSituacion.datosPersonales.numeroIdTributaria !=  null"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.datosPersonales.nacionalidad == 3 || eess.estadoSituacion.datosPersonales.nacionalidad == 2"> {{eess.estadoSituacion.datosPersonales.numeroIdTributaria }} </p></div><div class="col-xs-6 pr-0" ng-if="eess.estadoSituacion.datosPersonales.numeroIdTributaria ==  null"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">-</p></div></div></div></div></div><div class="row mt-20"><div class="col-xs-12"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalAntecedente()"><i class="px-16 mr-5 ion-edit"></i> Editar</button> <button ng-click="eess.acorDireParticular = true; eess.flgMsgGuardado = false; eess.flechaAntecedentes = true; eess.flechaDirPart = false" type="button" class="btn primary btn-confirm pb-10 pt-10">Continuar</button></div></div></div></accordion-group><accordion-group class="accordion-group mb-10" is-open="eess.acorDireParticular" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorDireParticular, \'panel-close\': !eess.acorDireParticular}"><accordion-heading><div class="title" ng-click="eess.flechaDirPart=!eess.flechaDirPart; eess.flechaDirCome = true; eess.flechaAntecedentes = true">DirecciÃ³n Particular <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaDirPart,\'flecha-gris\': eess.flechaDirPart, \'ion-ios-arrow-up\': !eess.flechaDirPart}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoDireParticular" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">PaÃ­s*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{ eess.direccionParticular.labelPais != null ? (eess.direccionParticular.labelPais | uppercase) : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">RegiÃ³n*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionParticular.labelRegion != null ? (eess.direccionParticular.labelRegion | uppercase) : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Ciudad*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionParticular.labelCiudad != null ? eess.direccionParticular.labelCiudad : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Comuna*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionParticular.labelComuna != null ? eess.direccionParticular.labelComuna : \'-\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-2 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Calle*</p></div><div class="col-xs-10 pr-0"><p ng-if="eess.direccionParticular.calle == null" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">-</p><p ng-if="eess.direccionParticular.calle.length != null" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionParticular.calle}} </p><!--<p ng-if="eess.direccionParticular.calle.length > 18"\n                                                       class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"\n                                                       data-toggle="tooltip" data-placement="top"\n                                                       title="{{eess.direccionParticular.calle}}"> {{eess.direccionParticular.calle.substring(0, 17)}}<span\n                                                            ng-if="eess.direccionParticular.calle.length > 18">...</span>\n                                                    </p>--></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">NÃºmero*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionParticular.numero != null ? eess.direccionParticular.numero : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">NÃºmero departamento/casa*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionParticular.nroDeptoCasa != null ? eess.direccionParticular.nroDeptoCasa : \'-\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">TelÃ©fono*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionParticular.telefono | formatoTelefonoEESS : \'+56\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Celular*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionParticular.celular | formatoTelefonoEESS : \'+56\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-2 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Email*</p></div><div class="col-xs-10 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionParticular.email != null ? eess.direccionParticular.email.length > 18 ? eess.direccionParticular.email.substring(0, 18) + \'...\' : eess.direccionParticular.email  : \'-\'}} </p></div></div></div></div></div><div class="row mt-20"><div class="col-lg-12"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalDireccionParticular()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.acorDireComercial = true; eess.flgMsgGuardadoDireParticular = false; eess.flechaDirPart = true; eess.flechaDirCome = false" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div></accordion-group><accordion-group class="accordion-group mb-10" is-open="eess.acorDireComercial" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorDireComercial, \'panel-close\': !eess.acorDireComercial}"><accordion-heading><div class="title justify-content-space-between" ng-click="eess.flechaDirCome=!eess.flechaDirCome; eess.flechaAntecedentes = true;  eess.flechaDirPart = true "><span class="flex-center">DirecciÃ³n Comercial<div class="circulo circulo-help display-inline-flex ml-10" popover="Debes indicar la direcciÃ³n donde ejerces tu actividad." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty" style="color: #fff !important; font-size: 26px !important"></i></div></span><i class="flex-right pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaDirCome,\'flecha-gris\': eess.flechaDirCome, \'ion-ios-arrow-up\': !eess.flechaDirCome}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoDireComercial" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">PaÃ­s*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.labelPais != null ? eess.direccionComercial.labelPais : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">RegiÃ³n*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.labelRegion != null ? eess.direccionComercial.labelRegion : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Ciudad*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.labelCiudad != null ? eess.direccionComercial.labelCiudad : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Comuna*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.labelComuna != null ? eess.direccionComercial.labelComuna : \'-\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-2 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Calle*</p></div><div class="col-xs-10 pr-0"><p ng-if="eess.direccionComercial.calle == null" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">-</p><p ng-if="eess.direccionComercial.calle.length != null" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.calle}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">NÃºmero*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.numero != null ? eess.direccionComercial.numero : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">NÃºmero departamento/casa*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.nroDeptoCasa != null ? eess.direccionComercial.nroDeptoCasa : \'-\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">TelÃ©fono*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.telefono | formatoTelefonoEESS : \'+56\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Celular*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.celular | formatoTelefonoEESS : \'+56\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-2 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Email*</p></div><div class="col-xs-10 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.direccionComercial.email != null ? eess.direccionComercial.email.length > 18 ?  eess.direccionComercial.email.substring(0, 18) + \'...\' : eess.direccionComercial.email : \'-\'}} </p></div></div></div></div><div class="row mt-20"><div class="col-xs-6"><div class="form-group display-flex space-between align-center padd-none"><label class="bch-custom-check"><div><input type="checkbox" ng-model="eess.mdUsarDirParticular" ng-click="eess.usarDirParticular()"> <i></i></div><span>Usar los mismos datos que direcciÃ³n particular en caso de no tener direcciÃ³n comercial.</span></label></div></div><div class="col-xs-6"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalDireccionComercial()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.acorCargosPublicos = true; eess.acorDireComercial = false; eess.flgMsgGuardadoDireComercial = false;eess.guardarEstadoSituacion(); eess.flechaDirCome = true; eess.flechaCargos = false;" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div></div></accordion-group></accordion></div></article><article class="step done pr-0" data-step="2"><h3>Antecedentes Ocupacionales</h3><div class="row"><div class="col-xs-12 mt-0"><article class="mb-10"><h5 class="text-bold px-12 mb-0">Este paso es Obligatorio</h5></article></div><accordion close-others="true" class="panel-collapse__step col-xs-12"><accordion-group class="accordion-group mb-10" is-open="eess.acorCargosPublicos" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorCargosPublicos, \'panel-close\': !eess.acorCargosPublicos}"><accordion-heading><div class="title" ng-click="eess.flechaCargos=!eess.flechaCargos; eess.flechaEstudios = true; eess.flechaActividad = true">Cargos PÃºblicos <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaCargos,\'flecha-gris\': eess.flechaCargos, \'ion-ios-arrow-up\': !eess.flechaCargos}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoCargosPublicos" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-lg-12 pl-15 pr-15 mb-30"><div class="row"><div class="col-md-6"><div class="row ml-15 mr-15"><div class="col-xs-9 pr-0 pl-0 pr-0"><p class="mb-10 mt-10 px-14">Â¿Es usted una persona que ocupe, haya ocupado o se postule para ocupar cargos pÃºblicos y/o organismos internacionales en Chile o en otros paÃ­ses?</p></div><div class="col-xs-3 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{ eess.flgCargoPublicoPropio ? \'Si\' : \'No\' }} </p></div></div></div><div class="col-md-6"><div class="row ml-10 mr-10 word-break--word"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">InstituciÃ³n*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">{{eess.flgCargoPublicoPropio ? eess.cargoPublico.institucion : \'-\' }}</p></div></div><div class="row ml-10 mr-10 word-break--word"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Cargo*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.flgCargoPublicoPropio ? eess.cargoPublico.cargo : \'-\'}} </p></div></div></div></div></div><div class="col-lg-12 pl-15 pr-15 border-top"><div class="row"><div class="col-md-6"><div class="row ml-15 mr-15"><div class="col-xs-9 pr-0 pl-0 pr-0"><p class="mb-10 mt-10 px-14">Â¿Es usted una persona que este relacionada con alguien que se ajuste al perfil indicado en el punto anterior(CÃ³nyuge, padre, madre, hijo (a), hermano (a), asesor u otra persona cercana) en Chile o en otros paÃ­ses?</p></div><div class="col-xs-3 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{ eess.flgCargoPublicoRelacionado ? \'Si\' : \'No\' }} </p></div></div></div><div class="col-md-6"><div class="row ml-10 mr-10 word-break--word"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">InstituciÃ³n*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.flgCargoPublicoRelacionado ? eess.cargoPublicoRelacionado.institucion : \'-\'}} </p></div></div><div class="row ml-10 mr-10 word-break--word"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Cargo*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.flgCargoPublicoRelacionado ? eess.cargoPublicoRelacionado.cargo : \'-\'}} </p></div></div></div></div></div></div></div><div class="row mt-20 ml-15 mr-15"><div class="col-lg-12 padd-none"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalCargosPublicos()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.acorEstudios = true; eess.acorCargosPublicos = false; eess.flgMsgGuardadoCargosPublicos = false; eess.flechaCargos = true; eess.flechaEstudios = false" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div></accordion-group><accordion-group class="accordion-group mb-10" is-open="eess.acorEstudios" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorEstudios, \'panel-close\': !eess.acorEstudios}"><accordion-heading><div class="title" ng-click="eess.flechaEstudios=!eess.flechaEstudios; eess.flechaCargos = true; eess.flechaActividad = true">Estudios <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaEstudios,\'flecha-gris\': eess.flechaEstudios, \'ion-ios-arrow-up\': !eess.flechaEstudios}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoEstudios" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10 border-bottom"><div class="col-xs-7 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Nivel Estudios*</p></div><div class="col-xs-5 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.flgEstudios ? eess.buscar(\'nivelEstudio\', eess.estadoSituacion.estudios.nivel) : \'-\'}} </p></div></div><div class="row ml-10 mr-10 border-bottom"><div class="col-xs-7 pr-0 pl-0"><p class="mb-10 mt-10 px-14">ProfesiÃ³n/Carrera*</p></div><div class="col-xs-5 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.flgEstudios ? eess.estadoSituacion.estudios.tituloCarrera !== null ? eess.estadoSituacion.estudios.tituloCarrera : \'-\' : \'-\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10 border-bottom"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Estado de Completitud*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.flgEstudios ? eess.estadoSituacion.estudios.completitud !== null ? eess.buscar(\'estadoCompletitud\', eess.estadoSituacion.estudios.completitud) : \'-\' : \'-\'}} </p></div></div><div class="row ml-10 mr-10 border-bottom"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">DuraciÃ³n Carrera*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.flgEstudios ? eess.estadoSituacion.estudios.duracion > 0 ? eess.estadoSituacion.estudios.duracion : \'-\' : \'-\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10 border-bottom"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">AÃ±o que cursa</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">{{eess.flgEstudios ? eess.estadoSituacion.estudios.anoCursa > 0 ? eess.estadoSituacion.estudios.anoCursa : \'-\' : \'-\' }}</p></div></div><div class="row ml-10 mr-10 border-bottom"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">InstituciÃ³n Educacional*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">{{eess.flgEstudios ? eess.estadoSituacion.estudios.universidadIp !== null ? eess.estadoSituacion.estudios.universidadIp : \'-\' : \'-\' }}</p></div></div></div></div></div><div class="row mt-20 ml-15 mr-15"><div class="col-lg-12 padd-none"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalEstudios()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.acorActividadActual = true; eess.acorEstudios = false; eess.flgMsgGuardadoEstudios = false; eess.flechaEstudios = true; eess.flechaActividad = false" type="button" class="btn primary btn-confirm pb-10 pt-10">Continuar</button></div></div></div></accordion-group><accordion-group class="accordion-group mb-10" is-open="eess.acorActividadActual" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorActividadActual, \'panel-close\': !eess.acorActividadActual}"><accordion-heading><div class="title" ng-click="eess.flechaActividad=!eess.flechaActividad; eess.flechaEstudios = true; eess.flechaCargos = true">Actividad Principal <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaActividad,\'flecha-gris\': eess.flechaActividad, \'ion-ios-arrow-up\': !eess.flechaActividad}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoActividadActual" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-md-4 pl-0 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Actividad principal*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.actividadActual != null"> {{eess.buscar(\'actividadActual\', eess.estadoSituacion.actividadActual)}} </p><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.actividadActual == null">-</p></div></div><div class="row ml-10 mr-10" ng-if="eess.estadoSituacion.actividadActual==1"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Nombre del empleador*</p></div><div class="col-xs-6 pr-0"><p ng-if="eess.estadoSituacion.actividadActual==1" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">{{eess.estadoSituacion.actividadDependiente.nombreEmpresa != null ? eess.estadoSituacion.actividadDependiente.nombreEmpresa : \'-\' }}</p></div></div></div><div class="col-md-4 pl-0 pr-15" ng-if="eess.estadoSituacion.actividadActual==2"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Actividad*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.actividadIndependiente.actividad != null ? eess.estadoSituacion.actividadIndependiente.actividad : \'-\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15" ng-if="eess.estadoSituacion.actividadActual==10"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Otra actividad*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.otraActividad}} </p></div></div></div><div class="col-md-4 pl-0 pr-15" ng-if="eess.estadoSituacion.actividadActual==2"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Inicio de Actividades*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.actividadIndependiente.inicio | date:\'dd/MM/yyyy\'}} </p></div></div></div><div class="col-md-4 pl-0 pr-15" ng-if="eess.estadoSituacion.actividadActual==1"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Rut Empleador*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.actividadDependiente.rutEmpresa != null ? (eess.estadoSituacion.actividadDependiente.rutEmpresa | rut) : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Socio</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">{{eess.estadoSituacion.actividadDependiente.socio != null ? eess.estadoSituacion.actividadDependiente.socio : \'-\' }}</p></div></div></div><div class="col-md-4 pl-0 pr-15" ng-if="eess.estadoSituacion.actividadActual==1"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Cargo*</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.actividadDependiente.cargo != null ? eess.estadoSituacion.actividadDependiente.cargo : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Fecha de Ingreso*</p></div><div class="col-xs-6 pr-0"><!--                                                    <p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"--><!--                                                        ng-if="eess.estadoSituacion.actualDependienteTitular.estadoSeccion == \'INCOMPLETO\' && eess.estadoSituacion.actualIndependienteTitular.estadoSeccion == \'INCOMPLETO\' ">--><!--                                                        - --><!--                                                    </p>--><p ng-if="eess.estadoSituacion.actividadActual==1" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.actividadDependiente.inicio | date:\'dd/MM/yyyy\'}} </p></div></div></div></div></div><div class="row mt-20 ml-15 mr-15"><div class="col-lg-12 padd-none"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalActividadActual()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.btnContinuar(\'actActual\');eess.acorActividadActual = false; eess.flgMsgGuardadoActividadActual = false; eess.flechaActividad = true" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div></accordion-group></accordion><div ng-if="eess.estadoSituacion.actividadActual == 3 || eess.estadoSituacion.actividadActual == 4" class="col-xs-12"><h4 class="text-color-1">Completa los datos personales e ingresos de tu Sostenedor EconÃ³mico</h4><div class="form-group padd-none"><label class="bch-custom-check"><div><input type="checkbox" ng-disabled="eess.estadoSituacion.actividadActual == 3 || eess.estadoSituacion.actividadActual == 4" ng-click="eess.tengoSostenedor = !eess.tengoSostenedor; eess.cambiaEstadoTieneSostenedor();" ng-checked="eess.estadoSituacion.actividadActual == 3 || eess.estadoSituacion.actividadActual == 4"> <i></i></div><span>Tengo Sostenedor EconÃ³mico</span></label></div></div><accordion close-others="true" class="panel-collapse__step col-xs-12"><accordion-group class="accordion-group mb-10" is-open="eess.acorRutSostenedor" ng-if="eess.estadoSituacion.actividadActual == 3 ||\n                                        eess.estadoSituacion.actividadActual == 4" ng-class="{\'panel-open\': eess.acorRutSostenedor, \'panel-close\': !eess.acorRutSostenedor}"><accordion-heading><div class="title" ng-click="eess.flechaAtecedentesSost=!eess.flechaAtecedentesSost; eess.flechaIngresoSost = true">Antecedentes sostenedor econÃ³mico <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaAtecedentesSost,\'flecha-gris\': eess.flechaAtecedentesSost, \'ion-ios-arrow-up\': !eess.flechaAtecedentesSost}"></i></div></accordion-heading><div class="bch-mensaje-empresas information mt-0" ng-if="eess.guardadoRutSostenedor" ng-click="eess.guardadoRutSostenedor = false;"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Rut*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right ng-binding"> {{eess.estadoSituacion.sostenedor.rut != null ? ((eess.estadoSituacion.sostenedor.rut + eess.estadoSituacion.sostenedor.dv) | rut) : \'-\' }} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Apellido paterno*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right ng-binding"> {{eess.estadoSituacion.sostenedor.apPaterno != null ? eess.estadoSituacion.sostenedor.apPaterno : \'-\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Apellido materno*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right ng-binding"> {{eess.estadoSituacion.sostenedor.apMaterno != null ? eess.estadoSituacion.sostenedor.apMaterno : \'-\'}} </p></div></div></div></div><div class="row"><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Nombres*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right ng-binding"> {{eess.estadoSituacion.sostenedor.nombres != null ? eess.estadoSituacion.sostenedor.nombres : \'-\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">TelÃ©fono Particular*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.sostenedor.telefonoParticular | formatoTelefonoEESS : \'+56\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Actividad Principal*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.sostenedor.activodad != null">{{eess.buscar(\'actividadActual\', eess.estadoSituacion.sostenedor.activodad) }}</p><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.sostenedor.activodad == null">-</p></div></div></div></div><div class="row"><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Cliente de Banco de Chile</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.sostenedor.clienteBanco != null ? eess.estadoSituacion.sostenedor.clienteBanco : \'-\'}} </p></div></div></div></div><div class="row pt-30"><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">PaÃ­s*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.sostenedor.labelPais != null ? eess.estadoSituacion.sostenedor.labelPais : \'-\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">RegiÃ³n*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.sostenedor.labelRegion != null ? eess.estadoSituacion.sostenedor.labelRegion : \'-\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Ciudad*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-right text-color-11 px-14 ng-binding text-bold"> {{eess.estadoSituacion.sostenedor.labelCuidad != null ? eess.estadoSituacion.sostenedor.labelCuidad : \'-\'}} </p></div></div></div></div><div class="row"><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Comuna*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-right text-color-11 px-14 ng-binding text-bold"> {{eess.estadoSituacion.sostenedor.labelComuna != null ? eess.estadoSituacion.sostenedor.labelComuna : \'-\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Calle*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-right text-color-11 px-14 ng-binding text-bold"> {{eess.estadoSituacion.sostenedor.calle != null ? eess.estadoSituacion.sostenedor.calle : \'-\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">NÃºmero*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-right text-color-11 px-14 ng-binding text-bold"> {{eess.estadoSituacion.sostenedor.numero != null ? eess.estadoSituacion.sostenedor.numero : \'-\'}} </p></div></div></div></div><div class="row"><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">NÃºmero departamento/casa*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-right text-color-11 px-14 ng-binding text-bold"> {{eess.estadoSituacion.sostenedor.nroDeptoCasa != null ? eess.estadoSituacion.sostenedor.nroDeptoCasa : \'-\'}} </p></div></div></div></div><div class="row pt-30"><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">Nombre empleador*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-right text-color-11 px-14 ng-binding text-bold"> {{eess.estadoSituacion.actividadSostenedor.nombreEmpleador != null ? eess.estadoSituacion.actividadSostenedor.nombreEmpleador : \'-\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p ng-if="eess.estadoSituacion.sostenedor.activodad == \'1\'" class="mb-10 mt-10 px-14">Cargo sostenedor econÃ³mico*</p><p ng-if="eess.estadoSituacion.sostenedor.activodad == \'2\'" class="mb-10 mt-10 px-14">Actividad*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-right text-color-11 px-14 ng-binding text-bold"> {{eess.estadoSituacion.actividadSostenedor.cargo}} </p></div></div></div><div class="col-md-4 pl-15 pr-30"><div class="row"><div class="col-xs-6"><p class="mb-10 mt-10 px-14">TelÃ©fono laboral*</p></div><div class="col-xs-6"><p class="mb-10 mt-10 text-right text-color-11 px-14 ng-binding text-bold"> {{ eess.estadoSituacion.actividadSostenedor.telefono | formatoTelefonoEESS : \'+56\'}} </p></div></div></div></div></div><div class="col-xs-12 mt-20"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalRutSostenedorConyuge()"><i class="ion-edit px-16 mr-5"></i> Editar</button> <button ng-click="eess.acorIngresoLiquidoMensual = true; eess.flgMsgGuardado = false; eess.flechaAtecedentesSost = true; eess.flechaIngresoSost = false" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></accordion-group><accordion-group class="accordion-group mb-10" is-open="eess.acorIngresoLiquidoMensual" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorIngresoLiquidoMensual, \'panel-close\': !eess.acorIngresoLiquidoMensual}"><accordion-heading><div class="title" ng-click="eess.flechaIngresoSost=!eess.flechaIngresoSost; eess.flechaAtecedentesSost = true">Ingreso LÃ­quido <span ng-if="!eess.tengoSostenedor">Mensual del Solicitante* </span><span ng-if="eess.tengoSostenedor">Sostenedor EconÃ³mico* </span><i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaIngresoSost,\'flecha-gris\': eess.flechaIngresoSost, \'ion-ios-arrow-up\': !eess.flechaIngresoSost}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoIngresoLiquidoMensual" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10 flex-end space-between"><div class="row" style="flex: auto"><div class="col-xs-12 col-md-8"><div class="table-cont clear"><table class="table-main" ng-if="!eess.tengoSostenedor"><thead><tr><th class="text-default pointer-events-none">Tipo</th><th class="text-default pointer-events-none text-right">Ingreso lÃ­quido mensual</th></tr></thead><tbody><tr><td class="border-bottom"><div class="text-left">Sueldo</div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresos[0].monto !== 0">{{eess.estadoSituacion.ingresos[0].monto | formatoMonedaEESS }}</td><td class="text-right border-bottom white-space--nowrap" common-filters ng-if="eess.estadoSituacion.ingresos[0].monto === 0"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left display-flex">Honorarios<div class="circulo circulo-help ml-10" popover="Ingreso mensual que percibe una persona natural por realizar una actividad econÃ³mica o prestar sus servicios de manera personal ejerciendo su profesiÃ³n." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresos[1].monto !== 0"> {{eess.estadoSituacion.ingresos[1].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresos[1].monto === 0"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left display-flex">Arriendo de mis propiedades<div class="circulo circulo-help ml-10" popover="Ingreso mensual que se percibe por el arriendo de propiedades." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresos[2].monto !== 0"> {{eess.estadoSituacion.ingresos[2].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresos[2].monto === 0"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left display-flex">Retiros<div class="circulo circulo-help ml-10" popover="Ingreso mensual por retiros en empresas en la que eres socio o dueÃ±o." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresos[3].monto != 0"> {{eess.estadoSituacion.ingresos[3].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresos[3].monto == 0"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left">Otros ingresos</div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresos[4].monto !== -1"> {{eess.estadoSituacion.ingresos[4].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresos[4].monto === -1"> {{0 | formatoMonedaEESS}} </td></tr></tbody></table><table class="table-main" ng-if="eess.tengoSostenedor"><thead><tr><th>Tipo</th><th class="text-right">Ingreso lÃ­quido mensual</th></tr></thead><tbody><tr><td class="border-bottom"><div class="text-left">Sueldo</div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[0].monto != -1">{{eess.estadoSituacion.ingresosSostenedor[0].monto | formatoMonedaEESS }}</td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[0].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left display-flex">Honorarios<div class="circulo circulo-help ml-10" popover="Ingreso mensual que percibe una persona natural por realizar una actividad econÃ³mica o prestar sus servicios de manera personal ejerciendo su profesiÃ³n." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[1].monto != -1"> {{eess.estadoSituacion.ingresosSostenedor[1].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[1].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left display-flex">Arriendo de mis propiedades<div class="circulo circulo-help ml-10" popover="Ingreso mensual que se percibe por el arriendo de propiedades." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[2].monto != -1"> {{eess.estadoSituacion.ingresosSostenedor[2].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[2].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left display-flex">Retiros<div class="circulo circulo-help ml-10" popover="Ingreso mensual por retiros en empresas en la que eres socio o dueÃ±o." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[3].monto != -1"> {{eess.estadoSituacion.ingresosSostenedor[3].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[3].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left">Otros ingresos</div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[4].monto != -1"> {{eess.estadoSituacion.ingresosSostenedor[4].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosSostenedor[4].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr></tbody></table></div></div></div></div><div class="clear mt-25 flex-center"><div class="col-xs-6 col-md-8 pl-10"><table class="table-main"><thead><tr ng-if="!eess.tengoSostenedor"><th class="text-left color-13">Total Ingreso lÃ­quido mensual</th><th class="text-right text-bold white-space--nowrap"> {{eess.totalLiquido | formatoMonedaEESS}} </th></tr><tr ng-if="eess.tengoSostenedor"><th class="text-left color-13">Total Ingreso lÃ­quido mensual</th><th class="text-right white-space--nowrap"> {{eess.totalLiquidoSostenedor | formatoMonedaEESS}} </th></tr></thead></table></div><div class="col-xs-6 col-md-4 pr-10"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalIngresoLiquidoMensual()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.btnContinuar(\'ingresoLiqMensual\'); eess.acorIngresoLiquidoMensual = false; eess.flgMsgGuardadoIngresoLiquidoMensual = false; eess.flechaIngresoSost = true" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div></accordion-group></accordion></div></article><article class="step done pr-0" data-step="3"><h3>Antecedentes CÃ³nyuge o Conviviente Civil</h3><div class="row"><div class="col-xs-12 mt-0"><article class="mb-10"><h5 class="text-bold px-12 mb-0">Este paso es opcional</h5><p class="px-12">Mientras mÃ¡s informaciÃ³n completes, mÃ¡s certera serÃ¡ la evaluaciÃ³n.</p></article></div><accordion close-others="true" class="panel-collapse__step col-xs-12"><accordion-group class="accordion-group mb-10" is-open="eess.acorAntecedentesConnyuge" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorAntecedentesConnyuge, \'panel-close\': !eess.acorAntecedentesConnyuge}"><accordion-heading><div class="title" ng-click="eess.flechaAntecedentesConyuge=!eess.flechaAntecedentesConyuge; eess.flechaIngresoConyuge = true">Antecedentes del cÃ³nyuge / Conviviente civil <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaAntecedentesConyuge,\'flecha-gris\': eess.flechaAntecedentesConyuge, \'ion-ios-arrow-up\': !eess.flechaAntecedentesConyuge}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoAntecedentesConnyuge" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-md-4 pl-15 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Rut</p></div><div class="col-xs-6 pr-0"><p ng-if="eess.estadoSituacion.datosPersonalesConyuge.rut" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonalesConyuge.rut + eess.estadoSituacion.datosPersonalesConyuge.dv | rut}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Apellido Paterno</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">{{eess.estadoSituacion.datosPersonalesConyuge.apellidoPaterno != null ? eess.estadoSituacion.datosPersonalesConyuge.apellidoPaterno : \'-\' }}</p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Apellido Materno</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonalesConyuge.apellidoMaterno != null ? eess.estadoSituacion.datosPersonalesConyuge.apellidoMaterno : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Nombres</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonalesConyuge.nombres != null ? eess.estadoSituacion.datosPersonalesConyuge.nombres : \'-\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">TelÃ©fono Particular</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonalesConyuge.celularParticular | formatoTelefonoEESS : \'+56\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">TelÃ©fono Laboral</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonalesConyuge.telefonoLaboral | formatoTelefonoEESS : \'+56\'}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Email</p></div><div class="col-xs-6 pr-0"><p ng-if="eess.estadoSituacion.datosPersonalesConyuge.email == null" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">-</p><p ng-if="eess.estadoSituacion.datosPersonalesConyuge.email.length < 19" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.datosPersonalesConyuge.email }} </p><p ng-if="eess.estadoSituacion.datosPersonalesConyuge.email.length > 18" class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" data-toggle="tooltip" data-placement="top" title="{{eess.estadoSituacion.datosPersonalesConyuge.email}}"> {{eess.estadoSituacion.datosPersonalesConyuge.email.substring(0, 17)}}<span ng-if="eess.estadoSituacion.datosPersonalesConyuge.email.length > 18">...</span></p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Nivel de Estudios</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.buscar(\'nivelEstudio\', eess.estadoSituacion.datosPersonalesConyuge.nivelEstudios)}} </p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Titulo profesional / carrera</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.estudiosConyuge.tituloCarrera != null ? eess.estadoSituacion.estudiosConyuge.tituloCarrera : \'-\'}} </p></div></div></div><div class="col-md-4 pl-15 pr-15"><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">Estado</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right">{{eess.buscar(\'actividadActual\', eess.estadoSituacion.estudiosConyuge.completitud) }}</p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">DuraciÃ³n de la Carrera</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.estudiosConyuge.duracion != 0 "> {{eess.estadoSituacion.estudiosConyuge.duracion != null ? eess.estadoSituacion.estudiosConyuge.duracion : \'-\'}} </p><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.estudiosConyuge.duracion == 0 ">-</p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">AÃ±o que cursa</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.estudiosConyuge.anoCursa != 0 "> {{eess.estadoSituacion.estudiosConyuge.anoCursa != null ? eess.estadoSituacion.estudiosConyuge.anoCursa : \'-\'}} </p><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right" ng-if="eess.estadoSituacion.estudiosConyuge.anoCursa == 0 ">-</p></div></div><div class="row ml-10 mr-10"><div class="col-xs-6 pr-0 pl-0"><p class="mb-10 mt-10 px-14">InstituciÃ³n Educacional</p></div><div class="col-xs-6 pr-0"><p class="mb-10 mt-10 text-color-11 px-14 text-bold text-right"> {{eess.estadoSituacion.estudiosConyuge.universidadIp != null ? eess.estadoSituacion.estudiosConyuge.universidadIp : \'-\'}} </p></div></div></div></div></div><div class="row mt-20 ml-15 mr-15"><div class="col-lg-12 padd-none"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalAntecedentesConyuge()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.acorIngresoLiquidoMensualConyuge = true; eess.acorAntecedentesConnyuge = false; eess.flgMsgGuardadoAntecedentesConnyuge = false; eess.flechaAntecedentesConyuge = true; eess.flechaIngresoConyuge = false" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div></accordion-group><accordion-group class="accordion-group mb-10" is-open="eess.acorIngresoLiquidoMensualConyuge" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorIngresoLiquidoMensualConyuge, \'panel-close\': !eess.acorIngresoLiquidoMensualConyuge}"><accordion-heading><div class="title" ng-click="eess.flechaIngresoConyuge=!eess.flechaIngresoConyuge; eess.flechaAntecedentesConyuge = true">Ingreso LÃ­quido Mensual del CÃ³nyuge / Conviviente Civil <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaIngresoConyuge,\'flecha-gris\': eess.flechaIngresoConyuge, \'ion-ios-arrow-up\': !eess.flechaIngresoConyuge}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoIngresoLiquidoMensualConyug" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10 flex-end"><div class="row flex-auto"><div class="col-xs-12 col-md-8"><table class="table-main"><thead><tr><th>Tipo</th><th class="text-right">Ingreso lÃ­quido mensual</th></tr></thead><tbody><tr><td class="border-bottom"><div class="text-left">Sueldo</div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[0].monto != -1"> {{eess.estadoSituacion.ingresosConyuge[0].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[0].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left display-flex">Honorarios<div class="circulo circulo-help ml-10" popover="Ingreso mensual que percibe una persona natural por realizar una actividad econÃ³mica o prestar sus servicios de manera personal ejerciendo su profesiÃ³n." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[1].monto != -1"> {{eess.estadoSituacion.ingresosConyuge[1].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[1].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left display-flex">Arriendo de mis propiedades<div class="circulo circulo-help ml-10" popover="Ingreso mensual que se percibe por el arriendo de propiedades." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[2].monto != -1"> {{eess.estadoSituacion.ingresosConyuge[2].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[2].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left display-flex">Retiros<div class="circulo circulo-help ml-10" popover="Ingreso mensual por retiros en empresas en la que eres socio o dueÃ±o." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[3].monto != -1"> {{eess.estadoSituacion.ingresosConyuge[3].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[3].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr><tr><td class="border-bottom"><div class="text-left">Otros ingresos</div></td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[4].monto != -1"> {{eess.estadoSituacion.ingresosConyuge[4].monto | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap" ng-if="eess.estadoSituacion.ingresosConyuge[4].monto == -1"> {{0 | formatoMonedaEESS}} </td></tr></tbody></table></div></div></div><div class="clear mt-25 flex-center"><div class="col-xs-6 col-md-8 pl-10"><table class="table-main"><thead><tr><td class="text-left color-13">Total Ingreso lÃ­quido mensual</td><td class="text-right white-space--nowrap"> {{eess.totalLiquidoConyuge | formatoMonedaEESS}} </td></tr></thead></table></div><div class="col-xs-6 col-md-4 pr-10"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalIngresoLiquidoMensualConyuge()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.acorActivos = true; eess.acorIngresoLiquidoMensualConyuge = false; eess.flgMsgGuardadoIngresoLiquidoMensualConyug = false; eess.flechaIngresoConyuge = true; eess.flechaActivos = false" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div></accordion-group></accordion><!-- <label ng-if="eess.estadoSituacion.datosPersonales.estadoCivil != 2"> No es\n                            casado o conviviente\n                            civil. </label> --></div></article><article class="step done pr-0" data-step="4"><h3 class="display-flex">Tus Activos y ParticipaciÃ³n en Sociedades</h3><div class="row"><div class="col-xs-12 mt-0"><article class="mb-10"><h5 class="text-bold px-12 mb-0">Este paso es Opcional, pero si eres "Socio de Empresa" los campos en ParticipaciÃ³n en Sociedades serÃ¡n Obligatorios</h5><p class="px-12">Mientras mÃ¡s informaciÃ³n completes, mÃ¡s certera serÃ¡ tu evaluaciÃ³n.</p></article></div><accordion close-others="true" class="panel-collapse__step col-xs-12"><accordion-group class="accordion-group mb-10" is-open="eess.acorActivos" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorActivos, \'panel-close\': !eess.acorActivos}"><accordion-heading><div class="title justify-content-space-between" ng-click="eess.flechaActivos=!eess.flechaActivos; eess.flechaParticipacion = true"><span class="flex-center">Activos<div class="circulo circulo-help display-inline-flex ml-10" popover="Completar los siguientes datos respecto del conjunto de activos que dispones." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty" style="color: #fff !important; font-size: 26px !important"></i></div></span><i class="flex-right pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaActivos,\'flecha-gris\': eess.flechaActivos, \'ion-ios-arrow-up\': !eess.flechaActivos}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoActivos" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-xs-12"><div class="col-xs-12 col-md-12 padd-none"><h2>Bienes RaÃ­ces</h2><table class="table-main"><thead><tr><th class="text-left">DescripciÃ³n</th><th class="text-left">DirecciÃ³n</th><th class="text-left">NÃºmero Rol</th><th class="text-left">Hipoteca</th><th class="text-right mw-120">Valor Cuota</th><th class="text-right mw-120">Saldo Deuda</th><th class="text-right mw-120">Valor Comercial</th></tr></thead><tbody class="empty"><tr ng-if="eess.estadoSituacion.activosBienesRaices.length == 0"><td class="border-bottom text-center">-</td><td class="border-bottom text-center">-</td><td class="border-bottom text-center">-</td><td class="border-bottom text-center">-</td><td class="border-bottom text-right">-</td><td class="border-bottom text-right">-</td><td class="border-bottom text-right">-</td></tr><tr ng-repeat=" bien in  eess.estadoSituacion.activosBienesRaices" ng-if="eess.estadoSituacion.activosBienesRaices.length > 0"><td class="text-left border-bottom"> {{eess.buscar(\'bienes\', bien.tipo)}}</td><td class="text-left border-bottom">{{bien.calle}} {{bien.numero}} {{bien.comuna.descripcion}} {{bien.ciudad.descripcion}} </td><td class="text-left border-bottom">{{bien.numeroRol}}</td><td class="text-left border-bottom">{{bien.hipoteca == true ? \'Si\' : \'No\' }}</td><td class="text-right border-bottom white-space--nowrap">{{bien.valorCuota | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap">{{bien.saldoDeuda | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap">{{bien.valorComercial | formatoMonedaEESS}} </td></tr></tbody></table></div><div class="col-xs-12 col-md-8 padd-none"><h2 class="mt-25">Inversiones</h2><p>SÃ³lo debes agregar Inversiones en pesos chilenos que mantengas con instituciones que no sean Banco de Chile</p><table class="table-main"><thead><tr><th class="text-left wp-25">DescripciÃ³n</th><th class="text-left wp-35">InstituciÃ³n</th><th class="text-right wp-40">Valor Comercial</th></tr></thead><tbody class="empty"><tr ng-if="eess.estadoSituacion.activosInversiones.length == 0"><td class="border-bottom text-left">-</td><td class="border-bottom text-left">-</td><td class="border-bottom text-right">-</td></tr><tr ng-repeat="lista in eess.estadoSituacion.activosInversiones track by $index"><td class="text-left border-bottom"> {{eess.buscar(\'inversion\', lista.tipo)}}</td><td class="text-left border-bottom">{{lista.institucion}}</td><td class="text-right border-bottom white-space--nowrap"> {{lista.valorComercion | formatoMonedaEESS}} </td></tr></tbody></table></div><div class="col-xs-12 col-md-12 padd-none"><h2 class="mt-25">VehÃ­culos</h2><table class="table-main"><thead><tr><th class="text-left">Tipo</th><th class="text-left">DescripciÃ³n</th><th class="text-left">Patente</th><th class="text-left">Prenda</th><th class="text-right mw-120">Valor Cuota</th><th class="text-right mw-120">Saldo Deuda</th><th class="text-right mw-120">Valor Comercial</th></tr></thead><tbody><tr ng-if=" eess.estadoSituacion.activosVehiculos.length == 0"><td class="border-bottom text-left">-</td><td class="border-bottom text-left">-</td><td class="border-bottom text-left">-</td><td class="border-bottom text-left">-</td><td class="border-bottom text-right">-</td><td class="border-bottom text-right">-</td><td class="border-bottom text-right">-</td></tr><tr ng-repeat="lista in eess.estadoSituacion.activosVehiculos track by $index"><td class="text-left border-bottom"> {{ eess.buscar(\'vehiculo\', lista.tipo) }}</td><td class="text-left border-bottom">{{lista.marca}} {{lista.modelo}} {{lista.ano}}</td><td class="text-left border-bottom">{{lista.patente}}</td><td class="text-left border-bottom">{{lista.prenda == true ? \'Si\' : \'No\'}}</td><td class="text-right border-bottom white-space--nowrap"> {{lista.valorCuota | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap"> {{lista.saldoDeuda | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap"> {{lista.valorComercial | formatoMonedaEESS}} </td></tr></tbody></table></div><div class="col-xs-12 col-md-8 padd-none"><h2 class="mt-25">Otros activos</h2><table class="table-main"><thead><tr><th class="text-left wp-50">DescripciÃ³n</th><th class="text-right wp-50">Valor Comercial</th></tr></thead><tbody><tr ng-if="eess.estadoSituacion.activosOtros.length == 0"><td class="border-bottom text-left">-</td><td class="border-bottom text-right">-</td></tr><tr ng-repeat="lista in eess.estadoSituacion.activosOtros track by $index"><td class="text-left border-bottom">{{lista.descripcion}}</td><td class="text-right border-bottom white-space--nowrap"> {{lista.valorComercial | formatoMonedaEESS}} </td></tr></tbody></table></div></div></div></div><div class="mt-25 clear-left flex-center"><div class="col-xs-6 col-md-8 pl-10 pr-0"><table class="table-main"><thead><tr><th width="50%" class="text-left color-13">Total Valor Comercial Activos</th><th width="50%" class="text-right white-space--nowrap"> {{ eess.totaltotalActivos | formatoMonedaEESS}} </th></tr></thead></table></div><div class="col-xs-6 col-md-4 pr-10"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalActivos()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.acorPartSociedades = true; eess.acorActivos = false; eess.flgMsgGuardadoActivos = false; eess.flechaActivos = true; eess.flechaParticipacion = false" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div></accordion-group><accordion-group class="accordion-group mb-10" is-open="eess.acorPartSociedades" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorPartSociedades, \'panel-close\': !eess.acorPartSociedades}"><accordion-heading><div class="title" ng-click="eess.flechaParticipacion=!eess.flechaParticipacion; eess.flechaActivos = true">ParticipaciÃ³n en sociedades <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaParticipacion,\'flecha-gris\': eess.flechaParticipacion, \'ion-ios-arrow-up\': !eess.flechaParticipacion}"></i></div></accordion-heading><div class="bch-mensaje-empresas information mt-0" ng-click="eess.flgMsgGuardadoParticipacionSociedades = false;" ng-if="eess.flgMsgGuardadoParticipacionSociedades"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-xs-12 col-md-12"><p>Para efectos del lÃ­mite legal de endeudamiento (arts. 84 y 85 de la Ley General de Bancos), declaro ser socio, accionista o tener una participaciÃ³n superior al 2% del capital, en las siguientes sociedades o comunidades</p><table class="table-main"><thead><tr><th class="text-left">RazÃ³n social</th><th class="text-right">Rut</th><th class="text-right">Patrimonio de la Sociedad</th><th class="text-right mw-200">Porcentaje de participaciÃ³n</th><th class="text-right mw-200">Monto de la participaciÃ³n</th></tr></thead><tbody><tr ng-if="eess.activosSociedades.length == 0"><td class="border-bottom text-left">-</td><td class="border-bottom text-right">-</td><td class="border-bottom text-right">-</td><td class="border-bottom text-right">-</td><td class="border-bottom text-right">-</td></tr><tr ng-repeat=" sociedad in  eess.activosSociedades" ng-if="eess.activosSociedades.length > 0"><td class="text-left border-bottom"> {{ sociedad.razonSocial}}</td><td class="text-right border-bottom">{{sociedad.rut | rut}}</td><td class="text-right border-bottom white-space--nowrap">{{sociedad.patrimonio | formatoMonedaEESS}} </td><td class="text-right border-bottom white-space--nowrap">{{sociedad.participacion}}%</td><td class="text-right border-bottom white-space--nowrap"> {{sociedad.montoParticipacion | formatoMonedaEESS}} </td></tr></tbody></table></div></div></div><div class="clear flex-center mt-25"><div class="col-xs-6 col-md-8 pl-10 pr-0"><table class="table-main"><thead><tr><th width="50%" class="text-left">Total Montos de ParticipaciÃ³n en Sociedades</th><th width="50%" class="text-right white-space--nowrap"> {{eess.totalSociedades | formatoMonedaEESS}} </th></tr></thead></table></div><div class="col-xs-6 col-md-4 pr-10"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalParticipacionSociedades()"><i class="ion-edit px-16 mr-5"></i> <span>Editar</span></button> <button ng-click="eess.acorPasivos = true; eess.acorPartSociedades = false; eess.flgMsgGuardadoActivos = false; eess.flechaParticipacion = true; eess.flechaPasivos = false" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div><!--<div class="mt-25">\n                                    <div class="col-md-12 pr-10">\n                                        <div class="text-right">\n                                            <button type="button" class="btn info btn-confirm pt-8 pb-8"\n                                                    ng-click="eess.openModalParticipacionSociedades()">\n                                                <i class="ion-edit px-16 mr-5"></i>\n                                                <span>Editar</span>\n                                            </button>\n                                            <button\n                                                    ng-click="eess.acorPasivos = true; eess.acorPartSociedades = false; eess.flgMsgGuardadoActivos = false; eess.flechaParticipacion = true; eess.flechaPasivos = false"\n                                                    type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>--></accordion-group></accordion></div></article><article class="step done pr-0" data-step="5"><h3 class="display-flex">Tus Pasivos<div class="circulo circulo-help ml-10" popover="Indicar valor (monto) que suman las deudas y compromisos que como individuo ha asumido con terceros, como bancos, entidades crediticias, empleador, entre otros." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty" style="color: #fff !important; font-size: 26px !important"></i></div></h3><div class="row"><div class="col-xs-12"><h3 class="text-color-1">SÃ³lo debes agregar pasivos con Instituciones que no sean Banco de Chile.</h3><div class="mt-0"><article class="mb-10"><h5 class="text-bold px-12 mb-0">Este paso es Opcional</h5><p class="px-12">Mientras mÃ¡s informaciÃ³n completes, mÃ¡s certera serÃ¡ la evaluaciÃ³n.</p></article></div></div><accordion close-others="true" class="panel-collapse__step col-xs-12"><accordion-group class="accordion-group mb-10" is-open="eess.acorPasivos" ng-click="eess.ocultarMensajesGuardado();" ng-class="{\'panel-open\': eess.acorPasivos, \'panel-close\': !eess.acorPasivos}"><accordion-heading><div class="title" ng-click="eess.flechaPasivos=!eess.flechaPasivos">Pasivos <i class="pull-right icon px-20" ng-class="{\'ion-ios-arrow-down\': eess.flechaPasivos,\'flecha-gris\': eess.flechaPasivos, \'ion-ios-arrow-up\': !eess.flechaPasivos}"></i></div></accordion-heading><div ng-show="eess.flgMsgGuardadoPasivos" class="bch-mensaje-empresas information mt-0"><article><h5>Los cambios se han guardado exitosamente</h5><p>Confirma los datos para continuar</p></article></div><div class="clear mt-5 pl-10 pr-10"><div class="row"><div class="col-xs-12 col-md-12"><div class="mb-30"><table class="table-main"><thead><tr><th class="text-left">Tipo de crÃ©dito</th><th class="text-left">InstituciÃ³n</th><th class="text-left">Deuda Directa (SÃ­ / No)</th><th class="text-right mw-150">Monto/Cupo</th><th class="text-right mw-150">Valor cuota mensual</th></tr></thead><tbody class="empty" ng-if="!eess.lineaCredito.length &&\n                                                        !eess.tarjetaCredito.length &&\n                                                        !eess.creditoHipotecario.length &&\n                                                        !eess.creditoAutomotriz.length &&\n                                                        !eess.creditoCuotas.length &&\n                                                        !eess.creditoComercial.length"><tr><td class="text-left border-bottom">LÃ­neas de crÃ©dito</td><td class="text-left border-bottom">-</td><td class="text-left border-bottom">-</td><td class="text-right border-bottom">-</td><td class="text-right border-bottom">-</td></tr><tr><td class="text-left border-bottom">Tarjetas de crÃ©dito</td><td class="text-left border-bottom">-</td><td class="text-left border-bottom">-</td><td class="text-right border-bottom">-</td><td class="text-right border-bottom">-</td></tr><tr><td class="text-left border-bottom">CrÃ©dito Hipotecario</td><td class="text-left border-bottom">-</td><td class="text-left border-bottom">-</td><td class="text-right border-bottom">-</td><td class="text-right border-bottom">-</td></tr><tr><td class="text-left border-bottom">CrÃ©dito Automotriz</td><td class="text-left border-bottom">-</td><td class="text-left border-bottom">-</td><td class="text-right border-bottom">-</td><td class="text-right border-bottom">-</td></tr><tr><td class="text-left border-bottom">CrÃ©dito en Cuotas</td><td class="text-left border-bottom">-</td><td class="text-left border-bottom">-</td><td class="text-right border-bottom">-</td><td class="text-right border-bottom">-</td></tr><tr><td class="text-left border-bottom">CrÃ©dito Comercial</td><td class="text-left border-bottom">-</td><td class="text-left border-bottom">-</td><td class="text-right border-bottom">-</td><td class="text-right border-bottom">-</td></tr></tbody><tbody ng-if="eess.lineaCredito.length"><tr><!-- el numero del rowspan debe ser dinamico, dependiendo de l cantida de lineas, esto para cada rowspan aplicado en pasivos --><td rowspan="{{eess.lineaCredito.length}}" class="text-left border-bottom">LÃ­neas de crÃ©dito</td><td ng-class="{ \'border-bottom\' : eess.lineaCredito.length === 1 }" class="text-left">{{eess.lineaCredito[0].institucion}} </td><td ng-class="{ \'border-bottom\' : eess.lineaCredito.length === 1 }" class="text-left">{{eess.lineaCredito[0].deudaDirecta}} </td><td ng-class="{ \'border-bottom\' : eess.lineaCredito.length === 1 }" class="text-right white-space--nowrap"> {{eess.lineaCredito[0].montoCupo | formatoMonedaEESS}} </td><td ng-class="{ \'border-bottom\' : eess.lineaCredito.length === 1 }" class="text-right white-space--nowrap"> {{eess.lineaCredito[0].valorCuotaMensual | formatoMonedaEESS}} </td></tr><tr ng-repeat="lista in eess.lineaCredito | limitTo: (1 - eess.lineaCredito.length) track by $index"><td ng-class="{\'border-bottom\': ($index + 2) == eess.lineaCredito.length }" class="text-left">{{lista.institucion}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.lineaCredito.length }" class="text-left">{{lista.deudaDirecta}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.lineaCredito.length }" class="text-right white-space--nowrap"> {{lista.montoCupo | formatoMonedaEESS}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.lineaCredito.length }" class="text-right white-space--nowrap"> {{lista.valorCuotaMensual | formatoMonedaEESS}} </td></tr></tbody><tbody ng-if="eess.tarjetaCredito.length"><tr><td rowspan="{{eess.tarjetaCredito.length}}" class="text-left border-bottom">Tarjetas de crÃ©dito</td><td ng-class="{ \'border-bottom\' : eess.tarjetaCredito.length === 1 }" class="text-left">{{eess.tarjetaCredito[0].institucion}} </td><td ng-class="{ \'border-bottom\' : eess.tarjetaCredito.length === 1 }" class="text-left">{{eess.tarjetaCredito[0].deudaDirecta}} </td><td ng-class="{ \'border-bottom\' : eess.tarjetaCredito.length === 1 }" class="text-right white-space--nowrap"> {{eess.tarjetaCredito[0].montoCupo | formatoMonedaEESS}} </td><td ng-class="{ \'border-bottom\' : eess.tarjetaCredito.length === 1 }" class="text-right white-space--nowrap"> {{eess.tarjetaCredito[0].valorCuotaMensual | formatoMonedaEESS}} </td></tr><tr ng-repeat="lista in eess.tarjetaCredito | limitTo: (1 - eess.tarjetaCredito.length) track by $index"><td ng-class="{\'border-bottom\': ($index + 2) == eess.tarjetaCredito.length }" class="text-left">{{lista.institucion}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.tarjetaCredito.length }" class="text-left">{{lista.deudaDirecta}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.tarjetaCredito.length }" class="text-right white-space--nowrap"> {{lista.montoCupo | formatoMonedaEESS}} </td><td ng-class="{\'border-bottom\': ($index + 2) == eess.tarjetaCredito.length }" class="text-right white-space--nowrap"> {{lista.valorCuotaMensual | formatoMonedaEESS}} </td></tr></tbody><tbody ng-if="eess.creditoHipotecario.length"><tr><td rowspan="{{eess.creditoHipotecario.length}}" class="text-left border-bottom">CrÃ©dito Hipotecario</td><td ng-class="{ \'border-bottom\' : eess.creditoHipotecario.length === 1 }" class="text-left"> {{eess.creditoHipotecario[0].institucion}} </td><td ng-class="{ \'border-bottom\' : eess.creditoHipotecario.length === 1 }" class="text-left"> {{eess.creditoHipotecario[0].deudaDirecta}} </td><td ng-class="{ \'border-bottom\' : eess.creditoHipotecario.length === 1 }" class="text-right white-space--nowrap"> {{eess.creditoHipotecario[0].montoCupo | formatoMonedaEESS}} </td><td ng-class="{ \'border-bottom\' : eess.creditoHipotecario.length === 1 }" class="text-right white-space--nowrap"> {{eess.creditoHipotecario[0].valorCuotaMensual | formatoMonedaEESS}} </td></tr><tr ng-repeat="lista in eess.creditoHipotecario | limitTo: (1 - eess.creditoHipotecario.length) track by $index"><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoHipotecario.length }" class="text-left">{{lista.institucion}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoHipotecario.length }" class="text-left">{{lista.deudaDirecta}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoHipotecario.length }" class="text-right white-space--nowrap"> {{lista.montoCupo | formatoMonedaEESS}} </td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoHipotecario.length }" class="text-right white-space--nowrap"> {{lista.valorCuotaMensual | formatoMonedaEESS}} </td></tr></tbody><tbody ng-if="eess.creditoAutomotriz.length"><tr><td rowspan="{{eess.creditoAutomotriz.length}}" class="text-left border-bottom">CrÃ©dito Automotriz</td><td ng-class="{ \'border-bottom\' : eess.creditoAutomotriz.length === 1 }" class="text-left">{{eess.creditoAutomotriz[0].institucion}} </td><td ng-class="{ \'border-bottom\' : eess.creditoAutomotriz.length === 1 }" class="text-left"> {{eess.creditoAutomotriz[0].deudaDirecta}} </td><td ng-class="{ \'border-bottom\' : eess.creditoAutomotriz.length === 1 }" class="text-right white-space--nowrap"> {{eess.creditoAutomotriz[0].montoCupo | formatoMonedaEESS}} </td><td ng-class="{ \'border-bottom\' : eess.creditoAutomotriz.length === 1 }" class="text-right white-space--nowrap"> {{eess.creditoAutomotriz[0].valorCuotaMensual | formatoMonedaEESS}} </td></tr><tr ng-repeat="lista in eess.creditoAutomotriz | limitTo: (1 - eess.creditoAutomotriz.length) track by $index"><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoAutomotriz.length }" class="text-left">{{lista.institucion}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoAutomotriz.length }" class="text-left">{{lista.deudaDirecta}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoAutomotriz.length }" class="text-right white-space--nowrap"> {{lista.montoCupo | formatoMonedaEESS}} </td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoAutomotriz.length }" class="text-right white-space--nowrap"> {{lista.valorCuotaMensual | formatoMonedaEESS}} </td></tr></tbody><tbody ng-if="eess.creditoCuotas.length"><tr><td rowspan="{{eess.creditoCuotas.length}}" class="text-left border-bottom">CrÃ©dito en Cuotas</td><td ng-class="{ \'border-bottom\' : eess.creditoCuotas.length === 1 }" class="text-left">{{eess.creditoCuotas[0].institucion}} </td><td ng-class="{ \'border-bottom\' : eess.creditoCuotas.length === 1 }" class="text-left">{{eess.creditoCuotas[0].deudaDirecta}} </td><td ng-class="{ \'border-bottom\' : eess.creditoCuotas.length === 1 }" class="text-right white-space--nowrap"> {{eess.creditoCuotas[0].montoCupo | formatoMonedaEESS}} </td><td ng-class="{ \'border-bottom\' : eess.creditoCuotas.length === 1 }" class="text-right white-space--nowrap"> {{eess.creditoCuotas[0].valorCuotaMensual | formatoMonedaEESS}} </td></tr><tr ng-repeat="lista in eess.creditoCuotas | limitTo: (1 - eess.creditoCuotas.length) track by $index"><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoCuotas.length }" class="text-left">{{lista.institucion}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoCuotas.length }" class="text-left">{{lista.deudaDirecta}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoCuotas.length }" class="text-right white-space--nowrap"> {{lista.montoCupo | formatoMonedaEESS}} </td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoCuotas.length }" class="text-right white-space--nowrap"> {{lista.valorCuotaMensual | formatoMonedaEESS}} </td></tr></tbody><tbody ng-if="eess.creditoComercial.length"><tr><td rowspan="{{eess.creditoComercial.length}}" class="text-left border-bottom">CrÃ©dito Comercial</td><td ng-class="{ \'border-bottom\' : eess.creditoComercial.length === 1 }" class="text-left">{{eess.creditoComercial[0].institucion}} </td><td ng-class="{ \'border-bottom\' : eess.creditoComercial.length === 1 }" class="text-left"> {{eess.creditoComercial[0].deudaDirecta}} </td><td ng-class="{ \'border-bottom\' : eess.creditoComercial.length === 1 }" class="text-right white-space--nowrap"> {{eess.creditoComercial[0].montoCupo | formatoMonedaEESS}} </td><td ng-class="{ \'border-bottom\' : eess.creditoComercial.length === 1 }" class="text-right white-space--nowrap"> {{eess.creditoComercial[0].valorCuotaMensual | formatoMonedaEESS}} </td></tr><tr ng-repeat="lista in eess.creditoComercial | limitTo: (1 - eess.creditoComercial.length) track by $index"><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoComercial.length }" class="text-left">{{lista.institucion}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoComercial.length }" class="text-left">{{lista.deudaDirecta}}</td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoComercial.length }" class="text-right white-space--nowrap"> {{lista.montoCupo | formatoMonedaEESS}} </td><td ng-class="{\'border-bottom\': ($index + 2) == eess.creditoComercial.length }" class="text-right white-space--nowrap"> {{lista.valorCuotaMensual | formatoMonedaEESS}} </td></tr></tbody></table></div></div></div></div><div class="clear mt-5 flex-center"><div class="row wp-100"><div class="col-xs-12 col-md-12 ml-15 pl-10 pr-10"><table class="table-main"><thead><tr><th width="60%" class="text-left text-bold color-13" colspan="3">Total Valor Comercial Otros Pasivos</th><th width="20%" class="text-right text-bold white-space--nowrap"> {{eess.totalMontoPasivo | formatoMonedaEESS}} </th><th width="20%" class="text-right text-bold white-space--nowrap"> {{eess.totalCuotaPasivo | formatoMonedaEESS}} </th></tr></thead></table></div><div class="col-xs-12 col-md-12 ml-15 pt-15 pr-10"><div class="text-right"><button type="button" class="btn info btn-confirm pt-8 pb-8" ng-click="eess.openModalPasivos()"><i class="ion-edit px-16 mr-5"></i> <span ng-click="eess.openAsideCargosPublicos(\'md\')">Editar</span></button> <button ng-click="eess.acorContacto = true; eess.acorPasivos = false; eess.flgMsgGuardadoPasivos = false; eess.flechaPasivos = true" type="button" class="btn primary btn-confirm pt-10 pb-10">Continuar</button></div></div></div></div></accordion-group></accordion><div class="col-xs-12" ng-if="eess.msjCompletaPasoUnoDos"><div class="bch-mensaje-empresas information mt-0"><article><p>Ten en cuenta que para poder continuar, deberÃ¡s completar todas las secciones obligatorias.</p></article></div></div></div></article></section><div class="row ml-100"><div class="col-xs-12 text-right"><a type="button" class="btn info btn-confirm pt-10 pb-10" ng-click="eess.guardarBorrador()">Guardar Borrador y Salir</a> <button class="btn primary btn-confirm mr-0 btn w-150 pt-10 pb-10" ng-disabled="!eess.continuarProceso" ng-click="eess.validaActividadPrincipal()">Continuar</button></div></div></div></div><div class="row" style="display: grid" ng-if="eess.indicarPantalla == 2 && eess.esPrivado"><adjuntar-documentos-directive></adjuntar-documentos-directive></div><div class="row" style="display: grid" ng-if="eess.indicarPantalla == 2 && !eess.esPrivado"><adjuntar-documentos-directive></adjuntar-documentos-directive></div></div>');
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/actividad-actual-conyuge/actividad-actual-conyuge.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/actividad-actual-conyuge/actividad-actual-conyuge.tpl.html", '<div class="ui-minerva estado-situacion"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Actividad Actual Conyuge</h3><button class="btn info close-modal" ng-click="modActActCony.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActActCony.severidad}}" ng-if="modActActCony.errorModal"><article><b>Ha ocurrido un error</b><br>{{modActActCony.mensajeErrorModal}} </article></div></div><form name="modActActConyForm"><!-- CONTENT MODAL --><section class="modal-info"><article class="step pr-0" data-step="2"><!-- <h3>Actividad del cÃ³nyuge / conviviente civil</h3> --><div class="row"><div class="col-xs-12 mt-10"><div class="row ml-5 mr-5"><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Â¿CuÃ¡l es su actividad del cÃ³nyuge?</label><ui-select ng-model="modActActCony.estadoSituacion.estadoSituacion.datosPersonalesConyuge.actividadActual"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modActActCony.actividadActual | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select></div></div><div class="row hidden"><div class="col-xs-12"><p class="text-nowrap text-ellipsis px-16 text-color-4 mt-15 mb-20">Cuenta joven y cÃ³nyuge</p><label class="text-nowrap text-ellipsis">Rut(s) de sostenedor(es) para cuenta joven y cÃ³nyuge <a class="text-color-5 px-16 ml-5" href="javascript:void(0);"><i class="ion-ios-help-outline"></i></a></label></div><!-- REPETIR ESTE ELEMENTO AL HACER CLICK EN EL BOTÃ“N --><div class="form-group col-xs-4"><input type="text" class="form-control" placeholder="Ingresar"></div><!-- REPETIR ESTE ELEMENTO AL HACER CLICK EN EL BOTÃ“N --><div class="form-group col-xs-4"><a class="btn-fill info-btn" href="javascript:void(0);"><div class="cont-animacion"><span></span> <i class="ion-ios-plus-empty"></i></div><span class="btn-link">Agregar otro sostenedor</span></a></div></div><div class="row ml-5 mr-5" ng-if="modActActCony.estadoSituacion.estadoSituacion.datosPersonalesConyuge.actividadActual == 1"><div class="col-xs-12"><p class="text-nowrap text-ellipsis px-16 text-color-4 mt-15 mb-20">Empleo Actual (Si eres trabajador dependiente)</p></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Nivel ocupacional</label><ui-select ng-model="modActActCony.estadoSituacion.estadoSituacion.actualDependienteConyuge.nivel"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modActActCony.nivelDependiente | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Nombre de la empresa/instituciÃ³n</label><input name="nombreEmpresaInput" pattern="[a-zA-Z ]*" ng-model="modActActCony.estadoSituacion.estadoSituacion.actualDependienteConyuge.nombreEmpresa" type="text" class="form-control" placeholder="Ingresar"> <small class="invalid ng-binding" ng-if="modActActConyForm.nombreEmpresaInput.$error.pattern && modActActConyForm.nombreEmpresaInput.$dirty">No se pueden ingresar nÃºmeros o caracteres especiales a este campo.</small></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Rut de empresa/instituciÃ³n</label><rut-input name="rutEmpresaInput" class="form-control" pattern="[0-9]+([\\dkK])$" ng-model="modActActCony.estadoSituacion.estadoSituacion.actualDependienteConyuge.rutEmpresa"><small class="invalid ng-binding" ng-if="modActActConyForm.rutEmpresaInput.$error.rut || modActActConyForm.rutEmpresaInput.$error.pattern">Debe ingresar un rut vÃ¡lido.</small></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Â¿Es Socio?</label><ui-select ng-model="modActActCony.estadoSituacion.estadoSituacion.actualDependienteConyuge.socio"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.valor as lista in (modActActCony.tipoSocio | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Giro de la empresa/instituciÃ³n <a class="text-color-5 px-16 ml-5" href="javascript:void(0);"><i class="ion-ios-help-outline"></i></a></label><input name="giroEmpresaInput" pattern="[a-zA-Z ]*" ng-model="modActActCony.estadoSituacion.estadoSituacion.actualDependienteConyuge.giroEmpresa" type="text" class="form-control" placeholder="Ingresar"> <small class="invalid ng-binding" ng-if="modActActConyForm.giroEmpresaInput.$error.pattern && modActActConyForm.giroEmpresaInput.$dirty">No se pueden ingresar nÃºmeros o caracteres especiales a este campo.</small></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Cargo</label><input name="cargoInput" required pattern="[a-zA-Z ]*" ng-model="modActActCony.estadoSituacion.estadoSituacion.actualDependienteConyuge.cargo" type="text" class="form-control" placeholder="Ingresar"> <small class="invalid ng-binding" ng-if="modActActConyForm.cargoInput.$error.required && modActActConyForm.cargoInput.$dirty">Debe ingresar un cargo.</small> <small class="invalid ng-binding" ng-if="modActActConyForm.cargoInput.$error.pattern && modActActConyForm.cargoInput.$dirty">No se pueden ingresar nÃºmeros o caracteres especiales a este campo.</small></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Fecha de ingreso</label><p class="input-group mb-0"><input name="fecIngresoCal" type="text" required disabled="disabled" class="form-control" show-button-bar="false" datepicker-popup="dd-MM-yyyy" ng-model="modActActCony.estadoSituacion.estadoSituacion.actualDependienteConyuge.inicio" is-open="modActActCony.calIngresoDependiente" datepicker-options="false" close-text="Close" show-weeks="false" placeholder="Ej: 21/12/2018"> <span class="input-group-btn"><button type="button" class="btn border" ng-click="modActActCony.datepicker($event, \'ingresoDependiente\')"><i class="ion-calendar"></i></button></span></p><small class="invalid ng-binding" ng-if="modActActConyForm.fecIngresoCal.$invalid && modActActConyForm.fecIngresoCal.$dirty">Debe ingresar una fecha de ingreso.</small></div></div><div class="row ml-5 mr-5" ng-if="modActActCony.estadoSituacion.estadoSituacion.datosPersonalesConyuge.actividadActual == 2"><div class="col-xs-12"><p class="text-nowrap text-ellipsis px-16 text-color-4 mt-15 mb-20">Empleo Actual (Si eres trabajador independiente)</p></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Â¿Nivel ocupacional?</label><ui-select ng-model="modActActCony.estadoSituacion.estadoSituacion.actualIndependienteConyuge.nivel"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modActActCony.nivelIndependiente | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Actividad</label><input name="actividadInput" type="text" class="form-control" pattern="[a-zA-Z ]*" required ng-model="modActActCony.estadoSituacion.estadoSituacion.actualIndependienteConyuge.actividad" placeholder="Ingresar"> <small class="invalid ng-binding" ng-if="modActActConyForm.actividadInput.$error.required && modActActConyForm.actividadInput.$dirty">Debe ingresar una fecha de ingreso.</small> <small class="invalid ng-binding" ng-if="modActActConyForm.actividadInput.$error.pattern && modActActConyForm.actividadInput.$dirty">No se pueden ingresar nÃºmeros o caracteres especiales a este campo.</small></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Inicio de Actividades</label><p class="input-group mb-0"><input name="FecActividadesCal" type="text" required disabled="disabled" class="form-control" show-button-bar="false" datepicker-popup="dd-MM-yyyy" ng-model="modActActCony.estadoSituacion.estadoSituacion.actualIndependienteConyuge.inicio" is-open="modActActCony.calActIndependientes" datepicker-options="false" close-text="Close" show-weeks="false" placeholder="Ej: 21/12/2018"> <span class="input-group-btn"><button type="button" class="btn border" ng-click="modActActCony.datepicker($event, \'actIndependientes\')"><i class="ion-calendar"></i></button></span></p><small class="invalid ng-binding" ng-if="modActActConyForm.FecActividadesCal.$invalid">Debe ingresar una fecha de inicio de actividades.</small></div></div></div></div></article></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActActCony.severidad}}" ng-if="modActActCony.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modActActCony.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modActActCony.close()">Cancelar </a><button class="btn primary mr-0 pt-10 pb-10" ng-disabled="modActActConyForm.$invalid || modActActConyForm.$pristine" ng-click="modActActCony.guardar();">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/actividad-actual/actividad-actual.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/actividad-actual/actividad-actual.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info"><h3 class="modal-title pull-left">Actividad Principal</h3><button class="btn info close-modal" ng-click="modActAct.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActAct.severidad}}" ng-if="modActAct.errorModal"><article><b>Ha ocurrido un error</b><br>{{modActAct.mensajeErrorModal}} </article></div></div><form name="modActAct.userForm" novalidate><!-- CONTENT MODAL --><section class="modal-info"><div class="row mt-20"><div class="col-xs-12 pr-0"><div class="row ml-5 mr-5"><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Actividad Principal *</label><ui-select ng-change="modActAct.resetearCamposDependienteIndependiente($select.selected.id)" onkeypress="return false" ng-model="modActAct.estadoSituacion.actividadActual"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modActAct.actividadActual | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><label style="display:none">Actividad *</label></div><div class="col-xs-12 col-sm-6 col-md-4 form-group" ng-if="modActAct.estadoSituacion.actividadActual == 10"><label class="text-nowrap text-ellipsis">Otra actividad *</label><input ng-model="modActAct.estadoSituacion.otraActividad" type="text" maxlength="50" name="otraActividad" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9\'Â´&,.\\s]*$/" class="form-control" placeholder="Ingresar" required> <small class="invalid ng-binding" ng-show="modActAct.userForm.otraActividad.$error.required && modActAct.userForm.otraActividad.$touched">Debe ingresar otra actividad. </small><small class="invalid ng-binding" ng-show="modActAct.userForm.otraActividad.$error.pattern">Formato ingresado no es correcto.</small></div></div><div class="row ml-5 mr-5" ng-if="modActAct.estadoSituacion.actividadActual == 1"><!-- <div class="col-xs-12">\n                        <p class="text-nowrap text-ellipsis px-16 text-color-4 mt-15 mb-20">Empleo Actual (Si eres\n                          trabajador dependiente)</p>\n                      </div> --><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Nombre del empleador *</label><input ng-model="modActAct.estadoSituacion.actividadDependiente.nombreEmpresa" type="text" maxlength="50" pattern="^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9&\'Â´.,\\s]*$" class="form-control" placeholder="Ingrese" required name="actActNombreEmpleador"> <small class="invalid ng-binding" ng-show="modActAct.userForm.actActNombreEmpleador.$error.required && (modActAct.userForm.actActNombreEmpleador.$dirty || modActAct.userForm.actActNombreEmpleador.$touched)">Debe ingresar nombre del empleador. </small><small class="invalid ng-binding position-abs" ng-if="modActAct.userForm.actActNombreEmpleador.$error.pattern && modActAct.userForm.actActNombreEmpleador.$dirty">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Rut del empleador *</label><div><input ng-rut-eess name="rutEmpleador" required class="form-control" maxlength="12" placeholder="Ingrese" ng-model="modActAct.estadoSituacion.actividadDependiente.rutEmpresa" ng-change="modActAct.validarRut()"></div><small class="invalid ng-binding position-abs" ng-if="modActAct.userForm.rutEmpleador.$error.required && (modActAct.userForm.rutEmpleador.$touched || modActAct.userForm.rutEmpleador.$dirty)">Debe ingresar rut.</small> <small class="invalid ng-binding position-abs" ng-if="modActAct.userForm.rutEmpleador.$error.rut && modActAct.userForm.rutEmpleador.$dirty || modActAct.rutmin">Debe ingresar un rut vÃ¡lido.</small></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Socio *</label><ui-select required ng-model="modActAct.estadoSituacion.actividadDependiente.socio" onkeypress="return false" name="socio"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.valor as lista in (modActAct.tipoSocio | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="modActAct.userForm.socio.$error.required && (modActAct.userForm.socio.$dirty || modActAct.userForm.socio.$touched)">Debe indicar socio.</small></div></div><div class="row ml-5 mr-5" ng-if="modActAct.estadoSituacion.actividadActual == 1"><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Cargo *</label><input ng-model="modActAct.estadoSituacion.actividadDependiente.cargo" pattern="^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘&0-9Â´\'.,\\s]*$" type="text" class="form-control" name="cargoDependiente" maxlength="50" placeholder="Ingrese" required> <small class="invalid ng-binding" ng-show="modActAct.userForm.cargoDependiente.$error.required && (modActAct.userForm.cargoDependiente.$dirty || modActAct.userForm.cargoDependiente.$touched)">Debe ingresar cargo. </small><small class="invalid ng-binding position-abs" ng-if="modActAct.userForm.cargoDependiente.$error.pattern && modActAct.userForm.cargoDependiente.$dirty">Formato ingresado no es correcto.</small></div><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Fecha de ingreso *</label><p class="input-group mb-0"><input type="text" ng-model="modActAct.fechaTmpDependiente" class="form-control" show-button-bar="false" datepicker-popup="dd/MM/yyyy" is-open="modActAct.mostrarDatepickerFecha" datepicker-options="true" close-text="Cerrar" show-weeks="false" max-date="modActAct.hoyDia" min-date="modActAct.fechaMinima" datepicker-options="dateOptions" name="fechaIngresoDep" placeholder="Fecha de ingreso" ng-click="modActAct.toggleMostrarDatepickerFecha()" ng-required="true" tabindex="4" readonly="readonly"> <span class="input-group-btn"><button type="button" class="btn border" id="fechaIngreso" name="fechaIngreso" ng-click="modActAct.datepicker($event)"><i class="ion-calendar"></i></button></span></p><small class="invalid ng-binding" ng-show="modActAct.userForm.fechaIngresoDep.$error.required && modActAct.userForm.fechaIngresoDep.$touched">Debe ingresar fecha de ingreso.</small></div></div><div class="row ml-5 mr-5" ng-if="modActAct.estadoSituacion.actividadActual == 2"><!-- <div class="col-xs-12">\n                          <p class="text-nowrap text-ellipsis px-16 text-color-4 mt-15 mb-20">Empleo Actual (Si eres\n                            trabajador independiente)</p>\n                        </div> --><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Actividad *</label><input name="actividad" ng-model="modActAct.estadoSituacion.actividadIndependiente.actividad" type="text" maxlength="30" pattern="^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9&Â´\'.,\\s]*$" class="form-control" placeholder="Actividad" required> <small class="invalid ng-binding" ng-show="modActAct.userForm.actividad.$error.required && modActAct.userForm.actividad.$touched">Debe ingresar actividad. </small><small class="invalid ng-binding" ng-show="modActAct.userForm.actividad.$error.pattern">Formato ingresado no es correcto.</small></div><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Inicio de Actividades *</label><p class="input-group mb-0"><input type="text" ng-model="modActAct.fechaTmpIndependiente" class="form-control" show-button-bar="false" datepicker-popup="dd/MM/yyyy" is-open="modActAct.mostrarDatepickerFecha" datepicker-options="true" close-text="Cerrar" show-weeks="false" max-date="modActAct.hoyDia" min-date="modActAct.fechaMinima" datepicker-options="dateOptions" name="fechaIngresoInd" placeholder="Inicio actividades" ng-click="modActAct.toggleMostrarDatepickerFecha()" ng-required="true" tabindex="4" readonly="readonly"> <span class="input-group-btn"><button type="button" class="btn border" id="fechaActividad" name="fechaActividad" ng-click="modActAct.datepicker($event)"><i class="ion-calendar"></i></button></span></p><small class="invalid ng-binding" ng-show="modActAct.userForm.fechaIngresoInd.$error.required && modActAct.userForm.fechaIngresoInd.$touched">Debe ingresar inicio de actividades.</small></div></div></div></div></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActAct.severidad}}" ng-if="modActAct.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modActAct.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modActAct.close()">Cancelar </a><button ng-disabled="!modActAct.userForm.$valid || modActAct.userForm.$pristine" ng-click="modActAct.submitForm(modActAct.userForm)" type="button" class="btn primary mr-0 pt-10 pb-10">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/actividad-anterior-conyuge/actividad-anterior-conyuge.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/actividad-anterior-conyuge/actividad-anterior-conyuge.tpl.html", '<div class="ui-minerva estado-situacion"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Actividad Anterior Conyuge</h3><button class="btn info close-modal" ng-click="modActAntCony.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActAntCony.severidad}}" ng-if="modActAntCony.errorModal"><article><b>Ha ocurrido un error</b><br>{{modActAntCony.mensajeErrorModal}} </article></div></div><form name="modActAntConyForm"><!-- CONTENT MODAL --><section class="modal-info"><!-- <h3>Actividad anterior del cÃ³nyuge / conviviente civil</h3> --><div class="row col-xs-12 mt-10 ml-5 mr-5"><div class="row"><div class="col-xs-12"><p class="text-nowrap text-ellipsis px-16 text-color-4 mt-15 mb-20">Empleo Anterior (Si eras trabajador dependiente)</p></div><div class="col-md-4 form-group mb-30"><label class="text-nowrap text-ellipsis">Nombre empleador anterior</label><input name="nombreEmpleadorInput" type="text" pattern="[a-zA-Z ]*" ng-model="modActAntCony.estadoSituacion.estadoSituacion.anteriorDependienteConyuge.nombreEmpleador" class="form-control" placeholder="Ingresar"> <small class="invalid ng-binding position-abs" ng-if="modActAntConyForm.nombreEmpleadorInput.$error.pattern && modActAntConyForm.nombreEmpleadorInput.$dirty">No se pueden ingresar nÃºmeros o caracteres especiales a este campo.</small></div><div class="col-md-4 form-group mb-30"><label class="text-nowrap text-ellipsis">Rut empleador anterior</label><rut-input name="rutInput" required class="form-control" pattern="[0-9]+([\\dkK])$" ng-model="modActAntCony.estadoSituacion.estadoSituacion.anteriorDependienteConyuge.rutEmpleador"><small class="invalid ng-binding position-abs" ng-if="modActAntConyForm.rutInput.$error.rut || modActAntConyForm.rutInput.$error.pattern">Debe ingresar un rut vÃ¡lido.</small></div><div class="col-md-4 form-group mb-30"><label class="text-nowrap text-ellipsis">Cargo</label><input name="cargoDependienteInput" type="text" pattern="[a-zA-Z ]*" ng-model="modActAntCony.estadoSituacion.estadoSituacion.anteriorDependienteConyuge.cargo" class="form-control" placeholder="Ingresar"> <small class="invalid ng-binding position-abs" ng-if="modActAntConyForm.cargoDependienteInput.$error.pattern && modActAntConyForm.cargoDependienteInput.$dirty">No se pueden ingresar nÃºmeros o caracteres especiales a este campo.</small></div><div class="col-xs-12 col-sm-6 col-md-4"><label class="text-nowrap text-ellipsis">Tiempo de permanencia <a class="text-color-5 px-16 ml-5" href="javascript:void(0);"><i class="ion-ios-help-outline"></i></a></label><div class="row"><div class="form-group mb-30 col-xs-6 flex-center"><label class="mr-5">AÃ±os</label><input type="text" class="form-control" ng-model="modActAntCony.estadoSituacion.estadoSituacion.anteriorDependienteConyuge.anios" numeric-only></div><div class="form-group mb-30 col-xs-6 flex-center"><label class="mr-5">Meses</label><input type="text" class="form-control" ng-model="modActAntCony.estadoSituacion.estadoSituacion.anteriorDependienteConyuge.meses" numeric-only></div></div></div></div><div class="row"><div class="col-xs-12"><p class="px-16 text-color-4 mt-15 mb-20">Empleo Anterior (Si eras trabajador independiente)</p></div><div class="col-md-4 form-group mb-30"><label class="text-nowrap text-ellipsis">Actividad</label><input name="acIndInput" type="text" pattern="[a-zA-Z ]*" ng-model="modActAntCony.estadoSituacion.estadoSituacion.anteriorIndependienteConyuge.actividad" class="form-control" placeholder="Ingresar"> <small class="invalid ng-binding position-abs" ng-if="modActAntConyForm.acIndInput.$error.pattern && modActAntConyForm.acIndInput.$dirty">No se pueden ingresar nÃºmeros o caracteres especiales a este campo.</small></div><div class="col-xs-12 col-sm-6 col-md-4"><label class="text-nowrap text-ellipsis">Tiempo de permanencia <a class="text-color-5 px-16 ml-5" href="javascript:void(0);"><i class="ion-ios-help-outline"></i></a></label><div class="row"><div class="form-group mb-30 col-xs-6 flex-center"><label class="mr-5">AÃ±os</label><input type="text" class="form-control" ng-model="modActAntCony.estadoSituacion.estadoSituacion.anteriorIndependienteConyuge.anios" numeric-only></div><div class="form-group mb-30 col-xs-6 flex-center"><label class="mr-5">Meses</label><input type="text" class="form-control" ng-model="modActAntCony.estadoSituacion.estadoSituacion.anteriorIndependienteConyuge.meses" numeric-only></div></div></div></div></div></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActAntCony.severidad}}" ng-if="modActAntCony.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modActAntCony.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modActAntCony.close()">Cancelar </a><button class="btn primary mr-0 pt-10 pb-10" ng-disabled="modActAntConyForm.$invalid || modActAntConyForm.$pristine" ng-click="modActAntCony.guardar();">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/actividad-anterior/actividad-anterior.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/actividad-anterior/actividad-anterior.tpl.html", '<div class="ui-minerva estado-situacion"><!-- HEADER MODAL --><div class="modal-header info"><h3 class="modal-title pull-left">Actividad Anterior</h3><button class="btn info close-modal" ng-click="modActAnt.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActAnt.severidad}}" ng-if="modActAnt.errorModal"><article><b>Ha ocurrido un error</b><br>{{modActAnt.mensajeErrorModal}} </article></div></div><!-- CONTENT MODAL --><section class="modal-info"><article class="step pr-0" data-step="5" disabled="disabled"><!-- <h3>Actividad Anterior</h3> --><div class="row col-xs-12"><div class="row ml-5 mr-5"><div class="col-xs-12"><p class="text-nowrap text-ellipsis px-16 text-color-4 mt-15 mb-20">Empleo Anterior (Si eras trabajador dependiente)</p></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Nombre empleador anterior</label><input type="text" ng-model="modActAnt.estadoSituacion.estadoSituacion.anteriorDependienteTitular.nombreEmpleador" class="form-control"></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Rut empleador anterior</label><input type="text" ng-model="modActAnt.estadoSituacion.estadoSituacion.anteriorDependienteTitular.rutEmpleador" class="form-control"></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Cargo</label><input type="text" ng-model="modActAnt.estadoSituacion.estadoSituacion.anteriorDependienteTitular.cargo" class="form-control"></div><div class="col-md-4"><label class="text-nowrap text-ellipsis">Tiempo de permanencia</label><div class="row"><div class="form-group col-xs-6 flex-center"><label class="mr-5">AÃ±os</label><input type="text" class="form-control" ng-model="modActAnt.estadoSituacion.estadoSituacion.anteriorDependienteTitular.anios" numeric-only></div><div class="form-group col-xs-6 flex-center"><label class="mr-5">Meses</label><input type="text" min="0" max="12" class="form-control" ng-model="modActAnt.estadoSituacion.estadoSituacion.anteriorDependienteTitular.meses" numeric-only></div></div></div></div><div class="row ml-5 mr-5"><div class="col-xs-12"><p class="px-16 text-color-4 mt-15 mb-20">Empleo Anterior (Si eras trabajador independiente)</p></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Actividad</label><input ng-model="modActAnt.estadoSituacion.estadoSituacion.anteriorIndependienteTitular.actividad" type="text" class="form-control"></div><div class="col-md-4"><label class="text-nowrap text-ellipsis">Tiempo de permanencia</label><div class="row"><div class="form-group col-xs-6 flex-center"><label class="mr-5">AÃ±os</label><input type="text" class="form-control" ng-model="modActAnt.estadoSituacion.estadoSituacion.anteriorIndependienteTitular.anios" numeric-only></div><div class="form-group col-xs-6 flex-center"><label class="mr-5">Meses</label><input type="text" min="0" max="12" class="form-control" ng-model="modActAnt.estadoSituacion.estadoSituacion.anteriorIndependienteTitular.meses" numeric-only></div></div></div></div></div></article></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActAnt.severidad}}" ng-if="modActAnt.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modActAnt.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modActAnt.close()">Cancelar </a><button class="btn primary mr-0 pt-10 pb-10" ng-click="modActAnt.guardar()">Guardar</button></div></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/activos-financieros/activo-financiero.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/activos-financieros/activo-financiero.tpl.html", '<div class="ui-minerva estado-situacion"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Activo Financiero</h3><button class="btn info close-modal" ng-click="modActivoFinanciero.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActivoFinanciero.severidad}}" ng-if="modActivoFinanciero.errorModal"><article><b>Ha ocurrido un error</b><br>{{modActivoFinanciero.mensajeErrorModal}} </article></div></div><!-- CONTENT MODAL --><section class="modal-info"><article class="step pr-0 mt-10 ml-5 mr-5" data-step="1"><h6>Activos financieros a invertir anualmente (excluye propiedades)</h6><div class="row"><div class="col-xs-12 col-md-4"><div><ui-select required ng-model="modActivoFinanciero.estadoSituacion.estadoSituacion.inversionAnual"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in modActivoFinanciero.listaActivosFinancieros"> {{lista.valor}} </ui-select-choices></ui-select></div></div></div></article></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modActivoFinanciero.severidad}}" ng-if="modActivoFinanciero.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modActivoFinanciero.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modActivoFinanciero.close()">Cancelar </a><button class="btn primary mr-0 pt-10 pb-10" ng-click="modActivoFinanciero.guardar();">Guardar</button></div></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/activos/activo.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/activos/activo.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Activos</h3><button class="btn info close-modal" ng-click="modAct.close()"><span class="ion-ios-close-empty"></span></button></div><!-- CONTENT MODAL --><section class="modal-info"><section class="steps pl-15"><!-- SECTION - MENSAJE --><div class="row pb-20"><div class="col-xs-12"><div class="bch-mensaje-empresas {{modAct.severidad}}" ng-if="modAct.errorModal"><article><b>Ha ocurrido un error</b><br>{{modAct.mensajeErrorModal}} </article></div><div class="bch-mensaje-empresas info mt-0"><article><p>Recuerda que la direcciÃ³n serÃ¡ validada y verificada por un ejecutivo. Adjunta un documento que acredite esa informaciÃ³n en la etapa final. Adjuntar documento.</p></article></div></div></div><!-- SECTION - BIENES RAÃCES --><div class="row pl-20 pr-20"><div class="col-xs-12 padd-none mb-25 flex-center"><div class="switch success" ng-click="modAct.swActivos(\'bienes\')"><input ng-model="modAct.flgBienes" type="checkbox"> <i></i> <span class="text-default white-space--nowrap">Bienes raÃ­ces urbanos y/o rurales</span></div><div class="circulo circulo-help ml-10" popover="Completar los siguientes datos con el conjunto de inmuebles urbano y/o rurales que posees." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div><!-- TABLA BIENES RAICES --><div class="col-xs-12 pl-0 pr-0"><div class="mb-30" ng-if="modAct.flgBienes" tabla-select cantidad-maxima-columnas="7"><table class="table-modal"><thead><tr><th class="text-left">DescripciÃ³n</th><th class="text-left">DirecciÃ³n</th><th class="text-left">NÃºmero de Rol</th><th class="text-left">Hipoteca</th><th class="text-right">Valor Cuota</th><th class="text-right">Saldo deuda</th><th class="text-right">Valor Comercial</th><th class="w-100"></th></tr></thead><tbody><tr ng-repeat="lista in modAct.listaBienes track by $index"><td class="text-left"> {{modAct.buscar(\'bienes\', lista.tipo)}}</td><td class="text-left">{{lista.calle}} {{lista.numero}} {{lista.comuna.descripcion}} {{lista.ciudad.descripcion}}</td><td class="text-left">{{lista.numeroRol ? lista.numeroRol : \'-\'}}</td><td class="text-left" ng-if="lista.hipoteca !== null && lista.hipoteca !== undefined">{{lista.hipoteca == true ? \'Si\' : \'No\'}}</td><td class="text-left" ng-if="lista.hipoteca === null || lista.hipoteca === undefined">-</td><td class="text-right white-space--nowrap">{{lista.valorCuota | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.saldoDeuda | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.valorComercial | formatoMonedaEESS}}</td><td class="flex-center w-100"><a ng-click="confirmacion=\'eliminar1\'" href="javascript:void(0);"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar1\'"><span>Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modAct.borrarBien($index)">SÃ­</button> <button class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modAct.editarBien($index)"><span class="px-23 ml-10 mr-10 span-primary icon-icon-edit-empty" ng-class="i.className"></span></a></td></tr></tbody></table><div class="col-xs-12 text-right mb-15 padd-none mt-10 display-flex justify--end"><a class="btn-fill info-btn" ng-click="modAct.flgAgregarBienes = true; modAct.limpiarCampos(\'bienes\')" href="javascript:void(0);"><div class="cont-animacion"><span></span> <i class="ion-ios-plus-empty"></i></div><span class="btn-link link-underline">Agregar Bien RaÃ­z</span></a></div></div></div><!-- Formulario - Agregar nuevo bien raÃ­z --><div class="col-xs-12 pl-0"><form name="bien" ng-if="modAct.flgAgregarBienes"><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Tipo de Bien RaÃ­z *</label><ui-select name="tipoBien" ng-model="modAct.tipoBien" onkeypress="return false" required><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modAct.tiposBienes  | filter: $select.search) "> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid" ng-if="bien.tipoBien.$error.required && (bien.tipoBien.$dirty || bien.tipoBien.$touched)">Debe ingresar tipo bien raÃ­z.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">RegiÃ³n</label><ui-select name="regionBien" ng-change="modAct.getCiudades($select.selected.id)" ng-model="modAct.regionBien"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat=" lista as lista in (modAct.regiones | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><!--                  <small class="invalid" ng-if="bien.regionBien.$error.required && (bien.regionBien.$dirty || bien.regionBien.$touched)">\n                      Debe ingresar regiÃ³n.\n                    </small>--></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Ciudad</label><ui-select ng-change="modAct.getComunas($select.selected.id)" name="ciudadBien" ng-model="modAct.ciudadBien"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAct.ciudades  | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><!--     <small class="invalid" ng-if="bien.ciudadBien.$error.required && (bien.ciudadBien.$dirty || bien.ciudadBien.$touched)">\n                      Debe ingresar ciudad.\n                    </small>--></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Comuna</label><ui-select name="comunaBien" ng-model="modAct.comunaBien" onkeypress="return false"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAct.comunas  | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><!--    <small class="invalid" ng-if="bien.comunaBien.$error.required && (bien.comunaBien.$dirty || bien.comunaBien.$touched)">\n                      Debe ingresar comuna.\n                    </small>--></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Calle</label><input maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9.,\'Â´\\s]*$/" class="form-control" name="calleBien" ng-model="modAct.calleBien" type="text" placeholder="Ingrese"><!--           <small class="invalid" ng-if="bien.calleBien.$error.required && (bien.calleBien.$dirty || bien.calleBien.$touched)">\n                      Debe ingresar calle.\n                    </small>--> <small class="invalid" ng-if="bien.calleBien.$error.pattern && bien.calleBien.$dirty">Formato ingresado no es correcto.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">NÃºmero</label><input maxlength="10" class="form-control" name="numeroBien" ng-model="modAct.numeroBien" type="text" numeric-only placeholder="Ingrese"><!--       <small class="invalid" ng-if="bien.numeroBien.$error.required && (bien.numeroBien.$dirty || bien.numeroBien.$touched)">Debe\n                      ingresar nÃºmero.</small>--></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">NÃºmero departamento/casa</label><input maxlength="10" class="form-control" name="numeroDepartamentoBien" ng-model="modAct.numeroDepartamentoBien" type="text" placeholder="Ingrese"><!--<small class="invalid" ng-if="bien.numeroDepartamentoBien.$error.required && (bien.numeroDepartamentoBien.$dirty || bien.numeroDepartamentoBien.$touched)">Debe ingresar nÃºmero departamento/casa.</small>--></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">NÃºmero de Rol</label><div class="row display-flex align-center"><div class="col-xs-10"><input class="form-control" maxlength="11" name="numeroRolBien" ng-model="modAct.numeroRolBien" numero-de-rol placeholder="Ingrese" type="text"> <small class="invalid" ng-if="bien.numeroRolBien.$error.rolValido">Formato ingresado no es correcto.</small></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="El NÂ° de Rol permite que el Servicio de Inpuestos Internos identifique a una propiedad o bien raiz. Para obtenerlo, puede consultar el  Listado de Roles del SII." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Hipoteca</label><div class="row display-flex align-center"><div class="col-xs-10"><ui-select ng-model="modAct.hipotecaBien" name="aFavor" onkeypress="return false"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.valor as lista in  (modAct.prendas | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Indica si la propiedad se encuentra Hipotecada o en Garantia a favor de alguna Empresa (por ejemplo: Banco, Cooperativa, Mutuaria, entre otros)." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div><!--         <small class="invalid" ng-if="bien.aFavor.$error.required && (bien.aFavor.$dirty || bien.aFavor.$touched)">\n                      Debe ingresar hipoteca.\n                    </small>--> <small class="invalid" ng-if="bien.aFavor.$error.pattern && bien.aFavor.$dirty">Formato ingresado no es correcto.</small></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Valor Cuota</label><input maxlength="17" class="form-control" name="valorCuotaBien" ng-model="modAct.valorCuotaBien" type="text" numeric-only placeholder="Ingrese" ng-change="modAct.valorCuotaBien = (modAct.valorCuotaBien | formatoMonedaEESS)"></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Saldo deuda</label><div class="row display-flex align-center"><div class="col-xs-10"><input maxlength="17" class="form-control" name="saldoDeudaBien" ng-model="modAct.saldoDeudaBien" type="text" numeric-only placeholder="Ingrese" ng-change="modAct.saldoDeudaBien = (modAct.saldoDeudaBien | formatoMonedaEESS)"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="En caso que la propiedad tenga deuda asociada, indicar, el monto que queda por pagar." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Valor comercial</label><div class="row display-flex align-center"><div class="col-xs-10"><input maxlength="17" class="form-control" name="valorBien" ng-model="modAct.valorComercialBien" type="text" numeric-only placeholder="Ingrese" ng-change="modAct.valorComercialBien = (modAct.valorComercialBien | formatoMonedaEESS)"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Indica el valor de venta (comercial) actual de la propiedad." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div></div><div class="row pt-15 pb-15"><div class="col-xs-12 display-flex justify--end"><a class="link mr-15 pull-right px-14" ng-click="modAct.flgAgregarBienes = false;modAct.limpiarCampos(\'bienes\')">CANCELAR </a><button class="btn info btn-confirm mr-0 ml-15 pull-right pt-10 pb-10" ng-click="modAct.guardarBien(modAct.indiceBien)" ng-disabled="bien.$invalid || bien.$pristine" type="button">Guardar</button></div></div></form></div></div><!-- SECTION - INVERSIONES --><div class="row pl-20 pr-20"><div class="col-xs-12 pb-25 switch success" ng-click="modAct.swActivos(\'inversion\')"><input ng-model="modAct.flgInversiones" type="checkbox"> <i></i><!-- Circle --> <span class="text-default">Inversiones (DepÃ³sito a plazo, Libretas de ahorro, Acciones, Bonos, Otras inversiones, etc.)</span></div><div class="col-xs-12 pl-0 pr-0"><div class="mb-30" ng-if="modAct.flgInversiones" tabla-select cantidad-maxima-columnas="4"><table class="table-modal"><thead><tr><th class="text-left">DescripciÃ³n</th><th class="text-left">InstituciÃ³n</th><th class="text-right">Valor Comercial</th><th class="actions show-hide w-100"></th></tr></thead><tbody><tr ng-repeat="lista in modAct.listaInversiones track by $index"><td class="text-left">{{modAct.buscar(\'inversion\', lista.tipo)}}</td><td class="text-left">{{lista.institucion ? lista.institucion : \'-\'}}</td><td class="text-right white-space--nowrap">{{lista.valorComercion | formatoMonedaEESS}}</td><td class="flex-center w-100"><a ng-click="confirmacion=\'eliminar1\'" href="javascript:void(0);"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar1\'"><span>Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modAct.borrarInversion($index)">SÃ­</button> <button class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modAct.editarInversion($index)"><span class="px-23 ml-10 span-primary mr-10 icon-icon-edit-empty" ng-class="i.className"></span></a></td></tr></tbody></table><div class="col-xs-12 text-right mb-15 padd-none mt-10 display-flex justify--end"><a class="btn-fill info-btn" ng-click="modAct.flgAgregarInversiones = true; modAct.limpiarCampos(\'inversion\')" href="javascript:void(0);"><div class="cont-animacion"><span></span> <i class="ion-ios-plus-empty"></i></div><span class="btn-link link-underline">Agregar InversiÃ³n</span></a></div></div></div><!-- Formulario - InversiÃ³n --><div class="col-xs-12 pl-0"><form name="inversion" ng-if="modAct.flgAgregarInversiones"><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Tipo de inversiÃ³n *</label><div class="row"><div class="col-xs-12"><div><ui-select name="tipoInversion" ng-model="modAct.tipoInversion" onkeypress="return false" required><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in ( modAct.listaTipoInversion | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid" ng-if="inversion.tipoInversion.$error.required && (inversion.tipoInversion.$dirty || inversion.tipoInversion.$touched)">Debe ingresar tipo de inversiÃ³n.</small></div></div></div></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">InstituciÃ³n</label><input maxlength="30" class="form-control" name="institucion" ng-model="modAct.institicionEmisora" type="text" placeholder="Ingrese" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘.,\'Â´\\s]*$/"><!--   <small class="invalid"\n                      ng-if="inversion.institucion.$error.required && (inversion.institucion.$dirty || inversion.institucion.$touched)">Debe ingresar\n                      instituciÃ³n.</small>--> <small class="invalid" ng-if="inversion.institucion.$error.pattern && inversion.institucion.$dirty">Formato ingresado no es correcto.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Valor comercial</label><div class="row display-flex align-center"><div class="col-xs-10"><input maxlength="17" class="form-control" name="valorInversion" ng-model="modAct.valorComercial" type="text" numeric-only placeholder="Ingrese" ng-change="modAct.valorComercial = (modAct.valorComercial | formatoMonedaEESS)"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Indica el valor de venta (comercial) actual de la propiedad." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div></div><div class="row"><div class="col-xs-12 display-flex justify--end mb-15 mb-15"><a class="link mr-0 pull-right px-14" ng-click="modAct.flgAgregarInversiones = false;modAct.limpiarCampos(\'inversion\')">CANCELAR</a> <button class="btn info btn-confirm mr-0 ml-15 pull-right pt-10 pb-10" ng-click="modAct.guardarInversion(modAct.indiceInversion)" ng-disabled="inversion.$invalid || inversion.$pristine" type="button">Guardar</button></div></div></form></div></div><!-- SECTION - VEHÃCULOS --><div class="row pl-20 pr-20"><div class="col-xs-12 pb-25 switch success" ng-click="modAct.swActivos(\'vehiculos\')"><input ng-model="modAct.flgVehiculos" type="checkbox"> <i></i><!-- Circle --> <span class="text-default">VehÃ­culos</span></div><div class="col-xs-12 pl-0 pr-0"><div class="clear mb-30" ng-if="modAct.flgVehiculos" tabla-select cantidad-maxima-columnas="7"><table class="table-modal"><thead><tr><th class="text-left">Tipo</th><th class="text-left">DescripciÃ³n</th><th class="text-left">Patente</th><th class="text-left">Prenda</th><th class="text-right">Valor Cuota</th><th class="text-right">Saldo Deuda</th><th class="text-right">Valor Comercial</th><th class="actions show-hide w-100"></th></tr></thead><tbody><tr ng-repeat="lista in modAct.listaVehiculos track by $index"><td class="text-left">{{modAct.buscar(\'vehiculo\', lista.tipo)}}</td><td class="text-left">{{lista.marca}} {{lista.modelo}} {{lista.ano}}</td><td class="text-left">{{lista.patente ? lista.patente : \'-\'}}</td><td class="text-left" ng-if="lista.prenda !== null && lista.prenda !== undefined">{{lista.prenda == true ? \'Si\' : \'No\'}}</td><td class="text-left" ng-if="lista.prenda === null || lista.prenda === undefined">-</td><td class="text-right white-space--nowrap">{{lista.valorCuota | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.saldoDeuda | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.valorComercial | formatoMonedaEESS}}</td><td class="flex-center w-100"><a ng-click="confirmacion=\'eliminar1\'" href="javascript:void(0);"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar1\'"><span>Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modAct.borrarVehiculo($index)">SÃ­</button> <button class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modAct.editarVehiculo($index)"><span class="px-23 ml-10 mr-10 span-primary icon-icon-edit-empty" ng-class="i.className"></span></a></td></tr></tbody></table><div class="col-xs-12 text-right mb-15 padd-none mt-10 display-flex justify--end"><a class="btn-fill info-btn" ng-click="modAct.flgAgregarVehiculos = true; modAct.limpiarCampos(\'vehiculo\')" href="javascript:void(0);"><div class="cont-animacion"><span></span> <i class="ion-ios-plus-empty"></i></div><span class="btn-link link-underline">Agregar VehÃ­culo</span></a></div></div></div><!-- Formulario - Agregar nuevo vehÃ­culo --><div class="col-xs-12 pl-0"><form name="vehiculo" ng-if="modAct.flgAgregarVehiculos"><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Tipo de vehÃ­culo *</label><div class="row"><div class="col-xs-12"><div><ui-select name="tipoVehiculo" ng-model="modAct.tipoVehiculo" onkeypress="return false" required><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modAct.listaTipoVehiculo  | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid" ng-if="vehiculo.tipoVehiculo.$error.required && (vehiculo.tipoVehiculo.$dirty || vehiculo.tipoVehiculo.$touched)">Debe ingresar tipo de vehÃ­culo.</small></div></div></div></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Marca</label><input maxlength="30" class="form-control" name="marcaVehiculo" ng-model="modAct.marcaVehiculo" type="text" placeholder="Ingrese" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\\s]*$/"><!--                    <small class="invalid"\n                      ng-if="vehiculo.marcaVehiculo.$error.required && (vehiculo.marcaVehiculo.$dirty || vehiculo.marcaVehiculo.$touched)">Debe ingresar\n                      marca.</small>--> <small class="invalid" ng-if="vehiculo.marcaVehiculo.$error.pattern && vehiculo.marcaVehiculo.$dirty">Formato ingresado no es correcto.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Modelo</label><input maxlength="30" class="form-control" name="modeloVehiculo" ng-model="modAct.modeloVehiculo" type="text" placeholder="Ingrese" ng-pattern="/^[a-zA-Z0-9Ã¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\\s]*$/"><!--       <small class="invalid"\n                      ng-if="vehiculo.modeloVehiculo.$error.required && (vehiculo.modeloVehiculo.$dirty || vehiculo.modeloVehiculo.$touched)">Debe ingresar\n                      modelo.</small>--> <small class="invalid" ng-if="vehiculo.modeloVehiculo.$error.pattern && vehiculo.modeloVehiculo.$dirty">Formato ingresado no es correcto.</small></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">AÃ±o</label><input maxlength="4" class="form-control" name="anoVehiculo" ng-model="modAct.anoVehiculo" type="text" numeric-only placeholder="Ingrese"><!--                <small class="invalid"\n                      ng-if="vehiculo.anoVehiculo.$error.required && (vehiculo.anoVehiculo.$dirty || vehiculo.anoVehiculo.$touched)">Debe ingresar\n                      aÃ±o.</small>--></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Patente</label><input maxlength="7" ng-change="modAct.upperCase()" class="form-control" name="patenteVehiculo" ng-pattern="/^[a-zA-ZÃ±Ã‘0-9\\-s]*$/" ng-model="modAct.patenteVehiculo" type="text" placeholder="Ingrese"> <small class="invalid" ng-if="vehiculo.patenteVehiculo.$error.pattern && vehiculo.patenteVehiculo.$dirty">Formato ingresado no es correcto.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Prenda</label><div class="row display-flex align-center"><div class="col-xs-10"><ui-select ng-model="modAct.prendaVehiculo" name="prenda" onkeypress="return false"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.valor as lista in  (modAct.prendas | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover=\'Indicar si el "Activo" se encuentra en contrato de prenda con un acreedor para seguridad de su crÃ©dito. Con este contrato, el acreedor puede perseguir la prenda, retenerla o pagarse con ella, en el caso que el deudor no cumpla con sus obligaciones.\' popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Valor Cuota</label><input maxlength="17" class="form-control" name="valorCuotaVehiculo" ng-model="modAct.valorCuotaVehiculo" type="text" numeric-only placeholder="Ingrese" ng-change="modAct.valorCuotaVehiculo = (modAct.valorCuotaVehiculo | formatoMonedaEESS)"></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Saldo Deuda</label><input maxlength="17" class="form-control" name="saldoDeudaVehiculo" ng-model="modAct.saldoDeudaVehiculo" type="text" numeric-only placeholder="Ingrese" ng-change="modAct.saldoDeudaVehiculo = (modAct.saldoDeudaVehiculo | formatoMonedaEESS)"></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Valor Comercial</label><div class="row display-flex align-center"><div class="col-xs-10"><input maxlength="17" class="form-control" name="valorComercialVehiculo" ng-model="modAct.valorComercialVehiculo" type="text" numeric-only placeholder="Ingrese" ng-change="modAct.valorComercialVehiculo = (modAct.valorComercialVehiculo | formatoMonedaEESS)"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Indica el valor de venta (comercial) actual del vehiculo." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div></div><div class="row"><div class="col-xs-12 display-flex justify--end mt-15 mb-15"><a class="link default px-14" ng-click="modAct.flgAgregarVehiculos = false;modAct.limpiarCampos(\'vehiculos\')">CANCELAR</a> <button class="btn info btn-confirm mr-0 ml-15 pull-right pt-10 pb-10" ng-click="modAct.guardarVehiculo(modAct.indiceVehiculo)" ng-disabled="vehiculo.$invalid || vehiculo.$pristine" type="button">Guardar</button></div></div></form></div></div><!-- SECTION - OTROS ACTIVOS --><div class="row pl-20 pr-20"><div class="col-xs-12 pb-25 switch success" ng-click="modAct.swActivos(\'otros\')"><input ng-model="modAct.flgOtros" type="checkbox"> <i></i><!-- Circle --> <span class="text-default">Otros Activos</span></div><!-- TABLA OTROS ACTIVOS --><div class="col-xs-12 pl-0 pr-0"><div class="mb-30 clear" ng-if="modAct.flgOtros" cantidad-maxima-columnas="3"><table class="table-modal"><thead><tr><th class="text-left" width="60%">DescripciÃ³n</th><th class="text-right" width="40%">Valor Comercial</th><th class="actions show-hide"></th></tr></thead><tbody><tr ng-repeat="lista in modAct.listaOtros track by $index"><td class="text-left">{{lista.descripcion}}</td><td class="text-right white-space--nowrap">{{lista.valorComercial | formatoMonedaEESS}}</td><td class="flex-center w-100"><a ng-click="confirmacion=\'eliminar1\'" href="javascript:void(0);"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar1\'"><span>Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modAct.borrarOtro($index)">SÃ­</button> <button class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modAct.editarOtro($index)"><span class="px-23 ml-10 mr-10 span-primary icon-icon-edit-empty" ng-class="i.className"></span></a></td></tr></tbody></table><div class="col-xs-12 text-right mb-15 mt-10 padd-none"><a class="btn-fill info-btn" ng-click="modAct.flgAgregarOtros = true; modAct.limpiarCampos(\'otros\')" href="javascript:void(0);"><div class="cont-animacion"><span></span> <i class="ion-ios-plus-empty"></i></div><span class="btn-link link-underline">Agregar otro Activo</span></a></div></div></div><!-- Formulario - Agregar Otros --><div class="col-xs-12 pl-0"><form name="otro" ng-if="modAct.flgAgregarOtros"><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">DescripciÃ³n *</label><input maxlength="30" class="form-control" name="descripcion" ng-model="modAct.descripcionOtros" type="text" placeholder="Ingrese" required> <small class="invalid" ng-if="otro.descripcion.$error.pattern && otro.descripcion.$dirty">Formato ingresado no es correcto. </small><small class="invalid" ng-if="otro.descripcion.$error.required && (otro.descripcion.$dirty || otro.descripcion.$touched)">Debe ingresar descripciÃ³n.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Valor Comercial</label><div class="row display-flex align-center"><div class="col-xs-10"><input maxlength="17" class="form-control" name="valorComercial" ng-model="modAct.valorComercialOtros" type="text" numeric-only placeholder="Ingrese" ng-change="modAct.valorComercialOtros = (modAct.valorComercialOtros | formatoMonedaEESS)"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Indica el valor de venta (comercial) actual de la propiedad." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div></div><div class="row"><div class="col-xs-12 display-flex justify--end"><a class="link ml-15 pull-right px-14" ng-click="modAct.flgAgregarOtros = false;modAct.limpiarCampos(\'otros\')">CANCELAR</a> <button class="btn info btn-confirm mr-0 ml-15 pull-right pt-10 pb-10" ng-click="modAct.guardarOtros(modAct.indiceOtro)" ng-disabled="otro.$invalid || otro.$pristine" type="button">Guardar</button></div></div></form></div></div><div class="row pb-20"><div class="col-xs-12"><div class="bch-mensaje-empresas {{modAct.severidad}}" ng-if="modAct.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modAct.mensajeErrorGuardar}} </article></div></div></div></section></section><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modAct.close()">Cancelar </a><button ng-disabled="!modAct.modificaModal" class="btn primary mr-0 pt-10 pb-10" type="button" ng-click="modAct.guardar()">Guardar</button></div></div>');
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/antecedentes-conyuge/antecedente-conyuge.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/antecedentes-conyuge/antecedente-conyuge.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Antecedentes CÃ³nyuge</h3><button class="btn info close-modal" ng-click="modAnteCon.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modAnteCon.severidad}}" ng-if="modAnteCon.errorModal"><article><b>Ha ocurrido un error</b><br>{{modAnteCon.mensajeErrorModal}} </article></div></div><form name="modAnteCon.userForm"><!-- CONTENT MODAL --><section class="modal-info"><div class="row"><div class="col-xs-12 mt-10 pl-30"><div class="row ml-5 mr-5"><div class="row"><div class="col-md-4 form-group mb-30"><label>Rut</label><div><input ng-rut-eess name="rutConyuge" class="form-control" maxlength="12" ng-model="modAnteCon.rut" placeholder="Ingrese" ng-change="modAnteCon.validarRut()"></div><small class="invalid ng-binding position-abs" ng-if="modAnteCon.userForm.rutConyuge.$error.rut && modAnteCon.userForm.rutConyuge.$dirty || vm.rutmin">Debe ingresar un rut vÃ¡lido.</small></div><div class="col-md-4 form-group mb-30"><label>Apellido paterno</label><input maxlength="50" type="text" id="apPatInput" name="apPatInput" class="form-control" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\\s]*$/" placeholder="Ingrese" ng-model="modAnteCon.estadoSituacion.datosPersonalesConyuge.apellidoPaterno"> <small class="invalid ng-binding position-abs" ng-if="modAnteCon.userForm.apPatInput.$error.pattern && modAnteCon.userForm.apPatInput.$dirty">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group mb-30"><label>Apellido materno</label><input maxlength="50" type="text" name="apMatInput" class="form-control" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\\s]*$/" placeholder="Ingrese" ng-model="modAnteCon.estadoSituacion.datosPersonalesConyuge.apellidoMaterno" ng-change="modAnteCon.estadoSituacion.datosPersonalesConyuge.apellidoMaterno = modAnteCon.bloquearInput(\'nombre\',\n                  modAnteCon.estadoSituacion.datosPersonalesConyuge.apellidoMaterno)"> <small class="invalid ng-binding position-abs" ng-if="modAnteCon.userForm.apMatInput.$error.pattern && modAnteCon.userForm.apMatInput.$dirty">Formato ingresado no es correcto.</small></div></div><div class="row"><div class="col-md-4 form-group mb-30"><label>Nombres</label><input maxlength="50" type="text" name="nombresInput" class="form-control" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\\s]*$/" placeholder="Ingrese" ng-model="modAnteCon.estadoSituacion.datosPersonalesConyuge.nombres" ng-change="modAnteCon.estadoSituacion.datosPersonalesConyuge.nombres = modAnteCon.bloquearInput(\'nombre\',\n                  modAnteCon.estadoSituacion.datosPersonalesConyuge.nombres)"> <small class="invalid ng-binding position-abs" ng-if="modAnteCon.userForm.nombresInput.$error.pattern && modAnteCon.userForm.nombresInput.$dirty">Formato ingresado no es correcto.</small></div><div prefix-length="3" input-prefix="+56" class="col-md-4 form-group"><label for="">TelÃ©fono Particular</label><input maxlength="9" minlength="9" id="dirPartCelular" name="dirPartCelular" type="text" class="form-control" placeholder="Ingrese" ng-model="modAnteCon.estadoSituacion.datosPersonalesConyuge.telefonoLaboral" numeric-only> <small class="invalid ng-binding position-abs" ng-if="modAnteCon.userForm.dirPartCelular.$error.dirPartCelular || modAnteCon.userForm.dirPartCelular.$error.minlength">Formato ingresado no es correcto.</small></div><div prefix-length="3" input-prefix="+56" class="col-md-4 form-group"><label for="">TelÃ©fono Laboral</label><input maxlength="9" minlength="9" name="dirPartTelefono" type="text" ng-model="modAnteCon.estadoSituacion.datosPersonalesConyuge.celularParticular" placeholder="Ingrese" class="form-control" numeric-only> <small class="invalid ng-binding position-abs" ng-if="modAnteCon.userForm.dirPartTelefono.$error.dirPartTelefono || modAnteCon.userForm.dirPartTelefono.$error.minlength">Formato ingresado no es correcto.</small></div></div><div class="row"><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Email</label><input id="dirPartEmail" name="dirPartEmail" type="text" class="form-control" maxlength="50" placeholder="Ingrese" ng-pattern="/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,15}(?:\\.[a-z]{2})?)$/i" ng-model="modAnteCon.estadoSituacion.datosPersonalesConyuge.email"> <small class="invalid ng-binding" ng-show="modAnteCon.userForm.dirPartEmail.$error.pattern && modAnteCon.userForm.dirPartEmail.$dirty">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group"><label class="text-nowrap text-ellipsis">Nivel de estudios</label><ui-select name="nivelEstudios" id="nivelestudios" ng-change="modAnteCon.validarCampos($select.selected.id); modAnteCon.limpiarCampos()" onkeypress="return false" ng-model="modAnteCon.estadoSituacion.datosPersonalesConyuge.nivelEstudios"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modAnteCon.nivelEstudios | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select></div><div class="col-md-4 form-group" ng-if="modAnteCon.mostrarTitulo"><label class="text-nowrap text-ellipsis">TÃ­tulo profesional/carrera</label><input ng-disabled="false" name="titulo" id="titulo" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘.\\s]*$/" maxlength="50" ng-model="modAnteCon.estadoSituacion.estudiosConyuge.tituloCarrera" type="text" class="form-control" placeholder="Ingrese"> <small class="invalid ng-binding position-abs" ng-if="modAnteCon.userForm.titulo.$error.pattern && modAnteCon.userForm.titulo.$dirty">Formato ingresado no es correcto.</small></div></div><div class="row" ng-if="modAnteCon.mostrarEstadoCompletitud"><div class="col-md-4 form-group" ng-if="modAnteCon.mostrarEstadoCompletitud"><label class="text-nowrap text-ellipsis">Estado</label><ui-select ng-change="modAnteCon.validarMostrarAnho($select.selected.id)" name="estadoCompletitud" id="estadoCompletitud" onkeypress="return false" ng-model="modAnteCon.estadoSituacion.estudiosConyuge.completitud"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modAnteCon.estadoCompletitud | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select></div><div class="col-md-4 form-group" ng-if="modAnteCon.mostrarUniversidad"><label class="text-nowrap text-ellipsis">InstituciÃ³n Educacional</label><input name="universidadIp" id="universidadIp" ng-model="modAnteCon.estadoSituacion.estudiosConyuge.universidadIp" type="text" class="form-control" maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘.,\'Â´\\s]*$/" placeholder="Ingrese"> <small class="invalid ng-binding position-abs" ng-if="modAnteCon.userForm.universidadIp.$error.pattern && modAnteCon.userForm.universidadIp.$dirty">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group" ng-if="modAnteCon.mostrarDuracion"><label class="text-nowrap text-ellipsis">DuraciÃ³n de la carrera</label><input ng-disabled="false" name="duracion" id="duracion" numeric-only maxlength="2" ng-model="modAnteCon.estadoSituacion.estudiosConyuge.duracion" type="text" class="form-control" placeholder="Ingrese"></div><div class="col-md-4 form-group" ng-if="modAnteCon.mostrarAnho"><label class="text-nowrap text-ellipsis">AÃ±o que cursa</label><input ng-disabled="false" name="anho" id="anho" ng-model="modAnteCon.estadoSituacion.estudiosConyuge.anoCursa" type="text" class="form-control" placeholder="Ingrese" maxlength="2" numeric-only></div></div><div class="row" ng-if="modAnteCon.mostrarUniversidad"></div></div></div></div></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modAnteCon.severidad}}" ng-if="modAnteCon.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modAnteCon.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modAnteCon.close()">Cancelar </a><button class="btn primary mr-0 pt-10 pb-10" type="button" ng-disabled="!modAnteCon.userForm.$valid || modAnteCon.userForm.$pristine || modAnteCon.rutmin" ng-click="modAnteCon.guardar();">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/antecedentes/antecedentes.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/antecedentes/antecedentes.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Antecedentes</h3><button class="btn info close-modal" ng-click="modAnte.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modAnte.severidad}}" ng-if="modAnte.errorModal"><article><b>Ha ocurrido un error</b><br>{{modAnte.mensajeErrorModal}} </article></div></div><form name="userForm" novalidate><!-- CONTENT MODAL --><section class="modal-info"><section class="steps mt-15 ml-15 mr-15"><div class="row"><div class="col-xs-12"><div class="row"><div class="col-md-4 form-group mb-30"><label>Fecha de nacimiento *</label><p class="input-group mb-0"><input type="text" ng-model="modAnte.fechaNacAux" class="form-control" show-button-bar="false" datepicker-popup="dd/MM/yyyy" is-open="modAnte.mostrarDatepickerFecha" datepicker-options="true" close-text="Cerrar" show-weeks="false" max-date="modAnte.hoyDia" min-date="modAnte.fechaMinima" datepicker-options="dateOptions" name="fechaNacimiento" placeholder="01/01/1900" ng-click="modAnte.toggleMostrarDatepickerFecha()" ng-required="true" tabindex="4" readonly="readonly"> <span class="input-group-btn"><button type="button" class="btn border" id="fechaNacimiento" name="fechaNacimiento" ng-click="modAnte.datepicker($event)"><i class="ion-calendar"></i></button></span></p><small class="invalid position-abs" ng-if="userForm.fechaNacimiento.$error.required && (userForm.fechaNacimiento.$dirty || userForm.fechaNacimiento.$touched)">Debe ingresar fecha de nacimiento.</small></div><div class="col-md-4 form-group mb-30"><label>Nacionalidad *</label><ui-select required id="dpNacionalidad" name="dpNacionalidad" ng-model="modAnte.nacionalidadAux" onkeypress="return false" ng-change="modAnte.verificaNacionalidad()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAnte.nacionalidad | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid position-abs" ng-if="userForm.dpNacionalidad.$error.required && (userForm.dpNacionalidad.$dirty || userForm.dpNacionalidad.$touched)">Debe ingresar nacionalidad.</small></div><div class="col-md-4 form-group mb-30"><label>PaÃ­s de Origen *</label><ui-select required id="dpPais" name="dpPais" ng-model="modAnte.paisOrigenAux" ng-change="modAnte.verificaDatosPersonales()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombre}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAnte.paises | filter: $select.search)"> {{lista.nombre}} </ui-select-choices></ui-select><small class="invalid position-abs" ng-if="userForm.dpPais.$error.required && (userForm.dpPais.$dirty || userForm.dpPais.$touched)">Debe ingresar paÃ­s de origen.</small></div></div><div class="row"><div class="col-md-4 form-group mb-30"><label>Sexo *</label><ui-select required id="dpSexo" name="dpSexo" ng-model="modAnte.sexoAux" onkeypress="return false" ng-change="modAnte.verificaDatosPersonales()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAnte.sexo | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid position-abs" ng-if="userForm.dpSexo.$error.required && (userForm.dpSexo.$dirty || userForm.dpSexo.$touched)">Debe ingresar sexo.</small></div><div class="col-md-4 form-group mb-30"><label>Estado civil *</label><ui-select id="dpEstadoCivil" name="dpEstadoCivil" required ng-model="modAnte.estadoCivilAux" onkeypress="return false" ng-change="modAnte.verificaEstadoCivil()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAnte.estadoCivil | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid position-abs" ng-if="userForm.dpEstadoCivil.$error.required && (userForm.dpEstadoCivil.$dirty || userForm.dpEstadoCivil.$touched)">Debe ingresar estado civil.</small></div><div class="col-md-4 form-group mb-30" ng-if="modAnte.estadoCivilAux.id == 2 || modAnte.estadoCivilAux.id == 5"><label>RÃ©gimen matrimonial / UniÃ³n Civil *</label><ui-select id="dpRegimenMatrimonial" name="dpRegimenMatrimonial" required ng-model="modAnte.regimenMatrimonialAux" onkeypress="return false" ng-change="modAnte.verificaDatosPersonales()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAnte.regimenMatrimonial | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid position-abs" ng-if="userForm.dpRegimenMatrimonial.$error.required && (userForm.dpRegimenMatrimonial.$dirty || userForm.dpRegimenMatrimonial.$touched)">Debe ingresar rÃ©gimen matrimonial / uniÃ³n civil.</small></div><div class="col-md-4 form-group mb-30" ng-if="modAnte.estadoCivilAux.id == 1 || modAnte.estadoCivilAux.id == 3 || modAnte.estadoCivilAux.id == 4"><label>NÃºmero de dependientes</label><div class="row display-flex align-center"><div class="col-xs-10"><input id="dpDependencias" name="dpDependencias" type="text" class="form-control" placeholder="Ingrese" ng-model="modAnte.estadoSituacion.datosPersonales.nroDependientes" ng-change="modAnte.verificaDatosPersonales()" numeric-only maxlength="2"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Debes considerar cÃ³nyuges en el caso que no trabaje, hijos menores a 24 aÃ±os y otras personas que sean cargas legales." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div></div><div class="row"><div class="col-md-4 form-group mb-30" ng-if="modAnte.estadoCivilAux.id == 2 || modAnte.estadoCivilAux.id == 5"><label>NÃºmero de dependientes</label><div class="row display-flex align-center"><div class="col-xs-10"><input id="dpDependencias" name="dpDependencias" type="text" class="form-control" placeholder="Ingrese" ng-model="modAnte.estadoSituacion.datosPersonales.nroDependientes" ng-change="modAnte.verificaDatosPersonales()" numeric-only maxlength="2"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Debes considerar cÃ³nyuges en el caso que no trabaje, hijos menores a 24 aÃ±os y otras personas que sean cargas legales." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-md-4 form-group mb-30"><label>Vivienda que habita *</label><ui-select required id="dpTipoVivienda" name="dpTipoVivienda" ng-model="modAnte.tipoViviendaAux" onkeypress="return false" ng-change="modAnte.verificaVivienda()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAnte.vivienda | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid position-abs" ng-if="userForm.dpTipoVivienda.$error.required && (userForm.dpTipoVivienda.$dirty || userForm.dpTipoVivienda.$touched)">Debe ingresar vivienda que habita.</small></div><div ng-if="modAnte.tipoViviendaAux.id == 7" class="col-md-4 form-group mb-30"><label>Otro tipo de Residencia *</label><input required id="dpOtroTipo" name="dpOtroTipo" type="text" class="form-control" placeholder="ingrese" ng-model="modAnte.estadoSituacion.datosPersonales.otroTipoResidencia" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\\s]*$/" ng-change="modAnte.verificaDatosPersonales()" maxlength="50"> <small class="invalid position-abs" ng-if="userForm.dpOtroTipo.$error.required && (userForm.dpOtroTipo.$dirty || userForm.dpOtroTipo.$touched)">Debe ingresar otro tipo de residencia. </small><small class="invalid position-abs" ng-if="userForm.dpOtroTipo.$error.pattern && userForm.dpOtroTipo.$dirty">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group mb-30" ng-if="modAnte.tipoViviendaAux.id == 3"><label>Monto de arriendo *</label><div class="row display-flex align-center"><div class="col-xs-10"><input required id="dpMontoArriendo" name="dpMontoArriendo" type="text" class="form-control" ng-model="modAnte.estadoSituacion.datosPersonales.montoArriendo" ng-change="modAnte.verificaDatosPersonales(); modAnte.estadoSituacion.datosPersonales.montoArriendo = (modAnte.estadoSituacion.datosPersonales.montoArriendo | formatoMonedaEESS)" numeric-only placeholder="Ingrese" maxlength="12"> <small class="invalid position-abs" ng-show="userForm.dpMontoArriendo.$error.required && (userForm.dpMontoArriendo.$dirty || userForm.dpMontoArriendo.$touched)">Debe ingresar monto de arriendo.</small></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help" popover="En caso que residas como arrendatario, indica el valor del pago de arriendo mensual." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div></div><div class="row"><div ng-if="modAnte.nacionalidadAux.id == 3 || modAnte.nacionalidadAux.id == 2" class="col-md-4 form-group mb-30 clear-left"><label>Residencia tributaria en el extranjero *</label><ui-select required id="residenciaExtranjera" name="residenciaExtranjera" ng-model="modAnte.residenciaExtranjeraAux" onkeypress="return false" ng-change="modAnte.verificaResidenciaTributaria()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAnte.ResidenciaExtranjera | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid position-abs" ng-show="userForm.residenciaExtranjera.$error.required && (userForm.residenciaExtranjera.$dirty || userForm.residenciaExtranjera.$touched)">Debe ingresar residencia tributaria en el extranjero.</small></div><div ng-if="modAnte.residenciaExtranjeraAux.valor == \'Si\' &&\n                                    (modAnte.nacionalidadAux.id == 3 || modAnte.nacionalidadAux.id == 2)" class="col-md-4 form-group mb-30"><label>PaÃ­s de residencia tributaria *</label><ui-select required id="paisResTributaria" name="paisResTributaria" ng-model="modAnte.paisResTributariaAux" ng-change="modAnte.verificaDatosPersonales()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombre}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modAnte.paises | filter: $select.search)"> {{lista.nombre}} </ui-select-choices></ui-select><small class="invalid position-abs" ng-show="userForm.paisResTributaria.$error.required && (userForm.paisResTributaria.$dirty || userForm.paisResTributaria.$touched)">Debe ingresar paÃ­s de residencia tributaria.</small></div><div ng-if="modAnte.residenciaExtranjeraAux.valor == \'Si\'\n                                && (modAnte.nacionalidadAux.id == 3 || modAnte.nacionalidadAux.id == 2)" class="col-md-4 form-group mb-30"><label>NÃºmero de IdentificaciÃ³n tributaria *</label><input required id="numeroIdTributaria" placeholder="Ingrese" name="numeroIdTributaria" type="text" class="form-control" ng-model="modAnte.estadoSituacion.datosPersonales.numeroIdTributaria" numeric-only maxlength="13"> <small class="invalid position-abs" ng-show="userForm.numeroIdTributaria.$error.required && (userForm.numeroIdTributaria.$dirty || userForm.numeroIdTributaria.$touched)">Debe ingresar nÃºmero de identificaciÃ³n tributaria.</small></div></div></div></div></section></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modAnte.severidad}}" ng-if="modAnte.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modAnte.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modAnte.close()">Cancelar</a> <button ng-disabled="!userForm.$valid || userForm.$pristine" ng-click="modAnte.submitForm(userForm)" type="button" class="btn primary mr-0 pt-10 pb-10">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/cargos-publicos/cargo-publico.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/cargos-publicos/cargo-publico.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Cargos pÃºblicos</h3><button class="btn info close-modal" ng-click="modCarPub.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modCarPub.severidad}}" ng-if="modCarPub.errorModal"><article><b>Ha ocurrido un error</b><br>{{modCarPub.mensajeErrorModal}} </article></div></div><form name="userForm" novalidate><!-- CONTENT MODAL --><section class="modal-info"><!-- <h3>Cargos pÃºblicos</h3> --><div class="row mt-10"><div class="col-xs-12 pr-0"><div class="row ml-15 mr-15"><div class="row"><div class="col-xs-12 pr-15 pl-15 pb-20"><h5 class="text-color-1 mb-25">Â¿Es usted una persona que ocupe, haya ocupado o se postule para ocupar cargos pÃºblicos y/u organismos internacionales en Chile o en otros paÃ­ses?</h5><div class="form-group radio-inline pl-0"><label class="bch-custom-check radiobutton"><div><input type="radio" ng-value="true" name="cargoPublico" ng-model="modCarPub.flgCargoPublicoPropio" ng-click="modCarPub.swCargoPropio()"> <i></i></div><span>SÃ­</span></label></div><div class="form-group radio-inline"><label class="bch-custom-check radiobutton"><div><input type="radio" ng-value="false" name="cargoPublico" ng-model="modCarPub.flgCargoPublicoPropio" ng-click="modCarPub.swCargoPropio()"> <i></i></div><span>No</span></label></div></div><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">InstituciÃ³n *</label><input maxlength="50" type="text" id="cargoPubInstitucion" name="cargoPubInstitucion" class="form-control" ng-model="modCarPub.cargoPublico.institucion" placeholder="Ingrese" ng-change="modCarPub.cargoPublico.institucion = (modCarPub.cargoPublico.institucion)" ng-disabled="!modCarPub.flgCargoPublicoPropio" ng-blur="modCarPub.validarPubInstitucion();" ng-required="modCarPub.flgCargoPublicoPropio" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9&.,\'Â´\\s]*$/" required> <small class="invalid ng-binding" ng-show="userForm.cargoPubInstitucion.$error.pattern && !modCarPub.flgPubInstitucionValid && (userForm.cargoPubInstitucion.$dirty || userForm.cargoPubInstitucion.$touched)">Formato ingresado no es correcto.</small> <small class="invalid ng-binding" ng-show="userForm.cargoPubInstitucion.$error.required && (userForm.cargoPubInstitucion.$dirty || userForm.cargoPubInstitucion.$touched)">Debe ingresar instituciÃ³n.</small></div><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Cargo *</label><input maxlength="50" type="text" id="cargoPubCargo" name="cargoPubCargo" class="form-control" placeholder="Ingrese" ng-model="modCarPub.cargoPublico.cargo" ng-change="modCarPub.cargoPublico.cargo = (modCarPub.cargoPublico.cargo)" ng-disabled="!modCarPub.flgCargoPublicoPropio" ng-blur="modCarPub.validarPubCargo();" ng-required="modCarPub.flgCargoPublicoPropio" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9,.\'Â´&\\s]*$/" required> <small class="invalid ng-binding" ng-show="userForm.cargoPubCargo.$error.pattern && !modCarPub.flgPubCargoValid && (userForm.cargoPubCargo.$dirty || userForm.cargoPubCargo.$touched)">Formato ingresado no es correcto.</small> <small class="invalid ng-binding" ng-show="userForm.cargoPubCargo.$error.required && (userForm.cargoPubCargo.$dirty || userForm.cargoPubCargo.$touched)">Debe ingresar cargo.</small></div></div><div class="row"><div class="col-xs-12 pr-15 pl-15 pb-20"><h5 class="text-color-1 mb-25">Â¿Es usted una persona que estÃ© relacionada con alguien que se ajuste al perfil indicado en el punto anterior (cÃ³nyuge, padre, madre, hijo(a), hermano(a), asesor u otra persona cercana) en Chile o en otros paÃ­ses?</h5><div class="form-group radio-inline pl-0"><label class="bch-custom-check radiobutton"><div><input type="radio" ng-value="true" name="cargoPublicRelacionado" ng-model="modCarPub.flgCargoPublicoRelacionado"> <i></i></div><span>SÃ­</span></label></div><div class="form-group radio-inline"><label class="bch-custom-check radiobutton"><div><input type="radio" ng-value="false" name="cargoPublicoRelacionado" ng-model="modCarPub.flgCargoPublicoRelacionado" ng-click="modCarPub.swCargoOtro()"> <i></i></div><span>No</span></label></div></div><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">InstituciÃ³n *</label><input maxlength="50" type="text" id="cargoPubRelInstitucion" name="cargoPubRelInstitucion" class="form-control" ng-model="modCarPub.cargoPublicoRelacionado.institucion" placeholder="Ingrese" ng-change="modCarPub.cargoPublicoRelacionado.institucion = (modCarPub.cargoPublicoRelacionado.institucion)" ng-disabled="!modCarPub.flgCargoPublicoRelacionado" ng-blur="modCarPub.validarRelInstitucion();" ng-required="modCarPub.flgCargoPublicoRelacionado" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9&.,\'Â´\\s]*$/" required> <small class="invalid ng-binding" ng-show="userForm.cargoPubRelInstitucion.$error.pattern && !modCarPub.flgRelInstitucionValid && (userForm.cargoPubRelInstitucion.$dirty || userForm.cargoPubRelInstitucion.$touched)">Formato ingresado no es correcto.</small> <small class="invalid ng-binding" ng-show="userForm.cargoPubRelInstitucion.$error.required && (userForm.cargoPubRelInstitucion.$dirty || userForm.cargoPubRelInstitucion.$touched)">Debe ingresar instituciÃ³n.</small></div><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Cargo *</label><input maxlength="50" type="text" id="cargoPubRelCargo" name="cargoPubRelCargo" class="form-control" ng-model="modCarPub.cargoPublicoRelacionado.cargo" placeholder="Ingrese" ng-change="modCarPub.cargoPublicoRelacionado.cargo = (modCarPub.cargoPublicoRelacionado.cargo)" ng-disabled="!modCarPub.flgCargoPublicoRelacionado" ng-blur="modCarPub.validarRelCargo();" ng-required="modCarPub.flgCargoPublicoRelacionado" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9.\'Â´&,\\s]*$/" required> <small class="invalid ng-binding" ng-show="userForm.cargoPubRelCargo.$error.pattern && !modCarPub.flgRelCargoValid && (userForm.cargoPubRelCargo.$dirty || userForm.cargoPubRelCargo.$touched)">Formato ingresado no es correcto.</small> <small class="invalid ng-binding" ng-show="userForm.cargoPubRelCargo.$error.required && (userForm.cargoPubRelCargo.$dirty || userForm.cargoPubRelCargo.$touched)">Debe ingresar cargo.</small></div></div></div></div></div></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modCarPub.severidad}}" ng-if="modCarPub.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modCarPub.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modCarPub.close()">Cancelar </a><button ng-disabled="!userForm.$valid || userForm.$pristine" ng-click="modCarPub.submitForm(userForm)" type="button" class="btn primary mr-0 pt-10 pb-10">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/contacto/contacto.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/contacto/contacto.tpl.html", '<div class="ui-minerva estado-situacion"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Contacto</h3><button class="btn info close-modal" ng-click="modCantacto.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modCantacto.severidad}}" ng-if="modCantacto.errorModal"><article><b>Ha ocurrido un error</b><br>{{modCantacto.mensajeErrorModal}} </article></div></div><!-- CONTENT MODAL --><section class="modal-info"><article class="step pr-0 ml-5 mr-5" data-step="6"><!-- <h3>Contacto de llegada</h3> --><div class="row"><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Â¿CÃ³mo conociÃ³ este banco?</label><ui-select ng-change="modCantacto.tipoConociobanco($select.selected.id)" ng-model="modCantacto.estadoSituacion.estadoSituacion.contactoLlegada.comoConocioBanco"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modCantacto.listaContactoLlegada | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select></div></div><div class="row" ng-if="modCantacto.estadoSituacion.estadoSituacion.contactoLlegada.comoConocioBanco == 3"><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Nombre</label><input type="text" class="form-control" type="text" ng-model="modCantacto.estadoSituacion.estadoSituacion.contactoLlegada.nombre"></div><div class="col-xs-12 col-sm-6 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Rut</label><input type="text" class="form-control" type="text" ng-model="modCantacto.estadoSituacion.estadoSituacion.contactoLlegada.rut"></div></div><div class="row" ng-if="modCantacto.estadoSituacion.estadoSituacion.contactoLlegada.comoConocioBanco == 4"><div class="col-xs-12 col-sm-6 col-md-4 form-group">OTRO <input type="text" class="form-control" type="text" ng-model="modCantacto.estadoSituacion.estadoSituacion.contactoLlegada.otro"></div></div></article></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modCantacto.severidad}}" ng-if="modCantacto.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modCantacto.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modCantacto.close()">Cancelar </a><button class="btn primary mr-0 pt-10 pb-10" ng-click="modCantacto.guardar();">Guardar</button></div></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/cuenta-corriente/cuenta-corriente.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/cuenta-corriente/cuenta-corriente.tpl.html", '<div class="ui-minerva estado-situacion"><!-- HEADER MODAL --><div class="modal-header info"><h3 class="modal-title pull-left">Cuentas Corrientes</h3><button class="btn info close-modal" ng-click="modCC.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modCC.severidad}}" ng-if="modCC.errorModal"><article><b>Ha ocurrido un error</b><br>{{modCC.mensajeErrorModal}} </article></div></div><!-- CONTENT MODAL --><section class="modal-info"><article class="step pr-0" data-step="1"><div class="row pr-5 pl-5"><div class="col-xs-12"><div><div class="col-xs-12 switch success" ng-click="modCC.swActivos(\'inversion\')"><input type="checkbox" ng-model="modCC.flgInversiones"> <i></i><!-- Circle --> <span class="text-default">Tengo Cuenta Corriente en uno o mÃ¡s bancos</span></div><div class="table mb-30" ng-if="modCC.listaICuentasCorrientes.length > 0 && modCC.flgInversiones" tablas-interactivas tabla-select cantidad-maxima-columnas="3" columnas-no-ocultables="Banco, NÃºmero de cuenta corriente, LÃ­nea de CrÃ©dito" columnas-ocultas="Sucursal"><table class="table tabla-interactiva tabla-seleccion"><thead><tr><th>Banco</th><th>NÃºmero de cuenta corriente</th><th>LÃ­nea de CrÃ©dito</th><th>Sucursal</th><th class="actions show-hide w-100"><a class="lista-desplegada" ng-class="{\'lista-desplegada\':dropCols}" ng-click="dropCols = !dropCols" href="javascript:void(0)" off-click-filter="\'.listado-header\'"><i class="ion-ios-more"></i></a><div class="listado-header" collapse="!dropCols" off-click="dropCols = false"></div></th></tr></thead><tbody><tr ng-repeat="lista in modCC.listaICuentasCorrientes track by $index"><td>{{lista.banco}}</td><td>{{lista.numeroCuenta}}</td><td>{{lista.lineaCreditoAsociada}}</td><td>{{lista.sucursal}}</td><td class="actions display-flex justify-evenly activos-deudas-modal"><a href="javascript:void(0);" ng-click="confirmacion=\'eliminar1\'"><i class="ion-ios-trash-outline px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link ng-hide" ng-show="confirmacion==\'eliminar1\'"><span class="inline-block">Â¿Seguro desea eliminar?</span> <button class="btn default btn-xs" ng-click="confirmacion=\'\';modCC.borrarCuentaCorriente($index)">Si</button> <button class="btn default btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click=" modCC.cargarEditarCuentaCoriente($index)"><span ng-class="i.className" class="px-23 ml-10 mr-10 icon-icon-edit-empty"></span></a></td></tr></tbody></table><div class="col-xs-12 text-right mb-15 padd-none"><a class="btn-fill info-btn" href="javascript:void(0);" ng-click="modCC.flgAgregarInversiones = true; modCC.mostrarTablaCuentaCorriente = !modCC.mostrarTablaCuentaCorriente"><div class="cont-animacion"><span></span> <i class="ion-ios-plus-empty"></i></div><span class="btn-link">Agregar cuenta corriente</span></a></div></div></div><!-- Resumen Box - Cuenta Corriente --><form name="cuentaCorriente"><div ng-if="modCC.flgAgregarInversiones" class="resume-box"><div class="row"><div class="col-xs-4 col-sm-4 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Banco*</label><ui-select ng-model="modCC.ccBanco" required><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.valor as lista in (modCC.listaBancos | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><!-- <input style="display: none;" ng-model="modCC.ccPosicion"> --></div><div class="col-xs-4 col-sm-4 col-md-4 form-group"><label class="text-nowrap text-ellipsis">NÂ° de Cuenta Corriente*</label><input name="nCuenta" type="text" class="form-control" ng-model="modCC.ccNroCuentaCorriente" numeric-only required> <small class="invalid ng-binding" ng-if="cuentaCorriente.nCuenta.$error.required && cuentaCorriente.nCuenta.$dirty">Debe ingresar un nÃºmero de cuenta corriente.</small></div><div class="col-xs-4 col-sm-4 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Â¿Linea de CrÃ©dito asociada?</label><div class="pt-5"><input type="radio" ng-checked="modCC.cuentaCorrienteLineaCredito" ng-click="modCC.cuentaCorrienteLineaCredito=true"><label class="mr-30">Si</label><input type="radio" ng-checked="!modCC.cuentaCorrienteLineaCredito" ng-click="modCC.cuentaCorrienteLineaCredito=false"><label>No</label></div></div></div><div class="row"><div class="col-xs-4 col-sm-4 col-md-4 form-group"><label class="text-nowrap text-ellipsis">Sucursal* <a class="text-color-5 px-16 ml-5" href="javascript:void(0);" tooltip-append-to-body="false" tooltip="" tooltip-placement="right" tooltip-trigger="mouseenter" tooltip-animation="false"><i class="ion-ios-help-outline"></i></a></label><input name="sucursal" type="text" class="form-control" ng-model="modCC.sucursal" required pattern="[a-zA-Z ]*"> <small class="invalid ng-binding" ng-if="cuentaCorriente.sucursal.$error.required && cuentaCorriente.sucursal.$dirty">Debe ingresar una sucursal.</small> <small class="invalid ng-binding" ng-if="cuentaCorriente.sucursal.$error.pattern && cuentaCorriente.sucursal.$dirty">No se pueden ingresar nÃºmeros o caracteres especiales a este campo.</small></div></div><div><button type="button" class="btn info mr-0 pull-right btn-confirm mr-0 ml-15" ng-click="modCC.guardarCuentaCorriente()" ng-disabled="cuentaCorriente.$invalid || cuentaCorriente.$pristine">Guardar Cuenta Corriente</button> <button type="button" class="btn default mr-0 pull-right">Cancelar</button></div></div></form></div></div></article></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modCC.severidad}}" ng-if="modCC.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modCC.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modCC.close()">Cancelar</a> <button class="btn primary mr-0 pt-10 pb-10" ng-click="modCC.guardar()">Guardar</button></div></div>');
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/direccion-comercial/direccion-comercial.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/direccion-comercial/direccion-comercial.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">DirecciÃ³n Comercial</h3><button class="btn info close-modal" ng-click="modDC.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modDC.severidad}}" ng-if="modDC.errorModal"><article><b>Ha ocurrido un error</b><br>{{modDC.mensajeErrorModal}} </article></div></div><form name="userForm"><!-- CONTENT MODAL --><section class="modal-info"><article class="step pr-0" data-step="3"><div class="row mt-10"><div class="col-xs-12 pr-0"><div class="row ml-5 mr-5"><div class="col-md-4 form-group"><label for="">PaÃ­s *</label><ui-select name="dirComePais" ng-model="modDC.idPaisAux" ng-change="modDC.cambioPais()" required><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombre}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modDC.paises | filter: $select.search)"> {{lista.nombre}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.dirComePais.$error.required && (userForm.dirComePais.$dirty || userForm.dirComePais.$touched)">Debe ingresar paÃ­s.</small></div><div class="col-md-4 form-group"><label for="">RegiÃ³n *</label><ui-select name="dirComeRegion" ng-required="!modDC.noEsChile" ng-model="modDC.idRegionAux" ng-disabled="modDC.noEsChile" ng-change="modDC.verificaDatosPersonales(); modDC.getCiudadesFront($select.selected.id)"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modDC.regiones | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.dirComeRegion.$error.required && (userForm.dirComeRegion.$dirty || userForm.dirComeRegion.$touched)">Debe ingresar regiÃ³n.</small></div><div class="col-md-4 form-group"><label for="">Ciudad *</label><ui-select name="dirComeCiudad" ng-model="modDC.idCiudadAux" ng-change="modDC.verificaDatosPersonales(); modDC.getComunasFront($select.selected.id)" ng-disabled="modDC.noEsChile" ng-required="!modDC.noEsChile"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modDC.ciudades | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.dirComeCiudad.$error.required && (userForm.dirComeCiudad.$dirty || userForm.dirComeCiudad.$touched)">Debe ingresar ciudad.</small></div></div><div class="row ml-5 mr-5"><div class="col-md-4 form-group"><label for="">Comuna *</label><ui-select name="dirComeComuna" ng-model="modDC.idComunaAux" onkeypress="return false" ng-change="modDC.verificaDatosPersonales()" ng-disabled="modDC.noEsChile" ng-required="!modDC.noEsChile"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modDC.comunas | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.dirComeComuna.$error.required && (userForm.dirComeComuna.$dirty || userForm.dirComeComuna.$touched)">Debe ingresar comuna.</small></div><div class="col-md-4 form-group"><label for="">Calle *</label><input maxlength="50" id="dirComeCalle" name="dirComeCalle" type="text" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9.,\'Â´\\s]*$/" class="form-control" ng-model="modDC.direccionComercial.calle" placeholder="Ingrese" required> <small class="invalid ng-binding" ng-show="userForm.dirComeCalle.$error.required && (userForm.dirComeCalle.$dirty || userForm.dirComeCalle.$touched)">Debe ingresar calle.</small> <small class="invalid ng-binding position-abs" ng-if="userForm.dirComeCalle.$error.pattern && userForm.dirComeCalle.$dirty">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group"><label for="">NÃºmero *</label><input maxlength="9" type="text" id="dirComeNumero" name="dirComeNumero" ng-pattern="/^\\d+$/" class="form-control" placeholder="Ingrese" ng-model="modDC.direccionComercial.numero" numeric-only required> <small class="invalid ng-binding" ng-show="userForm.dirComeNumero.$error.required && (userForm.dirComeNumero.$dirty || userForm.dirComeNumero.$touched)">Debe ingresar nÃºmero</small></div></div><div class="row ml-5 mr-5"><div class="col-md-4 form-group"><label for="">NÃºmero departamento/casa *</label><input maxlength="10" type="text" id="dirComeDeptoCasa" name="dirComeDeptoCasa" required class="form-control" ng-model="modDC.direccionComercial.nroDeptoCasa" placeholder="Ingrese"> <small class="invalid ng-binding" ng-show="userForm.dirComeDeptoCasa.$error.required && (userForm.dirComeDeptoCasa.$dirty || userForm.dirComeDeptoCasa.$touched)">Debe ingresar nÃºmero departamento/casa. </small><small class="invalid ng-binding" ng-show="userForm.dirComeDeptoCasa.$error.pattern">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group" prefix-length="3" input-prefix="+56"><label for="">TelÃ©fono *</label><input type="text" numeric-only maxlength="9" minlength="9" name="dirComeTelefono" ng-model="modDC.direccionComercial.telefono" required class="form-control" placeholder="Ingrese"> <small class="invalid ng-binding" ng-show="userForm.dirComeTelefono.$error.required && (userForm.dirComeTelefono.$dirty || userForm.dirComeTelefono.$touched)">Debe telÃ©fono. </small><small class="invalid ng-binding" ng-show="userForm.dirComeTelefono.$error.minlength">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group" prefix-length="3" input-prefix="+56"><label>Celular *</label><input maxlength="9" minlength="9" numeric-only type="text" name="dirComeCelular" required ng-model="modDC.direccionComercial.celular" placeholder="Ingrese" class="form-control"> <small class="invalid ng-binding" ng-show="userForm.dirComeCelular.$error.required && (userForm.dirComeCelular.$dirty || userForm.dirComeCelular.$touched)">Debe ingresar celular. </small><small class="invalid ng-binding" ng-show="userForm.dirComeCelular.$error.minlength">Formato ingresado no es correcto.</small></div></div><div class="row ml-5 mr-5"><div class="col-md-4 form-group"><label for="">Email *</label><input required id="dirComeEmail" name="dirComeEmail" type="email" maxlength="50" placeholder="Ingrese" ng-model="modDC.direccionComercial.email" class="form-control" ng-pattern="/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,15}(?:\\.[a-z]{2})?)$/i"> <small class="invalid ng-binding" ng-show="userForm.dirComeEmail.$error.required && (userForm.dirComeEmail.$dirty || userForm.dirComeEmail.$touched)">Debe ingresar email.</small> <small class="invalid ng-binding" ng-show="userForm.dirComeEmail.$error.email || userForm.dirComeEmail.$error.pattern">Formato ingresado no es correcto.</small></div></div></div></div></article></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modDC.severidad}}" ng-if="modDC.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modDC.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modDC.close()">Cancelar </a><button ng-disabled="userForm.$invalid || userForm.$pristine" ng-click="modDC.submitForm(userForm)" type="button" class="btn primary mr-0 pt-10 pb-10">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/direccion-particular/direccion-particular.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/direccion-particular/direccion-particular.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">DirecciÃ³n Particular</h3><button class="btn info close-modal" ng-click="modDP.close()"><span class="ion-ios-close-empty"></span></button></div><form name="userForm" novalidate><!-- CONTENT MODAL --><section class="modal-info"><div class="row mb-20 pl-15"><div class="col-xs-12"><div class="bch-mensaje-empresas {{modDP.severidad}}" ng-if="modDP.errorModal"><article><b>Ha ocurrido un error</b><br>{{modDP.mensajeErrorModal}} </article></div><div class="bch-mensaje-empresas info mt-0"><article><p>Estimado cliente, ya que la direcciÃ³n particular requiere de validaciÃ³n fÃ­sica banco, solo se le permitirÃ¡ agregar una nueva y adjuntar un documento de cuenta vÃ¡lido para agilizar el proceso.</p></article></div></div></div><div class="row mt-10"><div class="col-xs-12 pr-0"><div class="row ml-5 mr-5"><div class="col-md-4 form-group"><label for="">PaÃ­s *</label><ui-select name="dirPartPais" ng-model="modDP.idPaisAux" ng-change="modDP.cambioPais()" required><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombre}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modDP.paises | filter: $select.search)"> {{lista.nombre}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.dirPartPais.$error.required && (userForm.dirPartPais.$dirty || userForm.dirPartPais.$touched)">Debe ingresar paÃ­s.</small></div><div class="col-md-4 form-group"><label for="">RegiÃ³n *</label><ui-select name="dirPartRegion" ng-disabled="modDP.noEsChile" ng-model="modDP.idRegionAux" ng-required="!modDP.noEsChile" ng-change="modDP.verificaDatosPersonales(); modDP.getCiudadesFront($select.selected.id, true)"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modDP.regiones | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.dirPartRegion.$error.required && (userForm.dirPartRegion.$dirty || userForm.dirPartRegion.$touched)">Debe ingresar regiÃ³n.</small></div><div class="col-md-4 form-group"><label for="">Ciudad *</label><ui-select name="dirPartCiudad" ng-model="modDP.idCiudadAux" ng-change="modDP.verificaDatosPersonales(); modDP.getComunasFront($select.selected.id, true)" ng-disabled="modDP.noEsChile" ng-required="!modDP.noEsChile"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modDP.ciudades | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.dirPartCiudad.$error.required && (userForm.dirPartCiudad.$dirty || userForm.dirPartCiudad.$touched)">Debe ingresar ciudad.</small></div></div><div class="row ml-5 mr-5"><div class="col-md-4 form-group"><label for="">Comuna *</label><ui-select name="dirPartComuna" ng-disabled="modDP.noEsChile" ng-model="modDP.idComunaAux" onkeypress="return false" ng-change="modDP.verificaDatosPersonales()" ng-required="!modDP.noEsChile"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modDP.comunas | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.dirPartComuna.$error.required && (userForm.dirPartComuna.$dirty || userForm.dirPartComuna.$touched)">Debe ingresar comuna.</small></div><div class="col-md-4 form-group"><label for="">Calle *</label><input required id="dirPartCalle" name="dirPartCalle" type="text" maxlength="50" placeholder="Ingrese" ng-model="modDP.direccionParticular.calle" class="form-control" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9.,\'Â´\\s]*$/"> <small class="invalid ng-binding" ng-show="userForm.dirPartCalle.$error.required && (userForm.dirPartCalle.$dirty || userForm.dirPartCalle.$touched)">Debe ingresar calle.</small> <small class="invalid ng-binding" ng-show="userForm.dirPartCalle.$error.pattern">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group"><label for="">NÃºmero *</label><input maxlength="10" type="text" required id="dirParNumero" name="dirParNumero" placeholder="Ingrese" ng-pattern="/^\\d+$/" class="form-control" ng-model="modDP.direccionParticular.numero" numeric-only> <small class="invalid ng-binding" ng-show="userForm.dirParNumero.$error.required && (userForm.dirParNumero.$dirty || userForm.dirParNumero.$touched)">Debe ingresar nÃºmero.</small></div></div><div class="row ml-5 mr-5"><div class="col-md-4 form-group"><label for="">NÃºmero departamento/casa *</label><input maxlength="10" id="dirPartDeptoCasa" name="dirPartDeptoCasa" type="text" placeholder="Ingrese" ng-model="modDP.direccionParticular.nroDeptoCasa" class="form-control" required> <small class="invalid ng-binding" ng-show="userForm.dirPartDeptoCasa.$error.required && (userForm.dirPartDeptoCasa.$dirty || userForm.dirPartDeptoCasa.$touched)">Debe ingresar nÃºmero departamento/casa. </small><small class="invalid ng-binding" ng-show="userForm.dirPartDeptoCasa.$error.pattern">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group" prefix-length="3" input-prefix="+56"><label for="">TelÃ©fono *</label><input type="text" numeric-only maxlength="9" minlength="9" name="dirPartTelefono" ng-model="modDP.direccionParticular.telefono" required class="form-control" placeholder="Ingrese"> <small class="invalid ng-binding" ng-show="userForm.dirPartTelefono.$error.required && (userForm.dirPartTelefono.$dirty || userForm.dirPartTelefono.$touched)">Debe ingresar telÃ©fono. </small><small class="invalid ng-binding" ng-show="userForm.dirPartTelefono.$error.minlength">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group" prefix-length="3" input-prefix="+56"><label>Celular *</label><input maxlength="9" minlength="9" numeric-only type="text" name="dirPartCelular" ng-model="modDP.direccionParticular.celular" placeholder="Ingrese" class="form-control" required> <small class="invalid ng-binding" ng-show="userForm.dirPartCelular.$error.required && (userForm.dirPartCelular.$touched || userForm.dirPartCelular.$dirty)">Debe ingresar celular.</small> <small class="invalid ng-binding" ng-show="userForm.dirPartCelular.$error.minlength">Formato ingresado no es correcto.</small></div></div><div class="row ml-5 mr-5"><div class="col-md-4 form-group"><label for="">Email *</label><input required id="dirPartEmail" name="dirPartEmail" type="email" maxlength="50" placeholder="Ingrese" ng-pattern="/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,15}(?:\\.[a-z]{2})?)$/i" ng-model="modDP.direccionParticular.email" class="form-control"> <small class="invalid ng-binding" ng-show="userForm.dirPartEmail.$error.required && (userForm.dirPartEmail.$dirty || userForm.dirPartEmail.$touched)">Debe ingresar email.</small> <small class="invalid ng-binding" ng-show="userForm.dirPartEmail.$error.email || userForm.dirPartEmail.$error.pattern">Formato ingresado no es correcto.</small></div></div></div></div><div class="row mb-20 pl-15"><div class="col-xs-12"><div class="bch-mensaje-empresas {{modDP.severidad}}" ng-if="modDP.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modDP.mensajeErrorGuardar}} </article></div></div></div></section><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pull-left pt-10 pb-10" ng-click="modDP.close()">Cancelar</a> <button ng-disabled="!userForm.$valid || userForm.$pristine" ng-click="modDP.submitForm(userForm)" type="button" class="btn primary mr-0 pt-10 pb-10">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/documentos-a-solicitar/documentos-a-solicitar.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/documentos-a-solicitar/documentos-a-solicitar.tpl.html", '<div class="ui-minerva estado-situacion"><!-- HEADER MODAL --><div class="modal-header info"><h3 class="modal-title pull-left">Documentos a solicitar</h3><button class="btn info close-modal" ng-click="modDocuS.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modDocuS.severidad}}" ng-if="modDocuS.errorModal"><article><b>Ha ocurrido un error</b><br>{{modDocuS.mensajeErrorModal}} </article></div></div><!-- CONTENT MODAL --><section class="modal-info"><div class="row mt-10"><div class="col-xs-12"><p>Pediremos tu <strong class="text-bold">CÃ©dula de Identidad</strong> por ambos lados, el resto de los documentos a solicitar varÃ­an segÃºn tu situaciÃ³n:</p></div><accordion close-others="true" class="panel-collapse__step col-xs-12"><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si estÃ¡s afiliado a una AFP <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Certificado de AFP</p><p>EncuÃ©ntralo en el sitio WEB de la instituciÃ³n a la que estÃ©s afiliado, debes contar con el Rut y la clave de acceso.</p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si trabajas con Contrato <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Certificado de empleador</p><p>Pide a tu empresa un certificado de empleador. Ahora bien, si llevas menos de un mes en tu empresa puedes adjuntar solo el contrato laboral.</p><p class="px-14 text-color-4">3 Ãºltimas liquidaciones de sueldo</p><p>3 Ãºltimas liquidaciones de sueldo</p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si trabajas a Honorarios (Boleta) <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Boletas de honorarios de los Ãºltimos 4 meses</p><p>En el sitio web del SII, en menÃº Boleta de Honorarios ElectrÃ³nica, dirÃ­gete a la opciÃ³n <a href="">Consultas sobre boletas.</a> AllÃ­ puedes solicitar uno por uno el resumen mensual de los Ãºltimos cuatro meses, o solicitar el resumen anual, que incluye los Ãºltimos 4 meses.</p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si eres Pensionado, Jubilado o MontepÃ­o <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Recibo de pago del Ãºltimo mes</p><p>Depende de cÃ³mo lo recibas, puedes entregar un comprobante de depÃ³sito, o el recibo del pago entregado en caja.</p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si eres DueÃ±o(a) de casa <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Liquidaciones o boletas de honorarios del sostenedor econÃ³mico</p><p>Debes adjuntar las Ãºltimas 3 liquidaciones proporcionadas por su empresa o las boletas de honorarios de los 4 Ãºltimos meses de tu sostenedor econÃ³mico.</p><p class="px-14 text-color-4">Liquidaciones o boletas de honorarios del sostenedor econÃ³mico</p><p>EncuÃ©ntralo en el sitio web del Servicio de Registro Civil e IdentificaciÃ³n.</p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si eres Estudiante <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Certificado de Estudios</p><p>Puedes solicitarlo en la instituciÃ³n donde eres alumno regular.</p><p class="px-14 text-color-4">Liquidaciones o boletas de honorarios del sostenedor econÃ³mico</p><p>Debes adjuntar las Ãºltimas 3 liquidaciones proporcionadas por su empresa o las boletas de honorarios de los 4 Ãºltimos meses de tu sostenedor econÃ³mico.</p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si quieres complementar renta con CÃ³nyuge o Conviviente Civil <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p>Al complementar renta, deberÃ¡s acreditar los ingresos de tu conyuge o conviviente civil dependiendo de la actividad econÃ³mica declarada.</p><p class="px-14 text-color-4">Certificado de Matrimonio o de Acuerdo UniÃ³n Civil</p><p>EncuÃ©ntralo en el sitio web del <a href="">Servicio de Registro Civil e IdentificaciÃ³n.</a></p><p class="px-14 text-color-4">Certificado de AFP</p><p>EncuÃ©ntralo en el sitio web de la instituciÃ³n a la que estÃ©s afiliado, debes contar con el Rut y la clave de acceso.</p><p class="px-14 text-color-4">Certificado de empleador</p><p>Pide a tu empresa un certificado de empleador. Ahora bien, si llevas menos de un mes en tu empresa puedes adjuntar solo el contrato laboral.</p><p class="px-14 text-color-4">3 Ãºltimas liquidaciones de sueldo</p><p>Tu empresa debe disponer las 3 Ãºltimas liquidaciones de sueldo.</p><p class="px-14 text-color-4">Boletas de honorarios de los Ãºltimos 4 meses</p><p>En el sitio web del SII, en menÃº Boleta de Honorarios ElectrÃ³nica, dirÃ­gete a la opciÃ³n <a href="">Consultas sobre boletas.</a> AllÃ­ puedes solicitar uno por uno el resumen mensual de los Ãºltimos cuatro meses, o solicitar el resumen anual, que incluye los Ãºltimos 4 meses.</p><p class="px-14 text-color-4">Recibo de pago del Ãºltimo mes de pensiÃ³n, jubilaciÃ³n o montepiado.</p><p>Depende de cÃ³mo lo recibas, puedes entregar un comprobante de depÃ³sito, o el recibo del pago entregado en caja.</p></div></div></accordion-group></accordion><div class="col-xs-12"><p>Existen otros documentos que si bien <span class="text-bold">No son obligatorios</span>, ayudan a respaldar la informaciÃ³n ingresada.</p></div><accordion close-others="true" class="panel-collapse__step col-xs-12"><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si declaras que posees VehÃ­culo(s) <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Certificado de InscripciÃ³n (PadrÃ³n) de vehÃ­culos motorizados</p><p>Puedes encontrarlo en el sitio web del <a href="">Servicio de Registro Civil e IdentificaciÃ³n.</a></p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si declaras Inversiones <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Cartola de InversiÃ³n o imagen desde el Sitio de InversiÃ³n</p><p>EncuÃ©ntralo en el sitio web de la instituciÃ³n donde se encuentre tu inversiÃ³n o en tu correo.</p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si declaras que posees un Bien RaÃ­z o MÃ¡s <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Ãšltimo recibo de pago de contribuciones</p><p>Puedes encontrarlo en el sitio web de la <a href="">TesorerÃ­a General de la RepÃºblica.</a> Escribiendo el ROL y haciendo click en buscar.</p><p class="px-14 text-color-4">Pago de Dividendo</p><p>Puedes encontrarlo en el sitio web de la <a href="">TesorerÃ­a General de la RepÃºblica.</a> Escribiendo el ROL y haciendo click en buscar.</p><p class="px-14 text-color-4">Certificado de deuda de bienes raÃ­ces</p><p>Puedes encontrarlo en el sitio web de la <a href="">TesorerÃ­a General de la RepÃºblica.</a> Escribiendo el ROL y haciendo click en buscar.</p><p class="px-14 text-color-4">Estado de declaraciÃ³n de renta</p><p>Ingresa al sitio web del <a href="">SII</a> > Servicios online > DeclaraciÃ³n de Renta > Consulta y Seguimiento > Consultar estado de declaraciÃ³n > Selecciona este aÃ±o y consulta. NecesitarÃ¡s tu clave de acceso.</p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si arriendas Tu(s) Bien(es) <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Contrato de arriendo</p><p>Cada parte del contrato recibe una copia al momento de firmar, esa es la que deberÃ¡s adjuntar. En caso de no poserla, debes solicitar una copia tu corredor de propiedades, o bien en la notarÃ­a donde suscribiste el contrato con el arrendatario.</p></div></div></accordion-group><accordion-group class="accordion-group" is-open="" ng-click=""><accordion-heading><div class="title" ng-init="flecha=true" ng-click="flecha=!flecha">Si eres Socio <i class="pull-right icon px-20 text-color-6" ng-class="{\'ion-ios-arrow-down\': flecha, \'ion-ios-arrow-up\': !flecha}"></i></div></accordion-heading><div class="clear mt-5 pl-10 pr-10"><div class="row"><p class="px-14 text-color-4">Escritura de constituciÃ³n de la sociedad</p><p>Cada parte del contrato de sociedad recibe una copia al momento de firmar, esa es la que deberÃ¡s adjuntar.</p></div></div></accordion-group></accordion></div></section></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/estudios/estudio.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/estudios/estudio.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Estudios</h3><button class="btn info close-modal" ng-click="modEstC.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modEstC.severidad}}" ng-if="modEstC.errorModal"><article><b>Ha ocurrido un error</b><br>{{modEstC.mensajeErrorModal}} </article></div></div><form name="userForm" novalidate><!-- CONTENT MODAL --><section class="modal-info"><!-- <h3>estudiosTitular</h3> --><div class="row ml-5 mr-5 mt-10"><div class="col-xs-12"><div class="row"><div class="col-md-4 form-group"><label>Nivel de estudios *</label><div class="row display-flex align-center"><div class="col-xs-10"><ui-select ng-change="modEstC.validarCampos($select.selected.id); modEstC.limpiarCampos(userForm)" required name="nivelestudiosTitular" id="nivelestudiosTitular" onkeypress="return false" ng-model="modEstC.estadoSituacion.estudios.nivel"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modEstC.nivelEstudio | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.nivelestudiosTitular.$error.required && (userForm.nivelestudiosTitular.$dirty || userForm.nivelestudiosTitular.$touched)">Debe ingresar nivel de estudios.</small></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Debes seÃ±alar el nivel de estudios mÃ¡s elevado obtenido. Si eres estudiante, considera nivel de estudios actual." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-md-4 form-group" ng-if="modEstC.mostrarTitulo"><label>ProfesiÃ³n/Carrera *</label><div class="row display-flex align-center"><div class="col-xs-10"><input required ng-disabled="false" name="titulo" id="titulo" ng-model="modEstC.estadoSituacion.estudios.tituloCarrera" type="text" class="form-control" placeholder="Ingrese" maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9\'&Â´.,\\s]*$/"> <small class="invalid ng-binding" ng-show="userForm.titulo.$error.required && (userForm.titulo.$dirty || userForm.titulo.$touched)">Debe ingresar profesiÃ³n/carrera.</small> <small class="invalid ng-binding position-abs" ng-if="userForm.titulo.$error.pattern && userForm.titulo.$dirty">Formato ingresado no es correcto.</small></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Debes indicar la carrera profesional o tÃ©cnica cursada de mayor nivel." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-md-4 form-group" ng-if="modEstC.mostrarEstadoCompletitud"><label>Estado de Completitud *</label><div class="row display-flex align-center"><div class="col-xs-10"><ui-select onkeypress="return false" ng-change="modEstC.validarMostrarAnho($select.selected.id)" required name="estadoCompletitud" id="estadoCompletitud" onkeypress="return false" ng-model="modEstC.estadoSituacion.estudios.completitud"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in (modEstC.estadoCompletitud)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="userForm.estadoCompletitud.$error.required && (userForm.estadoCompletitud.$dirty || userForm.estadoCompletitud.$touched)">Debe ingresar estado de Completitud.</small></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help ml-0" popover="Debes indicar la completitud alcanzada en la ProfesiÃ³n o Carrera que declaraste en campo tÃ­tulo profesional/carrera." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div></div><div class="row"><div class="col-md-4 form-group" ng-if="modEstC.mostrarDuracion" ng-class="{\'clear-left\': !modEstC.mostrarEstadoCompletitud, \'\': modEstC.mostrarEstadoCompletitud}"><label>DuraciÃ³n Carrera *</label><input required name="duracion" id="duracion" ng-model="modEstC.estadoSituacion.estudios.duracion" type="text" numeric-only class="form-control" placeholder="Ingrese" maxlength="2"> <small class="invalid ng-binding" ng-show="userForm.duracion.$error.required && (userForm.duracion.$dirty || userForm.duracion.$touched)">Debe ingresar duraciÃ³n carrera.</small></div><div class="col-md-4 form-group" ng-if="modEstC.mostrarAnho"><label>AÃ±o que cursa</label><input name="anho" ng-model="modEstC.estadoSituacion.estudios.anoCursa" type="text" class="form-control" placeholder="Ingrese" maxlength="2" numeric-only></div><div class="col-md-4 form-group" ng-if="modEstC.mostrarUniversidad"><label>InstituciÃ³n Educacional *</label><input required name="universidadIp" id="universidadIp" ng-model="modEstC.estadoSituacion.estudios.universidadIp" type="text" class="form-control" placeholder="Ingrese" maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘&0-9.,\'Â´\\s]*$/"> <small class="invalid ng-binding" ng-show="userForm.universidadIp.$error.required && (userForm.universidadIp.$dirty || userForm.universidadIp.$touched)">Debe ingresar instituciÃ³n educacional.</small> <small class="invalid ng-binding position-abs" ng-if="userForm.universidadIp.$error.pattern && userForm.universidadIp.$dirty">Formato ingresado no es correcto.</small></div></div></div></div></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modEstC.severidad}}" ng-if="modEstC.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modEstC.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modEstC.close()">Cancelar </a><button ng-disabled="!userForm.$valid" ng-click="modEstC.submitForm(userForm)" type="button" class="btn primary mr-0 pt-10 pb-10">Guardar</button></div></form></div>');
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/ingreso-liquido-mensual-conyuge/ingreso-liquido-mensual-conyuge.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/ingreso-liquido-mensual-conyuge/ingreso-liquido-mensual-conyuge.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Ingreso lÃ­quido mensual cÃ³nyuge / conviviente civil</h3><button class="btn info close-modal" ng-click="modIngreLiqMen.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modIngreLiqMen.severidad}}" ng-if="modIngreLiqMen.errorModal"><article><b>Ha ocurrido un error</b><br>{{modIngreLiqMen.mensajeErrorModal}} </article></div></div><!-- CONTENT MODAL --><section class="modal-info"><!-- <h3>Ingreso lÃ­quido mensual</h3> --><div class="row mt-10 pl-15"><div class="col-xs-12"><div class="row"><div class="col-xs-12 col-md-6"><h5 class="color-text-1">Tipo</h5></div><div class="col-xs-12 col-md-6"><h5 class="color-text-1">Ingreso lÃ­quido mensual</h5></div></div><div class="row"><div class="col-xs-12 col-md-6"><label class="switch success flex-center" ng-click="modIngreLiqMen.swSueldo()"><input type="checkbox" ng-model="modIngreLiqMen.flgSueldo"> <i></i><!-- Circle --> <span class="text-default">Sueldo</span></label></div><div class="col-xs-12 col-md-6 form-group"><input type="text" class="form-control" ng-disabled="!modIngreLiqMen.flgSueldo" maxlength="17" ng-model="modIngreLiqMen.sueldo" ng-change="modIngreLiqMen.cambioMoneda(\'sueldo\'); modIngreLiqMen.detectaCambioSueldo()" numeric-only placeholder="Ingreso lÃ­quido mensual"></div></div><div class="row"><div class="col-xs-12 col-md-6 pl-30"><div class="row display-flex align-center flex-wrap"><label class="switch success flex-center" ng-click="modIngreLiqMen.swHonorarios()"><input type="checkbox" ng-model="modIngreLiqMen.flgHonorarios"> <i></i><!-- Circle --> <span class="text-default">Honorarios</span></label><div class="mb-5"><div class="circulo circulo-help ml-10" popover="Ingreso mensual que percibe una persona natural por realizar una actividad econÃ³mica o prestar sus servicios de manera personal ejerciendo su profesiÃ³n." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-12 col-md-6 form-group"><input type="text" class="form-control" ng-disabled="!modIngreLiqMen.flgHonorarios" maxlength="17" ng-model="modIngreLiqMen.honorarios" ng-change="modIngreLiqMen.cambioMoneda(\'honorarios\'); modIngreLiqMen.detectaCambioHonorarios()" numeric-only placeholder="Ingreso lÃ­quido mensual"></div></div><div class="row"><div class="col-xs-12 col-md-6 pl-30"><div class="row display-flex align-center flex-wrap"><label class="switch success flex-center" ng-click="modIngreLiqMen.swArriendo()"><input type="checkbox" ng-model="modIngreLiqMen.flgArriendos"> <i></i><!-- Circle --> <span class="text-default white-space--nowrap">Ingreso por arriendo</span></label><div class="mb-5"><div class="circulo circulo-help ml-10" popover="Ingreso mensual que se percibe por el arriendo de propiedades." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-12 col-md-6 form-group"><input type="text" disabled="disabled" class="form-control" ng-disabled="!modIngreLiqMen.flgArriendos" maxlength="17" ng-model="modIngreLiqMen.arriendos" ng-change="modIngreLiqMen.cambioMoneda(\'recibo\'); modIngreLiqMen.detectaCambioArriendos()" numeric-only placeholder="Ingreso lÃ­quido mensual"></div></div><div class="row"><div class="col-xs-12 col-md-6 pl-30"><div class="row display-flex align-center flex-wrap"><label class="switch success flex-center" ng-click="modIngreLiqMen.swRetiros()"><input type="checkbox" ng-model="modIngreLiqMen.flgRetiros"> <i></i><!-- Circle --> <span class="text-default">Retiros</span></label><div class="mb-5"><div class="circulo circulo-help ml-10" popover="Ingreso mensual por retiros en empresas en la que eres socio o dueÃ±o." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-12 col-md-6 form-group"><input type="text" class="form-control" ng-disabled="!modIngreLiqMen.flgRetiros" ng-change="modIngreLiqMen.cambioMoneda(\'retiros\'); modIngreLiqMen.detectaCambioRetiros()" numeric-only ng-model="modIngreLiqMen.retiros" placeholder="Ingreso lÃ­quido mensual" maxlength="17"></div></div><div class="row"><div class="col-xs-12 col-md-6"><label class="switch success flex-center mb-0" ng-click="modIngreLiqMen.swOtros()"><input type="checkbox" ng-model="modIngreLiqMen.flgOtros"> <i></i><!-- Circle --> <span class="text-default white-space--nowrap">Otros ingresos</span></label></div><div class="col-xs-12 col-md-6 form-group"><input type="text" disabled="disabled" class="form-control" ng-disabled="!modIngreLiqMen.flgOtros" maxlength="17" ng-model="modIngreLiqMen.otros" ng-change="modIngreLiqMen.cambioMoneda(\'otros\'); modIngreLiqMen.detectaCambioOtros()" numeric-only placeholder="Ingreso lÃ­quido mensual"></div></div></div><!-- \n        <a  href="mailto:email@example.com?body=Yo%20Zaposphere%20I%20love%20your%20work">Your visible link text</a>\n        <div class="col-xs-12 col-md-4">\n          <div class="card mb-20">\n            <h6 class="text-bold text-color-4">Respalda tus Ingresos</h6>\n            <p>Recuerda que debes justificar a travÃ©s de documentos, los ingresos que poseas. (Ej. Liquidaciones\n              de Sueldo, comprobante de recibo de arriendo, comprobante de retiros de dinero, etc)</p>\n          </div>\n        </div> --></div></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modIngreLiqMen.severidad}}" ng-if="modIngreLiqMen.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modIngreLiqMen.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modIngreLiqMen.close()">Cancelar </a><button ng-disabled="!modIngreLiqMen.existeCambio" class="btn primary mr-0 pt-10 pb-10" type="button" ng-click="modIngreLiqMen.guardar();">Guardar</button></div></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/ingreso-liquido-mensual/ingreso-liquido-mensual.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/ingreso-liquido-mensual/ingreso-liquido-mensual.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Ingresos LÃ­quidos</h3><button class="btn info close-modal" ng-click="modILMC.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modILMC.severidad}}" ng-if="modILMC.errorModal"><article><b>Ha ocurrido un error</b><br>{{modILMC.mensajeErrorModal}} </article></div></div><!-- CONTENT MODAL --><section class="modal-info"><!-- <h3>Ingreso lÃ­quido mensual</h3> --><div class="row mt-10 pl-15"><div class="col-xs-12"><div class="row"><div class="col-xs-12 col-md-6"><h5 class="color-text-1">Tipo</h5></div><div class="col-xs-12 col-md-6"><h5 class="color-text-1">Ingreso lÃ­quido mensual</h5></div></div><div class="row"><div class="col-xs-12 col-md-6"><label class="switch success flex-center" ng-click="modILMC.swSueldo()"><input type="checkbox" ng-model="modILMC.flgSueldo"> <i></i><!-- Circle --> <span class="text-default">Sueldo</span></label></div><div class="col-xs-12 col-md-6 form-group"><input type="text" class="form-control" ng-model="modILMC.sueldo" ng-change="modILMC.sueldo = (modILMC.sueldo | formatoMonedaEESS); modILMC.detectaCambioSueldo()" ng-disabled="!modILMC.flgSueldo" numeric-only placeholder="Ingreso lÃ­quido mensual" maxlength="17"></div></div><div class="row"><div class="col-xs-12 col-md-6 pl-30"><div class="row display-flex align-center flex-wrap"><label class="switch success flex-center" ng-click="modILMC.swHonorarios()"><input type="checkbox" ng-model="modILMC.flgHonorarios"> <i></i><!-- Circle --> <span class="text-default">Honorarios</span></label><div class="mb-5"><div class="circulo circulo-help ml-10" popover="Ingreso mensual que percibe una persona natural por realizar una actividad econÃ³mica o prestar sus servicios de manera personal ejerciendo su profesiÃ³n." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-12 col-md-6 form-group"><input type="text" class="form-control" ng-model="modILMC.honorarios" ng-change="modILMC.honorarios = (modILMC.honorarios | formatoMonedaEESS); modILMC.detectaCambioHonorarios()" ng-disabled="!modILMC.flgHonorarios" numeric-only placeholder="Ingreso lÃ­quido mensual" maxlength="17"></div></div><div class="row"><div class="col-xs-12 col-md-6 pl-30"><div class="row display-flex align-center flex-wrap"><label class="switch success flex-center" ng-click="modILMC.swArriendo()"><input type="checkbox" ng-model="modILMC.flgArriendos"> <i></i><!-- Circle --> <span class="text-default white-space--nowrap">Ingreso por arriendo</span></label><div class="mb-5"><div class="circulo circulo-help ml-10" popover="Ingreso mensual que se percibe por el arriendo de propiedades." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-12 col-md-6 form-group"><input type="text" class="form-control" ng-disabled="!modILMC.flgArriendos" numeric-only ng-model="modILMC.arriendos" ng-change="modILMC.arriendos = (modILMC.arriendos | formatoMonedaEESS); modILMC.detectaCambioArriendos()" placeholder="Ingreso lÃ­quido mensual" maxlength="17"></div></div><div class="row"><div class="col-xs-12 col-md-6 pl-30"><div class="row display-flex align-center flex-wrap"><label class="switch success flex-center" ng-click="modILMC.swRetiros()"><input type="checkbox" ng-model="modILMC.flgRetiros"> <i></i><!-- Circle --> <span class="text-default">Retiros</span></label><div class="mb-5"><div class="circulo circulo-help ml-10" popover="Ingreso mensual por retiros en empresas en la que eres socio o dueÃ±o." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-12 col-md-6 form-group"><input type="text" class="form-control" ng-disabled="!modILMC.flgRetiros" numeric-only ng-model="modILMC.retiros" ng-change="modILMC.retiros = (modILMC.retiros | formatoMonedaEESS); modILMC.detectaCambioRetiros()" placeholder="Ingreso lÃ­quido mensual" maxlength="17"></div></div><div class="row"><div class="col-xs-12 col-md-6"><label class="switch success flex-center" ng-click="modILMC.swOtros()"><input type="checkbox" ng-model="modILMC.flgOtros"> <i></i><!-- Circle --> <span class="text-default white-space--nowrap">Otros ingresos</span></label></div><div class="col-xs-12 col-md-6 form-group"><input type="text" class="form-control" ng-disabled="!modILMC.flgOtros" numeric-only ng-model="modILMC.otros" ng-change="modILMC.otros = (modILMC.otros | formatoMonedaEESS); modILMC.detectaCambioOtros()" placeholder="Ingreso lÃ­quido mensual" maxlength="17"></div></div></div><div class="col-xs-12 col-md-4" style="display: none"><div class="card mb-20"><h6 class="text-bold text-color-4">Respalda tus Ingresos</h6><p>Recuerda que debes justificar a travÃ©s de documentos, los ingresos que poseas. (Ej. Liquidaciones de Sueldo, comprobante de recibo de arriendo, comprobante de retiros de dinero, etc)</p></div></div></div></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modILMC.severidad}}" ng-if="modILMC.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modILMC.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info mr-15 pt-10 pb-10" ng-click="modILMC.close()">Cancelar </a><button ng-disabled="!modILMC.existeCambio" class="btn primary btn pt-10 pb-10" type="button" ng-click="modILMC.guardar()">Guardar</button></div></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/participacion-sociedades/participacion-sociedades.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/participacion-sociedades/participacion-sociedades.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">ParticipaciÃ³n en Sociedades</h3><button class="btn info close-modal" ng-click="modParticipacionSociedades.close()"><span class="ion-ios-close-empty"></span></button></div><form name="modParticipacionSociedades.userForm" novalidate><!-- CONTENT MODAL --><section class="modal-info"><div class="row pb-20 pl-15"><div class="col-xs-12"><div class="bch-mensaje-empresas {{modParticipacionSociedades.severidad}}" ng-if="modParticipacionSociedades.errorModal"><article><b>Ha ocurrido un error</b><br>{{modParticipacionSociedades.mensajeErrorModal}} </article></div><div class="bch-mensaje-empresas info mt-0"><article><p>Para efectos del lÃ­mite legal de endeudamiento (arts. 84 y 85 de la Ley General de Bancos), declaro ser socio, accionista o tener una participaciÃ³n superior al 2% del capital, en las siguientes sociedades o comunidades:</p></article></div></div></div><div class="row mt-10 pl-15"><div class="col-xs-12"><div class="row pl-15 pr-15"><div class="col-xs-12 pr-15 pb-15 switch success" ng-click="modParticipacionSociedades.swCargoPropio()"><input type="checkbox" ng-model="modParticipacionSociedades.flgCargoPublicoPropio"> <i></i><!-- Circle --> <span class="text-default">ParticipaciÃ³n en Sociedades</span></div><div class="mb-30" ng-if="modParticipacionSociedades.flgCargoPublicoPropio" cantidad-maxima-columnas="5"><table class="table-modal"><thead><tr><th class="text-left">RazÃ³n Social</th><th class="text-left">Rut</th><th class="text-right">Patrimonio Sociedad</th><th class="text-right">Porcentaje de participaciÃ³n</th><th class="text-right">Monto de la participaciÃ³n</th><th class="actions show-hide pointer-events-none w-110"></th></tr></thead><tbody><tr ng-repeat="lista in modParticipacionSociedades.estadoSituacion.activosSociedades track by $index "><td ng-if="lista.razonSocial !=null" class="text-left">{{lista.razonSocial}}</td><td ng-if="lista.rut !=null" class="text-left">{{lista.rut | rut}}</td><td ng-if="lista.patrimonio !=null" class="text-right white-space--nowrap">{{lista.patrimonio | formatoMonedaEESS}}</td><td ng-if="lista.participacion !=null" class="text-right white-space--nowrap">{{lista.participacion}}%</td><td ng-if="lista.montoParticipacion !=null" class="text-right white-space--nowrap">{{lista.montoParticipacion | formatoMonedaEESS}}</td><td ng-if="lista.razonSocial !=null" class="flex-center w-110"><a ng-click="confirmacion=\'eliminar1\'" href="javascript:void(0);"><i ng-if="!modParticipacionSociedades.sociedadEditada" class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center" ng-show="confirmacion==\'eliminar1\'"><span class="inline-block">Â¿Seguro desea eliminar?</span> <a class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modParticipacionSociedades.borrarSociedad($index)">SÃ­</a> <a class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</a></div></div><a ng-click="modParticipacionSociedades.editarSociedad($index)"><span class="px-23 span-primary ml-10 mr-10 icon-icon-edit-empty" ng-class="i.className"></span></a></td></tr></tbody></table><div class="col-xs-12 text-right mb-15 padd-none mt-10 display-flex justify--end"><a class="btn-fill info-btn" ng-click="modParticipacionSociedades.flgAgregarSociedad = true;" href="javascript:void(0);"><div class="cont-animacion"><span></span> <i class="ion-ios-plus-empty"></i></div><span class="btn-link link-underline ml-10 px-15">Agregar Sociedad</span></a></div></div><div class="pt-30 mb-20" ng-if="modParticipacionSociedades.flgAgregarSociedad"><div class="row"><div ng-if="modParticipacionSociedades.sociedadEditada == true" class="col-xs-4 form-group"><h3>Editar Sociedad</h3></div><div ng-if="modParticipacionSociedades.sociedadEditada == false" class="col-xs-4 form-group"><h3>Nueva Sociedad</h3></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">RazÃ³n Social *</label><input class="form-control" name="razonSocial" ng-model="modParticipacionSociedades.sociedadAux.razonSocial" type="text" placeholder="Ingrese" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9&.,\'Â´\\s]*$/" maxlength="50" required> <small class="invalid ng-binding" ng-if="modParticipacionSociedades.userForm.razonSocial.$error.required\n                                           && (modParticipacionSociedades.userForm.razonSocial.$touched\n                                           || modParticipacionSociedades.userForm.razonSocial.$dirty)">Debe ingresar razÃ³n social.</small> <small class="invalid ng-binding" ng-show="modParticipacionSociedades.userForm.razonSocial.$error.pattern">Formato ingresado no es correcto.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Rut *</label><div><input ng-rut-eess name="rutSociedad" required class="form-control" maxlength="12" placeholder="Ingrese" ng-model="modParticipacionSociedades.sociedadAux.rut" ng-change="modParticipacionSociedades.validarRut()"></div><small class="invalid ng-binding" ng-if="modParticipacionSociedades.userForm.rutSociedad.$error.required && (modParticipacionSociedades.userForm.rutSociedad.$touched || modParticipacionSociedades.userForm.rutSociedad.$dirty)">Debe ingresar rut.</small> <small class="invalid ng-binding" ng-if="modParticipacionSociedades.userForm.rutSociedad.$error.rut && modParticipacionSociedades.userForm.rutSociedad.$dirty || modParticipacionSociedades.rutmin">Debe ingresar un rut vÃ¡lido.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Patrimonio Sociedad *</label><div class="row display-flex align-center"><div class="col-xs-10"><input class="form-control" name="patrimonio" ng-model="modParticipacionSociedades.sociedadAux.patrimonio" type="text" ng-change="modParticipacionSociedades.sociedadAux.patrimonio = (modParticipacionSociedades.sociedadAux.patrimonio | formatoMonedaEESS)" numeric-only placeholder="Ingrese" required maxlength="17"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help" popover="Indicar el monto del patrimonio de la sociedad." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div><small class="invalid ng-binding" ng-if="modParticipacionSociedades.userForm.patrimonio.$error.required\n                                           && (modParticipacionSociedades.userForm.patrimonio.$touched\n                                           || modParticipacionSociedades.userForm.patrimonio.$dirty)">Debe ingresar patrimonio sociedad.</small></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Porcentaje de ParticipaciÃ³n *</label><div class="row display-flex align-center"><div class="col-xs-10"><input class="form-control" name="participacion" ng-model="modParticipacionSociedades.sociedadAux.participacion" type="text" placeholder="Ingrese" pattern="^([1-9][0-9]{0,1}|100)$" ng-change="modParticipacionSociedades.porcentaje(modParticipacionSociedades.userForm.participacion.$viewValue)" required numeric-only maxlength="3"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help" popover="Indicar el porcentaje de participaciÃ³n sobre la propiedad, segÃºn lo indica la escritura de la misma." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div><small class="invalid ng-binding" ng-init="modParticipacionSociedades.mayor100=false;" ng-if="modParticipacionSociedades.userForm.participacion.$error.required\n                                           && (modParticipacionSociedades.userForm.participacion.$touched  \n                                           || modParticipacionSociedades.userForm.participacion.$dirty)">Debe ingresar porcentaje de participaciÃ³n.</small> <small class="invalid ng-binding" ng-if="(modParticipacionSociedades.userForm.participacion.$dirty\n                                         || modParticipacionSociedades.userForm.participacion.$error.pattern) && modParticipacionSociedades.mayor100">El porcentaje no puede ser mayor a 100.</small> <small class="invalid ng-binding" ng-init="modParticipacionSociedades.mayor100=false;" ng-if="(modParticipacionSociedades.userForm.participacion.$dirty\n                                         || modParticipacionSociedades.userForm.participacion.$error.pattern) && modParticipacionSociedades.userForm.participacion.$viewValue == \'0\'">El porcentaje no puede ser 0.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Monto de la ParticipaciÃ³n *</label><div class="row display-flex align-center"><div class="col-xs-10"><input class="form-control" name="montoParticipacion" ng-model="modParticipacionSociedades.sociedadAux.montoParticipacion" ng-change="modParticipacionSociedades.sociedadAux.montoParticipacion = (modParticipacionSociedades.sociedadAux.montoParticipacion | formatoMonedaEESS)" type="text" placeholder="Ingrese" required numeric-only maxlength="17"></div><div class="col-xs-2 padd-none"><div class="circulo circulo-help" popover="Indicar el valor (Monto) de participaciÃ³n en la sociedad." popover-placement="left" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div><small class="invalid ng-binding" ng-if="modParticipacionSociedades.userForm.montoParticipacion.$error.required\n                                           && (modParticipacionSociedades.userForm.montoParticipacion.$touched\n                                           || modParticipacionSociedades.userForm.montoParticipacion.$dirty)">Debe ingresar monto de la participaciÃ³n.</small></div></div><div class="display-flex justify--end"><a class="link ml-15 pull-right px-14" ng-click="modParticipacionSociedades.flgAgregarSociedad = false; modParticipacionSociedades.limpiarCampos(); modParticipacionSociedades.sociedadEditada = false;">CANCELAR </a><button class="btn info btn-confirm mr-0 ml-15 pull-right pt-10 pb-10" ng-click="modParticipacionSociedades.insertarSociedad(); modParticipacionSociedades.sociedadEditada = false;" ng-disabled="!modParticipacionSociedades.userForm.$valid || modParticipacionSociedades.rutmin" type="button">Guardar</button></div></div></div></div></div><div class="row pb-20 pl-15"><div class="col-xs-12"><div class="bch-mensaje-empresas {{modParticipacionSociedades.severidad}}" ng-if="modParticipacionSociedades.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modParticipacionSociedades.mensajeErrorGuardar}} </article></div></div></div></section><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><button class="btn info pt-10 pb-10" type="button" ng-click="modParticipacionSociedades.close()">Cancelar</button> <button ng-disabled="!modParticipacionSociedades.agregoEditoElimino" type="button" ng-click="modParticipacionSociedades.submitForm(modParticipacionSociedades.userForm)" class="btn primary mr-0 pt-10 pb-10">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/pasivos/pasivos.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/pasivos/pasivos.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Pasivos</h3><button class="btn info close-modal" ng-click="modPasC.close()"><span class="ion-ios-close-empty"></span></button></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modPasC.severidad}}" ng-if="modPasC.errorModal"><article><b>Ha ocurrido un error</b><br>{{modPasC.mensajeErrorModal}} </article></div></div><!-- CONTENT MODAL --><section class="modal-info"><div class="row pl-15"><div class="col-xs-12"><span class="px-18 text-bold text-default">SÃ³lo debes agregar pasivos con Instituciones que no sean Banco de Chile</span></div></div><!-- Nuevo modelo de presentar la info --><div class="row pt-15 pr-15 pl-30"><div class="mb-30"><table class="table-modal"><thead><tr><th class="text-left">Tipo de CrÃ©dito</th><th class="text-left">InstituciÃ³n</th><th class="text-left">Deuda Directa (SÃ­ / No)</th><th class="text-right">Monto/Cupo</th><th class="text-right">Valor cuota mensual</th><th class="actions show-hide w-100"></th></tr></thead><tbody ng-if="modPasC.lineaCredito.length"><tr><!-- el numero del rowspan debe ser dinamico, dependiendo de l cantida de lineas, esto para cada rowspan aplicado en pasivos --><td rowspan="{{modPasC.lineaCredito.length + 1}}" class="text-left text-bold">LÃ­neas de crÃ©dito</td></tr><tr ng-repeat="lista in modPasC.lineaCredito track by $index | limitTo: (1 - modPasC.lineaCredito.length)"><td class="text-left">{{lista.institucion ? lista.institucion : \'-\'}}</td><td class="text-left">{{lista.deudaDirecta ? lista.deudaDirecta : \'-\'}}</td><td class="text-right white-space--nowrap">{{lista.montoCupo | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.valorCuotaMensual | formatoMonedaEESS}}</td><td class="flex-center w-100"><a href="javascript:void(0);" ng-click="confirmacion=\'eliminar2\'"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar2\'"><span class="inline-block">Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modPasC.borrarLineaCredito($index)  ">SÃ­</button> <button class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modPasC.editarLineaCredito($index);modPasC.flgAgregarPasivo = true"><span ng-class="i.className" class="px-23 span-primary ml-10 mr-10 icon-icon-edit-empty"></span></a></td></tr></tbody><tbody ng-if="modPasC.tarjetaCredito.length"><tr><td rowspan="{{modPasC.tarjetaCredito.length+1}}" class="text-left text-bold">Tarjetas de crÃ©dito</td></tr><tr ng-repeat="lista in modPasC.tarjetaCredito track by $index | limitTo: (1 - modPasC.tarjetaCredito.length)"><td class="text-left">{{lista.institucion ? lista.institucion : \'-\'}}</td><td class="text-left">{{lista.deudaDirecta? lista.deudaDirecta : \'-\'}}</td><td class="text-right white-space--nowrap">{{lista.montoCupo | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.valorCuotaMensual | formatoMonedaEESS}}</td><td class="flex-center w-100"><a href="javascript:void(0);" ng-click="confirmacion=\'eliminar2\'"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar2\'"><span class="inline-block">Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modPasC.borrarTarjetaCredito($index)  ">SÃ­</button> <button class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modPasC.editarTarjetaCredito($index);modPasC.flgAgregarPasivo = true"><span ng-class="i.className" class="px-23 span-primary ml-10 mr-10 icon-icon-edit-empty"></span></a></td></tr></tbody><tbody ng-if="modPasC.creditoHipotecario.length"><tr><td rowspan="{{modPasC.creditoHipotecario.length+1}}" class="text-left text-bold">CrÃ©dito Hipotecario</td></tr><tr ng-repeat="lista in modPasC.creditoHipotecario track by $index | limitTo: (1 - modPasC.creditoHipotecario.length)"><td class="text-left">{{lista.institucion ? lista.institucion : \'-\'}}</td><td class="text-left">{{lista.deudaDirecta? lista.deudaDirecta : \'-\'}}</td><td class="text-right white-space--nowrap">{{lista.montoCupo | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.valorCuotaMensual | formatoMonedaEESS}}</td><td class="flex-center w-100"><a href="javascript:void(0);" ng-click="confirmacion=\'eliminar2\'"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar2\'"><span class="inline-block">Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modPasC.borrarCreditoHipotecario($index)  ">SÃ­</button> <button class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modPasC.editarCreditoHipotecario($index);modPasC.flgAgregarPasivo = true"><span ng-class="i.className" class="px-23 span-primary ml-10 mr-10 icon-icon-edit-empty"></span></a></td></tr></tbody><tbody ng-if="modPasC.creditoAutomotriz.length"><tr><td rowspan="{{modPasC.creditoAutomotriz.length+1}}" class="text-left text-bold">CrÃ©dito Automotriz</td></tr><tr ng-repeat="lista in modPasC.creditoAutomotriz track by $index | limitTo: (1 - modPasC.creditoAutomotriz.length)"><td class="text-left">{{lista.institucion ? lista.institucion : \'-\'}}</td><td class="text-left">{{lista.deudaDirecta? lista.deudaDirecta : \'-\'}}</td><td class="text-right white-space--nowrap">{{lista.montoCupo | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.valorCuotaMensual | formatoMonedaEESS}}</td><td class="flex-center w-100"><a href="javascript:void(0);" ng-click="confirmacion=\'eliminar2\'"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar2\'"><span class="inline-block">Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs pl-20 pr-0" ng-click="confirmacion=\'\';modPasC.borrarCreditoAutomotriz($index)  ">SÃ­</button> <button class="btn default link-underline btn-xs pr-0" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modPasC.editarCreditoAutomotriz($index);modPasC.flgAgregarPasivo = true"><span ng-class="i.className" class="px-23 ml-10 mr-10 span-primary icon-icon-edit-empty"></span></a></td></tr></tbody><tbody ng-if="modPasC.creditoCuotas.length"><tr><td rowspan="{{modPasC.creditoCuotas.length+1}}" class="text-left text-bold">CrÃ©dito en Cuotas</td></tr><tr ng-repeat="lista in modPasC.creditoCuotas track by $index | limitTo: (1 - modPasC.creditoCuotas.length)"><td class="text-left">{{lista.institucion ? lista.institucion : \'-\'}}</td><td class="text-left">{{lista.deudaDirecta? lista.deudaDirecta : \'-\'}}</td><td class="text-right white-space--nowrap">{{lista.montoCupo | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.valorCuotaMensual | formatoMonedaEESS}}</td><td class="flex-center w-100"><a href="javascript:void(0);" ng-click="confirmacion=\'eliminar2\'"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar2\'"><span class="inline-block">Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modPasC.borrarCreditoCuotas($index)  ">SÃ­</button> <button class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modPasC.editarCreditoCuotas($index);modPasC.flgAgregarPasivo = true;"><span ng-class="i.className" class="px-23 span-primary ml-10 mr-10 icon-icon-edit-empty"></span></a></td></tr></tbody><tbody ng-if="modPasC.creditoComercial.length"><tr><td rowspan="{{modPasC.creditoComercial.length+1}}" class="text-left text-bold">CrÃ©dito Comercial</td></tr><tr ng-repeat="lista in modPasC.creditoComercial track by $index | limitTo: (1 - modPasC.creditoComercial.length)"><td class="text-left border-left">{{lista.institucion ? lista.institucion : \'-\'}}</td><td class="text-left">{{lista.deudaDirecta? lista.deudaDirecta : \'-\'}}</td><td class="text-right white-space--nowrap">{{lista.montoCupo | formatoMonedaEESS}}</td><td class="text-right white-space--nowrap">{{lista.valorCuotaMensual | formatoMonedaEESS}}</td><td class="flex-center w-100"><a href="javascript:void(0);" ng-click="confirmacion=\'eliminar2\'"><i class="ion-ios-trash-outline i-primary px-23 ml-10 mr-10"></i></a><div class="link-more pr-0 opciones-comentario pull-right"><div class="confirmacion confirmacion--link flex-center ng-hide" ng-show="confirmacion==\'eliminar2\'"><span class="inline-block">Â¿Seguro desea eliminar?</span> <button class="btn default link-underline btn-xs mr-0" ng-click="confirmacion=\'\';modPasC.borrarCreditoComercial($index)">SÃ­</button> <button class="btn default link-underline btn-xs" ng-click="confirmacion=\'\'">No</button></div></div><a ng-click="modPasC.editarCreditoComercial($index);modPasC.flgAgregarPasivo = true;"><span ng-class="i.className" class="px-23 ml-10 span-primary mr-10 icon-icon-edit-empty"></span></a></td></tr></tbody></table><div class="col-xs-12 text-right mb-15 padd-none mt-10 display-flex justify--end"><a class="btn-fill info-btn" href="javascript:void(0);" ng-click="modPasC.flgAgregarPasivo = true;modPasC.flgAgregarPasivo = true; modPasC.pasivoAgregado = false; modPasC.prepararParaEditar(); modPasC.pasivoEditado = false;"><div class="cont-animacion"><span></span> <i class="ion-ios-plus-empty"></i></div><span class="btn-link link-underline">Agregar Pasivo</span></a></div></div><div class="col-xs-12"><div class="row"><form name="pasivos" ng-if="(modPasC.modPasC.lineaCredito.length == 0 &&\n                modPasC.modPasC.tarjetaCredito.length == 0 &&\n                modPasC.modPasC.creditoHipotecario.length == 0 &&\n                modPasC.modPasC.creditoAutomotriz.length == 0 &&\n                modPasC.modPasC.creditoCuotas.length == 0 &&\n                modPasC.modPasC.creditoComercial.length == 0) || modPasC.flgAgregarPasivo"><div><div class="row"><div ng-show="modPasC.pasivoEditado == false" class="col-xs-4 form-group"><h3>Nuevo Pasivo</h3></div><div ng-show="modPasC.pasivoEditado == true" class="col-xs-4 form-group"><h3>Editar Pasivo</h3></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Tipo de CrÃ©dito *</label><ui-select ng-model="modPasC.tipoCredito" name="tipoCredito" onkeypress="return false" required><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.id as lista in ( modPasC.listaTipoCredito | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><small class="invalid" ng-if="pasivos.tipoCredito.$error.required && (pasivos.tipoCredito.$dirty || pasivos.tipoCredito.$touched)">Debe ingresar tipo de crÃ©dito.</small></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">InstituciÃ³n</label><input name="institucion" type="text" class="form-control" maxlength="50" ng-model="modPasC.institucion" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘,.\'Â´\\s]*$/" placeholder="Ingrese"><!--       <small class="invalid"\n                                           ng-if="pasivos.institucion.$error.required && (pasivos.institucion.$dirty || pasivos.institucion.$touched)">Debe\n                                        ingresar instituciÃ³n.</small>--> <small class="invalid" ng-if="pasivos.institucion.$error.pattern && pasivos.institucion.$dirty">Formato ingresado no es correcto.</small></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Deuda Directa</label><ui-select name="deudaDirecta" ng-model="modPasC.deudaDirecta" onkeypress="return false"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista.valor as lista in ( modPasC.listaDeudaDirecta | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select><!--         <small class="invalid"\n                                           ng-if="pasivos.deudaDirecta.$error.required && (pasivos.deudaDirecta.$dirty || pasivos.deudaDirecta.$touched)">Debe\n                                        indicar deuda directa.</small>--></div><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Monto/Cupo</label><input name="monto" maxlength="17" type="text" class="form-control ng-valid" ng-model="modPasC.monto" placeholder="Ingrese" ng-change="modPasC.monto = (modPasC.monto | formatoMonedaEESS)" numeric-only><!--           <small class="invalid"\n                                           ng-if="pasivos.monto.$error.required && (pasivos.monto.$dirty || pasivos.monto.$touched)">Debe ingresar\n                                        monto/cupo.</small>--></div></div><div class="row"><div class="col-xs-4 form-group"><label class="text-nowrap text-ellipsis">Valor Cuota Mensual</label><input type="text" maxlength="17" name="valor" class="form-control" ng-model="modPasC.valor" placeholder="Ingrese" numeric-only ng-change="modPasC.valor = (modPasC.valor | formatoMonedaEESS)"><!--                     <small class="invalid"\n                                           ng-if="pasivos.valor.$error.required && (pasivos.valor.$dirty || pasivos.valor.$touched)">Debe ingresar\n                                        valor cuota mensual.</small>--></div></div><div class="align-items--center justify--end"><a class="link ml-15 px-14" ng-click="modPasC.limpiarCampos(); modPasC.flgAgregarPasivo = false">CANCELAR</a> <button type="button" class="btn info btn-confirm mr-0 pull-right ml-15" ng-if="!modPasC.flgEditar" ng-click="modPasC.guardarPasivo(); modPasC.flgAgregarPasivo = false" ng-disabled="pasivos.$invalid || pasivos.$pristine">Guardar</button> <button type="button" class="btn info btn-confirm mr-0 pull-right ml-15" ng-if="modPasC.flgEditar" ng-click="modPasC.guardarPasivoEditado(); modPasC.flgAgregarPasivo = false" ng-disabled="pasivos.$invalid || pasivos.$pristine">Guardar</button></div></div></form></div></div></div></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modPasC.severidad}}" ng-if="modPasC.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modPasC.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modPasC.close()">Cancelar </a><button ng-disabled="!modPasC.pasivoAgregado" class="btn primary mr-0 pt-10 pb-10" type="button" ng-click="modPasC.guardar()">Guardar</button></div></div>');
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/previsualizacion/previsualizacion.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/previsualizacion/previsualizacion.tpl.html", '<div class="ui-minerva estado-situacion"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Previsualizar archivos</h3><button class="btn info close-modal" ng-click="modEstPrev.close()"><span class="ion-ios-close-empty"></span></button></div><!-- CONTENT MODAL --><section class="modal-info"><div ng-if="modEstPrev.archivo.mimeType.split(\'/\')[0] == \'image\'"><img src="data:{{modEstPrev.archivo.mimeType}};base64,{{modEstPrev.archivo.archivo}}"></div><object ng-if="modEstPrev.archivo.mimeType.split(\'/\')[0] == \'application\'" style="width:100%; height:700px" type="{{modEstPrev.archivo.mimeType}}" data="data:{{modEstPrev.archivo.mimeType}};base64,{{modEstPrev.archivo.archivo}}"></object></section></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/rut-sostenedor-conyuge/rut-sostenedor-conyuge.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/rut-sostenedor-conyuge/rut-sostenedor-conyuge.tpl.html", '<div class="ui-minerva estado-situacion pr-15"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Antecedentes sostenedor econÃ³mico</h3><a class="btn info close-modal" ng-click="modRSC.close()"><span class="ion-ios-close-empty"></span></a></div><div class="col-xs-12"><div class="bch-mensaje-empresas {{modRSC.severidad}}" ng-if="modRSC.errorModal"><article><b>Ha ocurrido un error</b><br>{{modRSC.mensajeErrorModal}} </article></div></div><form name="modRSC.userForm"><!-- CONTENT MODAL --><section class="modal-info"><div class="row"><div class="col-xs-12 mt-10 pr-0"><div class="row ml-5 mr-5"><div class="col-xs-12"><h4 class="text-color-11 mt-15 mb-20">Completa los datos de tu sostenedor econÃ³mico</h4></div><div class="col-xs-12"><div class="row display-flex"><div class="col-md-4 form-group mb-30 clear-left"><label>Rut sostenedor econÃ³mico *</label><div><input ng-rut-eess name="rutSostenedor" required class="form-control" placeholder="Ingrese" maxlength="12" ng-model="modRSC.rut" ng-change="modRSC.validarRut()"></div><small class="invalid ng-binding position-abs" ng-if="modRSC.userForm.rutSostenedor.$error.required && (modRSC.userForm.rutSostenedor.$touched || modRSC.userForm.rutSostenedor.$dirty)">Debe ingresar rut sostenedor econÃ³mico. </small><small class="invalid ng-binding position-abs" ng-if="modRSC.userForm.rutSostenedor.$error.rut && modRSC.userForm.rutSostenedor.$dirty || modRSC.rutmin">Debe ingresar un rut vÃ¡lido.</small></div><div class="col-xs-4"><div class="circulo circulo-help ml-0 mb-5" popover="Si eres Estudiante: completa los datos de tu Sostenedor EconÃ³mico. \n                                        Si eres cÃ³nyuge de cliente Banco: en los casos que corresponda, completa los datos de tu Sostenedor EconÃ³mico." popover-placement="right" popover-trigger="mouseenter" popover-animation="false"><i class="ion-ios-help-empty"></i></div></div></div></div><div class="col-xs-12"><div class="row"><div class="col-md-4 form-group mb-30 clear-left"><label>Apellido paterno *</label><input maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\\s]*$/" name="apellidoPaterno" type="text" required placeholder="Ingrese" class="form-control" ng-model="modRSC.estadoSituacion.sostenedor.apPaterno"> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.apellidoPaterno.$error.required && (modRSC.userForm.apellidoPaterno.$touched || modRSC.userForm.apellidoPaterno.$dirty)">Debe ingresar apellido paterno.</small> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.apellidoPaterno.$error.pattern">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group mb-30"><label>Apellido materno *</label><input maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\\s]*$/" type="text" ng-model="modRSC.estadoSituacion.sostenedor.apMaterno" placeholder="Ingrese" name="apellidoMaterno" class="form-control" required> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.apellidoMaterno.$error.required && (modRSC.userForm.apellidoMaterno.$touched || modRSC.userForm.apellidoMaterno.$dirty)">Debe ingresar apellido materno.</small> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.apellidoMaterno.$error.pattern">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group mb-30"><label>Nombres *</label><input maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\\s]*$/" type="text" ng-model="modRSC.estadoSituacion.sostenedor.nombres" placeholder="Ingrese" name="nombresInput" class="form-control" required> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.nombresInput.$error.required && (modRSC.userForm.nombresInput.$touched || modRSC.userForm.nombresInput.$dirty)">Debe ingresar nombres.</small> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.nombresInput.$error.pattern">Formato ingresado no es correcto.</small></div></div></div></div><div class="row ml-5 mr-5"><div class="col-md-4 form-group mb-30" prefix-length="3" input-prefix="+56"><label>TelÃ©fono particular *</label><input minlength="9" maxlength="9" numeric-only type="text" name="telefonoParticular" ng-model="modRSC.estadoSituacion.sostenedor.telefonoParticular" placeholder="Ingrese" class="form-control" required> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.telefonoParticular.$error.required && (modRSC.userForm.telefonoParticular.$touched || modRSC.userForm.telefonoParticular.$dirty)">Debe ingresar telÃ©fono particular.</small><!--<small class="invalid ng-binding position-abs"\n                             ng-show="modRSC.userForm.telefonoParticular.$error.required && !modRSC.userForm.telefonoParticular.$valid && modRSC.userForm.telefonoParticular.$dirty || modRSC.userForm.telefonoParticular.$error.minlength">\n                                Formato ingresado no es correcto.\n                            </small>--> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.telefonoParticular.$error.minlength">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group mb-30"><label>Actividad Principal *</label><ui-select ng-change="modRSC.resetearCamposDependienteIndependiente($select.selected.id)" onkeypress="return false" ng-model="modRSC.actividadAux" required name="actividadPrincipal"><ui-select-match placeholder="Seleccione..."><span ng-if="$select.selected.valor !== \'Fuerzas Armadas (FFAA), de orden y seguridad\'">{{$select.selected.valor}}</span><span ng-if="$select.selected.valor === \'Fuerzas Armadas (FFAA), de orden y seguridad\'">FFAA, de orden y seguridad</span></ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modRSC.actividadActual | filter: $select.search)"><span ng-if="lista.valor !== \'Fuerzas Armadas (FFAA), de orden y seguridad\'">{{lista.valor}}</span><span ng-if="lista.valor === \'Fuerzas Armadas (FFAA), de orden y seguridad\'">FFAA, de orden y seguridad</span></ui-select-choices></ui-select><small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.actividadPrincipal.$error.required && (modRSC.userForm.actividadPrincipal.$touched || modRSC.userForm.actividadPrincipal.$dirty)">Debe ingresar actividad principal.</small></div><div class="col-md-4 form-group mb-30"><label>Â¿Es Cliente Banco de Chile?</label><ui-select id="clienteBanco" name="clienteBanco" onkeypress="return false" ng-model="modRSC.clienteBancoAux"><ui-select-match placeholder="Seleccione..."> {{$select.selected.valor}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modRSC.cliente | filter: $select.search)"> {{lista.valor}} </ui-select-choices></ui-select></div></div><div class="row ml-5 mr-5"><div class="col-xs-12"><h4 class="text-color-11 mt-15 mb-20">DirecciÃ³n particular del sostenedor econÃ³mico</h4></div><div class="col-md-4 form-group mb-30 clear-left"><label>PaÃ­s *</label><ui-select id="idPais" name="idPais" ng-change="modRSC.cambioPais()" ng-model="modRSC.idPaisAux" required><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombre }} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modRSC.paises | filter: $select.search)"> {{lista.nombre}} </ui-select-choices></ui-select><small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.idPais.$error.required && (modRSC.userForm.idPais.$touched || modRSC.userForm.idPais.$dirty)">Debe ingresar paÃ­s.</small></div><div class="col-md-4 form-group"><label for="">RegiÃ³n *</label><ui-select name="dirPartRegion" ng-disabled="modRSC.noEsChile" ng-model="modRSC.idRegionAux" ng-required="!modRSC.noEsChile" ng-change="modRSC.getCiudadesFront($select.selected.id, \'normal\')"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modRSC.regiones | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><small class="invalid ng-binding" ng-show="modRSC.userForm.dirPartRegion.$error.required && (modRSC.userForm.dirPartRegion.$dirty || modRSC.userForm.dirPartRegion.$touched)">Debe ingresar regiÃ³n.</small></div><div class="col-md-4 form-group mb-30"><label>Ciudad *</label><ui-select id="idCiudad" name="idCiudad" ng-change="modRSC.getComunasFront($select.selected.id, \'normal\')" ng-model="modRSC.idCiudadAux" ng-disabled="modRSC.noEsChile" ng-required="!modRSC.noEsChile"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modRSC.ciudades | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.idCiudad.$error.required && (modRSC.userForm.idCiudad.$touched || modRSC.userForm.idCiudad.$dirty)">Debe ingresar ciudad.</small></div></div><div class="row ml-5 mr-5"><div class="col-md-4 form-group mb-30"><label ng-show="!modRSC.noEsChile">Comuna *</label><label ng-show="modRSC.noEsChile">Comuna</label><ui-select id="idComuna" name="idComuna" ng-model="modRSC.idComunaAux" onkeypress="return false" ng-disabled="modRSC.noEsChile" ng-required="!modRSC.noEsChile"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices class="biggerGroup" repeat="lista as lista in (modRSC.comunas | filter: $select.search)"> {{lista.descripcion}} </ui-select-choices></ui-select><small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.idComuna.$error.required && (modRSC.userForm.idComuna.$touched || modRSC.userForm.idComuna.$dirty)">Debe ingresar comuna.</small></div><div class="col-md-4 form-group mb-30"><label>Calle *</label><input maxlength="50" type="text" ng-model="modRSC.estadoSituacion.sostenedor.calle" name="calle" placeholder="Ingrese" class="form-control" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘0-9.,\'Â´\\s]*$/" required> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.calle.$error.required && (modRSC.userForm.calle.$touched || modRSC.userForm.calle.$dirty)">Debe ingresar calle. </small><small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.calle.$error.pattern && modRSC.userForm.calle.$dirty">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group mb-30"><label>NÃºmero *</label><input maxlength="6" numeric-only type="text" name="numero" placeholder="Ingrese" ng-model="modRSC.estadoSituacion.sostenedor.numero" class="form-control" required> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.numero.$error.required && (modRSC.userForm.numero.$touched || modRSC.userForm.numero.$dirty)">Debe ingresar nÃºmero.</small></div></div><div class="row ml-5 mr-5"><div class="col-md-4 form-group mb-30"><label>NÃºmero departamento/casa*</label><input type="text" name="nroDeptoCasa" required ng-model="modRSC.estadoSituacion.sostenedor.nroDeptoCasa" placeholder="Ingrese" class="form-control" maxlength="6"> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.nroDeptoCasa.$error.required && (modRSC.userForm.nroDeptoCasa.$touched || modRSC.userForm.nroDeptoCasa.$dirty)">Debe ingresar nÃºmero.</small></div></div><!-- Datos laborales sostenedor econÃ³mico --><div class="row ml-5 mr-5" ng-if="modRSC.actividadAux.id == 1 || modRSC.actividadAux.id == 2"><div class="col-xs-12"><h4 class="text-color-11 mt-15 mb-20">Datos laborales del sostenedor econÃ³mico</h4></div><div class="col-md-4 form-group mb-30" ng-if="modRSC.actividadAux.id == 1"><label>Nombre Empleador *</label><input maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘,&Â´\'.0-9\\s]*$/" type="text" ng-model="modRSC.estadoSituacion.actividadSostenedor.nombreEmpleador" placeholder="Ingrese" name="nombreEmpleador" class="form-control" required> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.nombreEmpleador.$error.required && (modRSC.userForm.nombreEmpleador.$touched || modRSC.userForm.nombreEmpleador.$dirty)">Debe ingresar el nombre del empleador.</small> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.nombreEmpleador.$error.pattern">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group mb-30"><label ng-if="modRSC.actividadAux.id == 1">Cargo sostenedor econÃ³mico *</label><label ng-if="modRSC.actividadAux.id == 2">Actividad *</label><input ng-if="modRSC.actividadAux.id == 1" maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\'Â´,.0-9\\s]*$/" type="text" ng-model="modRSC.estadoSituacion.actividadSostenedor.cargo" placeholder="Ingrese" name="cargo" class="form-control" ng-required="modRSC.actividadAux.id == 1"> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.cargo.$error.required && (modRSC.userForm.cargo.$touched || modRSC.userForm.cargo.$dirty) && modRSC.actividadAux.id == 1">Debe ingresar cargo sostenedor econÃ³mico.</small> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.cargo.$error.pattern && modRSC.actividadAux.id == 1">Formato ingresado no es correcto.</small> <input ng-if="modRSC.actividadAux.id == 2" maxlength="50" ng-pattern="/^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÃ±Ã‘\'Â´,.0-9\\s]*$/" type="text" ng-model="modRSC.estadoSituacion.actividadSostenedor.cargo" placeholder="Ingrese" name="cargo" class="form-control" ng-required="modRSC.actividadAux.id == 2"> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.cargo.$error.required && (modRSC.userForm.cargo.$touched || modRSC.userForm.cargo.$dirty) && modRSC.actividadAux.id == 2">Debe ingresar actividad .</small> <small class="invalid ng-binding position-abs" ng-show="modRSC.userForm.cargo.$error.pattern && modRSC.actividadAux.id == 2">Formato ingresado no es correcto.</small></div><div class="col-md-4 form-group mb-30" prefix-length="3" input-prefix="+56"><label>TelÃ©fono laboral *</label><input maxlength="9" minlength="9" numeric-only type="text" name="telefonoLaboral" ng-model="modRSC.estadoSituacion.actividadSostenedor.telefono" placeholder="Ingrese" class="form-control" required> <small class="invalid position-abs" ng-show="modRSC.userForm.telefonoLaboral.$error.required && (modRSC.userForm.telefonoLaboral.$touched || modRSC.userForm.telefonoLaboral.$dirty)">Debe ingresar telÃ©fono laboral.</small> <small class="invalid position-abs" ng-show="modRSC.userForm.telefonoLaboral.$error.minlength">Formato ingresado no es correcto.</small></div></div></div></div></section><div class="col-xs-12"><div class="bch-mensaje-empresas {{modRSC.severidad}}" ng-if="modRSC.errorGuardar"><article><b>Ha ocurrido un error</b><br>{{modRSC.mensajeErrorGuardar}} </article></div></div><!-- FOOTER MODAL --><div class="col-xs-12 display-flex justify--end mb-20"><a class="btn info ml-0 pt-10 pb-10" ng-click="modRSC.close()">Cancelar </a><button class="btn primary mr-0 pt-10 pb-10" ng-disabled="!modRSC.userForm.$valid || modRSC.rutmin || modRSC.userForm.$pristine" type="button" ng-click="modRSC.guardar();">Guardar</button></div></form></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/common/directives/modals/simulacion/simulacion.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/common/directives/modals/simulacion/simulacion.tpl.html", '<div class="ui-minerva estado-situacion"><!-- HEADER MODAL --><div class="modal-header info display-flex"><h3 class="modal-title pull-left">Resumen del crÃ©dito</h3><button class="btn info close-modal" ng-click="modSim.close()"><span class="ion-ios-close-empty"></span></button></div><!-- CONTENT MODAL --><section class="modal-info"><!-- Nuevo modelo de presentar la info --><div class="row pr-15 pl-15"><div class="col-md-12"><p>Monto solicitado: {{modSim.simulacion.montoSolicitado | formatoMonedaEESS }} </p><p>NÃºmero de cuotas: {{modSim.simulacion.cuotas  }} </p><p>Cuota mensual: {{modSim.simulacion.cuotaMensual | formatoMonedaEESS  }} </p><p>Tasa de interÃ©s mensual (anual) internet: {{modSim.simulacion.tasaInteresMensual }}%</p></div></div><div class="row pr-15 pl-15"><div class="col-md-12"><h3>Detalle del crÃ©dito</h3><hr style="margin-top: -8px; margin-bottom: 10px"><p><b>Seguros Asociados</b><br></p><p ng-repeat=" seguro in  modSim.simulacion.seguros"> {{seguro.descripcion}} : {{seguro.monto | formatoMonedaEESS }} </p><br><p><b>Inpuestos y notarÃ­a</b></p><p ng-repeat=" seguro in  modSim.simulacion.impuestos"> {{seguro.descripcion}} : {{seguro.monto | formatoMonedaEESS }} </p><br><p><b>Monto bruto del crÃ©dito: {{modSim.simulacion.montoBruto | formatoMonedaEESS}}</b></p><br><p>Fecha primer pago: {{modSim.simulacion.fechaPrimerPago}} </p><p>Meses de no pago: <span ng-repeat="meses in  modSim.simulacion.mesesNoPago;"><span ng-if="!$last"> {{ modSim.numeroMesTexto(meses) }},</span> <span ng-if="$last"> {{ modSim.numeroMesTexto(meses) }}</span></span></p><p>Carga Anual Equivalente (CAE): {{modSim.simulacion.cae}}%</p><br><p><b>Costo total del crÃ©dito: {{modSim.simulacion.costoTotalCredito | formatoMonedaEESS}}</b></p></div></div></section></div>')
	}]), angular.module("directive-eess-publico/src/directive-eess/tabs/directive-eess-tabs.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("directive-eess-publico/src/directive-eess/tabs/directive-eess-tabs.tpl.html", '<div class="spinner" ng-if="tabs.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><section class="container" ng-hide="tabs.loading"><!-- Descomentar para probar directiva en PÃºblico --><estado-situacion-directive token="tabs.tmpToken"></estado-situacion-directive><div ui-view></div></section>')
	}]), angular.module("drag-and-drop-file-upload/src/directive/dnd-file-upload.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("drag-and-drop-file-upload/src/directive/dnd-file-upload.tpl.html", '<section class="bch-file-upload"><div class="row"><div ngf-drop ngf-select name="dndDirective" ng-model="dndUpload.files" ngf-drag-over-class="{accept:\'dragover\', reject:\'dragover-err\'}" ngf-multiple="{{dndUpload.selectMultiple}}" ngf-allow-dir="true" accept="{{dndUpload.validMimeType}}" ngf-pattern="\'{{dndUpload.validMimeType}}\'" ng-disabled="dndUpload.onLimitFilesQ" class="dnd" ng-class="{\'upload-disabled\': dndUpload.onLimitFilesQ}"><div class="upload-box"><i class="ion-ios-cloud-upload"></i><h5>Arrastrar aquÃ­</h5><div ng-if="dndUpload.showFileSize"><p>TamaÃ±o de Archivo - MÃ¡ximo {{dndUpload.maxFileSize}} MB</p></div><div ng-if="!dndUpload.showFileSize"><p>Archivo permite mÃ¡ximo {{dndUpload.maxRegistros}} registros</p></div></div><label class="btn info btn-block">Subir Archivo</label><h5 ngf-no-file-drop>Esta navegador no soporta subida de archivos con arrastre</h5></div></div></section>')
	}]), angular.module("drop-multi-select/src/drop-multi-select/drop-multi-select.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("drop-multi-select/src/drop-multi-select/drop-multi-select.tpl.html", '<div class="drop-multiselect" ng-class="{\'ng-invalid\': dmsCtrl.data.invalid,\'open\': dmsCtrl.multiSelectOpen,\'drop-multiselect--disabled\': dmsCtrl.data.disabled || dmsCtrl.data.opciones.length == 0}" dms-click-outside="dmsCtrl.blurMultiselect()" dms-is-active="dmsCtrl.multiSelectOpen"><div class="drop-multiselect__match"><a href="javascript:void(0);" ng-click="dmsCtrl.abrir()"><span ng-class="{\'placeholder-multi\':dmsCtrl.placeholderText}"> {{dmsCtrl.placeholder(dmsCtrl.data.selecciones)}} </span><i class="ion-ios-arrow-down" ng-show="!dmsCtrl.multiSelectOpen"></i> <i class="ion-ios-arrow-up" ng-show="dmsCtrl.multiSelectOpen"></i></a></div><div class="drop-multiselect__choises dropdown-menu" ng-class="{\'open\': dmsCtrl.multiSelectOpen, \'fixed-height\': dmsCtrl.data.botones}"><!-- Con buscador --><div class="col-xs-12 pl-10 pr-10" ng-if="dmsCtrl.data.buscador"><div class="col-xs-12 border-bottom pb-5 pl-0 pr-0 mb-5"><i class="ion-ios-search px-25 pl-0 pr-0 multiselect-icono-izquierda"></i> <input type="text" class="drop-multiselect__search pt-5 pb-5 col-xs-12" ng-model="dmsCtrl.search" placeholder="Buscar..."> <i ng-show="dmsCtrl.data.buscador && dmsCtrl.search" ng-click="dmsCtrl.search = undefined" class="ion-ios-close-empty px-25 pl-0 pr-0 text-right multiselect-icono-derecha"></i></div></div><!-- Con buscador --><ul class="list-unstyled"><!-- Con selectAll --><li ng-if="dmsCtrl.data.selectAll"><label class="bch-custom-check"><div><input type="checkbox" ng-click="dmsCtrl.seleccionarTodos(dmsCtrl.data.opciones)" ng-model="dmsCtrl.selectorAll"> <i></i></div><span>Seleccionar todos</span></label></li><!-- Con selectAll --><li ng-repeat="item in dmsCtrl.data.opciones | filter:dmsCtrl.search"><label class="bch-custom-check"><div><input type="checkbox" ng-checked="dmsCtrl.data.selecciones.indexOf(item) > -1" ng-click="dmsCtrl.seleccionar(item)"> <i></i></div><span>{{item}}</span></label></li></ul></div><!-- botones --><div class="col-xs-12 pl-10 pr-10 text-right footer-choises" ng-if="dmsCtrl.data.botones" ng-class="{\'open\': dmsCtrl.multiSelectOpen}"><div class="col-xs-12 border-top pb-5 pl-0 pr-0 mb-5 pt-10"><button type="button" class="btn neutro btn-sm" ng-click="dmsCtrl.cancelar()">Cancelar</button> <button type="button" class="btn success btn-sm" ng-click="dmsCtrl.data.funcionAceptar(); dmsCtrl.multiSelectOpen = false">{{dmsCtrl.textoAceptar()}}</button></div></div></div>')
	}]), angular.module("mensajes-login/src/mensaje.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("mensajes-login/src/mensaje.tpl.html", '<!--error=icono Error; errorTwo=icono Warning; success=icono Succsess--><section class="container"><section class="error-landing-v2 fix-error-landing" ng-class="{\'error\':vm.tipoError,\'errorTwo\':vm.tipoWarning,\'success\':vm.tipoSuccess}"><section class="col-md-10 col-md-offset-1"><div class="cont-error-landing"><div class="col-xs-8"><h1><b>{{vm.tituloMensaje}}</b></h1><p>{{vm.contenidoMensaje}}</p></div><div class="col-xs-4"><h4>Mesa de Ayuda</h4><p>Comun&iacute;cate llamando al</p><b>600 637 3737</b> Banco de Chile<br><b>600 231 9999</b> Banco Edwards | Citi<br><b>800 123 777</b> Banco CrediChile</div></div><button class="success btn pull-right" ng-click="vm.volverLogin()">{{vm.nombreBoton}}</button></section></section></section>')
	}]), angular.module("message-handler/message-handler/messageHandler.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("message-handler/message-handler/messageHandler.tpl.html", '<div class="container"><section class="error-landing error"><section class="col-md-10 col-md-offset-1"><div class="col-xs-8"><h3><b>Error de Sistema</b></h3><h4>{{messageHandler.information.mensajeError}}</h4></div><div class="col-xs-4"><h5>Mesa de Ayuda</h5><p>ComunÃ­quese con Fonobank<br>Llamando al {{messageHandler.telefono}}</p></div><button ng-if="messageHandler.buttonContinue()" class="success btn btn-sm pull-right" ng-click="messageHandler.continueTo()">{{messageHandler.labelButton}}</button></section></section></div>')
	}]), angular.module("nocliente-agendamiento/src/agendamiento/agendamiento.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("nocliente-agendamiento/src/agendamiento/agendamiento.tpl.html", '<section class="container-fluid agendamiento ui-minerva"><div class="row"><div class="col-xs-12 text-center mt-30 mb-30"><h2 class="mb-15">Estamos <b>comprometidos</b> con tu salud</h2><h3>Desarrollamos un nuevo sistema, para que puedas ir a nuestras Sucursales sin exponerte y con nuestro compromiso de seguridad.</h3></div></div><div class="col-xs-12 mt-30 mb-30"><div ui-view></div></div></section>')
	}]), angular.module("nocliente-agendamiento/src/agendamiento/comprobantes/comprobante-presencial.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("nocliente-agendamiento/src/agendamiento/comprobantes/comprobante-presencial.tpl.html", '<!-- COMPROBANTE --><div class="comprobante-web"><div class="row group-detail"><h2 class="pl-15 pr-15">Agenda Visita en Sucursal</h2><div class="col-xs-12 mt-15 mb-15"><div class="bch-bubble pl-30 pr-30 pt-20 pb-20"><!-- Selects Fila 1 --><div class="row pt-15 pb-15 mensaje-agendamiento"><div class="col-xs-12 form-group mb-0 flex-center"><span class="ion-checkmark-circled color-primary px-40 mr-20"></span><h4 class="mb-0">Reserva agendada con Ã©xito</h4></div><div class="ml-85 resp--row-comprobante" ng-show="compPresencial.correoEnviado"><div class="col-xs-12 col-lg-11 bch-mensaje-empresas information info"><article><h5>Enviamos un correo electrÃ³nico con una copia de tu solicitud a: <span class="text-bold">{{compPresencial.data.email}}</span></h5></article></div></div></div><!-- Selects Fila 2 --><div class="row pt-15 pb-15"><div class="col-xs-12 form-group mb-0 flex-center"><span class="ion-checkmark-circled color-primary px-40 mr-20"></span><h4 class="mb-0">Resumen de tu Reserva</h4></div><div class="mt-15 ml-70 resp--row-comprobante"><div class="col-xs-12 col-sm-4 col-lg-4 mt-20 resp--text-align"><h5>AcciÃ³n: {{compPresencial.data.accion}}</h5><h5>TrÃ¡mite a realizar: {{compPresencial.data.tramite}}</h5></div><div class="col-xs-12 col-sm-4 col-lg-4 mt-20 resp--text-align"><h5>DÃ­a agendado: {{compPresencial.data.fecha}}</h5><h5>Horario agendado: {{compPresencial.data.horario}} horas</h5><h5>Sucursal: {{compPresencial.data.sucursal.nombreSucursal | agendamientoCamelcase}}</h5></div><div class="col-xs-12 col-sm-4 col-lg-4 mt-20 resp--text-align"><h5>RegiÃ³n: {{compPresencial.data.region | agendamientoCamelcase}}</h5><h5>Comuna: {{compPresencial.data.comuna | agendamientoCamelcase}}</h5><h5>DirecciÃ³n: {{compPresencial.data.sucursal.direccion | agendamientoCamelcase}}</h5></div></div></div><!-- Selects Fila 3 --><div class="row pt-15 pb-15"><div class="col-xs-12 form-group mb-0 flex-center"><span class="ion-android-alert color-primary px-40 mr-20"></span><h4 class="mb-0">Instrucciones que debes recordar antes de ir a la Sucursal:</h4></div><!-- Steps --><div class="resp--row-comprobante"><!-- Info-step 1 --><div class="col-xs-12 col-sm-6 col-lg-3 voucher-step"><div class="number"><h3 class="mb-0">1.</h3></div><div class="voucher-step-group"><div class="icon mb-15"><img src="assets/mascarilla.png" alt="mascarilla-icono" width="50"></div><div class="text-center"><h6>{{compPresencial.textoPaso1}}</h6></div></div></div><!-- Info-step 2 --><div class="col-xs-12 col-sm-6 col-lg-3 voucher-step"><div class="number"><h3 class="mb-0">2.</h3></div><div class="voucher-step-group"><div class="icon mb-15"><img src="assets/reloj.png" alt="reloj-icono" width="50"></div><div class="text-center"><h6>{{compPresencial.textoPaso2}}</h6></div></div></div><!-- Info-step 3 --><div class="col-xs-12 col-sm-6 col-lg-3 voucher-step"><div class="number"><h3 class="mb-0">3.</h3></div><div class="voucher-step-group"><div class="icon mb-15"><img src="assets/guardia.png" alt="guardia-icono" width="50"></div><div class="text-center"><h6>{{compPresencial.textoPaso3}}</h6></div></div></div><!-- Info-step 4 --><div class="col-xs-12 col-sm-6 col-lg-3 voucher-step"><div class="number"><h3 class="mb-0">4.</h3></div><div class="voucher-step-group"><div class="icon mb-15"><img src="assets/carnet.png" alt="carnet-icono" width="50"></div><div class="text-center"><h6>{{compPresencial.textoPaso4}}</h6></div></div></div></div></div><!-- Buttons --><div class="row"><div class="col-xs-12 mt-15 mb-30 text-center"><button type="button" class="btn info" ng-click="compPresencial.continuar()">CONTINUAR</button></div></div></div></div></div></div>')
	}]), angular.module("nocliente-agendamiento/src/agendamiento/comprobantes/comprobante-remoto.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("nocliente-agendamiento/src/agendamiento/comprobantes/comprobante-remoto.tpl.html", '<!-- SOLICITAR CLAVE - RESPUESTA --><div class="comprobante-web"><div class="row group-detail"><h2 class="pl-15 pr-15">Agenda Visita en Sucursal</h2><div class="col-xs-12 mt-15 mb-15"><div class="bch-bubble pl-30 pr-30 pt-20 pb-20"><!-- Selects Fila 1 --><div class="row pt-15 pb-15"><div class="col-xs-12 form-group mb-0 flex-center"><span class="ion-checkmark-circled color-primary px-40 mr-20"></span><h4 class="mb-0">Solicitud enviada con Ã©xito</h4></div></div><!-- Buttons --><div class="row"><div class="col-xs-12 mt-15 mb-30 text-center"><button type="button" class="btn info" ng-click="compRemoto.continuar()">CONTINUAR</button></div></div></div></div></div></div>')
	}]), angular.module("nocliente-agendamiento/src/agendamiento/consultas/consultas.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("nocliente-agendamiento/src/agendamiento/consultas/consultas.tpl.html", '<!-- STEP 2 - Datos --><article class="step" data-step="2"><h3>Paso 2: Consulta a realizar</h3><div class="row pt-15 pb-15"><div class="col-xs-12 col-md-5 form-group"><h4>Selecciona una categorÃ­a</h4><ui-select ng-required="true" search-enabled="true" ng-model="consultas.tramite" ng-disabled="!consultas.listadoTramites || !consultas.listadoTramites.length" on-select="consultas.selectTramite()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombreTramite}} </ui-select-match><ui-select-choices repeat="tramite in consultas.listadoTramites | smartFilter: [\'nombreTramite\']: $select.search: false"> {{tramite.nombreTramite}} </ui-select-choices></ui-select><small class="invalid p-absolute ml-5" ng-show="consultas.sinTramite">{{consultas.msjSinTramite}}</small></div><div class="col-xs-12 col-md-5 form-group"><h4>Â¿QuÃ© consulta quieres realizar?</h4><ui-select ng-required="true" search-enabled="true" ng-model="consultas.consulta" ng-disabled="!consultas.listadoConsultas || !consultas.listadoConsultas.length" on-select="consultas.sinConsulta = false;"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descConsulta}} </ui-select-match><ui-select-choices repeat="consulta in consultas.listadoConsultas | smartFilter: [\'descConsulta\']: $select.search: false"> {{consulta.descConsulta}} </ui-select-choices></ui-select><small class="invalid p-absolute ml-5" ng-show="consultas.sinConsulta">{{consultas.msjSinConsulta}}</small></div></div><div class="row text-center mt-20 mb-20"><button type="button" class="btn info" ng-click="consultas.continuar()" ng-class="{\'disabled\': !consultas.datosValidos()}">CONTINUAR</button></div></article>')
	}]), angular.module("nocliente-agendamiento/src/agendamiento/error-500/error-500.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("nocliente-agendamiento/src/agendamiento/error-500/error-500.tpl.html", '<div class="tramites-web"><div class="row group-detail pb-30"><h2 class="pl-15 pr-15">Agenda Visita en Sucursal</h2><div class="col-xs-12 mt-15"><div class="bch-bubble pl-30 pr-30 pt-20 pb-20"><div class="row mt-10"><div class="col-lg-12"><div class="bch-mensaje-empresas error"><article><h5>{{error.mensaje}}</h5></article></div></div></div><div class="row mb-20"><div class="col-lg-12 text-center mt-20"><button type="button" class="btn primary" ui-sref="agendamiento-validar-rut">VOLVER</button></div></div></div></div></div></div>')
	}]), angular.module("nocliente-agendamiento/src/agendamiento/escoger-tramite/escoger-tramite.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("nocliente-agendamiento/src/agendamiento/escoger-tramite/escoger-tramite.tpl.html", '<!-- ESCOGER TRAMITES WEB --><div class="tramites-web"><div class="row group-detail pb-30"><h2 class="pl-15 pr-15">Agenda Visita en Sucursal</h2><div class="col-xs-12 mt-15"><div class="bch-bubble pl-30 pr-30 pt-20 pb-20"><div class="row"><section class="steps"><!-- STEP 1 - TrÃ¡mite --><article class="step" data-step="1" ng-class="{\'done\': escogerTramite.showPasoDos}"><h3>Paso 1: TrÃ¡mite a realizar</h3><div class="row flex-center pt-25 pb-25 resp--step"><div class="col-xs-12 col-md-5 form-group"><h4>Escoge una acciÃ³n</h4><ui-select ng-required="true" search-enabled="true" ng-model="escogerTramite.accion" on-select="escogerTramite.selectAccion()" ng-disabled="!escogerTramite.listadoAcciones || !escogerTramite.listadoAcciones.length"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombreAccion}} </ui-select-match><ui-select-choices repeat="accion in escogerTramite.listadoAcciones | smartFilter: [\'nombreAccion\']: $select.search: false"> {{accion.nombreAccion}} </ui-select-choices></ui-select><small class="invalid p-absolute ml-5" ng-show="escogerTramite.sinAccion">{{escogerTramite.msjSinAccion}}</small></div><div class="col-xs-12 col-md-5 form-group" ng-if="!escogerTramite.flujoConsultas"><h4>Selecciona una categorÃ­a</h4><ui-select ng-required="true" search-enabled="true" ng-model="escogerTramite.tramite" on-select="escogerTramite.selectTramite()" ng-disabled="!escogerTramite.listadoTramites || !escogerTramite.listadoTramites.length"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombreTramite}} </ui-select-match><ui-select-choices repeat="tramite in escogerTramite.listadoTramites | smartFilter: [\'nombreTramite\']: $select.search: false"> {{tramite.nombreTramite}} </ui-select-choices></ui-select><small class="invalid p-absolute ml-5" ng-show="escogerTramite.sinTramite">{{escogerTramite.msjSinTramite}}</small></div><div class="col-xs-12 col-md-2 mt-20"><button type="button" class="btn info" ng-click="escogerTramite.nextStep()" ng-class="{\'disabled\': escogerTramite.showBtnSgte()}">SIGUIENTE</button></div></div></article><!-- VISTA STEP 2 --><div ng-if="escogerTramite.showPasoDos" ui-view></div></section></div></div></div></div></div>')
	}]), angular.module("nocliente-agendamiento/src/agendamiento/tramite-presencial/tramite-presencial.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("nocliente-agendamiento/src/agendamiento/tramite-presencial/tramite-presencial.tpl.html", '<!-- TRAMITE PRESENCIAL --><div class="tramite-presencial"><!-- STEP 2 - Sucursal --><article class="step" data-step="2" ng-class="{\'done\': presencial.sucursal}"><h3>Paso 2: Selecciona tu Sucursal mÃ¡s cercana</h3><div class="row flex-center pt-25 pb-25 resp--step"><div class="col-xs-12 col-md-5 form-group"><h4>Escoge una regiÃ³n</h4><ui-select ng-required="true" search-enabled="true" ng-model="presencial.region" ng-disabled="!presencial.listadoRegiones || !presencial.listadoRegiones.length" on-select="presencial.selectRegion()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombreRegion | agendamientoCamelcase}} </ui-select-match><ui-select-choices repeat="region in presencial.listadoRegiones | smartFilter: [\'nombreRegion\']: $select.search: false"> {{region.nombreRegion | agendamientoCamelcase}} </ui-select-choices></ui-select><small class="invalid p-absolute ml-5" ng-show="presencial.sinRegion">{{presencial.msjSinRegion}}</small></div><div class="col-xs-12 col-md-5 form-group"><h4>Â¿A quÃ© comuna te dirigirÃ¡s?</h4><ui-select ng-required="true" search-enabled="true" ng-model="presencial.comuna" ng-disabled="!presencial.listadoComunas || !presencial.listadoComunas.length" on-select="presencial.selectComuna()"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombreComuna | agendamientoCamelcase}} </ui-select-match><ui-select-choices repeat="comuna in presencial.listadoComunas | smartFilter: [\'nombreComuna\']: $select.search: false"> {{comuna.nombreComuna | agendamientoCamelcase}} </ui-select-choices></ui-select><small class="invalid p-absolute ml-5" ng-show="presencial.sinComuna">{{presencial.msjSinComuna}}</small></div><div class="col-xs-12 col-md-2 mt-20"><button type="button" class="btn info" ng-click="presencial.buscar()" ng-class="{\'disabled\': !presencial.busquedaValida()}">BUSCAR</button></div></div><div class="row pb-30" ng-if="presencial.showSucursales"><h4 class="pt-20 pl-15">Selecciona la sucursal que mÃ¡s te acomode</h4><!-- CARDS --><div class="pb-10 mt-20" ng-if="presencial.listadoSucursales.length"><div ng-repeat="sucursal in presencial.listadoSucursales"><div class="col-xs-12 col-sm-6 col-md-4 pr-5"><div class="card-sucursal"><label class="bch-custom-check radiobutton"><div class="mr-15"><input type="radio" ng-model="presencial.sucursal" ng-value="sucursal" ng-change="presencial.selectSucursal()"> <i></i></div></label><div><h5>{{sucursal.nombreSucursal | agendamientoCamelcase}}</h5><p>DirecciÃ³n: {{sucursal.direccion | agendamientoCamelcase}}</p><p ng-show="{{sucursal.telefono}}">TelÃ©fono: {{sucursal.telefono}}</p></div></div></div></div></div><div class="spinner" ng-if="!presencial.listadoSucursales && !presencial.sinSucursales"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><!-- MENSAJE --><div class="bch-mensaje-empresas error ml-15 mr-15 mt-30" ng-if="presencial.sinSucursales"><article><h5>{{presencial.msjSinSucursales}}</h5></article></div></div></article><!-- STEP 3 - Fecha y hora --><article class="step" data-step="3" ng-class="{\'disabled\': !presencial.sucursal, \'done\': presencial.showPasoCuatro}"><h3>Paso 3: Selecciona tu fecha y hora de atenciÃ³n</h3><div class="row pt-25 pb-25 pl-25 pr-25"><div class="row pb-15 pt-15 flex-center resp--step"><h4 class="pl-5 mr-15">Escoge un dÃ­a para asistir a la sucursal:</h4><div class="col-xs-12 col-md-4 col-lg-3 form-group pl-5 mb-0"><p class="input-group calendar-responsive" ng-click="presencial.datepicker($event)"><input readonly="readonly" type="text" class="form-control" show-button-bar="false" datepicker-popup="dd-MM-yyyy" ng-model="presencial.fecha" is-open="presencial.opened" datepicker-options="presencial.datepickerOptions" close-text="Cerrar" show-weeks="false" ng-disabled="false" ng-change="presencial.selectFecha()" placeholder="Fecha" date-disabled="presencial.deshabilitarDias(date, mode)" min-date="{{presencial.hoy}}"> <span class="input-group-btn"><button type="button" class="btn border" ng-disabled="false"><i class="ion-calendar"></i></button></span></p></div></div><div class="row pb-15 pt-15" ng-if="presencial.showHorarios"><h4>Selecciona un horario de atenciÃ³n</h4><div class="bch-mensaje-empresas error ml-10 mr-10 mt-30" ng-if="presencial.showSinHorarios"><article><h5>{{presencial.msjSinHorarios}}</h5></article></div><div class="cuadro-horarios pb-20"><div class="inline-block" tooltip="{{presencial.msjSinCupos}}" tooltip-placement="top" tooltip-append-to-body="true" tooltip-trigger="mouseenter" tooltip-animation="false" tooltip-enable="horario.cupos == 0" ng-repeat="horario in presencial.listadoHorarios"><button type="button" class="btn" ng-click="presencial.selectHorario(horario)" ng-if="horario.estado" ng-class="{ \'info\': horario.cupos > 0 && !horario.selected,\n                                \'disabled\': horario.cupos == 0,\n                                \'primary\': horario.selected }"> {{ horario.hora }} </button></div></div><div class="spinner" ng-if="!presencial.listadoHorarios"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div></div></div></article><!-- STEP 4 - Datos --><article class="step" data-step="4" ng-class="{\'disabled\': !presencial.showPasoCuatro}"><h3>Paso 4: Confirma tus datos</h3><div class="row pt-15 pb-15"><div class="col-lg-5 col-md-6 form-group mb-responsive"><label>*Ingresa tu nombre</label><input type="text" class="form-control ng-pristine ng-touched" maxlength="10" ng-model="presencial.nombre" ng-class="{\'ng-invalid\': presencial.sinNombre }" ng-blur="presencial.checkNombre()" agendamiento-solo-letras> <small class="invalid p-absolute ml-5" ng-show="presencial.sinNombre">{{presencial.msjSinNombre}}</small></div><div class="col-lg-5 col-md-6 form-group"><label>*Ingresa tu apellido</label><input type="text" class="form-control ng-pristine ng-touched" maxlength="10" ng-model="presencial.apellido" ng-class="{\'ng-invalid\': presencial.sinApellido }" ng-blur="presencial.checkApellido()" agendamiento-solo-letras> <small class="invalid p-absolute ml-5" ng-show="presencial.sinApellido">{{presencial.msjSinApellido}}</small></div></div><div class="row pb-15"><div class="col-lg-5 col-md-6 form-group mb-0"><label>RUT</label><input type="text" class="form-control" ng-rut ng-model="presencial.rut.string" ng-disabled="true"></div></div><div class="row pt-15 pb-15"><h4 class="pl-15">Estos datos nos permitirÃ¡n enviar la confirmaciÃ³n de tu hora agendada</h4><div class="col-lg-5 col-md-6 form-group mb-responsive"><label>*Correo electrÃ³nico</label><input type="email" class="form-control ng-pristine ng-touched" maxlength="30" ng-model="presencial.email" ng-class="{\'ng-invalid\': presencial.sinEmail || presencial.emailInvalido }" ng-blur="presencial.checkEmail()" ng-pattern="/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,15}(?:\\.[a-z]{2})?)$/i"> <small class="invalid p-absolute ml-5" ng-show="presencial.sinEmail">{{presencial.msjSinEmail}}</small><small class="invalid p-absolute ml-5" ng-show="presencial.emailInvalido">{{presencial.msjEmailInvalido}}</small></div><div class="col-lg-5 col-md-6 form-group mb-0 input-phone"><label code-phone="+569" class="pl-0">*TelÃ©fono celular</label><input type="text" class="form-control ng-pristine ng-touched" ng-model="presencial.fono" agendamiento-solo-numeros ng-class="{\'ng-invalid\': presencial.sinFono || presencial.fonoInvalido }" ng-blur="presencial.checkFono()" maxlength="8"> <small class="invalid p-absolute ml-5" ng-show="presencial.sinFono">{{presencial.msjSinFono}}</small><small class="invalid p-absolute ml-5" ng-show="presencial.fonoInvalido">{{presencial.msjFonoInvalido}}</small></div></div><div class="row pt-15 pb-15"><h4 class="pl-15 pr-15">CuÃ©ntanos si tienes alguna necesidad o solicitud especial, para asistir a nuestra Sucursal:</h4><div class="form-group col-xs-12 col-lg-10"><textarea class="form-control ng-pristine ng-untouched ng-valid ng-valid-maxlength" cols="10" rows="2" ng-model="presencial.comentario" maxlength="300" placeholder="Ingresa tu comentario">\n                </textarea></div></div><div class="row text-center"><div class="col-xs-12"><button type="button" class="btn primary" ng-click="presencial.agendar()" ng-class="{\'disabled\': !presencial.camposValidos() || presencial.btnAgendarInactivo}">AGENDAR VISITA</button></div></div><div class="row"><div class="col-xs-12"><div class="bch-mensaje-empresas error mr-15 mt-30" ng-if="presencial.errorAgendamiento"><article><h5>{{presencial.msjErrorAgendamiento}}</h5></article></div></div></div></article></div>')
	}]), angular.module("nocliente-agendamiento/src/agendamiento/tramite-remoto/tramite-remoto.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("nocliente-agendamiento/src/agendamiento/tramite-remoto/tramite-remoto.tpl.html", '<!-- STEP 2 - Datos --><article class="step" data-step="2"><h3>Paso 2: Confirma tus datos</h3><div class="spinner" ng-if="remoto.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><div ng-if="!remoto.loading"><div class="row pt-15 pb-15"><div class="col-lg-5 col-md-6 form-group mb-responsive"><label>*Ingresa tu nombre</label><input type="text" class="form-control ng-pristine ng-touched" maxlength="24" ng-model="remoto.nombre" ng-class="{\'ng-invalid\': remoto.sinNombre }" ng-blur="remoto.checkNombre()" agendamiento-solo-letras> <small class="invalid p-absolute ml-5" ng-show="remoto.sinNombre">{{remoto.msjSinNombre}}</small></div><div class="col-lg-5 col-md-6 form-group mb-0"><label>RUT</label><input type="text" class="form-control" ng-rut ng-model="remoto.rut.string" ng-disabled="true"></div></div><div class="row pt-15 pb-15"><div class="col-lg-5 col-md-6 form-group mb-responsive"><label>*Correo electrÃ³nico</label><input type="email" class="form-control ng-pristine ng-touched" maxlength="30" ng-model="remoto.email" ng-class="{\'ng-invalid\': remoto.sinEmail || remoto.emailInvalido }" ng-blur="remoto.checkEmail()" ng-pattern="/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,15}(?:\\.[a-z]{2})?)$/i"> <small class="invalid p-absolute ml-5" ng-show="remoto.sinEmail">{{remoto.msjSinEmail}}</small><small class="invalid p-absolute ml-5" ng-show="remoto.emailInvalido">{{remoto.msjEmailInvalido}}</small></div><div class="col-lg-5 col-md-6 form-group mb-0 input-phone"><label code-phone="+569" class="pl-0">*TelÃ©fono celular</label><input type="text" class="form-control ng-pristine ng-touched" ng-model="remoto.celular" agendamiento-solo-numeros ng-class="{\'ng-invalid\': remoto.sinCelular || remoto.celularInvalido }" ng-blur="remoto.checkCelular()" maxlength="8"> <small class="invalid p-absolute ml-5" ng-show="remoto.sinCelular">{{remoto.msjSinCelular}}</small><small class="invalid p-absolute ml-5" ng-show="remoto.celularInvalido">{{remoto.msjFonoInvalido}}</small></div></div><div class="row pt-15 pb-15"><div class="col-lg-5 col-md-6 form-group mb-0 input-phone"><label code-phone="+562" class="pl-0">TelÃ©fono fijo</label><input type="text" class="form-control ng-pristine ng-touched" ng-model="remoto.fono" agendamiento-solo-numeros ng-class="{\'ng-invalid\': remoto.fonoInvalido }" ng-blur="remoto.checkFono()" maxlength="8"> <small class="invalid p-absolute ml-5" ng-show="remoto.fonoInvalido">{{remoto.msjFonoInvalido}}</small></div></div><div class="row pt-15 pb-15"><h4 class="pl-15">Tipo solicitud / contacto</h4><div class="col-lg-5 col-md-6 form-group"><label>Tipo de contacto</label><ui-select ng-required="true" search-enabled="true" ng-model="remoto.tipo" ng-disabled="true"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices repeat="tipo in remoto.listadoTipos"> {{tipo.descripcion}} </ui-select-choices></ui-select></div><div class="col-lg-5 col-md-6 form-group"><label>Producto</label><ui-select ng-required="true" search-enabled="true" ng-model="remoto.producto" ng-disabled="true"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices repeat="producto in remoto.listadoProductos"> {{producto.descripcion}} </ui-select-choices></ui-select></div></div><div class="row pt-15 pb-15"><h4 class="pl-15">CuÃ©ntanos si tienes alguna necesidad o solicitud especial:</h4><div class="form-group col-xs-12 col-lg-10"><textarea class="form-control ng-pristine ng-untouched ng-valid ng-valid-maxlength" cols="10" rows="2" ng-model="remoto.comentario" maxlength="300" placeholder="Ingresa tu comentario">\n                </textarea></div></div><div class="text-center mt-20 mb-20"><button type="button" class="btn primary" ng-click="remoto.enviar()" ng-class="{\'disabled\': !remoto.camposValidos() || remoto.btnEnviarInactivo}">ENVIAR FORMULARIO</button></div></div></article>')
	}]), angular.module("nocliente-agendamiento/src/agendamiento/validar-rut/validar-rut.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("nocliente-agendamiento/src/agendamiento/validar-rut/validar-rut.tpl.html", '<!-- VALIDACION RUT --><div class="validacion-rut"><div class="row group-detail pb-30"><h2 class="pl-15 pr-15">Agenda Visita en Sucursal</h2><div class="col-xs-12 mt-15 resp-padd-none"><div class="bch-bubble pl-30 pr-30 pt-20 pb-20"><h4>Para agendar, necesitamos validar algunos datos</h4><div class="row flex-center pt-15 resp--d-block"><div class="col-xs-12 col-md-4 form-group"><label>* Ingresa tu RUT</label><input type="text" class="form-control" ng-class="{\'ng-invalid\': validaRut.rutConError()}" ng-model="validaRut.rut" ng-rut rut-format="blur" ng-blur="validaRut.validarRut(validaRut.rut)" ng-keydown="validaRut.limpiarMensajes()" ng-click="validaRut.limpiarMensajes()" maxlength="12"> <small class="invalid p-absolute ml-5" ng-show="validaRut.showRutVacio || validaRut.showRutNoValido">{{validaRut.msjErrorRut}}</small></div><div class="col-xs-12 col-md-4 resp--captcha mb-10"><no-captcha g-recaptcha-response="validaRut.captcha.gRecaptchaResponse" control="validaRut.captcha.resetCaptchaReset" expired-callback="validaRut.captcha.expiredCatcha"></no-captcha><small class="invalid p-absolute ml-5" ng-if="validaRut.captcha.isErrorMsgCaptchaActive">Validar captcha.</small></div><div class="col-xs-12 col-md-2 text-center mt-5 resp--btn-content"><button type="button" class="btn primary" ng-click="validaRut.validaAgendamientos()" ng-class="{\'disabled\': !validaRut.datosValidos() || validaRut.btnValidarInactivo}">VALIDAR</button></div></div></div></div></div><div class="row" ng-if="validaRut.showRutEmpresa"><div class="bch-mensaje-empresas error"><article><h5>{{validaRut.msjRut.rutEmpresa}}</h5></article></div></div><div class="row" ng-if="validaRut.showMaxAgendamientos"><div class="bch-mensaje-empresas error"><article><h5>{{validaRut.msjMaxAgendamientos}}</h5></article></div></div></div>')
	}]), angular.module("portabilidad-financiera-publico/src/portabilidad-financiera-publico/comprobante-solicitud/comprobante-solicitud.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("portabilidad-financiera-publico/src/portabilidad-financiera-publico/comprobante-solicitud/comprobante-solicitud.tpl.html", '<div class="container-fluid"><div class="row comprobante pt-30 pb-30" ng-if="vm.solicitud.resultadoSolicitud.rentaAcreditada && !vm.solicitud.resultadoSolicitud.riesgo"><div class="col-xs-12 text-center"><i class="ion-ios-checkmark-outline i-success-color"></i></div><div class="col-xs-12 text-center pt-15"><h3 class="title-comprobante-success">Â¡Tu solicitud de portabilidad ha sido recibida con Ã©xito!</h3></div><div class="col-xs-12 pt-20 pb-20 text-center"><p><strong>Tu nÃºmero de seguimiento es: {{ vm.solicitud.resultadoSolicitud.idSolicitud }}</strong></p><p><strong>Hemos enviado un comprobante al correo electrÃ³nico que has registrado.</strong></p></div><div class="col-xs-12 pb-20"><div class="row justify-content-center pt-20"><div class="card-info col-xs-10 pt-30 pb-30"><div class="row justify-content-center"><div class="col-xs-10 col-md-8 col-lg-8 text-center"><h3 class="title-card"><strong>Prontamente te contactarÃ¡ un ejecutivo para</strong></h3><h3 class="title-card"><strong>continuar tu proceso de portabilidad</strong></h3></div></div><div class="row justify-content-center"><div class="col-xs-10 col-lg-10 pt-20 text-center"><h5 class="text-color-3">Para consultar el estado de tus solicitudes entra nuevamente desde el home de Portabilidad</h5></div></div><div class="row pt-30"><div class="col-xs-12 text-center"><a ng-click="vm.descargaComprobanteSolicitudPortabilidad()" class="a-link">DESCARGAR COPIA DE LA SOLICITUD</a></div></div></div></div></div><div class="col-xs-12 justify-content-center mt-30 mb-30"><button type="button" class="btn info pt-15 pb-15 pl-30 pr-30" ng-click="vm.redirigeOtraSolicitud()">GENERAR OTRA SOLICITUD</button> <button type="button" class="btn primary pt-15 pb-15 pl-30 pr-30" ng-click="vm.redirigeBancoChile()">VOLVER A BANCOCHILE.CL</button></div></div><div class="row comprobante pt-30 pb-30" ng-if="!vm.solicitud.resultadoSolicitud.rentaAcreditada && !vm.solicitud.resultadoSolicitud.riesgo"><div class="col-xs-12 text-center"><i class="ion-ios-checkmark-outline i-success-color"></i></div><div class="col-xs-12 pt-15 text-center"><h3 class="title-comprobante-success">Â¡Tu solicitud de portabilidad ha sido recibida con Ã©xito!</h3></div><div class="col-xs-12 pt-20 pb-20 text-center"><p><strong>Tu nÃºmero de seguimiento es: {{ vm.solicitud.resultadoSolicitud.idSolicitud }}</strong></p><p><strong>Hemos enviado un comprobante al correo electrÃ³nico que has registrado.</strong></p></div><div class="col-xs-12 pb-20"><div class="row justify-content-center pt-20"><div class="card-info col-xs-10 pt-30 pb-30"><div class="row justify-content-center"><div class="col-xs-10 col-md-8 col-lg-8 text-center"><h3 class="title-card"><strong>Para poder evaluarte y entregarte una mejor oferta,</strong></h3><h3 class="title-card"><strong>necesitamos que nos envÃ­es mÃ¡s informaciÃ³n</strong></h3><p class="text-color-3 pt-10"><strong>Mientras mÃ¡s completa venga tu solicitud, mejor serÃ¡ la respuesta que podemos entregarte</strong></p></div></div><div class="row justify-content-center pt-15"><div class="col-xs-9 col-lg-9 list"><div class="row"><div class="col-xs-12 pt-10 pb-10 list__item"><h5 class="text-color-3">Autorizanos a consultar tus Ãºltimas cotizaciones previsionales</h5></div><div class="col-xs-12 pt-10 pb-10 list__item"><h5 class="text-color-3">Completa el estado de situaciÃ³n</h5></div></div></div></div><div class="row pt-30"><div class="col-xs-12 text-center"><a ng-click="vm.descargaComprobanteSolicitudPortabilidad(); vm.registrarAccion(\'p_btn_complet-info_comprob_pub_desc-compr_portab\');" id="p_btn_complet-info_comprob_pub_desc-compr_portab" class="a-link">DESCARGAR COPIA DE LA SOLICITUD</a></div></div></div></div></div><div class="col-xs-12 justify-content-center mt-30 mb-30"><button type="button" class="btn default pt-15 pb-15 pl-30 pr-30" ng-click="vm.redirigeBancoChile(); vm.registrarAccion(\'p_btn_complet-info_comprob_pub_fin-sin-info_portab\');" id="p_btn_complet-info_comprob_pub_fin-sin-info_portab">TERMINAR SIN COMPLETAR INFORMACIÃ“N</button> <button type="button" class="btn info pt-15 pb-15 pl-30 pr-30" ng-click="vm.redirigeOtraSolicitud(); vm.registrarAccion(\'p_btn_complet-info_comprob_pub_nueva-sol_portab\');" id="p_btn_complet-info_comprob_pub_nueva-sol_portab">GENERAR NUEVA SOLICITUD</button> <button type="button" class="btn primary pt-15 pb-15 pl-30 pr-30" ui-sref="consultar-solicitud-portabilidad-publico" ng-click="vm.registrarAccion(\'p_btn_complet-info_comprob_pub_completar_portab\')" id="p_btn_complet-info_comprob_pub_completar_portab">COMPLETAR INFORMACIÃ“N</button></div></div><div class="row comprobante pt-30 pb-30" ng-if="vm.solicitud.resultadoSolicitud.riesgo"><div class="col-xs-12 text-center"><i class="icon-warning-outline i-warning-color"></i></div><div class="col-xs-12 pt-15 pb-20 text-center"><h3 class="title-comprobante-error">Tu solicitud de portabilidad ha sido rechazada</h3></div><div class="col-xs-12 pb-20"><div class="row justify-content-center pt-20"><div class="card-warning col-xs-10 pt-30 pb-30"><div class="row justify-content-center"><div class="col-xs-11 col-md-10 col-lg-10 text-center"><p>El rechazo es conforme a las causales objetivas publicadas por Banco Chile en su pÃ¡gina web bancochile.cl</p><p>Si tienes consultas, puedes llamar a nuestra Banca TelefÃ³nica al 600 637 3737</p><p><strong>El nÃºmero de registro es: {{ vm.solicitud.resultadoSolicitud.idSolicitud }}</strong></p></div></div><div class="row pt-30"><div class="col-xs-12 text-center"><button ng-click="vm.descargaComprobanteSolicitudPortabilidad()" class="link">DESCARGAR COPIA DE LA SOLICITUD</button></div></div></div></div></div><div class="col-xs-12 justify-content-center mt-30 mb-30"><button type="button" class="btn primary pt-15 pb-15 pl-30 pr-30" ng-click="vm.redirigeBancoChile()">VOLVER A BANCOCHILE.CL</button></div></div><div class="row comprobante pt-30 pb-30" ng-if="vm.errorEnPreguntas"><div class="col-xs-12 text-center"><i class="icon-warning-outline i-warning-color"></i></div><div class="col-xs-12 pt-15 pb-10 text-center"><h3 class="title-comprobante-error">Al menos una de las respuestas ingresadas no es correcta</h3></div><div class="col-xs-12 pb-20 text-center"><p>Intenta nuevamente. Al tercer intento, se bloquearÃ¡ por 72 horas</p></div><div class="col-xs-12 justify-content-center mt-30 mb-30"><button type="button" class="btn default pt-15 pb-15 pl-30 pr-30" ui-sref="login-portabilidad-publico">REINTENTAR</button></div></div></div>')
	}]), angular.module("portabilidad-financiera-publico/src/portabilidad-financiera-publico/consultar-solicitud/consultar-solicitud.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("portabilidad-financiera-publico/src/portabilidad-financiera-publico/consultar-solicitud/consultar-solicitud.tpl.html", '<div class="container-fluid pb-20 pt-20 mt-20 mb-20"><div class="row"><div class="col-xs-12 padd-none"><div class="display-flex space-between"><div class="col-xs-12 padd-none"><div class="col-xs-4 circulo circulo-info">A</div><div class="col-xs-8"><h4 class="text-primary mb-0">{{vm.datosSolicitante.nombre}} {{vm.datosSolicitante.apellidoPaterno}} {{vm.datosSolicitante.apellidoMaterno}}</h4><p class="px-12 text-default pt-5">{{vm.datosSolicitante.rutCliente | rut}}</p></div></div><div><button type="button" class="btn info" ui-sref="login-portabilidad-publico" ng-click="vm.registrarAccion(\'p_btn_cerrar-sesion_pub_porta\');" id="p_btn_cerrar-sesion_pub_porta">Cerrar SesiÃ³n</button></div></div></div></div></div><div class="row mt-30 mb-100 card-shadow"><div class="portabilidad-tabs"><div class="row" ng-if="!vm.rechazaFinal && !vm.aceptaFinal"><ul class="tabs"><li><a>Consultar solicitudes</a><p class="text-default">AdemÃ¡s puedes completar datos adicionales</p></li></ul></div><div class="row download-notify"><div class="col-xs-12 table-notificacion" ng-if="vm.notificacion.length > 0"><div class="row" ng-repeat="notify in vm.notificacion track by $index"><div class="col-xs-12 notificacion" ng-class="{\'primary\' : notify.type===\'primary\', \'warning\' : notify.type===\'warning\', \'error\' : notify.type===\'error\', \'success\' : notify.type===\'success\' }"><article> {{ notify.text }} </article></div></div></div></div><!--INICIO MAQUETACION OFERTA--><div class="container-fluid consulta-oferta pl-30 pr-30" ng-if="vm.solicitud"><div class="row pt-30 pb-10"><h3 class="text-color-3">Solicitudes realizadas</h3></div><!-- Mensaje Usario sin solicitudes - NUEVO CASO 1--><div class="row" ng-if="vm.solicitudes.length <= 0"><div class="col-xs-12 padd-none"><div class="bch-mensaje-empresas information"><article class="width-100"><p>En este momento no tienes solicitudes vigentes.</p></article></div></div></div><!-- Mensaje para que usuario revise estado - NUEVO CASO 3 AL ULTIMO--><div class="row" ng-if="vm.mensajeCaso3"><div class="col-xs-12 padd-none"><div class="bch-mensaje-empresas information"><article class="width-100"><p>Estamos evaluando tu solicitud. AcÃ¡ podrÃ¡s ver cuando tengas una oferta disponible. Es importante considerar el estado de tu solicitud.</p></article></div></div></div><div class="row" ng-if="vm.mensajeCaso2"><div class="col-xs-12 padd-none"><div class="bch-mensaje-empresas information"><article class="width-100"><p>Estamos evaluando tu solicitud. Si nos envÃ­as mÃ¡s informaciÃ³n podremos entregarte una mejor oferta.</p></article></div></div></div><!-- Usuario con Oferta disponible - NUEVO CASO 4--><div class="row" ng-if="vm.solicitudes.length > 0 && vm.ofertaDisponible.length > 0"><div class="col-xs-12 padd-none"><div class="bch-mensaje-empresas information"><article class="width-100"><p>Ya contamos con una oferta disponible para ti. Te invitamos a conocerla a continuaciÃ³n.</p></article></div></div></div><div class="row flex-wrap pt-20" ng-if="vm.solicitudes.length > 0"><div class="col-xs-12 col-sm-6 col-md-4 col-lg-4 pl-0 pb-15" ng-repeat="sol in vm.solicitudes track by $index"><!-- Card oferta aceptada --><div class="group-detail group-detail--primary" ng-if="sol.estadoSolicitudRepositorio===\'Oferta Aceptada\'\n                    || sol.estadoSolicitudRepositorio===\'DocumentaciÃ³n Firmada\' || sol.estadoSolicitudRepositorio===\'Visado Ok y aviso de pago proveedor inicial\'\n                         || sol.estadoSolicitudRepositorio===\'Pago devuelto/rechazado\' || sol.estadoSolicitudRepositorio===\'Pago efectuado\'"><!--<div class="display-flex jc--flex-end mb-20">\n                            <a class="link" ng-click="vm.descargaDetalleSolicitud(sol.idSolicitudPortabilidad);">DESCARGAR DETALLE SOLICITUD</a>\n                        </div>--><div class="display-flex jc--space-between mb-10"><p class="text-bold minerva-text-color-grey px-14 mb-0"><b>NÂº solicitud</b></p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.idSolicitudPortabilidad}}</b></p></div><div class="display-flex jc--space-between mb-10"><p class="minerva-text-color-grey px-14 mb-0">Fecha</p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.fechaCreacion | date:\'dd/MM/yyyy\'}}</b></p></div><div class="display-flex jc--space-between mb-10"><p class="minerva-text-color-grey px-14 mb-0">Proveedor inicial</p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.nombreProveedorOrigen}}</b></p></div><div class="display-flex jc--space-between mb-0"><p class="minerva-text-color-grey px-14 mb-0">Estado de la solicitud</p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.estadoSolicitud}}</b><i class="ion-checkmark"></i></p></div></div><!-- Card oferta disponible --><div class="group-detail group-detail--primary" ng-if="sol.estadoSolicitud===\'Oferta Disponible\'"><!--<div class="display-flex jc--flex-end mb-20">\n                            <a class="link" ng-click="vm.descargaDetalleSolicitud(sol.idSolicitudPortabilidad);">DESCARGAR DETALLE SOLICITUD</a>\n                        </div>--><div class="display-flex jc--space-between mb-10"><p class="text-bold minerva-text-color-grey px-14 mb-0"><b>NÂº solicitud</b></p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.idSolicitudPortabilidad}}</b></p></div><div class="display-flex jc--space-between mb-10"><p class="minerva-text-color-grey px-14 mb-0">Fecha</p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.fechaCreacion | date:\'dd/MM/yyyy\'}}</b></p></div><div class="display-flex jc--space-between mb-10"><p class="minerva-text-color-grey px-14 mb-0">Proveedor inicial</p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.nombreProveedorOrigen}}</b></p></div><div class="display-flex jc--space-between mb-10"><p class="minerva-text-color-grey px-14 mb-0">Estado de la solicitud</p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.estadoSolicitud}}</b></p></div><div class="display-flex jc--flex-end pt-10 pb-5"><button type="button" class="btn primary ml-0" ng-click="vm.verOferta($index)">Ver oferta</button></div></div><!-- Card oferta no disponible --><div class="group-detail group-detail--white" ng-if="sol.estadoSolicitud!==\'Oferta Disponible\' && sol.estadoSolicitud!==\'Oferta Aceptada\'\n                                && sol.estadoSolicitudRepositorio!==\'DocumentaciÃ³n Firmada\' && sol.estadoSolicitudRepositorio!==\'Visado Ok y aviso de pago proveedor inicial\'\n                                && sol.estadoSolicitudRepositorio!==\'Pago devuelto/rechazado\' && sol.estadoSolicitudRepositorio!==\'Pago efectuado\'"><!--<div class="display-flex jc--flex-end mb-20">\n                            <a class="link"  ng-click="vm.descargaDetalleSolicitud(sol.idSolicitudPortabilidad);">DESCARGAR DETALLE SOLICITUD</a>\n                        </div>--><div class="display-flex jc--space-between mb-10"><p class="text-bold minerva-text-color-grey px-14 mb-0"><b>NÂº solicitud</b></p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.idSolicitudPortabilidad}}</b></p></div><div class="display-flex jc--space-between mb-10"><p class="minerva-text-color-grey px-14 mb-0">Fecha</p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.fechaCreacion | date:\'dd/MM/yyyy\'}}</b></p></div><div class="display-flex jc--space-between mb-10"><p class="minerva-text-color-grey px-14 mb-0">Proveedor inicial</p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.nombreProveedorOrigen}}</b></p></div><div class="display-flex jc--space-between mb-0"><p class="minerva-text-color-grey px-14 mb-0">Estado de la solicitud</p><p class="minerva-text-color-grey-ligther text-bold px-14 mb-0 text-align-right"><b>{{sol.estadoSolicitud}}</b></p></div></div></div><div class="col-xs-12 col-sm-6 col-md-4 col-lg-4 pl-0 pb-15"><div class="group-detail group-detail--white add-item" ng-click="vm.redirigeOtraSolicitud()"><a class="a-link"><i class="ion-android-add-circle"></i><span>NUEVA SOLICITUD</span></a></div></div></div><div class="row flex-wrap pt-20" ng-if="vm.solicitudes.length <= 0"><div class="col-xs-12 col-sm-6 col-md-4 col-lg-4 pl-0"><div class="group-detail group-detail--white add-item" ng-click="vm.redirigeOtraSolicitud()"><a class="a-link"><i class="ion-android-add-circle"></i><span>NUEVA SOLICITUD</span></a></div></div></div><div class="row pt-30"><div class="col-xs-12 pt-15 pr-0 justify-content-end"><button type="button" ng-click="vm.redirigirABancoChile()" class="btn primary pt-10 pb-10">VOLVER A BANCOCHILE.CL</button></div></div><!--FIN MAQUETA OFERTA--><div class="row" ng-if="vm.solicitudes.length > 0"><div ng-if="!vm.flagRentaAcreditada || vm.mostrarEstadoSituacion" class="row mt-20"><h3 ng-if="!vm.datosSolicitante.rentaAcreditada || vm.mostrarEstadoSituacion" class="text-color-3">Completar informaciÃ³n adicional</h3><!-- Mensaje Mensaje para que usuario complete informaciÃ³n adicional - NUEVO CASO 2  --><div ng-if="!vm.mostrarExito"><div class="col-lg-4 col-md-4 col-sm-4 pl-0" ng-if="!vm.datosSolicitante.rentaAcreditada"><article class="caja-interactiva caja-interactiva--hover caja-interactiva__con-flecha col-lg-12 col-md-12 col-sm-12" ng-class="{\'caja-interactiva--hover__activa\': vm.cajaActive}"><div class="row"><a class="caja-interactiva__propiedades caja-interactiva--center border pt-15 pb-15 a-not-underline" href="javascript:void(0);" ng-click="vm.getEstadoDesdeCotizaciones(); vm.cajaActive = !vm.cajaActive; vm.limpiarFormulario(); vm.desactivaES()"><div class="col-lg-12 col-md-12 col-sm-12 padd-none contexto"><div class="icono-section col-lg-12 col-md-12 col-sm-12"><i class="caja-interactiva__icono icono-bch-ConsultaCuentaAhorro"></i><h4 class="mb-0">AutorÃ­zanos a consultar tus Ãºltimas cotizaciones previsionales</h4></div></div></a></div></article></div></div><div class="col-lg-4 col-md-4 col-sm-4 pl-0" ng-if="vm.mostrarEstadoSituacion"><article class="caja-interactiva caja-interactiva--hover caja-interactiva__con-flecha col-lg-12 col-md-12 col-sm-12" ng-class="{\'caja-interactiva--hover__activa\': vm.cajaActiveES}"><div class="row"><a class="caja-interactiva__propiedades caja-interactiva--center border pt-15 pb-15 a-not-underline" href="javascript:void(0);" ng-click="vm.cajaActiveES = !vm.cajaActiveES; vm.desactivaCotizaciones()"><div class="col-lg-12 col-md-12 col-sm-12 padd-none contexto"><div class="icono-section col-lg-12 col-md-12 col-sm-12"><i class="caja-interactiva__icono bch-q1-saldoymovimientos"></i><h4 class="mb-0">Completa tu Estado de SituaciÃ³n</h4></div></div></a></div></article></div></div><div class="row mt-20"><h1 class="text-color-3 text-bold" ng-if="vm.cajaActive">Cotizaciones previsionales</h1><div class="row mt-20" ng-if="vm.ocultarMensajeExitoCotizaciones"><div class="col-xs-12"><div class="bch-mensaje-empresas success"><article class="width-100"><p>AutorizaciÃ³n de consultar tus Ãºltimas cotizaciones previsionales ha sido recibida con Ã©xito</p></article></div></div></div><div class="row mt-20" ng-if="vm.mostrarError"><div class="col-xs-12"><div class="bch-mensaje-empresas error"><article class="width-100"><p>Ha ocurrido un error para validar tu respuesta, por favor intÃ©ntalo nuevamente</p></article></div></div></div><div class="row mt-20" ng-if="!vm.cajaActive"><div class="col-xs-12 justify-center pt-30" ng-if="vm.mostrarEstadoSituacion && vm.mostrarExito"><button class="btn primary pt-10 pb-10" ng-click="vm.cajaActiveES = !vm.cajaActiveES; vm.desactivaCotizaciones()">CONTINUAR CON ESTADO DE SITUACIÃ“N</button></div></div><div class="row" ng-if="vm.cajaActive"><div class="col-xs-12"><h4 class="text-color-3"><strong>Autorizo a consultar mis Ãºltimas cotizaciones previsionales</strong></h4><p>Por este acto, autorizo a mi AFP, a entregar por medio de Previred a Banco de Chile, mis 12 o 24 Ãºltimos perÃ­odos de cotizaciones previsionales, con el fin de ser consideradas como antecedentes para evaluaciÃ³n comercial, dando asÃ­ cumplimiento al artÃ­culo 4Â° de la Ley NÂ° 19.628 de ProtecciÃ³n de la Vida Privada, siendo Equifax el Ãºnico y exclusivo responsable de la correcta verificaciÃ³n de identidad de los Titulares de Datos que accedan a este servicio</p></div><div class="col-xs-12"><div class="row pt-20 pb-20"><div class="col-xs-12 flex-center"><h5 class="text-default inline-block">Autorizo a consultar mis cotizaciones</h5><div class="form-group radio-inline"><label class="bch-custom-check radiobutton"><div><input type="radio" name="autorizarCotizaciones" ng-value="true" ng-model="vm.autorizarCotizaciones"> <i></i></div><span>Si</span></label></div><div class="form-group radio-inline"><label class="bch-custom-check radiobutton"><div><input type="radio" name="autorizarCotizaciones" ng-value="false" ng-model="vm.autorizarCotizaciones"> <i></i></div><span>No</span></label></div></div></div></div></div></div><div class="row mt-20" ng-if="vm.cajaActive && !vm.cajaActiveES"><div class="col-xs-12 text-center"><button type="button" class="btn btn-info-gradient primary ml-0 pt-10 pb-10" ng-disabled="!vm.autorizarCotizaciones" ng-click="vm.continuar()">Aceptar</button></div></div><div class="row mt-20" ng-if="vm.mostrarError"><div class="col-xs-12 text-center"><button type="button" class="btn btn-info-gradient primary ml-0 pt-10 pb-10" ng-disabled="!vm.autorizarCotizaciones" ng-click="vm.reintentar()">Reintentar</button></div></div></div></div><div class="row" ng-if="vm.cajaActiveES"><estado-situacion-directive token="vm.token" class="col-xs-12"></estado-situacion-directive></div><div class="container-fluid consulta-oferta-detalle pl-30 pr-30" ng-if="vm.detalleOferta"><!--INICIO MAQUETACION OFERTA--><div class="row pt-30 pb-20"><h3 class="text-color-3">Oferta de Portabilidad</h3></div><div class="row"><div class="bch-mensaje-empresas information"><article class="width-100 pl-5"><p>Descarga y revisa tu oferta, para autorizarla presiona "Aceptar Oferta".</p></article></div></div><!-- Steppers --><div class="row pt-30 pb-30"><div class="col-xs-12"><section class="steps"><article class="done"><!-- Caja Interactiva --><div class="col-lg-12 padd-none mb-30 mt-30"><div class="row"><div class="col-lg-4 col-md-4 col-sm-4"><article class="caja-interactiva caja-interactiva--center caja-interactiva--descarga-documento border pt-15 pb-15 border col-lg-12 col-md-12 col-sm-12" ng-class="{\'caja-interactiva--hover\': showHideIcon != true}" ng-click="vm.descargarOferta()"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 padd-none contexto flex-center"><div class="icono-section col-sm-4 text-center"><div class="content-graph"><!-- Inicial Status --><div ng-if="vm.descargar" id="status-ini" class="content-icon"><i class="ion-ios-download-outline progress progress--initial"></i></div><!-- Progress Status --><div ng-if="vm.descargandoDocumento" id="status-progress" class="content-icon"><i class="ion-ios-download-outline progress progress--disabled"></i><section class="spinner mt-5"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></div><!-- Done Status --><div ng-if="vm.descargarOk" id="status-done" class="content-icon"><i class="ion-android-done progress progress--done"></i></div><!-- Error Status --><div ng-if="vm.descargarError" id="status-error" class="content-icon d-none"><i class="ion-android-close progress progress--error"></i> <button type="button" class="btn btn-link ml-0 padd-none">Reintentar</button></div></div></div><div class="col-sm-8 text-section"><h4 class="mb-0 text-light text-color-4 px-22 pl-30">Oferta de<br>Portabilidad<br>Financiera</h4></div></div></div></article></div></div></div><!-- Buttons --><div class="col-lg-12 mb-30 padd-none"><button type="button" ng-disabled="vm.cargando" class="btn neutro mb-15" ng-click="vm.rechazarOferta(); vm.registrarAccion(\'p_btn_oferta_present-of_pub_rechaz_portab\');" id="p_btn_oferta_present-of_pub_rechaz_portab">Rechazar Oferta</button> <button type="button" ng-disabled="vm.cargando || vm.enviandoOferta" ladda="vm.enviandoOferta" data-style="expand-right" class="btn primary ml-0 mb-15" ng-click="vm.aceptarOferta(); vm.registrarAccion(\'p_btn_oferta_present-of_pub_aceptar_portab\');" id="p_btn_oferta_present-of_pub_aceptar_portab">Aceptar Oferta</button></div></article></section></div></div></div><div class="container-fluid consulta-oferta-detalle pl-30 pr-30" ng-if="vm.rechazaFinal"><div class="row pt-30 pb-20"><h3 class="text-color-3">Portabilidad Financiera</h3></div><div class="row mb-20"><!-- Mensaje Oferta rechazada --><div class="col-xs-12"><div class="bch-mensaje-empresas information-warning"><article><h5>Oferta rechazada</h5><p>ComunÃ­cate con tu ejecutivo asignado para evaluar otras alternativas de productos para tu proceso de portabilidad.</p></article></div></div><div class="col-xs-12 pt-20"><div class="display-flex jc--flex-end"><button type="button" class="btn primary ml-0" ng-click="vm.registrarAccion(\'p_btn_oferta_present-of_pub_acep-ir-inicio_portab\');vm.redirigirABancoChile()" id="p_btn_oferta_present-of_pub_rechaz-ir-inicio_portab">IR A BANCOCHILE.CL</button></div></div></div></div><div class="container-fluid consulta-oferta-detalle pl-30 pr-30" ng-if="vm.aceptaFinal"><div class="row pt-30 pb-20"><h3 class="text-color-3">Portabilidad Financiera</h3></div><div class="row mb-20"><div class="bch-mensaje-empresas success"><article><h5>Hemos recibido con Ã©xito la aceptaciÃ³n de la Oferta.</h5></article></div></div><!-- Comprobante --><div class="row"><div class="group-detail comprobante-consulta-oferta mb-15 pt-30 pb-30 pl-30 pr-30"><div class="row mb-30"><div class="col-xs-6"><h4>Comprobante AceptaciÃ³n de Oferta</h4><p>{{vm.detalleOperacion.fechaOperacion | date:\'dd/MM/yyyy - HH:mm\' }} hrs.</p></div><div class="col-xs-6 text-right"><img src="http://login.bancochile.cl/bancochile-web/persona/login/assets/images/timbre-bch.png" width="80" height="80" alt="Timbre Banco Chile"></div></div><div class="row mb-15"><div class="col-xs-12"><h3 class="text-color-4">AceptaciÃ³n de la Oferta de Portabilidad Financiera</h3></div></div><div class="row pl-15 pr-15 mb-15"><h3 class="text-color-4">Detalle de operaciÃ³n</h3><div class="col-xs-12 pl-0 pr-0"><div class="row"><div class="col-sm-6 col-md-3 col-lg-3"><h6 class="text-color-4 mb-0">NÃºmero de solicitud</h6><p>{{ vm.detalleOperacion.numeroSolicitud }}</p></div><div class="col-sm-6 col-md-3 col-lg-3"><h6 class="text-color-4 mb-0">Estado de la solicitud</h6><p>Oferta {{ vm.detalleOperacion.estadoSolicitud }}</p></div><div class="col-sm-6 col-md-3 col-lg-3"><h6 class="text-color-4 mb-0">Canal</h6><p>Web</p></div><div class="col-sm-6 col-md-3 col-lg-3"><h6 class="text-color-4 mb-0">Proveedor inicial</h6><p>{{ vm.detalleOperacion.proveedorInicial }}</p></div></div></div></div><div class="row pl-15 pr-15" ng-if="vm.tieneRotativos"><h3 class="text-color-4">Detalle bloqueo de productos proveedor inicial</h3><p>Con la aceptaciÃ³n de la oferta de portabilidad financiera asociada a la solicitud de portabilidad NÂº {{ vm.detalleOperacion.numeroSolicitud }}, hemos procedido a solicitar a tu proveedor financiero inicial que bloquee tus actuales productos de crÃ©ditos rotativos, conforme a la ley 21.236.</p><div class="row"><div ng-repeat="producto in vm.comprobanteProductos"><div class="col-sm-3 col-md-3 col-lg-3 mb-10" ng-if="producto.producto == \'TARCRE\' || producto.producto === \'LINCRE\'"><h6 class="text-color-4 pb-5 mb-0">{{ producto.tipoProducto }}</h6><p class="mb-0" ng-if="producto.producto === \'TARCRE\'">****{{producto.detalleProductoCerrar.identificador.substr(producto.detalleProductoCerrar.identificador.length - 4) }} </p><p class="mb-0" ng-if="producto.producto === \'LINCRE\'">{{ producto.detalleProductoCerrar.identificador }}</p></div></div></div></div></div></div><div class="row"><div class="col-xs-12 padd-none text-right mb-15"><a class="a-link" ng-click="vm.descargarComprobante(); vm.registrarAccion(\'p_btn_oferta_present-of_pub_comprob-acep_portab\');">DESCARGAR COMPROBANTE</a></div><div class="col-xs-12 padd-none text-right"><button type="button" class="btn primary ml-0" ng-click="vm.registrarAccion(\'p_btn_oferta_present-of_pub_acep-ir-inicio_portab\');vm.redirigirABancoChile()" id="p_btn_oferta_present-of_pub_acep-ir-inicio_portab">IR A BANCOCHILE.CL</button></div></div></div></div></div>');
	}]), angular.module("portabilidad-financiera-publico/src/portabilidad-financiera-publico/ingreso-solicitud/ingreso-solicitud.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("portabilidad-financiera-publico/src/portabilidad-financiera-publico/ingreso-solicitud/ingreso-solicitud.tpl.html", '<div class="row comprobante pt-30 pb-30" ng-if="vm.mostrarErrorPreguntas"><div class="col-xs-12 text-center"><i class="icon-warning-outline i-warning-color"></i></div><div class="col-xs-12 pt-15 pb-10 text-center"><h3 class="title-comprobante-error">Al menos una de las respuestas ingresadas no es correcta</h3></div><div class="col-xs-12 pb-20 text-center"><p>Intenta nuevamente. Al tercer intento, se bloquearÃ¡ por 72 horas</p></div><div class="col-xs-12 justify-content-center mt-30 mb-30"><button type="button" class="btn default pt-15 pb-15 pl-30 pr-30" ui-sref="login-portabilidad-publico">REINTENTAR</button></div></div><div ng-if="vm.pasoUno && !vm.mostrarErrorPreguntas" class="mb-30 pb-30"><div class="container" ng-if="vm.responsePreguntas.url == \'ingresar-solicitud-portabilidad-publico\'"><div class="row pt-30 pb-30"><div class="col-xs-12 pt-15 pb-15 justify-content-center"><img src="assets/images/Logo_BCH.svg" alt="" srcset=""></div></div><div class="row mb-30 step-horizontal"><div class="col-xs-12 pt-10 pb-15 text-center"><h5 style="color: #0092ff !important">Paso 1 de 3 - ValidaciÃ³n Identidad</h5><p>PrÃ³ximo paso: Datos Personales</p></div><div class="col-xs-12 pb-20 justify-content-center"><div class="step step--active"></div><div class="step step--disabled"></div><div class="step step--disabled"></div></div></div></div><div class="container-fluid mb-30 card-shadow pl-20 pr-20" ng-if="true"><div class="row"><div class="col-xs-12"><h1 class="text-color-3 mb-20"><strong>Proceso de Portabilidad Financiera</strong></h1><h4 class="text-color-4"><strong>Para continuar necesitamos validar tu identidad, debes contestar correctamente las 3 preguntas que aparecen a continuaciÃ³n</strong></h4></div></div><div class="row mt-10 pl-15 pr-15"><div class="col-md-12 pl-0 pr-0"><div class="bch-mensaje-empresas information"><article><h5>Para esto ocupamos datos de Equifax. La informaciÃ³n no serÃ¡ usada ni guardada por Banco de Chile</h5></article></div></div></div><form name="vm.preguntasSeguridad"><div class="row mt-30 ml-5 mr-5"><div ng-repeat="(index, pregunta) in vm.responsePreguntas.preguntas"><div class="col-xs-12"><h5><strong>{{pregunta.textoPregunta}}</strong></h5><div class="row mt-30"><div class="col-xs-12"><div class="form-group"><div ng-repeat="opcion in pregunta.opciones"><label class="bch-custom-check radiobutton"><div><input type="radio" name="queryOption[{{index}}]" value="{{opcion.idOpcion}}" ng-model="vm.respuestas[pregunta.nroPregunta-1].opcion" ng-click="vm.agregaPregunta(pregunta, pregunta.nroPregunta-1)" ng-required="true"> <i></i></div><i></i> <span>{{opcion.textoOpcion}}</span></label><div class="col-xs-12 pl-0 pr-0 pt-15"></div></div></div></div></div></div><div class="col-xs-12 pl-0 pr-0 pt-15"><hr class="hr"></div></div><div class="row mt-30 mb-30 ml-5 mr-5"><div class="col-xs-12 justify-content-center"><button type="button" class="btn primary pt-15 pb-15 pl-30 pr-30" id="p_btn_solic_autentic-preg_pub_continuar_portab" ng-click="vm.validaPreguntas(); vm.registrarAccion(\'p_btn_solic_autentic-preg_pub_continuar_portab\');" ng-disabled="!vm.preguntasSeguridad.$valid || vm.preguntasEnviadas">CONTINUAR</button></div></div></div></form></div></div><div ng-if="vm.pasoDos" class="mb-30 pb-30" id="pasoDos"><div class="container"><div class="row pt-30 pb-30"><div class="col-xs-12 pt-15 pb-15 justify-content-center"><img src="assets/images/Logo_BCH.svg" alt="" srcset=""></div></div><div class="row mb-30 step-horizontal"><div class="col-xs-12 pt-10 pb-15 text-center"><h5 style="color: #0092ff !important">Paso 2 de 3 - Datos Personales</h5><p>PrÃ³ximo paso: Solicitud de Portabilidad</p></div><div class="col-xs-12 pb-20" style="display: flex; justify-content: center"><div class="step step--active"></div><div class="step step--active"></div><div class="step step--disabled"></div></div></div></div><div class="container-fluid mb-30 card-shadow pl-20 pr-20"><div class="row"><div class="col-xs-12"><h1 class="text-color-3 mb-20"><strong>Proceso de Portabilidad Financiera</strong></h1></div></div><form name="vm.dataCliente" novalidate autocomplete="off"><div class="row mt-30"><div class="col-xs-12"><h3 class="text-color-3"><strong>Datos Personales</strong></h3><div class="row mb-15 mt-15"><div class="form-group col-xs-6 col-lg-6"><label>Nombres</label><input type="text" ng-model="vm.nombres" class="form-control" placeholder="Nombres" tabindex="1" ng-required="true" name="nombreF" maxlength="30"> <small style="position: absolute" class="invalid" ng-if="vm.dataCliente.nombreF.$touched && vm.dataCliente.nombreF.$error.required"> {{vm.direccionInvalida.replace("campo", "Nombres")}} </small></div><div class="form-group col-xs-6 col-lg-6"><label>Apellido paterno</label><input type="text" ng-model="vm.apellidoPaterno" class="form-control" placeholder="Apellido paterno" tabindex="2" ng-required="true" name="apellidoPaternoF" maxlength="30"> <small style="position: absolute" class="invalid" ng-if="vm.dataCliente.apellidoPaternoF.$touched && vm.dataCliente.apellidoPaternoF.$error.required"> {{vm.direccionInvalida.replace("campo", "Apellido Paterno")}} </small></div></div><div class="row mb-15"><div class="form-group col-xs-6 col-lg-6"><label>Apellido materno</label><input type="text" ng-model="vm.apellidoMaterno" class="form-control" placeholder="Apellido materno" tabindex="3" ng-required="true" name="apellidoMaternoF" maxlength="30"> <small style="position: absolute" class="invalid" ng-if="vm.dataCliente.apellidoMaternoF.$touched && vm.dataCliente.apellidoMaternoF.$error.required"> {{vm.direccionInvalida.replace("campo", "Apellido Materno")}} </small></div><div class="form-group col-xs-6 col-lg-6"><label>Fecha de nacimiento</label><p class="input-group mb-0"><input type="text" ng-model="vm.fechaNacimiento" class="form-control" show-button-bar="false" datepicker-popup="dd/MM/yyyy" is-open="vm.mostrarDatepickerFechaNacimiento" datepicker-options="true" close-text="Cerrar" show-weeks="false" max-date="vm.hoyDia" min-date="vm.fechaMinima" datepicker-options="dateOptions" name="fechaNacimientoF" placeholder="01/01/1900" ng-click="vm.toggleMostrarDatepickerFechaNacimiento()" ng-required="true" tabindex="4" readonly="readonly"> <span class="input-group-btn"><button type="button" class="btn border" id="fechaNacimiento" name="fechaNacimiento" ng-click="vm.datepicker($event)"><i class="ion-calendar"></i></button></span></p><small style="position: absolute" class="invalid" ng-if="vm.dataCliente.fechaNacimientoF.$touched && vm.dataCliente.fechaNacimientoF.$error.required"> {{vm.direccionInvalida.replace("campo", "Fecha")}} </small></div></div><div class="row mb-15"><div class="form-group col-xs-6 col-lg-6"><label>Correo electrÃ³nico</label><input type="email" ng-model="vm.correoElectronico" class="form-control" placeholder="Correo electrÃ³nico" tabindex="5" ng-required="true" name="emailF" maxlength="40"> <small style="position: absolute" class="invalid" ng-if="vm.dataCliente.emailF.$touched && vm.dataCliente.emailF.$error.required"> {{vm.direccionInvalida.replace("campo", "Correo electrÃ³nico")}} </small><small style="position: absolute" class="invalid" ng-if="vm.dataCliente.emailF.$touched && vm.dataCliente.emailF.$error.email">Formato de mail incorrecto</small></div><div class="form-group col-xs-6 col-lg-6"><label>Celular</label><input type="text" ng-model="vm.telefonoCelular" class="form-control" placeholder="Celular" tabindex="6" ng-required="true" name="fonoF" ng-minlength="8" ng-maxlength="12" maxlength="12" ng-change="vm.esNumeroValido(vm.dataCliente.fonoF); vm.validaFono(vm.dataCliente.fonoF)"> <small style="position: absolute" class="invalid" ng-if="vm.dataCliente.fonoF.$touched && vm.dataCliente.fonoF.$error.required"> {{vm.direccionInvalida.replace("campo", "Celular")}} </small><small style="position: absolute" class="invalid" ng-if="((vm.dataCliente.fonoF.$error.minlength) && vm.dataCliente.fonoF.$dirty)">Ingresa nÃºmero vÃ¡lido</small></div></div></div><div class="col-xs-12"><h3 class="text-color-3"><strong>DirecciÃ³n o Domicilio</strong></h3><div class="row mb-15 mt-15"><div class="form-group col-xs-6 col-lg-6"><label>RegiÃ³n</label><ui-select ng-change="vm.obtieneCiudades(vm.solicitud.regionSel.id)" ng-model="vm.solicitud.regionSel" ng-required="true" name="regionF" tabindex="7"><ui-select-match placeholder="Seleccione..."> {{vm.solicitud.regionSel.regionHomologada}} </ui-select-match><ui-select-choices repeat="lista in vm.regiones"> {{lista.regionHomologada}} </ui-select-choices></ui-select><small style="position: absolute" class="invalid" ng-if="vm.dataCliente.regionF.$touched && vm.dataCliente.regionF.$error.required"> {{vm.direccionInvalida.replace("campo", "RegiÃ³n")}} </small></div><div class="form-group col-xs-6 col-lg-6"><label>Ciudad</label><ui-select ng-change="vm.obtieneComunas(vm.solicitud.ciudadSel.id)" ng-model="vm.solicitud.ciudadSel" ng-required="true" name="ciudadF" tabindex="8"><ui-select-match placeholder="Seleccione..."> {{vm.solicitud.ciudadSel.descripcion}} </ui-select-match><ui-select-choices repeat="lista in vm.ciudades"> {{lista.descripcion}} </ui-select-choices></ui-select><small style="position: absolute" class="invalid" ng-if="vm.dataCliente.ciudadF.$touched && vm.dataCliente.ciudadF.$error.required"> {{vm.direccionInvalida.replace("campo", "Ciudad")}} </small></div></div><div class="row mb-15"><div class="form-group col-xs-6 col-lg-6"><label>Comuna</label><ui-select ng-model="vm.solicitud.comunaSel" ng-required="true" name="comunaF" tabindex="9"><ui-select-match placeholder="Seleccione..."> {{vm.solicitud.comunaSel.descripcion}} </ui-select-match><ui-select-choices repeat="lista in vm.comunas"> {{lista.descripcion}} </ui-select-choices></ui-select><small style="position: absolute" class="invalid" ng-if="vm.dataCliente.comunaF.$touched && vm.dataCliente.comunaF.$error.required"> {{vm.direccionInvalida.replace("campo", "Comuna")}} </small></div><div class="form-group col-xs-6 col-lg-6"><label>Calle</label><input type="text" ng-model="vm.calle" class="form-control" placeholder="Calle" tabindex="10" ng-required="true" maxlength="25" name="calleF"> <small style="position: absolute" class="invalid" ng-if="vm.dataCliente.calleF.$touched && vm.dataCliente.calleF.$error.required"> {{vm.direccionInvalida.replace("campo", "Calle")}} </small></div></div><div class="row mb-15 flex-end"><div class="form-group col-xs-2 col-lg-2"><label>NÃºmero</label><input type="text" ng-model="vm.numeroCasa" class="form-control" placeholder="NÃºmero" tabindex="11" ng-required="true" name="numeroCasaF" maxlength="6"> <small style="position: absolute" class="invalid" ng-if="vm.dataCliente.numeroCasaF.$touched && vm.dataCliente.numeroCasaF.$error.required"> {{vm.direccionInvalida.replace("campo", "NÃºmero")}} </small></div><div class="form-group col-xs-4 col-lg-4"><label>Departamento u Oficina (Opcional)</label><input type="text" ng-model="vm.numeroDepartamento" class="form-control" placeholder="Departamento y Oficina (Opcional)" tabindex="12" maxlength="6"></div></div></div></div><div class="row pl-20 pr-20"><div class="col-xs-12 col-lg-12 mt-10 mb-30 pl-0"><label class="bch-custom-check"><div><input type="checkbox" ng-model="vm.checkActiva"> <i></i></div><span>Autorizo a Banco de Chile para usar, almacenar y tratar mis datos personales, con el objeto exclusivo de evaluar el otorgamiento de una o mÃ¡s productos indicados en la presente Solicitud de Portabilidad.</span></label></div></div><div class="row mt-30 mb-30 ml-5 mr-5"><div class="col-xs-12 justify-content-center"><button type="button" ng-disabled="!vm.checkActiva" class="btn primary pt-15 pb-15 pl-30 pr-30" id="p_btn_solic_ingres-dat-per_pub_continuar_portab" ng-click="vm.continuarPasoDos(); vm.registrarAccion(\'p_btn_solic_ingres-dat-per_pub_continuar_portab\');">CONTINUAR</button></div></div></form></div></div><div ng-if="vm.pasoTres" class="mb-30 pb-30"><div class="container"><div class="row pt-30 pb-30"><div class="col-xs-12 pt-15 pb-15 justify-content-center"><img src="assets/images/Logo_BCH.svg" alt="" srcset=""></div></div><div class="row mb-30 step-horizontal"><div class="col-xs-12 pt-10 pb-15 text-center"><h5 style="color: #0092ff !important">Paso 3 de 3 - Solicitud de Portabilidad</h5></div><div class="col-xs-12 pb-20 justify-content-center"><div class="step step--active"></div><div class="step step--active"></div><div class="step step--active"></div></div></div></div><div class="container-fluid mb-30 card-shadow pl-20 pr-20" ng-if="true"><div class="row"><div class="col-xs-12"><h1 class="text-color-3 mb-20"><strong>Solicitud de portabilidad</strong></h1></div></div><div class="row mt-10 pl-15 pr-15"><div class="card-info mb-30 col-xs-12 pr-25 pl-25"><h4 class="text-color-3 pt-20"><strong>Datos de la solicitud</strong></h4><div class="row pt-10 display-flex"><div class="col-xs-3 col-lg-3"><p class="text-color-4">Nombre Solicitante</p><p>{{ vm.nombres + " " + vm.apellidoPaterno + " " + vm.apellidoMaterno }}</p></div><div class="col-xs-3 col-lg-3"><p class="text-color-4 mb-0">Rut Solicitante</p><p>{{vm.rutFormatoCliente}}</p></div><div class="col-xs-3 col-lg-3" ng-if="vm.direccionIngresadaPorUsuario"><p class="text-color-4">Domicilio</p><p>{{ vm.calle + " " + vm.homeNumber + " " + vm.numeroDepartamento }}</p><p>{{ vm.solicitud.comunaSel + ", " +  vm.solicitud.regionSel }}</p></div><div class="col-xs-3 col-lg-3" ng-if="!vm.direccionIngresadaPorUsuario"><p class="text-color-4">Domicilio</p><p>{{ vm.calle + " " + vm.homeNumber + " " + vm.numeroDepartamento }}</p><p>{{ vm.solicitud.comunaSel.descripcion + ", " +  vm.solicitud.regionSel.regionHomologada }}</p></div><div class="col-xs-3 col-lg-3"><p class="text-color-4">Fecha solicitud</p><p>{{ vm.fechaSolicitud | date:\'dd/MM/yyyy\'}} </p></div></div><h4 class="text-color-3 pt-20"><strong>Datos de contacto</strong></h4><div class="row pt-10 display-flex"><div class="col-xs-3 col-lg-3"><p class="text-color-4">Correo electrÃ³nico</p><p>{{ vm.correoElectronico }}</p></div><div class="col-xs-3 col-lg-3"><p class="text-color-4">Celular</p><p>{{ vm.telefonoCelular }}</p></div></div><h4 class="text-color-3 pt-20"><strong>Datos Banco de Chile</strong></h4><div class="row pt-10 pb-15 display-flex"><div class="col-xs-3 col-lg-3"><p class="text-color-4">Rut Banco</p><p>{{ vm.rutBancoChile }}</p></div><div class="col-xs-3 col-lg-3"><p class="text-color-4">RazÃ³n Social Banco</p><p>{{ vm.razonSocialBanco }}</p></div></div></div><div class="col-xs-12 pt-10 pb-10 pl-0 pr-0"><h5>IndÃ­canos desde quÃ© proveedor te quieres portar, quÃ© productos quieres cerrar y cuÃ¡les son los productos que quieres contratar con nosotros.</h5></div><div class="col-xs-12 pl-0 pr-0"><div class="bch-mensaje-empresas information"><article><h5>Debes ingresar solo una solicitud por cada proveedor inicial.</h5></article></div></div></div><div class="row ml-15 pt-30 pb-30"><div class="col-12"><section class="steps"><form name="vm.pForm" novalidate autocomplete="off"><article class="step done" data-step="1"><h3 class="text-color-3"><strong>Datos del proveedor inicial</strong></h3><p>Selecciona el proveedor desde el cual te quieres portar:</p><div class="row mb-30 mt-15"><div class="col-xs-12"><div class="row"><div class="form-group col-xs-6 col-lg-6"><label>Tipo de proveedor</label><ui-select ng-change="vm.getProveedores(vm.solicitud.tipoProveedor);" ng-model="vm.solicitud.tipoProveedor" ng-disabled="!vm.tiposProveedor.length" ng-required="true" name="tipoProveedor"><ui-select-match placeholder="Seleccione..."> {{$select.selected}} </ui-select-match><ui-select-choices repeat="tipoProveedor in vm.tiposProveedor"> {{tipoProveedor}} </ui-select-choices></ui-select><small style="position: absolute" class="invalid" ng-if="vm.pForm.tipoProveedor.$touched && vm.pForm.tipoProveedor.$error.required"> {{vm.direccionInvalida.replace("campo", "Tipo de proveedor")}} </small></div><div class="form-group col-xs-6 col-lg-6"><label>Nombre del proveedor</label><ui-select ng-change="vm.validarProveedor(vm.proveedor); vm.validateStep1()" ng-model="vm.proveedor" ng-disabled="!vm.proveedores.length || !vm.solicitud.tipoProveedor" name="proveedor" ng-required="true"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices repeat="proveedor in vm.proveedores"> {{proveedor.descripcion}} </ui-select-choices></ui-select><small style="position: absolute" class="invalid" ng-if="vm.pForm.proveedor.$touched && vm.pForm.proveedor.$error.required"> {{vm.direccionInvalida.replace("campo", "Nombre de proveedor")}} </small></div><div class="form-group col-xs-6 col-lg-6 mt-5"><label>Sitio web</label><input type="text" class="form-control" tabindex="1" ng-change="vm.validateStep1()" ng-disabled="true" ng-model="vm.solicitud.sitioWeb" placeholder="www.nombreproveedor.cl" name="sitioWeb" maxlength="67" ng-required="true"> <small style="position: absolute" class="invalid" ng-if="vm.pForm.sitioWeb.$touched && vm.pForm.sitioWeb.$error.required"> {{vm.direccionInvalida.replace("campo", "un Sitio web vÃ¡lido")}} </small></div></div><div ng-if="vm.portabilidadIngresadaConEseProveedor" class="row"><div class="col-md-12 pl-15 pr-15 pb-15"><div class="bch-mensaje-empresas information"><article><p>Ya tienes una solicitud de portabilidad ingresada para ese proveedor. Puedes seleccionar otro o si deseas modificar la solicitud ingresada, contÃ¡ctate directamente con el ejecutivo asignado o llama a nuestra Banca telefÃ³nica al 600 637 3737.</p></article></div></div></div></div></div></article><article class="step done" data-step="2" ng-class="{disabled : vm.deshabilitapasodos}"><h3 class="text-color-3"><strong>Productos a cerrar en proveedor inicial</strong></h3><p>Si quieres cerrar todos los productos de un mismo tipo, selecciona los campos "Tipo de Producto", "Producto=Todo(a)s" y agrÃ©galo. Para cerrar productos especÃ­ficos, debes individualizarlos completando los campos requeridos (Identificador, Cupo, si aplica)</p><div class="row mb-30 mt-15"><div class="col-xs-12"><div class="row"><div class="form-group col-xs-6 col-lg-6"><label>Tipo de producto</label><ui-select name="tipoProducto" ng-model="vm.tipoProductoCerrar" ng-disabled="vm.productosTodos" ng-change="vm.productosPorTipo()" ng-required="true"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcionFamilia}} </ui-select-match><ui-select-choices repeat="tipoProducto in vm.categoriaProductos"> {{tipoProducto.descripcionFamilia}} </ui-select-choices></ui-select><small class="invalid" ng-if="vm.pForm.tipoProducto.$touched && vm.pForm.tipoProducto.$error.required"> {{vm.direccionInvalida.replace("campo", "Tipo de producto")}} </small></div><div class="form-group col-xs-6 col-lg-6"><label>Producto</label><ui-select ng-if="!vm.tipoProductoOtros" name="producto" ng-model="vm.productoCerrar" ng-change="vm.validateStep2(vm.productoCerrar.codigoProducto)" ng-disabled="!vm.productosCerrar.length || !vm.tipoProductoCerrar" ng-required="true"><ui-select-match placeholder="Seleccione..."> {{$select.selected.descripcion}} </ui-select-match><ui-select-choices repeat="producto in vm.productosCerrar"> {{producto.descripcion}} </ui-select-choices></ui-select><small class="invalid" ng-if="vm.pForm.producto.$touched && vm.pForm.producto.$error.required"> {{vm.direccionInvalida.replace("campo", "un Producto")}} </small></div></div><div class="row"><div class="form-group col-xs-6 col-lg-6" ng-if="vm.productoCerrar.codigoProducto.startsWith(\'CTA\')"><label>Ãšltimos 6 dÃ­gitos del nÃºmero de {{ vm.productoCerrar.descripcion }}</label><input type="text" maxlength="6" ng-pattern="/^[0-9]{6}$/" name="digitoCuenta" class="form-control ng-valid" placeholder="DÃ­gitos" ng-model="vm.productoCerrar.digitoCuenta"> <small style="position: absolute" class="invalid" ng-if="vm.pForm.digitoCuenta.$touched && vm.pForm.digitoCuenta.$error.pattern"> {{vm.formatoInvalido}} </small></div><div class="form-group col-xs-6 col-lg-6" ng-if="vm.productoCerrar.codigoProducto.startsWith(\'CRE\')"><label>Ãšltimos 6 dÃ­gitos del nÃºmero de {{ vm.productoCerrar.descripcion }}</label><input type="text" maxlength="6" ng-pattern="/^[0-9]{6}$/" name="digitoCuentaCre" class="form-control ng-valid" placeholder="DÃ­gitos" ng-required="vm.productoCerrar.codigoProducto===\'CREOTR\'" ng-model="vm.productoCerrar.digitoCuenta" ng-change="vm.validarDigitoCre(vm.productoCerrar.codigoProducto)"> <small style="position: absolute" class="invalid" ng-if="vm.pForm.digitoCuentaCre.$touched && vm.pForm.digitoCuentaCre.$error.pattern"> {{vm.formatoInvalido}} </small><small style="position: absolute" class="invalid" ng-if="(vm.pForm.digitoCuentaCre.$touched || vm.pForm.digitoCuentaCre.$dirty) && vm.pForm.digitoCuentaCre.$error.required"> {{vm.direccionInvalida.replace("campo", "Ãºltimos 6 dÃ­gitos")}} </small></div><div class="form-group col-xs-3 col-lg-3" ng-if="vm.productoCerrar.codigoProducto === \'TARCRE\'"><label>Marca</label><input type="text" name="marca" ng-change="vm.checkCompromisoIsValid(vm.productoCerrar.codigoProducto)" class="form-control ng-valid" placeholder="Marca" ng-model="vm.productoCerrar.marca" ng-required="vm.productoCerrar.codigoProducto === \'TARCRE\' && vm.productoCerrar.compromisoNoEndeudar === \'Si\'"> <small style="position: absolute" class="invalid" ng-if="vm.pForm.marca.$touched && vm.pForm.marca.$error.required"> {{vm.direccionInvalida.replace("campo", "marca")}} </small></div><div class="form-group col-xs-3 col-lg-3" ng-if="vm.productoCerrar.codigoProducto === \'TARCRE\'"><label>Ãšltimos 4 dÃ­gitos</label><input type="text" ng-pattern="/^[0-9]{4}$/" maxlength="4" name="digitos" class="form-control ng-valid" placeholder="DÃ­gitos tarjeta" ng-change="vm.checkCompromisoIsValid(vm.productoCerrar.codigoProducto)" ng-model="vm.productoCerrar.ultimosDigitos" ng-required="vm.productoCerrar.codigoProducto === \'TARCRE\' && vm.productoCerrar.compromisoNoEndeudar === \'Si\'"> <small style="position: absolute" class="invalid" ng-if="vm.pForm.digitos.$touched && vm.pForm.digitos.$error.required"> {{vm.direccionInvalida.replace("campo", "los Ãºltimos 4 dÃ­gitos del nÃºmero de Tarjeta de CrÃ©dito")}} </small><small style="position: absolute" class="invalid" ng-if="vm.pForm.digitos.$touched && vm.pForm.digitos.$error.pattern"> {{vm.formatoInvalido}} </small></div><div class="form-group col-xs-6 col-lg-6" ng-if="vm.productoCerrar.codigoProducto === \'LINCRE\' || vm.productoCerrar.codigoProducto === \'OTRO\'"><label>Ãšltimos 6 dÃ­gitos del nÃºmero de {{vm.productoCerrar.descripcion}}</label><input type="text" maxlength="6" ng-pattern="/^[0-9]{6}$/" name="numeroCuenta" ng-change="vm.checkCompromisoIsValid(vm.productoCerrar.codigoProducto)" class="form-control ng-valid" ng-model="vm.productoCerrar.numeroCuenta" ng-required="(vm.productoCerrar.codigoProducto === \'LINCRE\' || vm.productoCerrar.codigoProducto === \'OTRO\') && vm.productoCerrar.compromisoNoEndeudar === \'Si\'"> <small style="position: absolute" class="invalid" ng-if="vm.pForm.numeroCuenta.$touched && vm.pForm.numeroCuenta.$error.required"> {{vm.direccionInvalida.replace("campo", "los Ãºltimos 6 dÃ­gitos")}} del nÃºmero de {{vm.productoCerrar.descripcion}} </small><small style="position: absolute" class="invalid" ng-if="vm.pForm.numeroCuenta.$touched && vm.pForm.numeroCuenta.$error.pattern"> {{vm.formatoInvalido}} </small></div><div class="form-group col-xs-2 col-lg-2" ng-if="vm.productoCerrar.codigoProducto === \'TARCRE\' || vm.productoCerrar.codigoProducto === \'LINCRE\' "><label>Moneda</label><ui-select class="ng-valid" ng-required="vm.productoCerrar.codigoProducto === \'TARCRE\' || vm.productoCerrar.codigoProducto === \'LINCRE\'" ng-model="vm.moneda" ng-change="vm.resetCupoAutorizado()"><ui-select-match> {{$select.selected}} </ui-select-match><ui-select-choices repeat="moneda in vm.monedasV2"> {{moneda}} </ui-select-choices></ui-select><small class="invalid"></small></div><div class="form-group col-xs-4 col-lg-4" ng-if="(vm.productoCerrar.codigoProducto === \'LINCRE\' || vm.productoCerrar.codigoProducto === \'TARCRE\') && vm.showCLP"><label>Cupo autorizado</label><input type="text" maxlength="10" format-number name="cupoAutorizado" class="form-control ng-valid" placeholder="Cupo autorizado" ng-change="vm.checkCompromisoIsValid(vm.productoCerrar.codigoProducto); vm.cupoMayorCompromiso()" ng-model="vm.productoCerrar.cupoAutorizado" ng-required="(vm.productoCerrar.codigoProducto === \'LINCRE\' || vm.productoCerrar.codigoProducto === \'TARCRE\') && vm.productoCerrar.compromisoNoEndeudar === \'Si\'"> <small style="position: absolute" class="invalid" ng-if="vm.pForm.cupoAutorizado.$touched && vm.pForm.cupoAutorizado.$error.pattern"> {{vm.formatoInvalido}} </small><small style="position: absolute" class="invalid" ng-if="(vm.moneda===\'CLP\' && vm.pForm.cupoAutorizado.$touched && vm.pForm.cupoAutorizado.$error.required) || vm.errorMensajeRequiredCLP"> {{vm.direccionInvalida.replace("campo", "cupo autorizado")}} </small><small style="position: absolute" class="invalid" ng-if="vm.moneda===\'CLP\' && !vm.productoSelected3 && !vm.pForm.cupoAutorizado.$error.required">Cupo autorizado no puede ser menor que compromiso cupo a utilizar.</small></div><div class="form-group col-xs-4 col-lg-4" ng-if="(vm.productoCerrar.codigoProducto === \'LINCRE\' || vm.productoCerrar.codigoProducto === \'TARCRE\') && vm.showUSD"><label>Cupo autorizado</label><input type="text" maxlength="10" format-number="2" name="cupoAutorizado" class="form-control ng-valid" placeholder="Cupo autorizado" ng-change="vm.checkCompromisoIsValid(vm.productoCerrar.codigoProducto); vm.cupoMayorCompromiso()" ng-model="vm.productoCerrar.cupoAutorizado" ng-required="(vm.productoCerrar.codigoProducto === \'LINCRE\' || vm.productoCerrar.codigoProducto === \'TARCRE\') && vm.productoCerrar.compromisoNoEndeudar === \'Si\'"> <small style="position: absolute" class="invalid" ng-if="vm.pForm.cupoAutorizado.$touched && vm.pForm.cupoAutorizado.$error.pattern"> {{vm.formatoInvalido}} </small><small style="position: absolute" class="invalid" ng-if="(vm.moneda===\'USD\' && vm.pForm.cupoAutorizado.$touched && vm.pForm.cupoAutorizado.$error.required) || vm.errorMensajeRequiredUSD"> {{vm.direccionInvalida.replace("campo", "cupo autorizado")}} </small><small style="position: absolute" class="invalid" ng-if="vm.moneda===\'USD\' && !vm.productoSelected3 && !vm.pForm.cupoAutorizado.$error.required">Cupo autorizado no puede ser menor que compromiso cupo a utilizar.</small></div></div></div></div><div class="row pb-15" ng-if="vm.productoCerrar.codigoProducto === \'LINCRE\' || vm.productoCerrar.codigoProducto === \'TARCRE\'"><div class="col-xs-12 col-lg-12"><label class="bch-custom-check" id="p_check_solic_cierreprod_pub_compromiso_portab"><div><input name="checkboxCerrar" ng-click="vm.cleanCompromisoUtilizar(); vm.registrarAccion(\'p_check_solic_cierreprod_pub_compromiso_portab\');" type="checkbox" ng-true-value="\'Si\'" ng-false-value="\'No\'" ng-change="vm.cleanCompromisoUtilizar()" ng-model="vm.productoCerrar.compromisoNoEndeudar"> <i></i></div><span>{{vm.compromisoNoEndeudamiento}}</span></label></div></div><div class="row pt-15" ng-if="vm.productoCerrar.compromisoNoEndeudar === \'Si\'"><div ng-if="vm.moneda ===\'CLP\'" class="form-group col-xs-6 col-lg-6"><label>Compromiso cupo a utilizar</label><input type="text" name="cupoUtilizar" maxlength="10" class="form-control ng-valid" placeholder="Compromiso cupo a utilizar" ng-change="vm.validarCupoAutorizado(); vm.compromisoMenorAlCupo()" ng-required="vm.productoCerrar.compromisoNoEndeudar === \'Si\'" ng-model="vm.productoCerrar.compromisoCupoUtilizar" format-number> <small style="position: absolute" class="invalid" ng-if="vm.errorCompromisoUtilizar"> {{vm.direccionInvalida.replace("campo", "Compromiso cupo a utilizar")}} </small><small style="position: absolute" class="invalid" ng-if="!vm.productoSelected2 && !vm.errorCompromisoUtilizar">Compromiso cupo a utilizar no puede ser mayor que el cupo autorizado.</small></div><div ng-if="vm.moneda ===\'USD\'" class="form-group col-xs-6 col-lg-6"><label>Compromiso cupo a utilizar</label><input type="text" name="cupoUtilizar" maxlength="10" class="form-control ng-valid" placeholder="Compromiso cupo a utilizar" ng-change="vm.validarCupoAutorizado(); vm.compromisoMenorAlCupo()" ng-required="vm.productoCerrar.compromisoNoEndeudar === \'Si\'" ng-model="vm.productoCerrar.compromisoCupoUtilizar" format-number="2"> <small style="position: absolute" class="invalid" ng-if="vm.errorCompromisoUtilizar"> {{vm.direccionInvalida.replace("campo", "Compromiso cupo a utilizar")}} </small><small style="position: absolute" class="invalid" ng-if="!vm.productoSelected2 && !vm.errorCompromisoUtilizar">Compromiso cupo a utilizar no puede ser mayor que el cupo autorizado.</small></div></div><div class="row mb-30 pr-15"><div class="col-12" style="display: flex; justify-content: flex-end !important"><button type="button" class="btn info" ng-disabled="!vm.productoSelected" id="p_btn_solic_cierreprod_pub_cancel_portab" ng-click="vm.cleanProducto(); vm.registrarAccion(\'p_btn_solic_cierreprod_pub_cancel_portab\');">CANCELAR</button> <button type="button" class="btn primary" ng-disabled="!vm.productoSelected || !vm.productoSelected2 || !vm.productoSelected3" id="p_btn_solic_cierreprod_pub_agregar_porta" ng-click="vm.agregarProductoCerrar(); vm.registrarAccion(\'p_btn_solic_cierreprod_pub_agregar_porta\');"><i class="ion-android-add"></i> AGREGAR PRODUCTO</button></div></div><div class="row pl-15 pr-15 mb-30" ng-if="vm.productosCerrarSolicitud.length > 0"><h5><strong>Resumen de productos a cerrar</strong></h5><div ng-repeat="(index, producto) in vm.productosCerrarSolicitud"><div class="card-info col-xs-12 col-lg-12 mt-15" ng-if="producto.tipoProducto === \'OTRO\'"><div class="row display-flex"><div class="col-xs-10 col-lg-8"><div class="row pt-5 pb-5"><div class="col-xs-3"><p>Otros productos</p></div><div class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.nombreProductoOtros.length>0" class="text-bold"> {{producto.detalleProductoCerrar.nombreProductoOtros}}</p><p ng-if="producto.detalleProductoCerrar.numeroCuenta.length>0" class="text-bold">****{{producto.detalleProductoCerrar.numeroCuenta}}</p></div></div></div><div class="col-xs-2 col-lg-4 delete-card" ng-click="vm.eliminarProducto(index, producto.familia, producto.producto)"><a class="a-link">ELIMINAR</a></div></div></div><div class="card-info col-xs-12 col-lg-12 mt-15" ng-if="producto.tipoProducto.substr(0,3) === \'CRE\'"><div class="row display-flex"><div class="col-xs-10 col-lg-8"><div class="row pt-5 pb-5"><div ng-if="producto.producto != \'Otros\'" class="col-xs-3"><p>{{producto.producto}}</p></div><div ng-if="producto.producto ===\'Otros\'" class="col-xs-3"><p>Otros Creditos</p></div><div class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.digitoCuenta.length>0" class="text-bold">****{{producto.detalleProductoCerrar.digitoCuenta}}</p></div></div></div><div class="col-xs-2 col-lg-4 delete-card" ng-click="vm.eliminarProducto(index, producto.familia, producto.producto)"><a class="a-link">ELIMINAR</a></div></div></div><div class="card-info col-xs-12 col-lg-12 mt-15" ng-if="producto.tipoProducto.includes(\'CTA\')"><div class="row display-flex"><div class="col-xs-10 col-lg-8"><div class="row pt-5 pb-5"><div class="col-xs-3"><p>{{producto.producto}}</p></div><div class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.digitoCuenta.length>0" class="text-bold">****{{producto.detalleProductoCerrar.digitoCuenta}}</p></div></div></div><div class="col-xs-2 col-lg-4 delete-card" ng-click="vm.eliminarProducto(index, producto.familia, producto.producto)"><a class="a-link">ELIMINAR</a></div></div></div><div class="card-info col-xs-12 col-lg-12 mt-15" ng-if="producto.tipoProducto === \'LINCRE\'"><div class="row display-flex"><div class="col-xs-10 col-lg-8"><div class="row pt-5 pb-5"><div class="col-xs-3"><p>{{producto.producto}}</p></div><div class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.numeroCuenta.length>0" class="text-bold">****{{producto.detalleProductoCerrar.numeroCuenta}}</p></div><div class="col-xs-3"><p>Compromiso deuda</p></div><div class="col-xs-3 text-right"><p class="text-bold"> {{ producto.detalleProductoCerrar.compromisoNoEndeudar }} </p></div></div><div class="row pt-5 pb-5"><div class="col-xs-3"><p>Cupo autorizado</p></div><div ng-if="producto.detalleProductoCerrar.moneda === \'CLP\'" class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.cupoAutorizado >= 0" class="text-bold">${{producto.detalleProductoCerrar.cupoAutorizado | number }} </p></div><div ng-if="producto.detalleProductoCerrar.moneda === \'USD\'" class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.cupoAutorizado >= 0" class="text-bold">USD {{producto.detalleProductoCerrar.cupoAutorizado | number:2 }} </p></div><div class="col-xs-3"><p>Cupo comprometido</p></div><div ng-if="producto.detalleProductoCerrar.moneda === \'CLP\'" class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.compromisoCupoUtilizar" class="text-bold">${{producto.detalleProductoCerrar.compromisoCupoUtilizar | number }} </p></div><div ng-if="producto.detalleProductoCerrar.moneda === \'USD\'" class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.compromisoCupoUtilizar" class="text-bold">USD {{producto.detalleProductoCerrar.compromisoCupoUtilizar | number:2 }} </p></div></div></div><div class="col-xs-2 col-lg-4 delete-card" ng-click="vm.eliminarProducto(index, producto.familia, producto.producto)"><a class="a-link">ELIMINAR</a></div></div></div><div class="card-info col-xs-12 col-lg-12 mt-15" ng-if="producto.tipoProducto === \'TARCRE\'"><div class="row display-flex"><div class="col-xs-10 col-lg-8"><div class="row pt-5 pb-5"><div class="col-xs-3"><p>Tarjeta de crÃ©dito</p></div><div class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.marca.length>0" class="text-bold"> {{producto.detalleProductoCerrar.marca}}</p><p ng-if="producto.detalleProductoCerrar.identificador.length>0" class="text-bold">****{{producto.detalleProductoCerrar.identificador}}</p></div><div class="col-xs-3"><p>Compromiso deuda</p></div><div class="col-xs-3 text-right"><p class="text-bold"> {{ producto.detalleProductoCerrar.compromisoNoEndeudar }} </p></div></div><div class="row pt-5 pb-5"><div class="col-xs-3"><p>Cupo autorizado</p></div><div ng-if="producto.detalleProductoCerrar.moneda === \'CLP\'" class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.cupoAutorizado >= 0" class="text-bold">${{producto.detalleProductoCerrar.cupoAutorizado | number }} </p></div><div ng-if="producto.detalleProductoCerrar.moneda === \'USD\'" class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.cupoAutorizado >= 0" class="text-bold">USD {{producto.detalleProductoCerrar.cupoAutorizado | number:2 }} </p></div><div class="col-xs-3"><p>Cupo comprometido</p></div><div ng-if="producto.detalleProductoCerrar.moneda === \'CLP\'" class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.compromisoCupoUtilizar" class="text-bold">${{producto.detalleProductoCerrar.compromisoCupoUtilizar | number }} </p></div><div ng-if="producto.detalleProductoCerrar.moneda === \'USD\'" class="col-xs-3 text-right"><p ng-if="producto.detalleProductoCerrar.compromisoCupoUtilizar" class="text-bold">USD {{producto.detalleProductoCerrar.compromisoCupoUtilizar | number:2 }} </p></div></div></div><div class="col-xs-2 col-lg-4 delete-card" ng-click="vm.eliminarProducto(index, producto.familia, producto.producto)"><a class="a-link">ELIMINAR</a></div></div></div><div class="card-info col-xs-12 col-lg-12 mt-15" ng-if="producto.familia === \'Cuenta\' && producto.producto === \'Todas\' "><div class="row display-flex"><div class="col-xs-10 col-lg-8"><div class="row pt-5 pb-5"><div class="col-xs-3"><p>{{producto.familia}}</p></div><div class="col-xs-3 text-right"><p class="text-bold"> {{producto.producto}}</p></div></div></div><div class="col-xs-2 col-lg-4 delete-card" ng-click="vm.eliminarProducto(index, producto.familia, producto.producto)"><a class="a-link">ELIMINAR</a></div></div></div><div class="card-info col-xs-12 col-lg-12 mt-15" ng-if="producto.familia==\'Creditos\' && producto.producto==\'Todos\' "><div class="row display-flex"><div class="col-xs-10 col-lg-8"><div class="row pt-5 pb-5"><div class="col-xs-3"><p>{{producto.familia}}</p></div><div class="col-xs-3 text-right"><p class="text-bold"> {{producto.producto}}</p></div></div></div><div class="col-xs-2 col-lg-4 delete-card" ng-click="vm.eliminarProducto(index, producto.familia, producto.producto)"><a class="a-link">ELIMINAR</a></div></div></div><div class="card-info col-xs-12 col-lg-12 mt-15" ng-if="producto.familia==\'Todos los Productos\'"><div class="row display-flex"><div class="col-xs-10 col-lg-8"><div class="row pt-5 pb-5"><div class="col-xs-3"><p>{{producto.familia}}</p></div><div class="col-xs-3 text-right"><p class="text-bold"> {{producto.producto}}</p></div></div></div><div class="col-xs-2 col-lg-4 delete-card" ng-click="vm.eliminarProducto(index, producto.familia, producto.producto)"><a class="a-link">ELIMINAR</a></div></div></div><div class="card-info col-xs-12 col-lg-12 mt-15" ng-if="producto.familia ==\'Tarjetas y LÃ­neas de CrÃ©dito\'"><div class="row display-flex"><div class="col-xs-10 col-lg-8"><div class="row pt-5 pb-5"><div class="col-xs-3"><p>{{producto.familia}}</p></div><div class="col-xs-3 text-right"><p class="text-bold"> {{producto.producto}}</p></div></div></div><div class="col-xs-2 col-lg-4 delete-card" ng-click="vm.eliminarProducto(index, producto.familia, producto.producto)"><a class="a-link">ELIMINAR</a></div></div></div></div></div><div class="row mb-30 pl-15 pr-15" ng-if="true"><div class="col-12" style="display: flex; justify-content: flex-end !important"><button type="button" class="btn info" ng-disabled="vm.productosCerrarSolicitud.length == 0" id="p_btn_solic_cierreprod_pub_continuar_portab" ng-click="vm.checkProductosCerrar(); vm.registrarAccion(\'p_btn_solic_cierreprod_pub_continuar_portab\');">CONTINUAR</button></div></div></article><article class="step done" data-step="3" ng-class="{disabled : vm.deshabilitapasotres|| vm.deshabilitapasodos}"><h3 class="text-color-3"><strong>Productos a contratar</strong></h3><p class="pb-15">Si la contrataciÃ³n del nuevo producto es para el pago de una deuda vigente con el proveedor inicial, puedes informar el monto y plazo del producto a contratar (si corresponde), en caso contrario, se considerarÃ¡ el plazo residual y el monto de la deuda vigente con el proveedor inicial.</p><div class="row" ng-repeat="producto in vm.productosContratarSeleccion"><div class="col-xs-12"><div class="form-group"><label class="bch-custom-check"><div><input type="checkbox" ng-change="vm.agregaProductoContratar($index, producto,vm.productosContratar[$index].check)" ng-model="vm.productosContratar[$index].check"> <i></i></div><span>{{producto.descripcion}}</span></label></div></div><div ng-if="vm.productosContratar[$index].check"><div class="col-xs-12 ml-25" ng-if="!producto.codigoProducto.includes(\'CTA\')"><p class="pb-15">Â¿Solicita este producto para pagar una deuda vigente con el proveedor inicial?</p><div class="row pl-20 pr-20 pb-15 flex-center h-80"><div class="form-group radio-inline flex-center pl-0 h-80"><label class="bch-custom-check radiobutton"><div><input type="radio" name="radioSet[{{$index}}]" ng-value="true" ng-model="vm.productosContratar[$index].pagaDeuda"> <i></i></div><span>SÃ­</span></label></div><div class="form-group radio-inline flex-center h-80"><label class="bch-custom-check radiobutton"><div><input type="radio" name="radioSet[{{$index}}]" ng-value="false" ng-model="vm.productosContratar[$index].pagaDeuda" ng-click="vm.cleanInputContratar($index,producto)"> <i></i></div><span>No</span></label></div><div class="form-group inline-block ml-30 mr-15 w-90 pb-15" ng-if="!producto.codigoProducto.includes(\'CTA\') && producto.codigoProducto != \'TARCRE\' && producto.codigoProducto != \'LINCRE\'"><label ng-if="vm.productosContratar[$index].pagaDeuda">Moneda</label><ui-select ng-if="vm.productosContratar[$index].pagaDeuda" ng-model="vm.productosContratar[$index].moneda" name="monedaF{{$index}}" ng-change="vm.limpiaComboProdContratarCreditos($index)"><ui-select-match placeholder="Moneda"> {{$select.selected}} </ui-select-match><ui-select-choices repeat="moneda in vm.monedas"> {{moneda}} </ui-select-choices></ui-select></div><div class="form-group inline-block ml-30 mr-15 w-90 pb-15" ng-if="producto.codigoProducto === \'LINCRE\'"><label ng-if="vm.productosContratar[$index].pagaDeuda">Moneda</label><ui-select ng-if="vm.productosContratar[$index].pagaDeuda" ng-model="vm.productosContratar[$index].moneda" name="monedaF{{$index}}" ng-change="vm.limpiaComboProdContratar($index)"><ui-select-match placeholder="Moneda"> {{$select.selected}} </ui-select-match><ui-select-choices repeat="moneda in vm.monedaCLP"> {{moneda}} </ui-select-choices></ui-select></div><div class="form-group inline-block ml-30 mr-15 w-90 pb-15" ng-if="!producto.codigoProducto.includes(\'CTA\') && producto.codigoProducto === \'TARCRE\'"><label ng-if="vm.productosContratar[$index].pagaDeuda">Moneda</label><ui-select ng-if="vm.productosContratar[$index].pagaDeuda" ng-model="vm.productosContratar[$index].moneda" name="monedaF2{{$index}}" ng-change="vm.limpiaComboProdContratar($index)"><ui-select-match placeholder="Moneda"> {{$select.selected}} </ui-select-match><ui-select-choices repeat="moneda2 in vm.monedasV2"> {{moneda2}} </ui-select-choices></ui-select></div><div class="form-group inline-block ml-15 w-150 pb-15" ng-if="producto.codigoProducto === \'TARCRE\' || producto.codigoProducto === \'LINCRE\'"><div ng-if="vm.productosContratar[$index].moneda === \'CLP\' "><label ng-if="vm.productosContratar[$index].pagaDeuda">Cupo solicitado</label><input type="text" format-number class="form-control" maxlength="15" ng-if="vm.productosContratar[$index].pagaDeuda" ng-model="vm.productosContratar[$index].monto" placeholder="Cupo solicitado" name="montoF{{$index}}"></div><div ng-if="vm.productosContratar[$index].moneda === \'USD\' "><label ng-if="vm.productosContratar[$index].pagaDeuda">Cupo solicitado</label><input type="text" format-number="2" class="form-control" maxlength="10" ng-if="vm.productosContratar[$index].pagaDeuda" ng-model="vm.productosContratar[$index].monto" placeholder="Cupo solicitado" name="montoF{{$index}}"></div></div><div class="form-group inline-block ml-15 mr-15 w-150 pb-15" ng-if="producto.codigoProducto.substr(0,3) == \'CRE\'"><label ng-if="vm.productosContratar[$index].pagaDeuda">Monto solicitado</label><input type="text" format-number class="form-control" maxlength="15" ng-if="vm.productosContratar[$index].pagaDeuda" ng-model="vm.productosContratar[$index].monto" placeholder="Monto solicitado" name="montoF{{$index}}"></div><div class="form-group inline-block ml-15 w-150 pb-15" ng-if="producto.codigoProducto.substr(0,3) == \'CRE\'"><label ng-if="vm.productosContratar[$index].pagaDeuda">Meses plazo</label><input type="text" class="form-control" format-number maxlength="3" ng-if="vm.productosContratar[$index].pagaDeuda" ng-model="vm.productosContratar[$index].meses" placeholder="Meses plazo" name="mesesF{{$index}}"></div></div></div></div></div><div class="row mb-30 pl-15 pr-15" ng-if="true"><div class="col-12" style="display: flex; justify-content: flex-end !important"><button type="button" class="btn info" id="p_btn_solic_prodcontratar_pub_continuar_portab" ng-click="vm.checkProductosContratar(); vm.registrarAccion(\'p_btn_solic_prodcontratar_pub_continuar_portab\');">CONTINUAR</button></div><small class="invalid" ng-if="vm.errorProductoContratar">Debes agregar al menos un producto a contratar en Banco de Chile</small></div></article><article class="step done" data-step="4" ng-class="{disabled : vm.deshabilitapasotres|| vm.deshabilitapasodos || vm.deshabilitapasocuatro}"><h3 class="text-color-3"><strong>Certificados</strong></h3><p>Si cuentas con alguno de los siguientes certificados adjÃºntalos a continuaciÃ³n.</p><div class="row list pl-15 pr-15 mt-15"><div class="col-xs-12 card-info pt-15 pb-0 mb-10"><h5 class="text-primary mb-0"><strong>Certificado de LiquidaciÃ³n</strong></h5><div class="row pb-15"><div class="col-xs-4 pt-20 pl-15"><div class="row"><div class="col-xs-12"><dnd-file-upload config="vm.archivoIngresoSolicitudService.config" validator="vm.archivoIngresoSolicitudService.validator" progress-call-back="vm.archivoIngresoSolicitudService.progress" clean-call-back="vm.archivoIngresoSolicitudService.clean" success-call-back="vm.archivoIngresoSolicitudService.success" id="p_btn_solic_certif_pub_subir-liq_portab"></dnd-file-upload></div><div class="col-xs-12 pt-5 text-center"><p>Formato .png, .jpg o .pdf</p></div></div></div><div class="col-xs-8 pt-20 pl-30 pr-30"><div class="row list-upload-files"><div class="col-xs-12"><div class="row file" ng-repeat="adjunto in vm.certificados"><div class="col-xs-7"><div class="filename"><i class="icon-icon-clip px-24 mr-15"></i><p class="mb-0"> {{adjunto.name | PFcutFileName: vm.size}}</p></div></div><div class="col-xs-3 filesize text-default px-12 pt-5"> {{adjunto.size | PFfileSizeN:true}} </div><div class="col-xs-2 deletefile"><a ng-click="vm.deleteItem(adjunto, $index)" class="link-eliminar"><i class="ion-ios-trash-outline"></i></a></div></div></div></div></div><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><div class="bch-mensaje-empresas error" ng-if="vm.archivoIngresoSolicitudService.config.mostrarMensajeError"><article> {{vm.archivoIngresoSolicitudService.config.mensajeFileError.message}} </article></div></div></div></div><div class="col-xs-12 card-info pt-15 pb-0 mb-10"><h5 class="text-primary mb-0"><strong>Pago de Impuesto de Timbres y Estampillas</strong></h5><div class="row pb-15"><div class="col-xs-4 pt-20 pl-15"><div class="row"><div class="col-xs-12"><dnd-file-upload config="vm.iteIngresoSolicitudService.config" validator="vm.iteIngresoSolicitudService.validator" progress-call-back="vm.iteIngresoSolicitudService.progress" clean-call-back="vm.iteIngresoSolicitudService.clean" success-call-back="vm.iteIngresoSolicitudService.success" id="p_btn_solic_certif_pub_subir-timbre_portab"></dnd-file-upload></div><div class="col-xs-12 pt-5 text-center"><p>Formato .png, .jpg o .pdf</p></div></div></div><div class="col-xs-8 pt-20 pl-30 pr-30"><div class="row list-upload-files"><div class="col-xs-12"><div class="row file" ng-repeat="adjunto in vm.ite"><div class="col-xs-7"><div class="filename"><i class="icon-icon-clip px-24 mr-15"></i><p class="mb-0"> {{adjunto.name | PFcutFileName: vm.size}}</p></div></div><div class="col-xs-3 filesize text-default px-12 pt-5"> {{adjunto.size | PFfileSizeN:true}} </div><div class="col-xs-2 deletefile"><a ng-click="vm.deleteItem(adjunto, $index)" class="link-eliminar"><i class="ion-ios-trash-outline"></i></a></div></div></div></div></div><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><div class="bch-mensaje-empresas error" ng-if="vm.iteIngresoSolicitudService.config.mostrarMensajeError"><article> {{vm.iteIngresoSolicitudService.config.mensajeFileError.message}} </article></div></div></div></div><div class="col-xs-12 card-info pt-15 pb-0 mb-10"><h5 class="text-primary mb-0"><strong>Copia Digital de TasaciÃ³n y Estudio de TÃ­tulo</strong></h5><div class="row pb-15"><div class="col-xs-4 pt-20 pl-15"><div class="row"><div class="col-xs-12"><dnd-file-upload config="vm.tasaIngresoSolicitudService.config" validator="vm.tasaIngresoSolicitudService.validator" progress-call-back="vm.tasaIngresoSolicitudService.progress" clean-call-back="vm.tasaIngresoSolicitudService.clean" success-call-back="vm.tasaIngresoSolicitudService.success" id="p_btn_solic_certif_pub_subir-tasac_portab"></dnd-file-upload></div><div class="col-xs-12 pt-5 text-center"><p>Formato .png, .jpg o .pdf</p></div></div></div><div class="col-xs-8 pt-20 pl-30 pr-30"><div class="row list-upload-files"><div class="col-xs-12"><div class="row file" ng-repeat="adjunto in vm.tasa"><div class="col-xs-7"><div class="filename"><i class="icon-icon-clip px-24 mr-15"></i><p class="mb-0"> {{adjunto.name | PFcutFileName: vm.size}}</p></div></div><div class="col-xs-3 filesize text-default px-12 pt-5"> {{adjunto.size | PFfileSizeN:true}} </div><div class="col-xs-2 deletefile"><a ng-click="vm.deleteItem(adjunto, $index)" class="link-eliminar"><i class="ion-ios-trash-outline"></i></a></div></div></div></div></div><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><div class="bch-mensaje-empresas error" ng-if="vm.tasaIngresoSolicitudService.config.mostrarMensajeError"><article> {{vm.tasaIngresoSolicitudService.config.mensajeFileError.message}} </article></div></div></div></div></div><div class="row pl-15 pr-15 pt-30 pb-30" ng-if="vm.firmarHabilitado"><div class="col-xs-12 card-shadow pl-20 pr-20 pt-25 pb-25"><div class="row scroll-y"><div class="col-xs-12"><h5 class="text-primary"><strong>Mandato para solicitar Certificado de LiquidaciÃ³n a Instituciones Financieras</strong></h5><p class="text-justify">Por medio de la presente solicitud, el cliente/solicitante otorga mandato a esta instituciÃ³n financiera para que en su nombre y representaciÃ³n, solicite al proveedor inicial seÃ±alado en esta solicitud, el certificado de liquidaciÃ³n de deudas con el detalle de todos los productos que solicito portar, incluidas sus garantÃ­as, productos conexos o complementarios contratados con ellos y los respectivos certificados de pago de impuestos de timbres de estampillas y copia digital de la tasaciÃ³n y estudio de tÃ­tulos en los casos que corresponda.</p></div><div class="col-xs-12 pt-15"><h5 class="text-primary"><strong>AutorizaciÃ³n de Tratamiento de Datos Personales</strong></h5><p class="text-justify">De conformidad con lo dispuesto en el artÃ­culo 25 de la Ley NÂ°21.236 sobre portabilidad financiera ("Ley de Portabilidad"), el envÃ­o de la presente solicitud de portabilidad implica el consentimiento del cliente/solicitante para la ejecuciÃ³n de las actividades de tratamiento de datos personales necesarias para el correcto procesamiento de esta solicitud, como del proceso de portabilidad financiera que la misma pueda dar a lugar. La finalidad de este tratamiento serÃ¡ Ãºnicamente la de llevar a cabo el proceso de portabilidad financiera en sus diversas etapas y fases, considerando de forma particular el tratamiento de datos personales contenidos y referidos en los certificados, avisos, documentos, comprobantes, notificaciones y comunicaciones que trata la Ley de Portabilidad y su reglamento, asÃ­ como la transferencia y transporte de dicha informaciÃ³n entre los proveedores financieros partÃ­cipes de un proceso de portabilidad, y entre estos y sus proveedores de plataformas y mÃ©todos de comunicaciÃ³n, asÃ­ como con las entidades responsables del registro y constituciÃ³n de garantÃ­as reales, segÃºn corresponda.</p><p class="text-justify">El cliente titular de datos dispondrÃ¡ en todo momento de los derechos respecto de sus datos personales consagrados en la Ley NÂº 19.628 o la normativa que en el futuro la reemplace o modifique, los que podrÃ¡ ejercer ante uno o mÃ¡s proveedores financieros partÃ­cipes de la portabilidad financiera, en los tÃ©rminos dispuestos en la referida ley.</p><p class="text-justify">Para efectos del procesamiento de la presente solicitud de portabilidad como de los demÃ¡s procedimientos que impliquen intercambio o transferencia de informaciÃ³n entre los diferentes participantes de un proceso de portabilidad financiera, el cliente toma conocimiento que actuarÃ¡ como proveedor de mÃ©todos de comunicaciÃ³n para tales fines la entidad Redbanc S. A., quien ejecutarÃ¡ por encargo y bajo las instrucciones de los respectivos proveedores financieros las actividades de tratamiento de datos personales que le sean encomendadas con ocasiÃ³n de la prestaciÃ³n de sus servicios.</p></div></div></div><div class="col-xs-12 pt-25 pl-0 pr-0"><div class="form-group"><label class="bch-custom-check"><div><input name="mandato" ng-model="vm.mandato" type="checkbox"> <i></i></div><span>He leÃ­do y suscribo la solicitud, el mandato y la autorizaciÃ³n precedente.</span></label></div></div></div><div class="row pr-15"><div class="col-xs-12 pl-0 justify-content-center"><button ng-if="vm.firmarHabilitado" ng-disabled="vm.loadingEnvio || !vm.mandato" type="button" class="btn info pt-15 pb-15 pl-30 pr-30" ng-click="vm.ingresarSolicitud(); vm.registrarAccion(\'p_btn_solic_firma_pub_firmar_portab\');" id="p_btn_solic_firma_pub_firmar_portab">FIRMAR SOLICITUD</button></div></div></article></form></section></div></div></div></div>');
	}]), angular.module("portabilidad-financiera-publico/src/portabilidad-financiera-publico/login/login.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("portabilidad-financiera-publico/src/portabilidad-financiera-publico/login/login.tpl.html", '<div class="container login-portabilidad"><div class="row"><div class="col-xs-12 header-portabilidad"><img src="assets/images/logo-bec.svg" width="219" alt=""> <img src="assets/images/logo-bch-grey.svg" width="208" alt=""> <img src="assets/images/logo-cch.svg" width="243" alt=""></div></div><div class="row"><div class="col-lg-12 text-center titulo-login"><h1 class="text-color-blue px-28">Bienvenido a la solicitud de portabilidad</h1></div></div><div class="row contenido-login"><div class="col-xs-12 col-sm-5 col-lg-4"><div class="portabilidad-card"><form name="vm.loginForm" role="form" novalidate autocomplete="false"><div class="row"><div class="col-xs-12 pl-10 pr-10"><h2 class="text-color-blue px-28">Ingresa tus datos</h2><p class="text-color-grey px-16">Para comenzar tu solicitud ingresa los siguientes datos</p><div class="form-group mb-20"><label>RUT</label><input type="hidden" name="username2" id="iduserName2" value="1"> <input type="text" id="preventAutoPass" class="hidden-xs hidden-sm hidden-md hidden-lg"> <input class="form-control" style="margin-bottom:26px!important" type="text" name="username2" id="iduserName" placeholder="Sin puntos, ni guiones" autocomplete="false" ng-model="vm.rut" ng-rut rut-format="blur" ng-change="vm.resetCaptcha();" ng-blur="vm.validarRut(vm.rut)" maxlength="12" required ng-keypress="vm.enterpress($event)" ng-keydown="vm.limpiarMensajes()" ng-click="vm.limpiarMensajes()" autofocus="true" delete-zero-left> <small class="invalid pull-left" style="margin-top:-24px" ng-if="(vm.loginForm.username2.$dirty || vm.loginForm.username2.$touched) && vm.loginForm.username2.$error.required">{{vm.mensajeErrorRutVacio}} </small><small class="invalid pull-left" style="margin-top:-24px" ng-if="vm.showRutNoValido">{{vm.mensajeErrorNoValido}}</small><small class="invalid pull-left" style="margin-top:-24px" ng-if="vm.showRutMayor50MM">{{vm.mensajeRUTMayor50MM}}</small></div></div><div class="col-xs-12 pl-10 pr-10"><div class="form-group mb-20"><label>NÃºmero de documento</label><input name="serie" type="text" ng-keypress="vm.enterpress($event)" ng-model="vm.serie" ng-keydown="vm.limpiarSerie()" class="form-control ng-invalid" style="margin-bottom:26px!important" maxlength="10" minlength="9" ng-change="vm.resetCaptcha();" placeholder="NÃºmero de serie o nÃºmero de documento" required autocomplete="false" validate="serie" ng-pattern="/^A?\\d+$/"> <small class="invalid pull-left" style="margin-top:-24px" ng-if="vm.loginForm.serie.$dirty && vm.loginForm.serie.$error.pattern">Ingresa nÃºmero de documento o serie vÃ¡lido.</small> <small class="invalid pull-left" style="margin-top:-24px" ng-if="(vm.loginForm.serie.$dirty || vm.loginForm.serie.$touched) && vm.loginForm.serie.$error.required">{{vm.mensajeSerieVacio}} </small><small class="invalid pull-left" style="margin-top:-24px" ng-if="vm.loginForm.serie.$dirty && !vm.loginForm.serie.$error.pattern && (vm.loginForm.serie.$error.maxlength || vm.loginForm.serie.$error.minlength)">Ingresa nÃºmero de documento o serie vÃ¡lido.</small></div></div><div class="col-xs-12 pl-12 pr-10"><re-captcha g-recaptcha-response="vm.captchaResponse" control="vm.captchaReload" expired-callback="vm.captchaCallback"></re-captcha></div><div class="col-xs-12 mb-10 pl-10 pr-10 mt-5" style="margin-top:-5px"><small class="caps-lock-alert invalid" ng-if="isCapsLockOn" id="bch-login-msj-error-chico">{{vm.mensajeTeclaMayuscula}} </small></div><div class="col-xs-12 pl-10 pr-10"><a href="javascript:void(0)" class="btn primary pt-15 pb-15 w-100 px-14 btn-logobch" ng-disabled="!vm.loginForm.$valid || vm.comprobarSolicitud || !vm.validacionCaptcha || vm.esCliente" ng-click="vm.url = \'ingresar-solicitud-portabilidad-publico\'; vm.iniciarSolicitud = true; vm.irLogin(); vm.registrarAccion(\'p_btn_solic_autentic-rvss_pub_iniciar-sol_portab\');" target="_top" id="p_btn_solic_autentic-rvss_pub_iniciar-sol_portab"><span class="flex-center" ng-if="!vm.iniciarSolicitud"><img src="assets/images/solo-b-bch.svg" width="18px" class="mr-10"> COMENZAR MI PORTABILIDAD</span><section class="spinner mt-0" ng-if="vm.iniciarSolicitud"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></a></div><div class="col-xs-12 pt-15 pl-10 pr-10"><a href="javascript:void(0)" class="btn info pt-15 pb-15 w-100 px-14 btn-solicitud" ng-disabled="!vm.loginForm.$valid || vm.iniciarSolicitud ||  !vm.validacionCaptcha || vm.esCliente" ng-click="vm.url = \'consultar-solicitud-portabilidad-publico\'; vm.comprobarSolicitud = true; vm.irLogin(); vm.registrarAccion(\'p_btn_solic_autentic-rvss_pub_completar_portab\');" target="_top" id="p_btn_solic_autentic-rvss_pub_completar_portab"><span ng-if="!vm.comprobarSolicitud">COMPROBAR ESTADO DE MI SOLICITUD</span><section class="spinner mt-0" ng-if="vm.comprobarSolicitud"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></a></div></div></form></div></div><div class="col-xs-12 col-sm-6 col-lg-6 portabilidad-documentos"><div class="portabilidad-card mb-20"><h3 class="px-20 text-color-grey">Para que tu solicitud de portabilidad sea mÃ¡s <span class="text-color-blue">fÃ¡cil y rÃ¡pida</span>.</h3><h4 class="text-color-grey px-16 mb-20"><strong>Te recomendamos tener a mano tu cÃ©dula de identidad </strong></h4><div class="row"><div class="col-sm-6 col-lg-6"><p><strong>CÃ©dula Actual</strong></p><img class="w-100" src="assets/images/carnet-serie-front.png" alt=""></div><div class="col-sm-6 col-lg-6"><p><strong>CÃ©dula Antigua (incluye la letra A)</strong></p><img class="w-100" src="assets/images/carnet-serie-back.png" alt=""></div></div></div><div class="row"><div class="col-lg-12"><div class="bch-mensaje-empresas information"><article><p>No necesitas tu certificado de liquidaciÃ³n de deudas emitido, nosotros lo pediremos por ti.</p></article></div></div></div></div></div><div class="row pt-20 contenido-login"><div class="col-xs-12 col-sm-11 col-lg-10" id="idMensajeError"><div class="bch-mensaje-empresas warning" ng-if="vm.showError"><article><p>{{ vm.mensaje }}</p></article></div><div class="bch-mensaje-empresas warning bch-mensaje-entendido padd-none" ng-if="vm.esCliente"><article class="width-100 position-relative"><div class="row pl-25 pr-15 pt-15 pb-15 align-center"><div class="col-xs-12 col-sm-8 col-md-8 col-lg-9 pl-30"><p class="pl-30">SegÃºn nuestros registros ya eres cliente. Puedes acceder a Banco en LÃ­nea con tu clave haciendo clic en el botÃ³n "Ingresar como cliente". Si la has olvidado o deseas recuperarla tambiÃ©n podrÃ¡s hacerlo.</p></div><div class="col-xs-12 col-sm-4 col-md-4 col-lg-3 text-right"><button ng-click="vm.login();" class="btn confirmar">INGRESAR COMO CLIENTE</button></div></div></article></div></div></div></div>')
	}]), angular.module("portabilidad-financiera-publico/src/portabilidad-financiera-publico/tabs/portabilidad-financiera-publico-tabs.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("portabilidad-financiera-publico/src/portabilidad-financiera-publico/tabs/portabilidad-financiera-publico-tabs.tpl.html", '<div class="container portabilidad-financiera-personas"><section class="" ng-hide="tabs.loading"><div class="bch-empresas-tabs"><!--			<tabset>--><!--				<tab active="tabs.state.ingresoSolicitud"  ui-sref="ingresar-solicitud-portabilidad" />--><!--			</tabset>--><div ui-view></div></div></section></div>')
	}]), angular.module("simulador-pp-publico/src/modules/comprobante-credito/comprobante-credito.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("simulador-pp-publico/src/modules/comprobante-credito/comprobante-credito.tpl.html", '<section class="container simulador-credito-consumo-publico"><div class="spinner" ng-if="comprobanteCredito.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><div class="row mb-10"><div class="col-xs-12 col-md-6"><h2 class="text-color-4 mt-10 mb-15">Solicitud de CrÃ©dito de Consumo</h2></div></div><div ng-show="!comprobanteCredito.loading" class="bch-empresas-subtabs"><comprobante tipo="compuesto" data="comprobanteCredito.data" ng-if="comprobanteCredito.data"></comprobante><div class="row"><div class="col-xs-12 text-right"><br><button type="button" class="btn success" ng-click="comprobanteCredito.volver()">Aceptar</button></div></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-12"><div class="width-100 mt-30 mb-30 pt-10 pb-10 border-top"><p>La tasa de interÃ©s y los gastos informados son referenciales y estÃ¡n sujetos a confirmaciÃ³n de parte del Banco. El valor de la cuota, la CAE y el costo final del CrÃ©dito son igualmente referenciales y se han calculado considerando todos los conceptos y montos que constan precedentemente en esta simulaciÃ³n.</p><p>La presente simulaciÃ³n sÃ³lo es de carÃ¡cter informativa y no constituye aprobaciÃ³n del CrÃ©dito ni oferta de tasa de interÃ©s. El otorgamiento del CrÃ©dito, asÃ­ como sus condiciones de plazo y tasa de interÃ©s, estÃ¡n sujetos a evaluaciÃ³n previa del Banco.</p><p>La contrataciÃ³n de seguro de desgravamen es voluntaria, salvo en el caso que el monto de capital del CrÃ©dito sea superior a 500 Unidades de Fomento o a su equivalente en pesos, o que el nÃºmero de cuotas en que deba ser pagado sea superior a 48. En cualquiera de esos eventos, o en el caso de verificarse ambos conjuntamente, el CrÃ©dito de Consumo debe contar con un seguro de desgravamen de cargo del cliente.</p><p>El Cliente siempre puede optar por contratar el seguro ofrecido por el Banco o contratarlo directamente en cualquier compaÃ±Ã­a de seguros. En este Ãºltimo caso, el seguro deberÃ¡ considerar lo siguiente: i) debe tener una cobertura mÃ­nima que considere muerte natural y muerte accidental y debe cubrir el saldo insoluto de la deuda al momento del fallecimiento; ii) la compaÃ±Ã­a aseguradora debe tener una clasificaciÃ³n de riesgo igual o superior a AA; y iii) el beneficiario del seguro debe ser Banco de Chile. En ningÃºn caso el otorgamiento del CrÃ©dito ni sus tÃ©rminos de contrataciÃ³n estarÃ¡n condicionados a la contrataciÃ³n del seguro ofrecido por el Banco. La contrataciÃ³n de seguro de cesantÃ­a involuntario e incapacidad es voluntaria cualquiera sea el monto de capital del CrÃ©dito o sus cuotas. La contrataciÃ³n del seguro de desgravamen a travÃ©s de la CompaÃ±Ã­a ofrecida por el Banco, estÃ¡ sujeto al cumplimiento de los requisitos de asegurabilidad exigidos por esa CompaÃ±Ã­a.</p></div></div></div></section>')
	}]), angular.module("simulador-pp-publico/src/modules/error-captcha/error-captcha.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("simulador-pp-publico/src/modules/error-captcha/error-captcha.tpl.html", '<div class="container simulador-credito-consumo-publico"><section class="row" style="display: flex;justify-content: center"><section class="col-md-10" style="display: flex;justify-content: center"><div class="col-xs-8 icono-error-captcha text-center"><h2 style="color:#F45516" class="mt-15">Â¡Ups! Tuvimos un problema</h2><h5 class="gray-simulador-publico mt-15">Lo sentimos, tuvimos un problema de conexiÃ³n.<br>Volveremos a cargar el sitio, para que lo intentes nuevamente.</h5><h5 class="gray-simulador-publico mt-15" ng-if="false">Lo sentimos, no fue posible validar tu identidad.<br>Por favor, recarga el sitio e intenta nuevamente.</h5><button type="button" class="btn neutro mt-15">Volver a cargar</button> <button type="button" class="btn neutro mt-15" ng-if="false">Continuar</button></div></section></section></div>')
	}]), angular.module("simulador-pp-publico/src/modules/formulario-contacto/formulario-contacto.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("simulador-pp-publico/src/modules/formulario-contacto/formulario-contacto.tpl.html", '<section class="ml-20 mr-20 simulador-credito-consumo-publico simulador-pp-publico-{{formularioContacto.marca}}"><div class="spinner" ng-if="seleccionaCredito.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><div class="bch-empresas-subtabs"><div class="row mt-25"><!-- Mobile --><div class="col-xs-12 col-md-6 mb-30 hidden-sm hidden-md hidden-lg"><div class="bch-steps-horizontales-numerados text-center"><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--done"><h6>Simula tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--done"><h6>Elige tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--active"><h6>Solicita tu CrÃ©dito</h6></div></div></div><div class="col-xs-12 col-sm-6 col-md-6"><h2 class="text-color-2 mb-25 text-regular">Solicita tu CrÃ©dito de Consumo</h2></div><div class="col-xs-12 col-sm-6 col-md-6 hidden-xs"><div class="bch-steps-horizontales-numerados pull-right"><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--done"><h6>Simula tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--done"><h6>Elige tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--active"><h6>Solicita tu CrÃ©dito</h6></div></div></div></div><div class="row"><section class="bch-steps col-xs-12 col-md-8 mt-25 contenedor-formulario-pp"><article class="step done" data-step="1"><h3 class="text-color-2 text-regular espaciado-titulo-movil">EnvÃ­o de solicitud</h3><h5 class="mb-15 mt-25 gray-dark-simulador-publico text-regular">Ingresa tus datos, para enviar tu solicitud a nuestros ejecutivos</h5><form name="contactForm" novalidate><div class="pb-15 formulario-simulador-publico"><div class="row"><div class="col-xs-12 col-md-4"><div class="form-group"><label for="nombre">Nombre</label><input type="text" placeholder="Juan PÃ©rez" class="form-control" name="nombre" required ng-model="formularioContacto.cliente.nombre" solo-letras ng-disabled="formularioContacto.mostrarEnvioExitoso" ng-disabled="formularioContacto.mostrarEnvioExitoso"> <span class="messages" ng-show="contactForm.$submitted || contactForm.nombre.$touched"><small ng-show="contactForm.nombre.$error.required" class="invalid display-block">Debes ingresar un nombre</small></span></div></div><div class="col-xs-12 col-md-4"><div class="form-group"><label for="email">Correo electrÃ³nico</label><input type="email" class="form-control" name="email" required ng-model="formularioContacto.cliente.email" maxlength="40" placeholder="correo@correo.com" ng-keydown="formularioContacto.sinEspacios($event)" ng-blur="formularioContacto.setEmailValid($event)" ng-disabled="formularioContacto.mostrarEnvioExitoso"> <span class="messages" ng-show="contactForm.$submitted || contactForm.email.$touched"><small ng-if="contactForm.email.$error.required" class="invalid display-block">Debes ingresar un correo electrÃ³nico</small> <small ng-show="!contactForm.email.$error.required && contactForm.email.$error.formatoIncorrecto" class="invalid display-block">Debes ingresar un correo vÃ¡lido</small></span></div></div><div class="col-xs-12 col-md-4"><div class="form-group"><label for="telefono">TelÃ©fono celular</label><input type="text" class="form-control" name="telefono" required sin-espacios ng-model="formularioContacto.cliente.telefono" placeholder=" 99999999" maxlength="8" ng-paste="$event.preventDefault()" ng-keydown="formularioContacto.setContactoInputKey($event)" ng-change="formularioContacto.setContactoInputChange()" ng-disabled="formularioContacto.mostrarEnvioExitoso" style="padding-left: 50px"> <i class="numero-prefijo" data-text="+569"></i><!-- </div> --> <span class="messages" ng-show="contactForm.$submitted || contactForm.telefono.$touched"><small ng-show="contactForm.telefono.$error.required" class="invalid display-block">Debes ingresar un telÃ©fono vÃ¡lido</small> <small ng-show="!contactForm.telefono.$error.required && contactForm.telefono.$error.largoInvalido" class="invalid display-block">Debes ingresar un nÃºmero de 8 dÃ­gitos</small></span></div></div></div></div></form><div class="text-right hidden-xs hidden-sm"><button class="btn info pt-10 pb-10" ui-sref="simulador-publico-selecciona-credito" ng-disabled="formularioContacto.mostrarEnvioExitoso || formularioContacto.flagLadda">Elegir otro crÃ©dito</button> <button class="btn success pt-10 pb-10" ladda="formularioContacto.flagLadda" ng-disabled="contactForm.$invalid || formularioContacto.mostrarEnvioExitoso" ng-click="formularioContacto.enviarSolicitud()">Enviar solicitud</button></div><!-- Solicitud exitosa --><div class="bch-mensaje-empresas success mt-25 hidden-xs hidden-sm" ng-if="formularioContacto.mostrarEnvioExitoso"><article><p>Tu solicitud de CrÃ©dito de Consumo fue enviada exitosamente. Te contactaremos en un plazo de hasta 72 horas para asesorarte y cursar tu solicitud.</p></article></div><!-- Error en solicitud --><div class="bch-mensaje-empresas error mt-25 hidden-xs hidden-sm" ng-if="formularioContacto.mostrarEnvioError"><article><p>Â¡Ups! No pudimos enviar la solicitud, por favor intenta nuevamente</p></article></div></article></section><div class="col-xs-12 col-md-4 mt-25 pl-0 pr-15 contenedor-mi-simulacion"><div class="resumen-simulador-publico"><div class="contenedor-simulador-publico"><div class="card-resumen-publico"><div class="card-header-publico pt-10 pb-10"><h5 class="card-title mt-0 mb-0 text-bold text-center gray-dark-simulador-publico">Resultado de mi simulaciÃ³n</h5></div><div class="card-body"><div class="color-0 width-100 pt-15 pb-0 pl-15 pr-15"><div class="row mb-10 mt-0"><div class="col-xs-12"><div class="col-12 padd-none"><p class="gray-dark-simulador-publico text-regular mb-5">Monto solicitado</p></div><div class="col-xs-12 padd-none"><h3 class="text-color-2 mb-0 text-bold">${{formularioContacto.simulacionSelecionada.montoSolicitado | MontoFilter}} <span class="text-regular">en </span><span>{{formularioContacto.simulacionSelecionada.numeroCuotas}} cuotas</span></h3></div></div></div><div class="border-inferior-resultado"><dl><dt class="mb-0 px-12 gray-dark-simulador-publico text-regular width-55 width-monto-cuota">Monto cuota mensual</dt><dd class="mb-0 px-12 gray-dark-simulador-publico text-regular width-45 width-cae-simulador" style="text-align: left">CAE</dd></dl><dl class="pb-10"><dt class="text-color-2 mb-0 text-bold px-20 width-55 width-valor-cuota">${{formularioContacto.simulacionSelecionada.valorCuota | MontoFilter}} </dt><dd class="text-color-2 mb-0 text-bold flex-center px-20 width-45 width-valor-cae"> {{formularioContacto.simulacionSelecionada.cae | number:2}}%<a class="text-color-12 mensaje-cuotas flex-center" href="javascript:void(0);" popover="Es un valor que te ayuda a comparar y elegir el crÃ©dito mÃ¡s conveniente. Al comparar dos crÃ©ditos del mismo tipo y con el mismo plazo, el que tenga la CAE mÃ¡s baja serÃ¡ el mÃ¡s barato." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="true" popover-title="crÃ©dito"><i class="ion-ios-help-outline px-15 color-icono-help ml-5"></i></a></dd></dl></div></div><div class="color-0 width-100 pt-15 pl-15 pr-15 gray-dark-selecciona-pp"><dl><dt class="px-14 width-60 pb-10 text-regular">Tasa de interÃ©s Internet</dt><dd class="width-40 pb-5"><span class="px-14 text-bold">{{formularioContacto.simulacionSelecionada.tasa | number:2}}% mensual</span><br><span class="px-12">{{formularioContacto.simulacionSelecionada.tasa*12 | number:2}}% anual</span></dd></dl></div><div class="color-0 width-100 pt-0 pl-15 pr-15 gray-dark-selecciona-pp"><dl><dt class="px-14 pb-5 text-regular">Fecha primer pago</dt><dd class="px-14 pb-5 text-bold">{{formularioContacto.fechaPrimerPago}}</dd></dl></div><div class="color-0 width-100 pt-0 pl-15 pr-15 gray-dark-selecciona-pp"><dl class="pt-0"><dt class="px-14 pb-5 text-regular width-45">Meses de No Pago</dt><dd class="pb-5 px-14 text-bold width-55">{{formularioContacto.mesesNoPago | MesesNoPago}}</dd></dl></div><div class="color-0 width-100 pt-0 pl-15 pr-15 gray-dark-selccciona-credito gray-dark-selecciona-pp"><dl class="pt-0"><dt class="px-14 pb-5 text-regular">Seguros asociados</dt><dd class="px-14 pb-5 text-bold">{{formularioContacto.tieneSeguros()}}</dd></dl></div><div collapse="formularioContacto.isCollapsed" class="width-100 pt-5 pb-0 pl-15 pr-15 mb-15"><div class="row"><div class="col-xs-12 col-sm-12 color-0"><p class="text-bold gray-dark-simulador-publico">Detalles del CrÃ©dito</p></div></div><div class="row fondo-simulador-publico"><div class="col-xs-12 col-sm-12"><div class="width-100 pt-10 pl-15 pr-15 mb-5" ng-if="formularioContacto.tieneSeguros() !== \'No\'"><div class="row border-texto bch-border-bottom-muted gray-dark-selecciona-pp"><div class="col-xs-12"><dl class="pb-5"><dt class="text-regular">Seguros asociados</dt><dd class="text-bold pb-5">${{formularioContacto.simulacionSelecionada.seguros | TotalSegurosFilter}}</dd></dl></div></div><div class="row"><div class="col-xs-12 padd-none"><div class="pt-5 pl-15 pr-15 width-100 gray-dark-selecciona-pp"><dl ng-repeat="seguro in formularioContacto.simulacionSelecionada.seguros"><dt class="pt-5 text-regular">{{seguro.descripcion}}</dt><dd class="pt-5 text-regular">${{seguro.prima | MontoFilter}}</dd></dl></div></div></div></div><div class="width-100 pt-10 pl-15 pr-15 pb-5"><div class="row bch-border-bottom-muted gray-dark-selecciona-pp"><div class="col-xs-12"><dl class="pb-5"><dt class="px-12 text-regular">Impuestos y NotarÃ­a</dt><dd class="px-12 text-bold">${{formularioContacto.simulacionSelecionada | TotalImpuestoNotariaFilter}} </dd></dl></div></div><div class="row"><div class="col-xs-12 padd-none"><div class="pt-5 pl-15 pr-15 width-100 gray-dark-selecciona-pp"><dl class="pt-5"><dt class="width-70 text-regular">Impuesto de Timbre y Estampilla</dt><dd class="width-30 text-regular">${{formularioContacto.simulacionSelecionada.totalImpuestoTimbre | MontoFilter}} </dd></dl><dl class="pt-5"><dt class="text-regular">Gastos Notariales</dt><dd class="text-regular">${{formularioContacto.simulacionSelecionada.totalNotario | MontoFilter}}</dd></dl></div></div></div></div><div class="width-100 pt-10 pl-15 pr-15 gray-dark-selecciona-pp"><dl class="pb-10"><dt class="px-12 text-regular">Monto bruto del CrÃ©dito</dt><dd class="px-12 text-bold">${{formularioContacto.simulacionSelecionada.montoBruto | MontoFilter}} </dd></dl></div></div></div></div><div class="width-100 pt-0 pb-10 pl-15 pr-15 gray-dark-selecciona-pp color-0"><dl><dt class="px-14 width-70 text-regular costo-total-desktop">Costo Total del CrÃ©dito (CTC) <a class="text-color-12 mensaje-cuotas" href="javascript:void(0);" popover="El Costo Total del CrÃ©dito indica el dinero que pagarÃ¡s por tu crÃ©dito,\n                                                tomando en consideraciÃ³n todos los cobros y gastos asociados." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false"><i class="ion-ios-help-outline px-15 color-icono-help"></i></a></dt><!-- Mobile --><dt class="px-14 width-70 text-regular costo-total-movil">Costo Total CrÃ©dito (CTC) <a class="text-color-12 mensaje-cuotas" href="javascript:void(0);" popover="El Costo Total del CrÃ©dito indica el dinero que pagarÃ¡s por tu crÃ©dito,\n                                                tomando en consideraciÃ³n todos los cobros y gastos asociados." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false"><i class="ion-ios-help-outline px-15 color-icono-help"></i></a></dt><dd class="text-bold px-14 width-30">${{formularioContacto.simulacionSelecionada.costoTotal | MontoFilter}} </dd></dl></div><div class="color-0 width-100 pt-0 pb-10 pl-15 pr-15 border-inferior-resumen"><div class="text-center"><a class="btn" ng-click="formularioContacto.isCollapsed = !formularioContacto.isCollapsed"><span class="px-12 text-bold flex-center text-collapsed-publico" ng-if="formularioContacto.isCollapsed" class="text-color-1 flex-center">VER MÃS DETALLES</span><span class="px-12 text-bold flex-center text-collapsed-publico" ng-if="!formularioContacto.isCollapsed" class="text-color-1">VER MENOS DETALLES</span></a></div></div></div></div></div></div></div><!-- Botones y mensajes Mobile --><div class="col-xs-12 hidden-sm hidden-md hidden-lg"><div class="text-right"><button class="btn success width-boton-movil boton-enviar-movil mt-15" ladda="formularioContacto.flagLadda" ng-disabled="contactForm.$invalid || formularioContacto.mostrarEnvioExitoso" ng-click="formularioContacto.enviarSolicitud()">Enviar solicitud</button> <button class="btn info width-boton-movil boton-elegir-movil mt-15 mr-15" ui-sref="simulador-publico-selecciona-credito" ng-disabled="formularioContacto.mostrarEnvioExitoso">Elegir otro crÃ©dito</button></div></div><div class="col-xs-12 hidden-xs hidden-md hidden-lg mt-30"><div class="text-right"><button class="btn info width-boton-movil boton-elegir-movil mt-15 mr-15 pt-10 pb-10" ui-sref="simulador-publico-selecciona-credito" ng-disabled="formularioContacto.mostrarEnvioExitoso">Elegir otro crÃ©dito</button> <button class="btn success width-boton-movil boton-enviar-movil mt-15 pt-10 pb-10" ladda="formularioContacto.flagLadda" ng-disabled="contactForm.$invalid || formularioContacto.mostrarEnvioExitoso" ng-click="formularioContacto.enviarSolicitud()">Enviar solicitud</button></div></div><!-- Solicitud exitosa --><div class="col-xs-12 hidden-md hidden-lg" ng-if="formularioContacto.mostrarEnvioExitoso"><div class="bch-mensaje-empresas success mt-25 mb-0"><article><p>Tu solicitud de CrÃ©dito de Consumo fue enviada exitosamente. Te contactaremos en un plazo de hasta 72 horas para asesorarte y cursar tu solicitud.</p></article></div></div><!-- Error en solicitud --><div class="col-xs-12 hidden-md hidden-lg" ng-if="formularioContacto.mostrarEnvioError"><div class="bch-mensaje-empresas error mt-25 mb-0"><article><p>Â¡Ups! No pudimos enviar la solicitud, por favor intenta nuevamente</p></article></div></div></div><br class="hidden-xs hidden-sm"><br class="hidden-xs hidden-sm"><div class="row"><div class="col-xs-12 col-sm-12 col-md-12 pt-30 mt-30 contenedor-texto-legal"><div class="width-100 mt-30 mb-30 pt-10 pb-10 border-top texto-legal-formulario"><p class="px-11 text-regular text-color-12">La tasa de interÃ©s y los gastos informados son referenciales y estÃ¡n sujetos a confirmaciÃ³n de parte del Banco. El valor de la cuota, la CAE y el costo final del crÃ©dito son igualmente referenciales y se han calculado considerando todos los conceptos y montos que constan precedentemente en esta simulaciÃ³n.</p><p class="px-11 text-regular text-color-12">La presente simulaciÃ³n sÃ³lo es de carÃ¡cter informativa y no constituye aprobaciÃ³n del crÃ©dito ni oferta de tasa de interÃ©s. El otorgamiento del crÃ©dito, asÃ­ como sus condiciones de plazo y tasa de interÃ©s, estÃ¡n sujetos a evaluaciÃ³n previa del Banco.</p><p class="px-11 text-regular text-color-12">La contrataciÃ³n de Seguro de Desgravamen es voluntaria, salvo en el caso que el monto de capital del crÃ©dito sea superior a 500 Unidades de Fomento o a su equivalente en pesos, o que el nÃºmero de cuotas en que deba ser pagado sea superior a 48. En cualquiera de esos eventos, o en el caso de verificarse ambos conjuntamente, el CrÃ©dito de Consumo debe contar con un seguro de desgravamen de cargo del cliente.</p><p class="px-11 text-regular text-color-12">El Cliente siempre puede optar por contratar el seguro ofrecido por el Banco o contratarlo directamente en cualquier compaÃ±Ã­a de seguros. En este Ãºltimo caso, el seguro deberÃ¡ considerar lo siguiente: i) debe tener una cobertura mÃ­nima que considere muerte natural y muerte accidental y debe cubrir el saldo insoluto de la deuda al momento del fallecimiento; ii) la compaÃ±Ã­a aseguradora debe tener una clasificaciÃ³n de riesgo igual o superior a AA; y iii) el beneficiario del seguro debe ser Banco de Chile. En ningÃºn caso el otorgamiento del crÃ©dito ni sus tÃ©rminos de contrataciÃ³n estarÃ¡n condicionados a la contrataciÃ³n del seguro ofrecido por el Banco. La contrataciÃ³n de Seguro de Desempleo Involuntario e Incapacidad Temporal es voluntaria cualquiera sea el monto de capital del crÃ©dito o sus cuotas. La contrataciÃ³n del Seguro de Desgravamen a travÃ©s de la CompaÃ±Ã­a ofrecida por el Banco, estÃ¡ sujeto al cumplimiento de los requisitos de asegurabilidad exigidos por esa CompaÃ±Ã­a.</p></div></div></div></div></section>')
	}]), angular.module("simulador-pp-publico/src/modules/selecciona-credito/selecciona-credito.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("simulador-pp-publico/src/modules/selecciona-credito/selecciona-credito.tpl.html", '<section class="ml-20 mr-20 simulador-credito-consumo-publico simulador-pp-publico-{{seleccionaCredito.marca}}"><div class="spinner" ng-if="seleccionaCredito.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><div ng-show="!seleccionaCredito.loading" class="bch-empresas-subtabs"><div class="row mb-10 mt-25"><!-- Steps mobile --><div class="col-xs-12 col-sm-4 col-md-4 mb-30 hidden-sm hidden-md hidden-lg"><div class="bch-steps-horizontales-numerados text-center"><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--done"><h6>Simula tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--active"><h6>Elige tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step"><h6>Solicita tu CrÃ©dito</h6></div></div></div><!-- Steps mobile --><div class="col-xs-12 col-sm-8 col-md-8"><h2 class="text-color-2 mb-25 text-regular elige-credito-pp">Elige la mejor alternativa para ti</h2><h3 class="text-color-2 text-regular texto-cuotas">Te mostramos opciones con distintas cantidades de cuotas</h3></div><div class="col-xs-12 col-sm-4 col-md-4 hidden-xs"><div class="bch-steps-horizontales-numerados pull-right"><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--done"><h6>Simula tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--active"><h6>Elige tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step"><h6>Solicita tu CrÃ©dito</h6></div></div></div></div><div class="row mt-25 mb-30 ml-0 mr-0 contenedor-selecciona-credito"><div id="seleccionDesktop"><div ng-repeat="simulacion in seleccionaCredito.response.simulaciones" class="col-xs-12 col-md-4 col-lg-4 selecciona-plan pl-15 pr-15"><div class="bch-pricing-plan margen-tablet" ng-class="activeOpcion{{$index}}"><div class="card-simulador-publico"><div class="card-header pt-5 pb-5 text-center pl-15 pr-15"><h5 class="card-title mt-5 mb-5 text-bold text-center padd-none">{{simulacion.totalPrimaSeguros}} </h5></div><div class="card-body color-0 fondo-blanco"><div class="color-0 width-100 pt-15 pb-0 pl-15 pr-15"><div class="row mb-10 mt-0"><div class="col-xs-12"><div class="col-12 padd-none"><p class="gray-dark-simulador-publico text-regular mb-5">Monto solicitado</p></div><div class="col-xs-12 padd-none"><h3 class="text-color-2 mb-0 text-bold">${{simulacion.montoSolicitado | MontoFilter}} <span class="text-regular">en</span> <span>{{simulacion.numeroCuotas}} cuotas</span></h3></div></div></div><div class="border-inferior-resultado"><dl><dt class="mb-0 px-12 gray-dark-simulador-publico text-regular width-55 width-monto-cuota">Monto cuota mensual</dt><dd class="mb-0 px-12 gray-dark-simulador-publico text-regular width-45 width-cae-simulador" style="text-align: left">CAE</dd></dl><dl class="mb-15"><dt class="text-color-2 mb-0 text-bold px-20 width-55 width-valor-cuota">${{simulacion.valorCuota | MontoFilter}} </dt><dd class="text-color-2 mb-0 text-bold flex-center px-20 width-45 width-valor-cae"> {{simulacion.cae | number:2}}% <a class="text-color-12 mensaje-cuotas flex-center prueba" href="javascript:void(0);" popover="Es un valor que te ayuda a comparar y elegir el crÃ©dito mÃ¡s conveniente. Al comparar dos crÃ©ditos del mismo tipo y con el mismo plazo, el que tenga la CAE mÃ¡s baja serÃ¡ el mÃ¡s barato." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false" popover-title="Cae"><i class="ion-ios-help-outline px-15 color-icono-help ml-5"></i></a></dd></dl></div></div><div class="color-0 width-100 pt-15 pl-15 pr-15 gray-dark-selecciona-pp"><dl><dt class="px-14 width-58 pb-10 text-regular">Tasa de interÃ©s Internet</dt><dd class="width-42 pb-5"><span class="px-14 text-bold">{{simulacion.tasa | number:2}}% mensual</span><br><span class="px-12">{{simulacion.tasa*12 | number:2}}% anual</span></dd></dl></div><div class="color-0 width-100 pt-0 pl-15 pr-15 gray-dark-selecciona-pp"><dl><dt class="px-14 pb-5 text-regular">Fecha primer pago</dt><dd class="px-14 pb-5 text-bold">{{seleccionaCredito.fechaPrimerPago}}</dd></dl></div><div class="color-0 width-100 pt-0 pl-15 pr-15 gray-dark-selecciona-pp"><dl class="pt-0"><dt class="px-14 pb-5 text-regular width-45">Meses de No Pago</dt><dd class="pb-5 px-14 text-bold width-55">{{seleccionaCredito.mesesNoPago | MesesNoPago}}</dd></dl></div><div class="color-0 width-100 pt-0 pl-15 pr-15 gray-dark-selccciona-credito gray-dark-selecciona-pp"><dl class="pt-0"><dt class="px-14 pb-5 flex-center text-regular">Seguros asociados <a class="text-color-12 mensaje-cuotas flex-center" ng-if="seleccionaCredito.tooltip[$index]" href="javascript:void(0);" popover="Para tu tranquilidad y la de tu familia, el Seguro de Desgravamen es obligatorio para crÃ©ditos mayores a 48 cuotas." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false"><i class="ion-ios-help-outline px-15 color-icono-help ml-5"></i></a></dt><dd class="px-14 text-bold">{{seleccionaCredito.isSeguros[$index]}}</dd></dl></div><div collapse="seleccionaCredito.isCollapsed{{$index}}" class="width-100 pt-5 pb-0 pl-15 pr-15 mb-15 contendor-collapse-simulador"><div class="row"><div class="col-xs-12 col-sm-12 color-0"><p class="text-bold gray-dark-simulador-publico">Detalles del CrÃ©dito</p></div></div><div class="row fondo-simulador-publico"><div class="col-xs-12 col-sm-12"><div class="width-100 pt-10 pl-15 pr-15 mb-5" ng-if="seleccionaCredito.isSeguros[$index] !== \'No\'"><div class="row border-texto bch-border-bottom-muted gray-dark-selecciona-pp"><div class="col-xs-12"><dl><dt class="text-regular">Seguros asociados</dt><dd class="text-bold pb-5">${{simulacion.seguros | TotalSegurosFilter}}</dd></dl></div></div><div class="row"><div class="col-xs-12 padd-none"><div class="pt-5 pl-15 pr-15 width-100 gray-dark-selecciona-pp"><dl ng-repeat="seguro in simulacion.seguros"><dt class="pt-5 text-regular">{{seguro.descripcion}}</dt><dd class="pt-5 text-regular">${{seguro.prima | MontoFilter}}</dd></dl></div></div></div></div><div class="width-100 pt-10 pl-15 pr-15 pb-5"><div class="row bch-border-bottom-muted gray-dark-selecciona-pp"><div class="col-xs-12"><dl class="pb-5"><dt class="px-12 text-regular">Impuestos y NotarÃ­a</dt><dd class="px-12 text-bold">${{simulacion | TotalImpuestoNotariaFilter}} </dd></dl></div></div><div class="row"><div class="col-xs-12 padd-none"><div class="pt-5 pl-15 pr-15 width-100 gray-dark-selecciona-pp"><dl class="pt-5"><dt class="width-70 text-regular">Impuesto de Timbre y Estampilla</dt><dd class="width-30 text-regular">${{simulacion.totalImpuestoTimbre | MontoFilter}}</dd></dl><dl class="pt-5"><dt class="text-regular">Gastos Notariales</dt><dd class="text-regular">${{simulacion.totalNotario | MontoFilter}}</dd></dl></div></div></div></div><div class="width-100 pt-10 pl-15 pr-15 gray-dark-selecciona-pp"><dl class="pb-10"><dt class="px-12 text-regular">Monto bruto del CrÃ©dito</dt><dd class="px-12 text-bold">${{simulacion.montoBruto | MontoFilter}} </dd></dl></div></div></div></div><div class="width-100 pt-0 pb-10 pl-15 pr-15 gray-dark-selecciona-pp color-0"><dl><dt class="px-14 width-68 flex-center text-regular costo-total-desktop-pp">Costo Total del CrÃ©dito (CTC) <a class="text-color-12 mensaje-cuotas flex-center ml-5" href="javascript:void(0);" popover="El Costo Total del CrÃ©dito indica el dinero que pagarÃ¡s por tu crÃ©dito,\n                                            tomando en consideraciÃ³n todos los cobros y gastos asociados." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false"><i class="ion-ios-help-outline px-15 color-icono-help"></i></a></dt><!-- Pantalla 1000 --><dt class="px-14 width-68 text-regular costo-total-pp">Costo Total CrÃ©dito (CTC) <a class="text-color-12 mensaje-cuotas" href="javascript:void(0);" popover="El Costo Total del CrÃ©dito indica el dinero que pagarÃ¡s por tu crÃ©dito,\n                                            tomando en consideraciÃ³n todos los cobros y gastos asociados." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false"><i class="ion-ios-help-outline px-15 color-icono-help"></i></a></dt><dd class="text-bold px-14 width-32">${{simulacion.costoTotal | MontoFilter}}</dd></dl></div><div class="color-0 width-100 pt-0 pb-10 pl-15 pr-15 bch-border-bottom-muted"><div class="text-center"><a class="btn" ng-click="seleccionaCredito.test($index)"><span class="px-12 text-bold flex-center text-collapsed-publico" ng-show="seleccionaCredito.isCollapsed{{$index}}" class="text-color-1 flex-center">VER MÃS DETALLES</span> <span class="px-12 text-bold flex-center text-collapsed-publico" ng-show="!seleccionaCredito.isCollapsed{{$index}}" class="text-color-1">VER MENOS DETALLES</span></a></div></div><div class="card-footer pt-15 pb-15 text-center color-0 posicion-footer"><button ng-if="$index == 0" class="btn flex-center boton-footer pt-0 pb-0" ng-class="btnOpcion{{$index}}" ng-click="seleccionaCredito.selectBoton($index)"><i ng-show="seleccionaCredito.check{{$index}} ==\'chekeado\' " class="ion-ios-checkmark-empty pull-left mr-10 px-25 color-check-footer"></i><span class="pt-10 pb-10">{{seleccionaCredito.opcion0}}</span></button> <button ng-if="$index == 1" class="btn flex-center boton-footer pt-0 pb-0" ng-class="btnOpcion{{$index}}" ng-click="seleccionaCredito.selectBoton($index)"><i ng-show="seleccionaCredito.check{{$index}} ==\'chekeado\' " class="ion-ios-checkmark-empty pull-left mr-10 px-25 color-check-footer"></i><span class="pt-10 pb-10">{{seleccionaCredito.opcion1}}</span></button> <button ng-if="$index == 2" class="btn flex-center boton-footer pt-0 pb-0" ng-class="btnOpcion{{$index}}" ng-click="seleccionaCredito.selectBoton($index)"><i ng-show="seleccionaCredito.check{{$index}} ==\'chekeado\' " class="ion-ios-checkmark-empty pull-left mr-10 px-25 color-check-footer"></i><span class="pt-10 pb-10">{{seleccionaCredito.opcion2}}</span></button></div></div></div></div></div></div><slick id="seleccionMovil" slides-to-show="1" slides-to-scroll="1" dots="true" infinite="false"><div ng-repeat="simulacion in seleccionaCredito.ordenMobile" class="col-xs-12 col-md-4 col-lg-4 mt-20 selecciona-plan pl-5 pr-5"><div class="bch-pricing-plan margen-tablet" ng-class="activeOpcionM{{$index}}"><div class="card-simulador-publico"><div class="card-header pt-5 pb-5 text-center pl-15 pr-15"><h5 class="card-title mt-5 mb-5 text-bold text-center padd-none">{{simulacion.totalPrimaSeguros}} </h5></div><div class="card-body color-0 fondo-blanco"><div class="color-0 width-100 pt-15 pb-0 pl-15 pr-15"><div class="row mb-10 mt-0"><div class="col-xs-12"><div class="col-12 padd-none"><p class="gray-dark-simulador-publico text-regular mb-5">Monto solicitado</p></div><div class="col-xs-12 padd-none"><h3 class="text-color-2 mb-0 text-bold">${{simulacion.montoSolicitado | MontoFilter}} <span class="text-regular">en</span> <span>{{simulacion.numeroCuotas}} cuotas</span></h3></div></div></div><div class="row border-inferior-resultado"><dl><dt class="mb-0 px-12 gray-dark-simulador-publico text-regular width-55 width-monto-cuota">Monto cuota mensual</dt><dd class="mb-0 px-12 gray-dark-simulador-publico text-regular width-45 width-cae-simulador" style="text-align: left">CAE</dd></dl><dl class="mb-15"><dt class="text-color-2 mb-0 text-bold px-20 width-55 width-valor-cuota">${{simulacion.valorCuota | MontoFilter}} </dt><dd class="text-color-2 mb-0 text-bold flex-center px-20 width-45 width-valor-cae"> {{simulacion.cae | number:2}}% <a class="text-color-12 mensaje-cuotas flex-center" href="javascript:void(0);" popover="Es un valor que te ayuda a comparar y elegir el crÃ©dito mÃ¡s conveniente. Al comparar dos crÃ©ditos del mismo tipo y con el mismo plazo, el que tenga la CAE mÃ¡s baja serÃ¡ el mÃ¡s barato." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false" popover-title="movil"><i class="ion-ios-help-outline px-15 color-icono-help ml-5"></i></a></dd></dl></div></div><div class="color-0 width-100 pt-15 pl-15 pr-15 gray-dark-selecciona-pp"><dl><dt class="px-14 width-60 pb-10 text-regular width-tasa-interes">Tasa de interÃ©s Internet</dt><dd class="width-40 pb-5 width-tasa-mensual"><span class="px-14 text-bold">{{simulacion.tasa | number:2}}% mensual</span><br><span class="px-12">{{simulacion.tasa*12 | number:2}}% anual</span></dd></dl></div><div class="color-0 width-100 pt-0 pl-15 pr-15 gray-dark-selecciona-pp"><dl><dt class="px-14 pb-5 text-regular">Fecha primer pago</dt><dd class="px-14 pb-5 text-bold">{{seleccionaCredito.fechaPrimerPago}}</dd></dl></div><div class="color-0 width-100 pt-0 pl-15 pr-15 gray-dark-selecciona-pp"><dl class="pt-0"><dt class="px-14 pb-5 text-regular width-meses-no-pago">Meses de No Pago</dt><dd class="pb-5 px-14 text-bold width-meses">{{seleccionaCredito.mesesNoPago | MesesNoPago}}</dd></dl></div><div class="color-0 width-100 pt-0 pl-15 pr-15 gray-dark-selccciona-credito gray-dark-selecciona-pp"><dl class="pt-0"><dt class="px-14 pb-5 flex-center text-regular">Seguros asociados <a class="text-color-12 mensaje-cuotas flex-center" ng-if="seleccionaCredito.tooltip[$index]" href="javascript:void(0);" popover="Para tu tranquilidad y la de tu familia, el Seguro de Desgravamen es obligatorio para crÃ©ditos mayores a 48 cuotas." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false"><i class="ion-ios-help-outline px-15 color-icono-help ml-5"></i></a></dt><dd class="px-14 text-bold">{{seleccionaCredito.isSeguros[$index]}}</dd></dl></div><div collapse="seleccionaCredito.isCollapsed{{$index}}" class="width-100 pt-5 pb-0 pl-15 pr-15 mb-15 contendor-collapse-simulador"><div class="row"><div class="col-xs-12 col-sm-12 color-0"><p class="text-bold gray-dark-simulador-publico">Detalles del CrÃ©dito</p></div></div><div class="row fondo-simulador-publico"><div class="col-xs-12 col-sm-12"><div class="width-100 pt-10 pl-15 pr-15 mb-5" ng-if="seleccionaCredito.isSeguros[$index] !== \'No\'"><div class="row border-texto bch-border-bottom-muted gray-dark-selecciona-pp"><div class="col-xs-12"><dl><dt class="text-regular">Seguros asociados</dt><dd class="text-bold pb-5">${{simulacion.seguros | TotalSegurosFilter}}</dd></dl></div></div><div class="row"><div class="col-xs-12 padd-none"><div class="pt-5 pl-15 pr-15 width-100 gray-dark-selecciona-pp"><dl ng-repeat="seguro in simulacion.seguros"><dt class="pt-5 text-regular">{{seguro.descripcion}}</dt><dd class="pt-5 text-regular">${{seguro.prima | MontoFilter}}</dd></dl></div></div></div></div><div class="width-100 pt-10 pl-15 pr-15 pb-5"><div class="row bch-border-bottom-muted gray-dark-selecciona-pp"><div class="col-xs-12"><dl class="pb-5"><dt class="px-12 text-regular">Impuestos y NotarÃ­a</dt><dd class="px-12 text-bold">${{simulacion | TotalImpuestoNotariaFilter}} </dd></dl></div></div><div class="row"><div class="col-xs-12 padd-none"><div class="pt-5 pl-15 pr-15 width-100 gray-dark-selecciona-pp"><dl class="pt-5"><dt class="width-70 text-regular">Impuesto de Timbre y Estampilla</dt><dd class="width-30 text-regular">${{simulacion.totalImpuestoTimbre | MontoFilter}}</dd></dl><dl class="pt-5"><dt class="text-regular">Gastos Notariales</dt><dd class="text-regular">${{simulacion.totalNotario | MontoFilter}}</dd></dl></div></div></div></div><div class="width-100 pt-10 pl-15 pr-15 gray-dark-selecciona-pp"><dl class="pb-10"><dt class="px-12 text-regular">Monto bruto del CrÃ©dito</dt><dd class="px-12 text-bold">${{simulacion.montoBruto | MontoFilter}} </dd></dl></div></div></div></div><div class="width-100 pt-0 pb-10 pl-15 pr-15 gray-dark-selecciona-pp color-0"><dl><dt class="px-14 width-69 flex-center text-regular hidden-xs">Costo Total CrÃ©dito (CTC) <a class="text-color-12 mensaje-cuotas flex-center ml-5" href="javascript:void(0);" popover="El Costo Total del CrÃ©dito indica el dinero que pagarÃ¡s por tu crÃ©dito,\n                                            tomando en consideraciÃ³n todos los cobros y gastos asociados." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false"><i class="ion-ios-help-outline px-15 color-icono-help"></i></a></dt><dd class="text-bold px-14 width-31">${{simulacion.costoTotal | MontoFilter}}</dd></dl></div><div class="color-0 width-100 pt-0 pb-10 pl-15 pr-15 bch-border-bottom-muted"><div class="text-center"><a class="btn" ng-click="seleccionaCredito.test($index)"><span class="px-12 text-bold flex-center text-collapsed-publico" ng-show="seleccionaCredito.isCollapsed{{$index}}" class="text-color-1 flex-center">VER MÃS DETALLES</span> <span class="px-12 text-bold flex-center text-collapsed-publico" ng-show="!seleccionaCredito.isCollapsed{{$index}}" class="text-color-1">VER MENOS DETALLES</span></a></div></div><div class="card-footer pt-15 pb-15 text-center color-0 posicion-footer"><button ng-if="$index == 0" class="btn flex-center boton-footer pt-0 pb-0" ng-class="btnOpcionM{{$index}}" ng-click="seleccionaCredito.selectBotonMobile($index)"><i ng-show="seleccionaCredito.checkM{{$index}} ==\'chekeado\' " class="ion-ios-checkmark-empty pull-left mr-10 px-25 color-check-footer"></i><span class="pt-10 pb-10" ng-bind="seleccionaCredito.opcionM{{$index}}"></span></button> <button ng-if="$index == 1" class="btn flex-center boton-footer pt-0 pb-0" ng-class="btnOpcionM{{$index}}" ng-click="seleccionaCredito.selectBotonMobile($index)"><i ng-show="seleccionaCredito.checkM{{$index}} ==\'chekeado\' " class="ion-ios-checkmark-empty pull-left mr-10 px-25 color-check-footer"></i><span class="pt-10 pb-10" ng-bind="seleccionaCredito.opcionM{{$index}}"></span></button> <button ng-if="$index == 2" class="btn flex-center boton-footer pt-0 pb-0" ng-class="btnOpcionM{{$index}}" ng-click="seleccionaCredito.selectBotonMobile($index)"><i ng-show="seleccionaCredito.checkM{{$index}} ==\'chekeado\' " class="ion-ios-checkmark-empty pull-left mr-10 px-25 color-check-footer"></i><span class="pt-10 pb-10" ng-bind="seleccionaCredito.opcionM{{$index}}"></span></button></div></div></div></div></div></slick></div><div class="row mt-30 hidden-xs"><div class="col-xs-12 col-md-12 text-right mt-30 mb-15"><button class="btn info pt-10 pb-10" ui-sref="publico-simulacion-credito-consumo({banca: \'{{seleccionaCredito.marca.toUpperCase()}}\'})">Volver a simular</button> <button class="btn success pt-10 pb-10" ng-click="seleccionaCredito.siguiente()">Confirmar crÃ©dito</button></div></div><!-- Botones Mobile --><div class="row hidden-sm hidden-md hidden-lg"><div class="col-xs-12 col-md-12 text-right mb-15"><button class="btn success width-boton-movil boton-enviar-movil pt-10 pb-10" ng-click="seleccionaCredito.siguiente()">Confirmar crÃ©dito</button> <button class="btn info width-boton-movil boton-elegir-movil pt-10 pb-10" ui-sref="publico-simulacion-credito-consumo ({banca: \'{{seleccionaCredito.marca.toUpperCase()}}\'})">Volver a simular</button></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-12"><div class="mt-10 mb-30 pt-10 pb-10 border-top"><p class="px-11 text-regular text-color-12">La tasa de interÃ©s y los gastos informados son referenciales y estÃ¡n sujetos a confirmaciÃ³n de parte del Banco. El valor de la cuota, la CAE y el costo final del crÃ©dito son igualmente referenciales y se han calculado considerando todos los conceptos y montos que constan precedentemente en esta simulaciÃ³n.</p><p class="px-11 text-regular text-color-12">La presente simulaciÃ³n sÃ³lo es de carÃ¡cter informativa y no constituye aprobaciÃ³n del crÃ©dito ni oferta de tasa de interÃ©s. El otorgamiento del crÃ©dito, asÃ­ como sus condiciones de plazo y tasa de interÃ©s, estÃ¡n sujetos a evaluaciÃ³n previa del Banco.</p><p class="px-11 text-regular text-color-12">La contrataciÃ³n de Seguro de Desgravamen es voluntaria, salvo en el caso que el monto de capital del crÃ©dito sea superior a 500 Unidades de Fomento o a su equivalente en pesos, o que el nÃºmero de cuotas en que deba ser pagado sea superior a 48. En cualquiera de esos eventos, o en el caso de verificarse ambos conjuntamente, el CrÃ©dito de Consumo debe contar con un seguro de desgravamen de cargo del cliente.</p><p class="px-11 text-regular text-color-12">El Cliente siempre puede optar por contratar el seguro ofrecido por el Banco o contratarlo directamente en cualquier compaÃ±Ã­a de seguros. En este Ãºltimo caso, el seguro deberÃ¡ considerar lo siguiente: i) debe tener una cobertura mÃ­nima que considere muerte natural y muerte accidental y debe cubrir el saldo insoluto de la deuda al momento del fallecimiento; ii) la compaÃ±Ã­a aseguradora debe tener una clasificaciÃ³n de riesgo igual o superior a AA; y iii) el beneficiario del seguro debe ser Banco de Chile. En ningÃºn caso el otorgamiento del crÃ©dito ni sus tÃ©rminos de contrataciÃ³n estarÃ¡n condicionados a la contrataciÃ³n del seguro ofrecido por el Banco. La contrataciÃ³n de Seguro de Desempleo Involuntario e Incapacidad Temporal es voluntaria cualquiera sea el monto de capital del crÃ©dito o sus cuotas. La contrataciÃ³n del Seguro de Desgravamen a travÃ©s de la CompaÃ±Ã­a ofrecida por el Banco, estÃ¡ sujeto al cumplimiento de los requisitos de asegurabilidad exigidos por esa CompaÃ±Ã­a.</p></div></div></div></div></section>');
	}]), angular.module("simulador-pp-publico/src/modules/simula-credito/simula-credito.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("simulador-pp-publico/src/modules/simula-credito/simula-credito.tpl.html", '<section class="ml-20 mr-20 simulador-credito-consumo-publico simulador-pp-publico-{{simulaCredito.banca.siglas}}"><div class="spinner" ng-if="simulaCredito.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><div class="bch-empresas-subtabs"><div class="row mt-25"><!-- Step Mobile --><div class="col-xs-12 col-md-6 mb-30 hidden-sm hidden-md hidden-lg"><div class="bch-steps-horizontales-numerados text-center"><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--active"><h6>Simula tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step"><h6>Elige tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step"><h6>Solicita tu CrÃ©dito</h6></div></div></div><!-- Step Mobile --><div class="col-xs-12 col-sm-6 col-md-6"><h2 class="mb-20 text-color-2 text-regular">Simula tu CrÃ©dito de Consumo</h2></div><div class="col-xs-5 col-md-6 hidden-xs"><div class="bch-steps-horizontales-numerados pull-right"><div class="bch-steps-horizontales-numerados__step bch-steps-horizontales-numerados__step--active"><h6>Simula tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step"><h6>Elige tu CrÃ©dito</h6></div><div class="bch-steps-horizontales-numerados__step"><h6>Solicita tu CrÃ©dito</h6></div></div></div></div><section class="bch-steps mt-30 container-simula-credito"><article class="step" ng-class="{\'done\':simulaCredito.stepCompleted(1)}" data-step="1"><h3 class="text-color-2 espaciado-titulo-movil mb-25">Datos personales</h3><h5 class="gray-simulador-publico text-regular margen-movil-ingresa">Ingresa tus datos, para entregarte una mejor experiencia</h5><div class="row"><div class="col-xs-12 col-md-12 mb-25"><form name="frm1" novalidate><div class="row"><div class="col-xs-12 col-sm-4 col-md-3 form-group mb-10 mt-5"><label>RUT</label><input type="text" class="form-control" name="rut" placeholder="Ingresa tu RUT" required ng-model="simulaCredito.rut" ng-rut delete-zero-left autofocus="false" maxlength="12" ng-change="simulaCredito.step1 = false; simulaCredito.isCliente = false; !frm1.rut.$invalid && simulaCredito.gRecaptchaResponse != \'\' && simulaCredito.gRecaptchaResponse != null && simulaCredito.reset()"> <small ng-if="frm1.rut.$error.required && frm1.rut.$touched" class="invalid display-block">Debes ingresar tu RUT</small> <small ng-if="!frm1.rut.$error.required && frm1.rut.$invalid" class="invalid display-block">Ingresa un RUT vÃ¡lido</small></div><div class="col-xs-12 col-sm-4 mt-5 ml-10 pl-0 contenedor-boton-validar" ng-if="!simulaCredito.stepCompleted(1)"><label class="hidden-xs" for="">&nbsp;</label><button type="button" class="btn success ladda-button ml-0 pt-10 pb-10 boton-validar width-boton-movil" ng-click="!frm1.rut.$invalid && !simulaCredito.isErrorMsgActive && simulaCredito.validarRut()" ladda="simulaCredito.loadingRutCaptcha" data-style="expand-right" ng-disabled="frm1.rut.$invalid || simulaCredito.isCliente">Validar RUT</button></div><div class="col-xs-12 col-sm-5 col-md-4 form-group mt-5 margen-renta-movil" ng-if="simulaCredito.stepCompleted(1)"><label>Tramo de renta</label><ui-select class="minusculas-select" required="required" ng-change="simulaCredito.cambioTramoRenta();" ng-model="simulaCredito.tramo" onkeypress="return false" search-enabled="false" reset-search-input="true"><ui-select-match placeholder="Selecciona..."><span ng-bind="$select.selected.descripcion"></span></ui-select-match><ui-select-choices class="biggerGroup" repeat="tramo in simulaCredito.tramos"><span ng-bind="tramo.descripcion" class="text-regular px-14"></span></ui-select-choices></ui-select></div><div class="col-xs-12 mt-20 margen-info-captcha"><p class="gray-dark-simulador-publico px-12 mb-0 text-regular">Protegido por reCAPTCHA - <a class="gray-dark-simulador-publico px-12" href="https://policies.google.com/privacy" target="_blank">Privacidad</a> - <a class="gray-dark-simulador-publico px-12" href="https://policies.google.com/terms" target="_blank">Condiciones</a></p></div><!-- <div class="col-xs-12">\n                                    <no-captcha g-recaptcha-response="simulaCredito.gRecaptchaResponse"\n                                        control="simulaCredito.resetCaptchaReset"\n                                        expired-callback="simulaCredito.expiredCatcha">\n                                    </no-captcha>\n                                    \n                                    \n                                </div> --><div class="col-xs-12" ng-show="simulaCredito.isCliente "><div class="bch-mensaje-empresas success" ng-show="!simulaCredito.tienePreaprobado"><article><p>Estimado cliente, tenemos una oferta de CrÃ©dito con tasa preferencial para ti. Ingresa a tu Banca en Linea para acceder a esta oferta.</p></article></div><div class="bch-mensaje-empresas success" ng-show="simulaCredito.tienePreaprobado"><article><p>Estimado cliente, tenemos una oferta de CrÃ©dito preaprobado con tasa preferencial para ti. Ingresa a tu Banca en Linea para acceder a esta oferta.</p></article></div><button class="btn success pull-right mt-15 width-boton-movil margen-ingresa-movil pt-10 pb-10" ng-click="simulaCredito.redirectSimulacionPrivado()"><span>Ingresar a Banca en linea</span></button></div><!-- <div class="col-xs-12 mt-20 text-right">\n                                    <button class="g-recaptcha" \n                                        data-sitekey="onSubmit" \n                                        data-callback=\'onSubmit\' \n                                        data-action=\'submit\'>Submit</button>\n                                </div> --></div></form></div></div><div class="spinner" ng-if="simulaCredito.tallerProductoLoading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div></article><article class="step" data-step="2" ng-class="{\'done\':simulaCredito.stepCompleted(1), \'disabled\':!simulaCredito.stepCompleted(1) || simulaCredito.objetoVacio(simulaCredito.listaProductos) }"><h3 class="text-color-2 espaciado-titulo-movil mb-25">Monto a solicitar</h3><div class="row"><div class="col-xs-12 col-md-12 mb-15"><div class="row"><div class="col-xs-12 col-sm-4 col-md-3 form-group mb-10"><label>Monto</label><input type="text" class="form-control" id="monto" name="monto" placeholder="$3.000.000" ng-model="simulaCredito.simulador.monto" ng-change="simulaCredito.validarMonto()" ng-currency maxlength="15" required="required" placeholder="Ej. $3.000.000" ng-class="{\'ng-invalid\': simulaCredito.isInValido}" numeric-only="numeric-only"> <small class="invalid display-block" ng-if="simulaCredito.isMontoVacio">Debes ingresar un monto entre {{simulaCredito.montoMinimoValor | currency : \'$\' : 0}} y {{simulaCredito.montoMaximoValor | currency : \'$\' : 0}}</small><small class="invalid display-block" ng-if="simulaCredito.isMontoMenorQueMinimo">Debes ingresar un monto entre {{simulaCredito.montoMinimoValor | currency : \'$\' : 0}} y {{simulaCredito.montoMaximoValor | currency : \'$\' : 0}}</small><small class="invalid display-block" ng-if="simulaCredito.isMontoMayorQueMaximo">Debes ingresar un monto entre {{simulaCredito.montoMinimoValor | currency : \'$\' : 0}} y {{simulaCredito.montoMaximoValor | currency : \'$\' : 0}}</small></div></div></div></div></article><article id="step2" class="step" data-step="3" ng-class="{\'done\':simulaCredito.stepCompleted(1), \'disabled\':!simulaCredito.stepCompleted(1) || simulaCredito.objetoVacio(simulaCredito.listaProductos)}"><h3 class="text-color-2 espaciado-titulo-movil mb-25">Datos de tu CrÃ©dito</h3><h5 class="gray-simulador-publico text-regular margen-movil-ingresa">Recuerda que puedes aplazar la fecha de tu primer pago hasta en <strong>90 dÃ­as</strong></h5><div class="row"><div class="col-xs-12 col-md-11 col-lg-10 mt-5 mb-10"><div class="row"><div class="col-xs-12 col-sm-4 col-md-3 form-group mb-30"><label>NÃºmero de cuotas</label><input type="text" name="numeroCuotas" class="form-control" ng-class="{\'ng-invalid\': simulaCredito.isInvalid }" placeholder="24" ng-model="simulaCredito.numeroCuotas" ng-change="simulaCredito.evaluateCuota(); simulaCredito.changeFechas();" maxlength="2" numeric-only="numeric-only"> <small class="invalid" ng-if="simulaCredito.iscuotaMaxima || simulaCredito.iscuotaMinima || simulaCredito.cuotaVacia">Ingresa un nÃºmero entre 6 y 60</small></div><div class="col-xs-12 col-sm-5 col-md-4 form-group mb-30"><label>Fecha primer pago</label><p class="input-group mb-0"><input id="dt" name="dt" ng-readonly="true" type="text" class="form-control" show-button-bar="false" datepicker-popup="dd/MM/yyyy" ng-model="simulaCredito.dt" ng-change="simulaCredito.validaDiaPagos()" is-open="simulaCredito.dpIsOpened" datepicker-options="false" close-text="Close" min-date="simulaCredito.date.startDate" max-date="simulaCredito.date.endDate" date-disabled="simulaCredito.disabledDPDays(date, mode)"> <span class="input-group-btn"><button type="button" class="btn border" ng-click="simulaCredito.openDP($event)"><i class="ion-calendar"></i></button></span></p></div></div><div class="row"><div class="col-xs-12 form-group mb-0 flex-center mb-15"><label class="bch-custom-check mr-10"><div><input type="checkbox" ng-model="simulaCredito.isActivadoMesesNoPago" ng-change="simulaCredito.validarMesesNoPago()"> <i></i></div><span class="text-color-2 px-16 pl-5">Necesito meses de No Pago<a class="text-color-12 mensaje-cuotas ml-10" href="javascript:void(0);" popover="Puedes elegir 1 o 2 meses al aÃ±o en los que no se te cobre la cuota. Si eliges\n                                        el mes de la fecha del primer pago, este mes empezarÃ¡ a contar desde el\n                                        siguiente aÃ±o." popover-placement="top" popover-trigger="focus" popover-append-to-body="false" popover-animation="false" popover-title="Meses"><i class="ion-ios-help-outline px-18 hover-icono-meses text-color-12"></i></a></span></label></div></div><!-- [INICIA] ACEPTA MESES DE NO PAGO --><div class="row" ng-if="simulaCredito.isActivadoMesesNoPago && simulaCredito.isFechaPrimerPagoValida"><div class="col-xs-12 col-sm-10 col-md-8 form-group mb-5"><div class="minerva-card-resume pt-15 pl-20 pr-20 pb-15 width-100"><h6 class="text-bold mb-15 gray-dark-simulador-publico">Selecciona tus meses de No Pago</h6><div class="row"><div class="col-xs-12 col-sm-5 form-group mb-10"><label>Primer mes</label><ui-select class="minusculas-select" required="required" ng-model="simulaCredito.simulador.primerMesNoPago" onkeypress="return false" search-enabled="false" reset-search-input="true" ng-change="simulaCredito.reiniciarSegundoMesNoPagoLista(); simulaCredito.validarMesesNoPago()"><ui-select-match placeholder="Selecciona..."><span ng-bind="$select.selected.descValidacion"></span></ui-select-match><ui-select-choices class="biggerGroup" repeat="primerMesNoPago in simulaCredito.listaPrimerMesNoPago"><span ng-bind="primerMesNoPago.descValidacion" class="text-regular px-14"></span></ui-select-choices></ui-select></div><div class="col-xs-12 col-sm-5 form-group mb-10"><label>Segundo mes (opcional)</label><ui-select class="minusculas-select" required="required" ng-model="simulaCredito.simulador.segundoMesNoPago" onkeypress="return false" search-enabled="false" reset-search-input="true" ng-disabled="simulaCredito.isSegundoMesNoPagoSDisabled" ng-change="simulaCredito.validarPrimerPagoYMesesNoPagoMensaje(); simulaCredito.validarReglaMesesNoPago()"><ui-select-match placeholder="Selecciona..."><span ng-bind="$select.selected.descValidacion"></span></ui-select-match><ui-select-choices class="biggerGroup" repeat="segundoMesNoPago in simulaCredito.listaSegundoMesNoPago"><span ng-bind="segundoMesNoPago.descValidacion" class="text-regular px-14"></span></ui-select-choices></ui-select></div><div class="col-xs-5 col-md-5"></div><div class="col-xs-12 col-sm-6 col-md-7 col-lg-6 pr-0" ng-if="!simulaCredito.isSegundoMesNoPagoSDisabled"><p class="px-12 mt-0 gray-simulador-publico text-regular">Los meses que elijas no pueden ser consecutivos.</p></div></div><!-- [INICIA] Mensaje de alerta --><div class="row" ng-if="simulaCredito.isMensajeProximoAnhoMes"><div class="col-xs-12"><div class="bch-mensaje-empresas warning"><article><article><p>El beneficio aplicarÃ¡ en <span ng-bind="simulaCredito.mensajeMesProximoAnho"></span> del prÃ³ximo aÃ±o, pues coincide con el mes de tu <span ng-bind="simulaCredito.primerOSegundoMes"></span> pago.</p></article></article></div></div></div><!-- [TERMINA] Mensaje de alerta --></div></div></div><!-- [TERMINA] ACEPTA MESES DE NO PAGO --><!-- [INICIA] Mensaje de alerta --><div class="row" ng-if="simulaCredito.isActivadoMesesNoPago && !simulaCredito.isFechaPrimerPagoValida"><div class="col-xs-12 col-sm-9 col-md-7"><div class="bch-mensaje-empresas error mt-15"><article><p>Selecciona fecha de primer pago entre los dÃ­as 01 y 26 del mes, para acceder a Meses de No Pago.</p></article></div></div></div><!-- [TERMINA] Mensaje de alerta --></div></div></article><article id="step3" class="step seguros-asociado" data-step="4" ng-class="{\'done\':simulaCredito.stepCompleted(2), \'disabled\':!simulaCredito.stepCompleted(1) || simulaCredito.objetoVacio(simulaCredito.listaProductos)}"><h3 class="text-color-2 espaciado-titulo-movil mb-15">Seguros asociados</h3><div class="row"><div class="col-xs-12 col-sm-12 col-md-10 mb-30"><div><div class="row mb-5"><div class="col-xs-12 col-sm-12 col-md-12 form-group mb-0" ng-class="{\'desactivar-switch-desgravamen \' : simulaCredito.isSeguroDesgravamenDisabled }"><label class="switch success mb-0 pb-0 mr-15 pt-10 ancho-switch-pp display-flex alinear-seguros"><input type="checkbox" ng-model="simulaCredito.isSeguroDesgravamen" ng-disabled="simulaCredito.isSeguroDesgravamenDisabled"> <i></i><!-- Circle --><div class="text-default ml-10"><span class="gray-dark-simulador-publico mb-5 px-16 mt-0 text-regular">Seguro de Desgravamen</span> <span class="gray-simulador-publico text-regular mb-10 mt-0">En caso de fallecimiento del titular, cubre la deuda total del CrÃ©dito la cual no deberÃ¡ ser pagada por sus herederos legales. No se consideran intereses adeudados y/o cobros por mora.</span></div></label></div></div></div><div class="row mt-0 mb-5" ng-if="simulaCredito.isSeguroDesgravamenDisabled"><div class="col-xs-11 col-sm-11 col-md-10 col-lg-8 pl-30 ml-15"><div class="bch-mensaje-empresas information mt-0 ml-30"><article><p>{{simulaCredito.textSeguro}}</p></article></div></div></div><div class="row mb-5"><div class="col-xs-12 col-sm-12 form-group mb-0"><label class="switch success mb-0 pb-0 mr-15 pt-10 ancho-switch-pp display-flex alinear-seguros"><input type="checkbox" ng-model="simulaCredito.isSeguroDesempleo" ng-disabled="simulaCredito.isSeguroDesempleoDisabled"> <i></i><!-- Circle --><div class="text-default ml-10"><span class="gray-dark-simulador-publico mb-5 px-16 mt-0 text-regular">Seguro de Desempleo Involuntario e Incapacidad Temporal </span><span class="gray-simulador-publico text-regular mb-10 mt-0">Cubre hasta 3 cuotas del CrÃ©dito en caso de cesantÃ­a involuntaria o incapacidad temporal del asegurado.</span></div></label></div></div></div></div><div class="row mt-30 margen-simular-movil"><div class="col-xs-12 col-md-12"><div class="row"><div class="col-xs-12 text-right"><button class="btn success ladda-button width-boton-movil pt-10 pb-10" ng-click="simulaCredito.simular()" ladda="simulaCredito.loadingSimulacion" data-style="expand-right" ng-disabled="!simulaCredito.getSimulacionFormIsValid()">SIMULAR MI CRÃ‰DITO</button></div></div></div></div><!-- Mensaje error--><div class="row" ng-if="simulaCredito.mostrarEnvioError"><div class="col-xs-12 col-sm-12 col-md-9 col-lg-8"><div class="bch-mensaje-empresas error mt-30 mb-0"><article><p>Â¡Ups! Tuvimos un problema al simular. Por favor, intenta nuevamente.</p></article></div></div></div></article></section><div class="row"><div class="col-xs-12 col-sm-12 col-md-12"><div class="width-100 mt-15 mb-30 pt-10 pb-10 border-top text-regular margen-texto-legal-movil"><p class="px-11 text-color-12">La tasa de interÃ©s y los gastos informados son referenciales y estÃ¡n sujetos a confirmaciÃ³n de parte del Banco. El valor de la cuota, la CAE y el costo final del crÃ©dito son igualmente referenciales y se han calculado considerando todos los conceptos y montos que constan precedentemente en esta simulaciÃ³n.</p><p class="px-11 text-color-12">La presente simulaciÃ³n sÃ³lo es de carÃ¡cter informativa y no constituye aprobaciÃ³n del crÃ©dito ni oferta de tasa de interÃ©s. El otorgamiento del crÃ©dito, asÃ­ como sus condiciones de plazo y tasa de interÃ©s, estÃ¡n sujetos a evaluaciÃ³n previa del Banco.</p><p class="px-11 text-color-12">La contrataciÃ³n de Seguro de Desgravamen es voluntaria, salvo en el caso que el monto de capital del crÃ©dito sea superior a 500 Unidades de Fomento o a su equivalente en pesos, o que el nÃºmero de cuotas en que deba ser pagado sea superior a 48. En cualquiera de esos eventos, o en el caso de verificarse ambos conjuntamente, el CrÃ©dito de Consumo debe contar con un seguro de desgravamen de cargo del cliente.</p><p class="px-11 text-color-12">El Cliente siempre puede optar por contratar el seguro ofrecido por el Banco o contratarlo directamente en cualquier compaÃ±Ã­a de seguros. En este Ãºltimo caso, el seguro deberÃ¡ considerar lo siguiente: i) debe tener una cobertura mÃ­nima que considere muerte natural y muerte accidental y debe cubrir el saldo insoluto de la deuda al momento del fallecimiento; ii) la compaÃ±Ã­a aseguradora debe tener una clasificaciÃ³n de riesgo igual o superior a AA; y iii) el beneficiario del seguro debe ser Banco de Chile. En ningÃºn caso el otorgamiento del crÃ©dito ni sus tÃ©rminos de contrataciÃ³n estarÃ¡n condicionados a la contrataciÃ³n del seguro ofrecido por el Banco. La contrataciÃ³n de Seguro de Desempleo Involuntario e Incapacidad Temporal es voluntaria cualquiera sea el monto de capital del crÃ©dito o sus cuotas. La contrataciÃ³n del Seguro de Desgravamen a travÃ©s de la CompaÃ±Ã­a ofrecida por el Banco, estÃ¡ sujeto al cumplimiento de los requisitos de asegurabilidad exigidos por esa CompaÃ±Ã­a.</p></div></div></div></div></section>')
	}]), angular.module("simulador-pp-publico/src/modules/simulador-pp-publico-error/simulador-pp-publico-error.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("simulador-pp-publico/src/modules/simulador-pp-publico-error/simulador-pp-publico-error.tpl.html", '<div class="simulador-credito-consumo-publico mt-25 simulador-pp-publico-{{simuladorPPPublicoError.marca}}"><section class="row contenedor-error-captcha"><section class="col-xs-12 col-sm-10 centrar-error"><div class="col-xs-12 col-sm-8 icono-error-captcha text-center"><h2 class="mt-15 color-minerva-error">Â¡Ups! Tuvimos un problema</h2><!-- <h5 class="gray-simulador-publico mt-15">\n                    Lo sentimos, tuvimos un problema de conexiÃ³n.<br>\n                    Volveremos a cargar el sitio, para que lo intentes nuevamente.\n                </h5> --><h5 class="gray-simulador-publico mt-15"> {{simuladorPPPublicoError.informacion.message}}.<br>Por favor vuelve a cargar el sitio.</h5><!-- <button type="button" class="btn success ml-0 mt-5 width-boton-mobile" ng-click="simuladorPPPublicoError.recargar()">CARGAR EL SITIO</button> --><!-- <button type="button" class="btn neutro mt-15" ng-if="false">Continuar</button> --></div></section></section></div>')
	}]), angular.module("solicitud-clave-persona/src/directives/nuevaClave/nuevaClave.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("solicitud-clave-persona/src/directives/nuevaClave/nuevaClave.tpl.html", '<h3>Ingresa Nueva Clave</h3><div class="row"><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Ingresar nueva Clave</label><input id="inputNuevaClave" type="password" class="form-control" placeholder="" ng-model="nc.solicitudClave.nuevaClave.data.nuevaClave" ng-blur="nc.validarNuevaClave();" ng-change="nc.changeNuevaClave();" presiona-enter="nc.validarNuevaClaveYReingresoEnter();" maxlength="8" ng-disabled="nc.solicitudClave.inputDisable"> <small class="invalid">{{nc.solicitudClave.nuevaClave.mensajeNuevaClave}}</small></div><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Reingresar nueva Clave</label><input id="inputReingresoNuevaClave" type="password" class="form-control" placeholder="" ng-model="nc.solicitudClave.nuevaClave.data.reingresoNuevaClave" ng-blur="nc.validarReingresoNuevaClave();" ng-change="nc.changeReingresoNuevaClave();" presiona-enter="nc.validarNuevaClaveYReingresoEnter();" maxlength="8" ng-disabled="nc.solicitudClave.inputDisable"> <small class="invalid">{{nc.solicitudClave.nuevaClave.mensajeReingresoNuevaClave}}</small></div><div class="form-group col-sm-4 col-md-4 col-lg-4 politica-scp"><politicas-seguridad password-strength="{{nc.solicitudClave.nuevaClave.data.nuevaClave}}"></politicas-seguridad></div></div>')
	}]), angular.module("solicitud-clave-persona/src/directives/validacionBancoEnLinea/validacionBancoEnLinea.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("solicitud-clave-persona/src/directives/validacionBancoEnLinea/validacionBancoEnLinea.tpl.html", '<div class="row"><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Rut</label><input id="inputRutBancoEnLinea" type="text" class="form-control" placeholder="" ng-model="vbl.solicitudClave.bancoEnLinea.data.rut" ng-blur="vbl.validaRutBancoEnLinea();" ng-change="vbl.changeRutBancoEnLinea();" presiona-enter="vbl.validarUsuarioBancoEnLineaEnter();" maxlength="12" delete-zero-left> <small class="invalid">{{vbl.solicitudClave.bancoEnLinea.mensajeRut}}</small><!--small class="invalid">El Rut ingresado no es vÃ¡lido</small--></div><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Clave Internet</label><input id="inputClaveBancoEnLinea" type="password" class="form-control" placeholder="" ng-model="vbl.solicitudClave.bancoEnLinea.data.clave" ng-blur="vbl.validaClaveBancoEnLinea();" ng-change="vbl.changeClaveBancoEnLinea();" presiona-enter="vbl.validarUsuarioBancoEnLineaEnter();" maxlength="8"> <small class="invalid">{{vbl.solicitudClave.bancoEnLinea.mensajeClave}}</small></div><div class="col-sm-4 col-md-4 col-lg-4 validate-box"><div class="btn-loader" ng-if="vbl.solicitudClave.bancoEnLinea.mostrarBotonValidar"><a href="javascript:;" class="btn neutro border ladda-button" ng-click="vbl.validarUsuarioBancoEnLinea();" presiona-enter="vbl.validarUsuarioBancoEnLineaEnter();" data-style="expand-right" data-spinner-color="#3399CC" ladda="vbl.solicitudClave.bancoEnLinea.laddaValidarBancoEnLinea"><span class="ladda-label">Validar </span><span class="ladda-spinner"></span></a></div><span ng-if="vbl.solicitudClave.bancoEnLinea.mostrarOk" class="ok ion-ios-checkmark-outline"></span></div><div class="col-sm-12 col-md-12 col-lg-12" ng-if="vbl.solicitudClave.bancoEnLinea.error"><div class="bch-mensaje-empresas error"><article>{{vbl.solicitudClave.bancoEnLinea.mensajeError}}</article></div></div></div>')
	}]), angular.module("solicitud-clave-persona/src/directives/validacionTarjetaCredito/validacionTarjetaCredito.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("solicitud-clave-persona/src/directives/validacionTarjetaCredito/validacionTarjetaCredito.tpl.html", '<div class="row"><div class="form-group col-sm-6 col-md-4 col-lg-4"><label>Rut</label><input id="inputRutTarjetaCredito" type="text" class="form-control" placeholder="" ng-model="vtc.solicitudClave.tarjetaCredito.data.rut" ng-blur="vtc.validaRutTarjetaCredito();" ng-change="vtc.changeRutTarjetaCredito();" presiona-enter="vtc.validarUsuarioTarjetaCreditoEnter();" maxlength="12" delete-zero-left ng-disabled="vtc.solicitudClave.inputDisable"> <small class="invalid">{{vtc.solicitudClave.tarjetaCredito.mensajeRut}}</small></div><div class="form-group col-sm-6 col-md-4 col-lg-4"><label>NÃºmero Tarjeta Cr&eacute;dito</label><input id="inputNumeroTarjetaCredito" type="password" class="form-control" placeholder="" ng-model="vtc.solicitudClave.tarjetaCredito.data.numeroProducto" ng-blur="vtc.validaNumeroTarjetaCredito();" ng-change="vtc.changeNumeroTarjetaCredito();" presiona-enter="vtc.validarUsuarioTarjetaCreditoEnter();" maxlength="4" ng-disabled="vtc.solicitudClave.inputDisable"> <small class="invalid">{{vtc.solicitudClave.tarjetaCredito.mensajeNumero}}</small></div><div class="form-group col-sm-6 col-md-4 col-lg-4"><label>Clave Pin Pass</label><input id="inputClaveTarjetaCredito" type="password" class="form-control" placeholder="" ng-model="vtc.solicitudClave.tarjetaCredito.data.clave" ng-blur="vtc.validaClaveTarjetaCredito();" ng-change="vtc.changeClaveTarjetaCredito();" presiona-enter="vtc.validarUsuarioTarjetaCreditoEnter();" maxlength="4" ng-disabled="vtc.solicitudClave.inputDisable"> <small class="invalid">{{vtc.solicitudClave.tarjetaCredito.mensajeClave}}</small></div><div class="col-sm-12 col-md-12 col-lg-12 validate-box"><div class="btn-loader" ng-if="vtc.solicitudClave.tarjetaCredito.mostrarBotonValidar"><a href="javascript:;" class="btn neutro border ladda-button" ng-click="vtc.validarUsuarioTarjetaCredito();" presiona-enter="vtc.validarUsuarioTarjetaCreditoEnter();" data-style="expand-right" data-spinner-color="#3399CC" ladda="vtc.solicitudClave.tarjetaCredito.laddaValidarTarjetaCredito"><span class="ladda-label">Validar </span><span class="ladda-spinner"></span></a></div><span ng-if="vtc.solicitudClave.tarjetaCredito.mostrarOk" class="ok ion-ios-checkmark-outline"></span></div><div class="col-sm-12 col-md-12 col-lg-12" ng-if="vtc.solicitudClave.tarjetaCredito.error"><div class="bch-mensaje-empresas error"><article>{{vtc.solicitudClave.tarjetaCredito.mensajeError}}</article></div></div></div>')
	}]), angular.module("solicitud-clave-persona/src/directives/validacionTarjetaDebito/validacionTarjetaDebito.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("solicitud-clave-persona/src/directives/validacionTarjetaDebito/validacionTarjetaDebito.tpl.html", '<div class="row"><div class="form-group col-sm-5 col-md-4 col-lg-4"><label>Rut</label><input id="inputRutTarjetaDebito" type="text" class="form-control" placeholder="" ng-model="vtd.solicitudClave.tarjetaDebito.data.rut" ng-blur="vtd.validaRutTarjetaDebito();" ng-change="vtd.changeRutTarjetaDebito();" presiona-enter="vtd.validarUsuarioTarjetaDebitoEnter();" maxlength="12" delete-zero-left ng-disabled="vtd.solicitudClave.inputDisable"> <small class="invalid">{{vtd.solicitudClave.tarjetaDebito.mensajeRut}}</small></div><div class="form-group col-sm-5 col-md-4 col-lg-4"><label>Clave Tarjeta D&eacute;bito</label><input id="inputClaveTarjetaDebito" type="password" class="form-control" placeholder="" ng-model="vtd.solicitudClave.tarjetaDebito.data.clave" ng-blur="vtd.validaClaveTarjetaDebito();" ng-change="vtd.changeClaveTarjetaDebito();" presiona-enter="vtd.validarUsuarioTarjetaDebitoEnter();" maxlength="4" ng-disabled="vtd.solicitudClave.inputDisable"> <small class="invalid">{{vtd.solicitudClave.tarjetaDebito.mensajeClave}}</small></div><div class="col-sm-12 col-md-12 col-lg-12 validate-box"><div class="btn-loader" ng-if="vtd.solicitudClave.tarjetaDebito.mostrarBotonValidar"><a href="javascript:;" class="btn neutro border ladda-button" ng-click="vtd.validarUsuarioTarjetaDebito();" presiona-enter="vtd.validarUsuarioTarjetaDebitoEnter();" data-style="expand-right" data-spinner-color="#3399CC" ladda="vtd.solicitudClave.tarjetaDebito.laddaValidarTarjetaDebito"><span class="ladda-label">Validar </span><span class="ladda-spinner"></span></a></div><span ng-if="vtd.solicitudClave.tarjetaDebito.mostrarOk" class="ok ion-ios-checkmark-outline"></span></div><div class="col-sm-12 col-md-12 col-lg-12" ng-if="vtd.solicitudClave.tarjetaDebito.error"><div class="bch-mensaje-empresas error"><article>{{vtd.solicitudClave.tarjetaDebito.mensajeError}}</article></div></div></div>')
	}]), angular.module("solicitud-clave-persona/src/solicitud-clave-persona-sinacofi/error-500.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("solicitud-clave-persona/src/solicitud-clave-persona-sinacofi/error-500.tpl.html", '<section class="error-landing-v2 error"><section class="col-md-10 col-md-offset-1"><div class="cont-error-landing"><div class="col-xs-8"><h1><b>Ha ocurrido un problema</b></h1><p>En estos momento no podemos atender tu solicitud, por favor intenta m&aacute;s tarde.</p></div><div class="col-xs-4"><h4>Mesa de Ayuda</h4><p>Comun&iacute;quese con Fonobank<br>Llamando al 600 637 3838</p></div></div><div class="col-lg-12 col-md-12 col-sm-12 text-right"><div class="row"><button class="neutro border btn" ng-click="error.volver()">Volver a Intentarlo</button> <button class="success btn" ui-sref="bancoChile">Aceptar</button></div></div></section></section>')
	}]), angular.module("solicitud-clave-persona/src/solicitud-clave-persona-sinacofi/solicitud-clave-persona-sinacofi.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("solicitud-clave-persona/src/solicitud-clave-persona-sinacofi/solicitud-clave-persona-sinacofi.tpl.html", '<section class="container solicitar-olvido-clave"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><h1>Solicitud de Clave</h1><form><section class="steps forms-empresas"><article class="step done pb-30" data-step="1"><h3 class="mb-20">IdentificaciÃ³n</h3><p class="text-light px-14 mb-25">Ingresa tu rut y clave de tu tarjeta de crÃ©dito o dÃ©bito.</p><div class="row"><div class="col-lg-9 col-md-9 col-sm-9"><div class="row"><div class="col-lg-8 col-md-8 col-sm-8"><div class="row"><div class="col-lg-6 col-md-6 col-sm-6 form-group"><label>Rut</label><input id="inputRutCliente" type="text" class="form-control" ng-model="scps.solClaveData.data.rut" ng-blur="scps.validaRut();" ng-change="scps.changeRut();" maxlength="12" delete-zero-left ng-disabled="scps.datosCliente.disablerut"> <small class="invalid">{{scps.datosCliente.msjErrorRut}}</small></div><div class="col-lg-6 col-md-6 col-sm-6 form-group"><label>Clave Tarjeta</label><input id="inputClaveCliente" type="password" class="form-control" placeholder="" ng-model="scps.solClaveData.data.clave" ng-blur="scps.validaClaveATM();" ng-change="scps.changeClaveATM();" maxlength="4" ng-disabled="scps.datosCliente.disableclaveATM"> <small class="invalid">{{scps.datosCliente.msjErrorATM}}</small></div></div></div><div class="col-lg-12 col-md-12 col-sm-12"><div class="bch-mensaje-empresas error" ng-if="scps.solClaveData.verMsjError"><article><p class="mb-0">{{scps.solClaveData.msjError}}</p></article></div><div class="btn-loader" ng-if="scps.mostrarBotonValidar"><a href="javascript:;" class="btn neutro border ladda-button" ng-click="scps.validarDatos();" data-style="expand-right" data-spinner-color="#3399CC" ladda="scps.solClaveData.laddaValidaDatos"><span class="ladda-label">Validar</span> <span class="ladda-spinner"></span></a></div><span ng-if="scps.solClaveData.mostrarOk" class="ok ion-ios-checkmark-outline"></span></div></div></div><div class="col-sm-3 col-md-3 col-lg-3 pull-right"><politicas-seguridad-recuadro password-strength="{{scps.solClaveData.datosCliente.claveNueva}}" portal="Personas"></div></div></article><article class="step done pb-30" data-step="2" ng-class="{disabled: !scps.solClaveData.pasos.pasoUnoOk ,done: (scps.solClaveData.pasos.pasoDosOk)}"><h3 class="mb-20">Nueva Clave</h3><div class="row"><div class="col-lg-6 col-md-6 col-sm-6"><div class="row"><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Ingresar nueva Clave</label><input id="inputNuevaClave" type="password" class="form-control" placeholder="" ng-model="scps.solClaveData.datosCliente.claveNueva" ng-change="scps.validaNuevaClave();" maxlength="8" ng-disabled=""> <small class="invalid">{{scps.solicitudClave.nuevaClaveError}}</small></div><div class="form-group col-sm-4 col-md-4 col-lg-4"><label>Reingresar nueva Clave</label><input id="inputReingresoNuevaClave" type="password" class="form-control" placeholder="" ng-model="scps.solClaveData.datosCliente.repiteClaveNueva" ng-change="scps.validaClaveReingreso();" maxlength="8" ng-disabled=""> <small class="invalid">{{scps.solicitudClave.nuevaClaveRepiteError}}</small></div><div class="form-group col-sm-4 col-md-4 col-lg-4 politica-scp"><politicas-seguridad password-strength="{{scps.solClaveData.datosCliente.claveNueva}}"></politicas-seguridad></div></div><div class="row"><div class="form-group col-lg-6 col-md-6 col-sm-6"><small class="invalid">{{scps.solicitudClave.msjErrorPoliticas}}</small></div></div></div></div></article><article class="step done pb-30" data-step="3" ng-class="{disabled: (!scps.validCedula), done: scps.solClaveData.pasos.pasoTresOk}" ng-if="scps.validCedula"><h3>ConfirmaciÃ³n</h3><p class="text-light px-14 mb-25">Ingresa tu NÂº de Serie o NÂº de documento de CÃ©dula de Identidad.</p><div class="row"><div class="col-lg-2 col-md-2 col-sm-3 form-group"><label>NÂº de Serie</label><input type="text" class="form-control" ng-model="scps.solClaveData.datosCliente.serie" ng-change="scps.validaSerie();" maxlength="10"> <small class="invalid">{{scps.datosCliente.serieError}}</small></div><div class="col-lg-10 col-md-10 col-sm-9 grafico-pie"><div class="col-lg-9 col-md-9 col-sm-10 bch-bubble default pt-15 pb-15 pl-20 pr-20"><div class="col-lg-6 col-md-6 col-sm-6"><h6 class="text-default">NÃºmero de Documento</h6><img class="img-responsive" src="assets/images/carnet-frente.png" alt="Carnet identidad por el frente"></div><div class="col-lg-6 col-md-6 col-sm-6"><h6 class="text-default">NÃºmero de Serie</h6><img class="img-responsive" src="assets/images/carnet-reverso.png" alt="Carnet identidad por el frente"></div></div></div></div></article><article class="step done pb-30" data-step="3" ng-class="{disabled: (!scps.tieneDispositivos), done: scps.solClaveData.pasos.pasoTresOk}" ng-if="scps.tieneDispositivos"><h3>ConfirmaciÃ³n</h3><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><caja-desafio-soft titulo="false" portal="Personas" action="scps.solicitarClave();" boton="scps.verBoton" ladda-soft-token="false" objeto-mi-pass="scps.objetoMiPass"></caja-desafio-soft></div></div></article></section></form><div class="col-lg-12 col-md-12 col-sm-12"><div class="bch-mensaje-empresas warning" ng-if="scps.solClaveData.mostrarMsjRegistrado"><article><h5 class="mb-0">Ya estÃ¡s registrado</h5><p class="mb-0">Para obtener tu clave de internet ingresa a <a href="#/olvido-clave-persona" ui-sref="olvido-clave-persona"><u>Olvido de Clave</u></a>.</p></article></div><div class="bch-mensaje-empresas error" ng-if="scps.solClaveData.mostrarMsjFalloSinacofi"><article><h5 class="mb-0">{{scps.solClaveData.msjValidacion}}</h5></article></div></div></div><div class="col-lg-12 col-md-12 col-sm-12 text-right pb-30 mb-30"><button class="btn neutro border" ng-click="scps.cancelar()">Cancelar</button> <button class="btn success" ng-click="scps.solicitarClave();" ng-show="scps.verBoton" ladda="scps.solClaveData.laddaSolicitudClave" ng-disabled="scps.solClaveData.disabledBotonCrear">Crear Clave</button></div></div></section>');
	}]), angular.module("venta-seguros-viajes/src/directives/carrusel-planes-seguro/carruselPlanesSeguros-Parametrizado.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/directives/carrusel-planes-seguro/carruselPlanesSeguros-Parametrizado.tpl.html", '<div ng-show="cps.igualaAlturaPlanes()"></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 clear boton-comparador"><button class="btn default pull-right" ng-show="cps.masDeUnPlan" ng-disabled="cps.flujoModel.simulacion.seleccionadosComparacion.length<2" ng-click="cps.openComparadorPlanes(\'lg\');">Comparar {{cps.flujoModel.simulacion.seleccionadosComparacion.length}} de {{cps.maxComparar}}</button></div></div><div class="bch-mensaje-empresas error text-left" ng-if="cps.flujoModel.simulacion.errorSinPlanes"><article>{{cps.flujoModel.simulacion.errorSinPlanesMje}}</article></div><div class="row" ng-if="!cps.flujoModel.simulacion.errorSinPlanes"><slick class="carrousel-tipos-seguros" infinite="false" speed="300" slides-to-show="3" touch-move="false" slides-to-scroll="1"><!-- slide Opciones Seguros --><!-- Widget --><div ng-repeat="plan in cps.flujoModel.simulacion.listaPlanes"><div class="col-lg-12 col-md-12 col-sm-12"><div class="col-lg-12 col-md-12 col-sm-12 widget-seguros"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 top text-center neutro"><img ng-src="{{plan.iconoCia}}"></div><div class="col-lg-12 col-md-12 col-sm-12 body"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 nombre-seguro"><h2 class="text-regular">{{cps.datosPagina.nombreSeguro}}</h2><p><i class="ion-arrow-right-b text-info"></i> {{plan.plnGlosaLarga}}</p></div><div class="col-lg-12 col-md-12 col-sm-12 valor-seguro text-center"><div class="cont-valor text-left"><small class="text-info text-regular">{{cps.datosSeguro.tituloTipoPrecioInternetUOfertaInternet}}</small><h2 ng-if="cps.monedaUF();" class="text-info text-regular">UF {{plan.plnMontoMO | number : 2}}</h2><h2 ng-if="!cps.monedaUF();" class="text-info text-regular">USD {{plan.plnMontoMO | number : 2}}</h2><h6 class="text-primary text-regular">$ {{plan.plnMontoCLP | number : 0}} {{cps.datosSeguro.tipoPrima}}*</h6></div></div><div class="col-lg-12 col-md-12 col-sm-12 caracteristicas"><ul class="list-unstyled text-regular"><li>{{cps.datosSeguro.subTituloTipoPrecioNormalUOfertaInternet}} <span ng-show="cps.datosSeguro.tieneGlosaOferta" class="pull-right">{{plan.plnGlosaOferta}}</span><span ng-show="!cps.datosSeguro.tieneGlosaOferta" class="pull-right">{{cps.datosSeguro.moneda}} {{plan.plnMontoOF | number : 2}}</span></li><li ng-if="cps.datosSeguro.tieneUFAnual">UF Anual <span class="pull-right">{{plan.plnCuotaCLP | number : 2}}</span></li><li>{{plan.plnGlosaLegal}}</li></ul></div></div></div><div class="col-lg-12 col-md-12 col-sm-12 beneficios-comparar"><div class="row"><div class="text-center cont" ng-class="{\'col-lg-6 col-md-6 col-sm-6 \':cps.masDeUnPlan, \'col-lg-12 col-md-12 col-sm-12 \':!cps.masDeUnPlan}"><a class="text-marketing-blue-two" href="javascript:void(0);" ng-click="cps.openBeneficiosYCoberturas(\'lg\',plan);">Beneficios y Coberturas</a></div><div ng-show="cps.masDeUnPlan" class="col-lg-6 col-md-6 col-sm-6 text-center comparar cont"><label class="bch-custom-check">Comparar Plan<div><input type="checkbox" ng-disabled="plan.isDisabled" ng-model="plan.isChecked" ng-change="cps.seleccionaPlanComparar(plan);"> <i></i></div></label></div></div></div><div class="col-lg-12 col-md-12 col-sm-12 bottom neutro text-center"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12" ng-show="!plan.isSelected"><button class="btn info btn-sm clear" ng-click="cps.seleccionaPlan(plan);">Seleccionar</button></div><div class="col-lg-12 col-md-12 col-sm-12" ng-show="plan.isSelected"><i class="ion-checkmark-round text-success"></i><h6 class="text-primary text-regular">Seleccionado</h6></div></div></div></div></div></div></div><!-- fin Widget --></slick><!-- fin slide Opciones Seguros --></div>')
	}]), angular.module("venta-seguros-viajes/src/directives/carrusel-planes-seguro/modalBeneficiosCoberturas/beneficiosYCoberturas.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/directives/carrusel-planes-seguro/modalBeneficiosCoberturas/beneficiosYCoberturas.tpl.html", '<div class="spinner" ng-if="benCob.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><section class="modal-info modal-beneficios-seguros" ng-if="!benCob.loading"><h2><i class="ion-ios-close-empty pull-right" ng-click="ok()"></i></h2><div class="bch-subtitulo"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><h4>Beneficios y Coberturas</h4></div></div><!-- ERROR 500--><div class="bch-mensaje-empresas error text-left" ng-if="benCob.error500"><article>{{benCob.mensajeError500}}</article></div><div class="row" ng-if="!benCob.error500"><div class="col-lg-12 col-md-12 col-sm-12 text-right"><p><small>SimulaciÃ³n valida sÃ³lo por hoy {{benCob.fechaHoy}}</small></p></div></div><div class="col-lg-12 col-md-12 col-sm-12 bar-datos-seguro" ng-if="!benCob.error500"><div class="row"><div class="col-lg-1 col-md-1 col-sm-1 neutro icono"><!-- IMAGEN LOGO TIPO SEGURO--> <i class="bch-ms-seguro-viaje"></i></div><div class="col-lg-2 col-md-2 col-sm-2 text-center"><!-- LOGO IMAGEN COMPANIA SEGUROS--> <img ng-src="{{benCob.flujoModel.simulacion.planBeneficiosYCoberturas.iconoCia}}"></div><div class="col-lg-6 col-md-6 col-sm-6"><h3 class="text-regular">{{benCob.beneficiosCoberturas.datosPagina.tituloPagina}}</h3><p class="tipo-plan" ng-show="benCob.datosSeguro.tieneSubtituloBeneficios"><i class="ion-arrow-right-b text-info"></i>{{benCob.flujoModel.simulacion.planBeneficiosYCoberturas.plnGlosaLarga}}</p></div><div class="col-lg-3 col-md-3 col-sm-3"><!-- Este bloque Varia por tipo de seguro --><h2 ng-if="benCob.monedaUF()" class="text-regular text-info">UF {{benCob.flujoModel.simulacion.planBeneficiosYCoberturas.plnMontoMO | number : 2}}</h2><h2 ng-if="!benCob.monedaUF()" class="text-regular text-info">USD {{benCob.flujoModel.simulacion.planBeneficiosYCoberturas.plnMontoMO | number : 2}}</h2><p class="text-regular text-primary"><small>{{benCob.datosSeguro.textoPrimaCoberturas}}</small></p></div></div></div><div class="row bch-empresas-acordeon bch-acordeon-active" ng-if="!benCob.error500"><div class="col-lg-12 col-md-12 col-sm-12"><accordion><accordion-group is-open="status.open" ng-repeat="itemCobertura in benCob.beneficiosCoberturas.itemCoberturaList"><accordion-heading><div ng-class="{\'active\': status.open}">{{itemCobertura.cmsTitulo}} <i class="pull-right icon" ng-class="{\'ion-ios-arrow-up\': status.open, \'ion-ios-arrow-down\': !status.open}"></i></div></accordion-heading><div class="row"><ul class="list-unstyled detalle-beneficio"><li ng-repeat="contenido in itemCobertura.contenidoCoberturaList"><p class="text-light">{{contenido.cmsConten}}</p></li></ul></div></accordion-group></accordion></div></div><div class="row" ng-if="!benCob.error500"><div class="col-lg-12 col-md-12 col-sm-12 texto-legal text-default text-justify"><p>{{benCob.beneficiosCoberturas.datosPagina.piePagina.parrafo1}}</p><hr><p>{{benCob.beneficiosCoberturas.datosPagina.piePagina.parrafo2}}</p></div></div></section>')
	}]), angular.module("venta-seguros-viajes/src/directives/carrusel-planes-seguro/modalComparadorPlanes/comparadorPlanes.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/directives/carrusel-planes-seguro/modalComparadorPlanes/comparadorPlanes.tpl.html", '<div class="spinner" ng-if="comparador.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><section class="modal-info modal-comparador-seguros" ng-if="!comparador.loading"><h2><i class="ion-ios-close-empty pull-right" ng-click="ok()"></i></h2><div class="bch-subtitulo"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><h4>Comparador</h4></div></div><!-- ERROR 500--><div class="bch-mensaje-empresas error text-left" ng-if="comparador.error500"><article>{{comparador.mensajeError500}}</article></div><div class="row" ng-if="!comparador.error500"><div class="col-lg-12 col-md-12 col-sm-12"><div class="table-responsive"><table class="table"><thead><tr><th width="40%"><!-- icono del seguro--><!-- <i class="icono grey-five text-center" ng-class="comparador.flujoModel.simulacion.seguroSeleccionado.icono"></i> --><h3 class="text-regular">{{comparador.datosPagina.nombreSeguro}}</h3></th><!-- Esto es con ng-repeat de la primera posicion del arreglo arregloCoberturasPlanes, sacando el parametro comparacionPlanList . plnGlosaLarga--><th class="cont-nombre-comparador text-center" ng-repeat="encabezado in comparador.arregloCabeceras"><h6 class="text-regular"><i class="ion-android-arrow-dropright text-info"></i>{{encabezado.ciaGlosa}}</h6></th></tr><tbody><tr ng-repeat="coberturaFila in comparador.arregloCoberturasPlanes"><td><h6 class="text-regular text-marketing-blue-one">{{coberturaFila.cobGlosa}}</h6><p class="text-default"><small>{{coberturaFila.cobSubtitulo}}</small></p></td><td ng-repeat="celda in coberturaFila.comparacionPlanList" class="text-center"><span ng-if="comparador.pintaGlosa(celda);" class="text-default">{{celda.plnCobGlosa}}</span><p ng-if="comparador.pintaTicket(celda)"><i ng-class="{\'ion-checkmark-round text-success\':celda.plnCobDisponible,\'ion-minus-round no-comparte\':!celda.plnCobDisponible}"></i></p></td></tr></tbody></thead></table></div></div></div></section>')
	}]), angular.module("venta-seguros-viajes/src/directives/envioPoliza/envio-poliza.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/directives/envioPoliza/envio-poliza.tpl.html", '<div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><!--Bloque--><div class="col-lg-12 col-md-12 col-sm-12 neutro caja-envio-poliza"><!-- Direccion Editable --><div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><div class="col-lg-6 col-md-6 col-sm-6 form-group"><label>DirecciÃ³n <span class="text-danger">*</span></label><input type="text" class="form-control" ng-model="epc.poliza.direccion.model" ng-change="epc.poliza.direccion.validar();" maxlength="255" ng-disabled="epc.poliza.direccionSoloLectura||epc.poliza.bloquear;"> <small class="invalid">{{epc.poliza.direccion.mensaje}}</small></div><div class="col-lg-2 col-md-2 col-sm-2 form-group"><label>NÃºmero <span ng-if="epc.poliza.numero.obligatorio" class="text-danger">*</span></label><input ng-model="epc.poliza.numero.model" type="text" class="form-control" numeric-only onkeypress="return event.charCode != 32" maxlength="30" ng-change="epc.poliza.numero.validar();" ng-disabled="epc.poliza.direccionSoloLectura||epc.poliza.bloquear;"> <small class="invalid">{{epc.poliza.numero.mensaje}}</small></div><div class="col-lg-2 col-md-3 col-sm-3 form-group"><label>Block / Depto / Casa</label><input ng-model="epc.poliza.bloque" type="text" class="form-control" maxlength="30" ng-keypress="epc.validaSinCaracteresEspeciales($event);" ng-disabled="epc.poliza.direccionSoloLectura||epc.poliza.bloquear;"></div></div></div><br><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><div class="col-lg-4 col-md-4 col-sm-4 form-group"><label>RegiÃ³n <span class="text-danger">*</span></label><ui-select ng-model="epc.poliza.region.regionSelected" ng-blur="epc.poliza.region.validar();" ng-change="epc.poliza.region.change($select.selected);" ng-disabled="epc.poliza.direccionSoloLectura||epc.poliza.bloquear;"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombre}} </ui-select-match><ui-select-choices repeat="item in epc.poliza.regiones | orderBy: \'nombre\' | smartFilter:[\'nombre\']:$select.search:false"> {{ item.nombre }} </ui-select-choices></ui-select><small class="invalid">{{epc.poliza.region.mensaje}}</small></div><div class="col-lg-4 col-md-4 col-sm-4 form-group"><label>Ciudad <span class="text-danger">*</span></label><ui-select ng-model="epc.poliza.ciudad.ciudadSelected" ng-blur="epc.poliza.ciudad.validar();" ng-change="epc.poliza.ciudad.change($select.selected);" ng-disabled="(epc.poliza.ciudades.length<=0||epc.poliza.direccionSoloLectura||epc.poliza.bloquear);"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombre}} </ui-select-match><ui-select-choices repeat="item in epc.poliza.ciudades | orderBy: \'nombre\' | smartFilter:[\'nombre\']:$select.search:false"> {{ item.nombre }} </ui-select-choices></ui-select><small class="invalid">{{epc.poliza.ciudad.mensaje}}</small></div><div class="col-lg-4 col-md-4 col-sm-4 form-group"><label>Comuna <span class="text-danger">*</span></label><ui-select ng-model="epc.poliza.comuna.comunaSelected" ng-blur="epc.poliza.comuna.validar();" ng-change="epc.poliza.comuna.change($select.selected);" ng-disabled="(epc.poliza.comunas.length<=0||epc.poliza.direccionSoloLectura||epc.poliza.bloquear);"><ui-select-match placeholder="Seleccione..."> {{$select.selected.nombre}} </ui-select-match><ui-select-choices repeat="item in epc.poliza.comunas | orderBy: \'nombre\' | smartFilter:[\'nombre\']:$select.search:false"> {{ item.nombre }} </ui-select-choices></ui-select><small class="invalid">{{epc.poliza.comuna.mensaje}}</small></div></div></div></div><div class="row"><hr></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><div class="col-lg-4 col-md-4 col-sm-4 form-group"><label>TelÃ©fono <span ng-if="epc.poliza.telefono.obligatorio" class="text-danger">*</span></label><div class="row"><div class="col-lg-2 col-md-3 col-sm-4 codigo-pais">+ 56</div><div class="col-lg-10 col-md-9 col-sm-8"><input type="text" class="form-control" ng-model="epc.poliza.telefono.model" numeric-only onkeypress="return event.charCode != 32" maxlength="9" ng-change="epc.poliza.telefono.validar();" ng-disabled="epc.poliza.bloquear;"> <small class="invalid">{{epc.poliza.telefono.mensaje}}</small></div></div></div><div class="col-lg-4 col-md-4 col-sm-4 form-group"><label>Email <span class="text-danger">*</span></label><input type="text" class="form-control" ng-model="epc.poliza.email.model" ng-change="epc.poliza.email.validar();" maxlength="125" ng-disabled="epc.poliza.bloquear;" ng-paste="$event.preventDefault();"> <small class="invalid">{{epc.poliza.email.mensaje}}</small></div><div class="col-lg-4 col-md-4 col-sm-4 form-group"><label>Confirmar Email <span class="text-danger">*</span></label><input type="text" class="form-control" ng-model="epc.poliza.emailConfirmacion.model" ng-change="epc.poliza.emailConfirmacion.validar();" maxlength="125" id="emailConfirmacionPoliza" ng-paste="$event.preventDefault();" ng-disabled="epc.poliza.bloquear;"> <small class="invalid">{{epc.poliza.emailConfirmacion.mensaje}}</small></div></div></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><div class="col-lg-12 col-md-12 col-sm-12"><label class="bch-custom-check"><div><input type="checkbox" ng-model="epc.poliza.checkAutorizo"> <i></i></div>Autorizo a Banchile Corredores de Seguros enviar informaciÃ³n a esta casilla de correo electrÃ³nico.</label></div></div></div></div></div><!--fin Bloque--></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 texto-campo-obligatorio del-envio-poliza"><p><span class="text-danger">*</span> Campos Obligatorios.</p></div></div>')
	}]), angular.module("venta-seguros-viajes/src/pantallas-error/error-dispositivo.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/pantallas-error/error-dispositivo.tpl.html", '<div class="container"><section class="error-landing-v2 errorTwo"><section class="col-lg-10 col-md-10 col-sm-10 col-lg-offset-1 col-md-offset-1 col-sm-offset-1"><div class="cont-error-landing"><div class="col-lg-8 col-md-8 col-sm-8"><h1><b>Sin Dispositivo de Seguridad</b></h1><p>{{edctr.mensaje}}</p></div><div class="col-lg-4 col-md-4 col-sm-4"><h4>Mesa de Ayuda</h4><p>ComunÃ­quese con Fonobank<br>Llamando al {{edctr.telefonoError}}</p></div></div><button class="success btn pull-right" ui-sref="bancoChile">Volver</button></section></section></div>')
	}]), angular.module("venta-seguros-viajes/src/seguros/pago/medio-pago.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/seguros/pago/medio-pago.tpl.html", '<div class="spinner" ng-show="pagoCrl.cargandoDatos"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><div class="col-lg-12 col-md-12 col-sm-12" ng-show="pagoCrl.medioPago.okPagoAseguradora"><div class="bch-mensaje-empresas information"><article><b>{{pagoCrl.medioPago.mensajeAvisoCliente}}</b><br>Para mayor informaciÃ³n comunicate con nuestros ejecutivos al 800 210 023 y desde celulares 2 2637 3780.</article></div></div><section class="container"><div class="row" ng-if="pagoCrl.medioPago.activarComprobante" ng-show="!pagoCrl.cargandoDatos"><!-- Pantalla --><div class="col-lg-12 col-md-12 col-sm-12"><!-- Subtitulo --><div class="bch-subtitulo con-steps"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><h4 class="pull-left">Comprobante {{pagoCrl.medioPago.tipoSeguro}}</h4><article class="steps-horizontales col-lg-4 col-md-4 col-sm-4 pull-right"><div class="row"><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step done"><i class="ion-ios-checkmark-empty"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step done"><i class="ion-ios-checkmark-empty"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step done"><i class="ion-ios-checkmark-empty"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step done"><i class="ion-ios-checkmark-empty"></i></div></div></article></div></div></div><!-- fin Subtitulo --><div class="col-lg-12 col-md-12 col-sm-12" ng-show="pagoCrl.medioPago.comprobantes[0].dataAvisoComprobante.glosaAviso!=\'\'"><div class="col-lg-12 col-md-12 col-sm-12 promocion-imagen grey-seven"><div class="row"><div class="col-lg-3 col-md-3 col-sm-3 imagen"><img ng-src="assets/{{pagoCrl.medioPago.comprobantes[0].dataAvisoComprobante.imagenAviso}}"></div><div class="col-lg-9 col-md-9 col-sm-9"><h3>{{pagoCrl.medioPago.comprobantes[0].dataAvisoComprobante.glosaAviso}}</h3></div></div></div></div><div class="col-lg-12 col-md-12 col-sm-12" ng-repeat="comprobante in pagoCrl.medioPago.comprobantes"><comprobante tipo="compuesto" data="comprobante"></div><!-- \n        <div class="col-lg-7 col-md-7 col-sm-12 mensaje-app-mi-seguro">\n            <img class="pull-left" src="assets/icono-mi-seguro.jpg" alt="Icono AplicaciÃ³n Mi Seguro, Banco de Chile">\n            <h6 class="text-regular text-default">Puedes revisar tus seguros contratados por Internet y a travÃ©s de la aplicaciÃ³n Mi Seguro, ademÃ¡s podrÃ¡s solicitar asistencia en lÃ­nea para tus Seguros de Viaje, Hogar y Auto.</h6>  \n        </div> \n        --><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><br><br><br><br><p class="text-default" style="text-align: justify"><small>{{pagoCrl.medioPago.parrafo1}}</small></p></div><div class="col-lg-12 col-md-12 col-sm-12"><p class="text-default" style="text-align: justify"><small>{{pagoCrl.medioPago.parrafo2}}</small></p></div></div></div></section>')
	}]), angular.module("venta-seguros-viajes/src/seguros/viaje-total/ingreso/ingreso-viaje-total.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/seguros/viaje-total/ingreso/ingreso-viaje-total.tpl.html", '<section class="container contrata-nuevo-seguro"><div class="row"><!-- Pantalla --><div class="col-lg-12 col-md-12 col-sm-12"><!-- Subtitulo --><div class="bch-subtitulo con-steps"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><h4 class="pull-left">Ingreso Datos {{ingvtc.flujoModel.titulo}}</h4><article class="steps-horizontales col-lg-4 col-md-4 col-sm-4 pull-right"><div class="row"><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step done"><i class="ion-ios-checkmark-empty"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step active"><i class="ion-ios-arrow-right"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step"><i class="ion-ios-arrow-right"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step"><i class="ion-ios-arrow-right"></i></div></div></article></div></div></div><!-- fin Subtitulo --><!--ingvtForm.$error: {{ingvtForm.$error}}--><div class="col-lg-12 col-md-12 col-sm-12"><form novalidate name="ingvtForm" autocomplete="off"><div class="col-lg-12 col-md-12 col-sm-12"><section class="steps forms-empresas"><article class="step done" data-step="1"><h3>Ingresa Datos del Contratante</h3><br><!--rut-input ng-rut--><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><!--Bloque--><div class="row"><div class="col-lg-2 col-md-2 col-sm-3 form-group"><!--Item--><label>Rut<span class="text-danger">*</span></label><input type="text" maxlength="12" name="contratanteRut" class="form-control" ng-rut ng-change="ingvtc.modificaFormulario();ingvtc.changeEsTitular(false);ingvtc.validaPaso1();ingvtc.validaPaso2();ingvtc.validaPaso3();ingvtc.rutContratanteCambio=true;" ng-model="ingvtc.datosContratante.rut.valor" ng-blur="ingvtc.getDatosPersonalesContratante(ingvtc.datosContratante.rut.valor);ingvtc.datosContratante.rut.focus=false" ng-focus="ingvtc.datosContratante.rut.focus=true;"><!-- <small class="invalid" ng-show="ingvtc.datosContratante.rut.error    \n                                                                         && ingvtForm.contratanteRut.$dirty\n                                                                         && ingvtc.datosContratante.rut.valor!=\'\'\n                                                                         ">{{ingvtc.mensajes.errorRutRequerido}}</small> \n                                            <small class="invalid" ng-show="ingvtForm.contratanteRut.$error.rut \n                                                                         && ingvtc.datosContratante.rut.valor==\'\'\n                                                                         && !ingvtc.datosContratante.rut.focus">{{ingvtc.mensajes.errorRutInvalido}}</small> --> <small class="invalid" ng-show="ingvtc.datosContratante.rut.error    \n                                                                         && ingvtForm.contratanteRut.$dirty\n                                                                         && ingvtc.datosContratante.rut.valor!=\'\'">{{ingvtc.mensajes.errorRutInvalido}}</small></div><!--fin Item--><div class="col-lg-3 col-md-3 col-sm-3 sexo-input"><label>Sexo <span class="text-danger">*</span></label><div class="row"><div class="col-lg-6 col-md-6 col-sm-6"><label class="bch-custom-check radiobutton"><div><input type="radio" id="idSexoMC" name="titularSexoC" ng-model="ingvtc.datosContratante.sexo" ng-change="ingvtc.modificaFormulario();ingvtc.validaPaso1();" value="1"> <i></i></div>Masculino</label></div><div class="col-lg-6 col-md-6 col-sm-6"><label class="bch-custom-check radiobutton"><div><input type="radio" id="idSexoFC" name="titularSexoC" ng-model="ingvtc.datosContratante.sexo" ng-change="ingvtc.modificaFormulario();ingvtc.validaPaso1();" value="2"> <i></i></div>Femenino</label></div></div></div></div><div class="row"><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Nombre <span class="text-danger">*</span></label><input type="text" name="contratanteNombre" class="form-control" maxlength="50" ng-model="ingvtc.datosContratante.nombre.valor" ng-change="ingvtc.datosContratante.nombre.mostrarError=true;\n                                                              ingvtc.modificaFormulario();\n                                                              ingvtc.changeEsTitular(false);\n                                                              ingvtc.validaPaso1();" alphanumeric-only required> <small class="invalid" ng-show="ingvtc.datosContratante.nombre.error \n                                                                         && ingvtc.datosContratante.nombre.mostrarError">{{ingvtc.mensajes.errorIngresarNombre}}</small></div><!--fin Item--><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Apellido Paterno <span class="text-danger">*</span></label><input type="text" name="contratanteApellidoPaterno" class="form-control" maxlength="50" ng-model="ingvtc.datosContratante.apellidoPaterno.valor" ng-change="ingvtc.datosContratante.apellidoPaterno.mostrarError=true;\n                                                              ingvtc.modificaFormulario();\n                                                              ingvtc.changeEsTitular(false);\n                                                              ingvtc.validaPaso1();" alphanumeric-only required> <small class="invalid" ng-show="ingvtc.datosContratante.apellidoPaterno.error \n                                                                         && ingvtc.datosContratante.apellidoPaterno.mostrarError">{{ingvtc.mensajes.errorIngresarApellidoPaterno}}</small></div><!--fin Item--><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Apellido Materno</label><input type="text" name="contratanteApellidoMaterno" class="form-control" maxlength="50" ng-model="ingvtc.datosContratante.apellidoMaterno.valor" alphanumeric-only ng-change="ingvtc.modificaFormulario();ingvtc.changeEsTitular(false);ingvtc.validaPaso1();"></div><!--fin Item--><div class="col-lg-2 col-md-3 col-sm-3 form-group"><!--Item--><label>Fecha de Nacimiento<span class="text-danger">*</span></label><p class="input-group"><input type="text" readonly="readonly" name="contratanteFechaNacimiento" id="idContratanteFechaNacimiento" class="form-control" show-button-bar="false" datepicker-popup="{{ingvtc.datepickerContratanteNacimiento.format}}" ng-model="ingvtc.datepickerContratanteNacimiento.fechaNacimiento" is-open="ingvtc.datepickerContratanteNacimiento.opened" datepicker-options="false" close-text="Close" show-weeks="false" min-date="ingvtc.minFechaNacimiento" max-date="ingvtc.maxFechaNacimiento" ng-disabled="false" ng-change="ingvtc.datepickerContratanteNacimiento.change();ingvtc.modificaFormulario();ingvtc.changeEsTitular(false);ingvtc.validaPaso1();"> <span class="input-group-btn"><button type="button" class="btn neutro border" ng-click="ingvtc.datepickerContratanteNacimiento.openDatePicker($event)"><i class="glyphicon glyphicon-calendar"></i></button></span></p><!-- <small class="invalid" ng-show="ingvtc.datosContratante.fechaNacimiento.errorVacia \n                                                                         && ingvtc.mostrarErrorFechaContratante">{{ingvtc.mensajes.errorFechaNacimientoRequerida}}</small> --> <small class="invalid" ng-show="ingvtc.datosContratante.fechaNacimiento.errorInvalida">{{ingvtc.datosContratante.fechaNacimiento.errorMje}}</small></div><!--fin Item--></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 texto-campo-obligatorio"><p><span class="text-danger">*</span> Campos Obligatorios.</p></div></div></div><!--fin Bloque--></div><br><br></article><article class="step" data-step="2" ng-class="{disabled: !ingvtc.step1ok, done: ingvtc.step1ok}"><h3>Ingresa Datos del Viajero Titular</h3><br><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><!--Bloque--><div class="row"><div class="col-lg-6 col-md-6 col-sm-12 form-group"><!--Item--><h4>Â¿Eres el viajero Titular?</h4><div class="row"><div class="col-lg-2 col-md-2 col-sm-4"><label class="bch-custom-check radiobutton" ng-click="ingvtc.changeEsTitular(true);ingvtc.modificaFormulario();ingvtc.validaPaso2();" ng-model="ingvtc.esTitular" value="true"><div><input type="radio" id="idTitularSi" name="titular" ng-model="ingvtc.esTitular" value="1"> <i></i></div>Si</label></div><div class="col-lg-2 col-md-2 col-sm-4"><label class="bch-custom-check radiobutton" ng-click="ingvtc.changeEsTitular(false);ingvtc.modificaFormulario();ingvtc.validaPaso2();ingvtForm.viajeroTitularRut.$setPristine();ingvtForm.viajeroTitularRut.$setPristine();ingvtForm.viajeroTitularNombre.$setPristine();ingvtForm.viajeroTitularApellidoPaterno.$setPristine();"><div><input type="radio" id="idTitularNo" name="titular" ng-model="ingvtc.esTitular" value="2"> <i></i></div>No</label></div></div></div><!--fin Item--></div></div><!--fin Bloque --><!--rut-input ng-rut--><div class="col-lg-12 col-md-12 col-sm-12" ng-show="ingvtc.viajeroTitular.esTitular===true || ingvtc.viajeroTitular.esTitular===false"><!--Bloque--><div class="row"><div class="col-lg-2 col-md-2 col-sm-3 form-group"><!--Item--><label>Rut <span class="text-danger">*</span></label><input type="text" maxlength="12" name="viajeroTitularRut" class="form-control" ng-rut ng-change="ingvtc.modificaFormulario();ingvtc.validaPaso2();ingvtc.rutCambio=true;" ng-blur="ingvtc.getDatosPersonalesViajeroTitular(ingvtc.viajeroTitular.rut.valor);ingvtc.viajeroTitular.rut.focus=false" ng-disabled="ingvtc.viajeroTitular.esTitular" ng-model="ingvtc.viajeroTitular.rut.valor" ng-focus="ingvtc.viajeroTitular.rut.focus=true;"><!-- <small class="invalid" ng-show="ingvtc.viajeroTitular.rut.error \n                                                                         && ingvtForm.viajeroTitularRut.$dirty\n                                                                         && ingvtc.viajeroTitular.rut.valor!=\'\'\n                                                                         && ingvtc.viajeroTitular.rut.focus\n                                                                         ">{{ingvtc.mensajes.errorRutRequerido}}</small>\n                                            <small class="invalid" ng-show="ingvtForm.viajeroTitularRut.$error.rut \n                                                                        && !ingvtc.viajeroTitular.rut.focus\n                                                                        && ingvtc.viajeroTitular.rut.valor==\'\'">{{ingvtc.mensajes.errorRutInvalido}}</small> --> <small class="invalid" ng-show="ingvtc.viajeroTitular.rut.error    \n                                                                        && ingvtForm.viajeroTitularRut.$dirty\n                                                                        && ingvtc.viajeroTitular.rut.valor!=\'\'\n                                                                        ">{{ingvtc.mensajes.errorRutInvalido}}</small></div><!--fin Item--><div class="col-lg-3 col-md-3 col-sm-3 sexo-input"><label>Sexo <span class="text-danger">*</span></label><div class="row"><div class="col-lg-6 col-md-6 col-sm-6"><label class="bch-custom-check radiobutton"><div><input type="radio" id="idSexoM" name="titularSexo" ng-model="ingvtc.viajeroTitular.sexo" ng-disabled="ingvtc.viajeroTitular.esTitular" ng-change="ingvtc.modificaFormulario();ingvtc.validaPaso2();" value="1"> <i></i></div>Masculino</label></div><div class="col-lg-6 col-md-6 col-sm-6"><label class="bch-custom-check radiobutton"><div><input type="radio" id="idSexoF" name="titularSexo" ng-model="ingvtc.viajeroTitular.sexo" ng-disabled="ingvtc.viajeroTitular.esTitular" ng-change="ingvtc.modificaFormulario();ingvtc.validaPaso2();" value="2"> <i></i></div>Femenino</label></div></div></div></div><div class="row"><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Nombre <span class="text-danger">*</span></label><input type="text" name="viajeroTitularNombre" class="form-control" maxlength="50" ng-model="ingvtc.viajeroTitular.nombre.valor" ng-change="ingvtc.viajeroTitular.nombre.mostrarError=true;\n                                                              ingvtc.modificaFormulario();\n                                                              ingvtc.mostrarRequeridosTitular=true;ingvtc.validaPaso2();" ng-disabled="ingvtc.viajeroTitular.esTitular" alphanumeric-only required> <small class="invalid" ng-show="ingvtc.viajeroTitular.nombre.error \n                                                         && ingvtc.viajeroTitular.nombre.mostrarError">{{ingvtc.mensajes.errorIngresarNombre}}</small></div><!--fin Item--><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Apellido Paterno <span class="text-danger">*</span></label><input type="text" name="viajeroTitularApellidoPaterno" class="form-control" maxlength="50" ng-model="ingvtc.viajeroTitular.apellidoPaterno.valor" ng-change="ingvtc.viajeroTitular.apellidoPaterno.mostrarError=true;\n                                                              ingvtc.modificaFormulario();\n                                                              ingvtc.mostrarRequeridosTitular=true;\n                                                              ingvtc.validaPaso2();" ng-disabled="ingvtc.viajeroTitular.esTitular" alphanumeric-only required> <small class="invalid" ng-show="ingvtc.viajeroTitular.apellidoPaterno.error \n                                                                         && ingvtc.viajeroTitular.apellidoPaterno.mostrarError">{{ingvtc.mensajes.errorIngresarApellidoPaterno}}</small></div><!--fin Item--><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Apellido Materno</label><input type="text" name="viajeroTitularApellidoMaterno" class="form-control" maxlength="50" ng-model="ingvtc.viajeroTitular.apellidoMaterno.valor" ng-change="ingvtc.modificaFormulario();ingvtc.validaPaso2();" ng-disabled="ingvtc.viajeroTitular.esTitular" alphanumeric-only required></div><!--fin Item--><div class="col-lg-2 col-md-3 col-sm-3 form-group"><!--Item--><label>Fecha de Nacimiento <span class="text-danger">*</span></label><p class="input-group"><input type="text" class="form-control" readonly="readonly" name="viajeroTitularFechaNacimiento" id="idViajeroTitularFechaNacimiento" class="form-control" show-button-bar="false" datepicker-popup="{{ingvtc.datepickerViajeroTitularNacimiento.format}}" ng-model="ingvtc.datepickerViajeroTitularNacimiento.fechaNacimiento" is-open="ingvtc.datepickerViajeroTitularNacimiento.opened" datepicker-options="false" close-text="Close" show-weeks="false" min-date="ingvtc.minFechaNacimiento" max-date="ingvtc.maxFechaNacimiento" ng-disabled="ingvtc.viajeroTitular.esTitular" ng-change="ingvtc.mostrarRequeridosTitular=true;\n                                                                  ingvtc.datepickerViajeroTitularNacimiento.change();\n                                                                  ingvtc.mostrarRequeridosTitular=true;ingvtc.modificaFormulario();\n                                                                  ingvtc.validaPaso2();"> <span class="input-group-btn"><button type="button" class="btn neutro border" ng-click="ingvtc.datepickerViajeroTitularNacimiento.openDatePicker($event)" ng-disabled="ingvtc.viajeroTitular.esTitular"><i class="glyphicon glyphicon-calendar"></i></button></span></p><!-- <small class="invalid" ng-show="ingvtc.mostrarRequeridosTitular \n                                                                         && ingvtc.viajeroTitular.fechaNacimiento.errorVacia">{{ingvtc.mensajes.errorFechaNacimientoRequerida}}</small>--> <small class="invalid" ng-show="ingvtc.mostrarRequeridosTitular \n                                                                         && ingvtc.viajeroTitular.fechaNacimiento.errorInvalida">{{ingvtc.viajeroTitular.fechaNacimiento.errorMje}}</small><!-- Mensaje Error--></div><!--fin Item--></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 texto-campo-obligatorio"><p><span class="text-danger">*</span> Campos Obligatorios.</p></div></div></div><!--fin Bloque--></div><br><br></article><article class="step" data-step="3" ng-class="{disabled: !ingvtc.step1ok || !ingvtc.step2ok, done: ingvtc.step1ok && ingvtc.step2ok}" ng-if="ingvtc.numeroPersonas>1"><div><h3>Ingresa Datos del o los Viajeros ({{ingvtc.numeroPersonas-1}})</h3><br><!--rut-input ng-rut--><div class="row" ng-repeat="viajero in ingvtc.arrViajeros"><div class="col-lg-12 col-md-12 col-sm-12"><!--Bloque--><div class="row"><div class="col-lg-2 col-md-2 col-sm-3 form-group"><!--Item--><label>Rut <span class="text-danger">*</span></label><input type="text" name="viajeroRut_{{$index}}" class="form-control" maxlength="12" ng-rut ng-change="viajero.rut.mostrarError=true;\n                                                                  ingvtc.modificaFormulario();\n                                                                  ingvtc.validaPaso3();\n                                                                  viajero.rut.rutCambio=true;" ng-blur="ingvtc.getDatosPersonalesViajero(viajero.rut.valor, viajero, $index);viajero.rut.focus=false;" ng-model="ingvtc.arrViajeros[$index].rut.valor" ng-focus="viajero.rut.focus=true;"><!-- <small class="invalid" ng-show="viajero.rut.error \n                                                                             && ingvtForm.viajeroRut_{{$index}}.$dirty \n                                                                             && !viajero.rut.focus">{{ingvtc.mensajes.errorRutRequerido}}</small>\n                                                <small class="invalid" ng-show="ingvtForm.viajeroRut_{{$index}}.$error.rut \n                                                                             && !viajero.rut.focus">{{ingvtc.mensajes.errorRutInvalido}}</small> --> <small class="invalid" ng-show="viajero.rut.error   \n                                                                             && viajero.rut.mostrarError\n                                                                             && ingvtForm.viajeroRut_{{$index}}.$dirty">{{ingvtc.mensajes.errorRutInvalido}}</small><small class="invalid" ng-show="viajero.rut.errorRepetido && ingvtForm.viajeroRut_{{$index}}.$dirty && !viajero.rut.focus">El rut estÃ¡ repetido</small></div><!--fin Item--><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Parentesco <a href="javascript:void(0);" popover="Con respecto al Viajero Titular" popover-placement="top" popover-trigger="mouseenter" popover-append-to-body="true"><i class="help-icon ion-ios-help-outline"></i></a><span class="text-danger">*</span></label><ui-select ng-required="true" ng-change="ingvtc.changeParentesco(ingvtc.arrViajeros[$index], $select.selected);ingvtc.modificaFormulario();viajero.mostrarRequeridos=true;ingvtc.validaPaso3();" ng-model="ingvtc.arrViajeros[$index].parentesco.selectedParentesco"><ui-select-match placeholder="Seleccione..."> {{$select.selected.parentesco}} </ui-select-match><ui-select-choices repeat="lista in ingvtc.listaParentescos.noTitular"> {{ lista.parentesco }} </ui-select-choices></ui-select><small class="invalid" ng-show="viajero.parentesco.errorConyuge">{{ingvtc.mensajes.errorYatienesConyugue}}</small><small class="invalid" ng-show="viajero.mostrarRequeridos && viajero.parentesco.errorRequerido">{{ingvtc.mensajes.errorParentescoRequerido}}</small></div><!--fin Item--></div><div class="row"><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Nombre <span class="text-danger">*</span></label><input type="text" name="viajeroNombre_{{$index}}" class="form-control" maxlength="50" ng-model="ingvtc.arrViajeros[$index].nombre.valor" ng-change="viajero.nombre.mostrarError=true;\n                                                                  ingvtc.modificaFormulario();\n                                                                  viajero.mostrarRequeridos=true;\n                                                                  ingvtc.validaPaso3();" ng-blur="viajero.nombre.focus=false;" ng-focus="viajero.nombre.focus=true;" alphanumeric-only required> <small class="invalid" ng-show="ingvtForm.viajeroNombre_{{$index}}.$dirty \n                                                                             && viajero.nombre.error \n                                                                             && viajero.nombre.mostrarError">{{ingvtc.mensajes.errorIngresarNombre}}</small></div><!--fin Item--><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Apellido Paterno <span class="text-danger">*</span></label><input type="text" name="viajeroPaterno_{{$index}}" class="form-control" maxlength="50" ng-model="ingvtc.arrViajeros[$index].apellidoPaterno.valor" ng-change="viajero.apellidoPaterno.mostrarError=true;\n                                                                  ingvtc.modificaFormulario();\n                                                                  viajero.mostrarRequeridos=true;\n                                                                  ingvtc.validaPaso3();" ng-blur="viajero.apellidoPaterno.focus=false;" ng-focus="viajero.apellidoPaterno.focus=true;" alphanumeric-only required> <small class="invalid" ng-show="viajero.apellidoPaterno.error \n                                                             && viajero.apellidoPaterno.mostrarError">{{ingvtc.mensajes.errorIngresarApellidoPaterno}}</small></div><!--fin Item--><div class="col-lg-3 col-md-3 col-sm-3 form-group"><!--Item--><label>Apellido Materno</label><input type="text" name="viajeroMaterno_{{$index}}" class="form-control" maxlength="50" ng-model="ingvtc.arrViajeros[$index].apellidoMaterno.valor" ng-change="ingvtc.modificaFormulario();ingvtc.validaPaso3();" ng-blur="viajero.apellidoMaterno.focus=false;" ng-focus="viajero.apellidoMaterno.focus=true;" alphanumeric-only required></div><!--fin Item--><div class="col-lg-2 col-md-3 col-sm-3 form-group"><!--Item--><label>Fecha de Nacimiento <span class="text-danger">*</span></label><p class="input-group"><input type="text" readonly="readonly" name="viajeroFN_{{$index}}" id="idViajeroFN_{{$index}}" class="form-control" show-button-bar="false" datepicker-popup="{{ingvtc.arrViajeros[$index].datePicker.format}}" ng-model="viajero.datePicker.fechaNacimiento" is-open="ingvtc.arrViajeros[$index].datePicker.opened" datepicker-options="false" close-text="Close" show-weeks="false" min-date="ingvtc.arrViajeros[$index].parentesco.selectedParentesco.fechaMin" max-date="ingvtc.arrViajeros[$index].parentesco.selectedParentesco.fechaMax" ng-change="viajero.datePicker.change();viajero.mostrarRequeridos=true;ingvtc.modificaFormulario();ingvtc.validaPaso3();"> <span class="input-group-btn"><button type="button" class="btn neutro border" ng-click="ingvtc.arrViajeros[$index].datePicker.openDatePicker($event)"><i class="glyphicon glyphicon-calendar"></i></button></span></p><!--<small class="invalid"\n                                                       ng-show="viajero.mostrarRequeridos \n                                                             && ingvtForm.viajeroFN_{{$index}}.$dirty \n                                                             && viajero.fechaNacimiento.errorVacia">{{ingvtc.mensajes.errorFechaNacimientoRequerida}}</small>--> <small class="invalid" ng-show="viajero.mostrarRequeridos && viajero.fechaNacimiento.errorInvalida">{{viajero.fechaNacimiento.errorMje}}</small><!-- Mensaje Error--></div><!--fin Item--></div></div><!--fin Bloque--><div class="col-lg-12 col-md-12 col-sm-12 separador-paso-2"><!-- Separador --><hr></div><!-- fin Separador --><div class="col-lg-12 col-md-12 col-sm-12 text-right"><!-- Separador --><h6 class="text-primary" ng-if="$last">*{{ingvtc.mensajes.errorFaltanViajeros1}} {{ingvtc.obtieneNumeroViajerosIncompletos()}} {{ingvtc.mensajes.errorFaltanViajeros2}}</h6></div><!-- fin Separador --></div><br><br></div></article><article class="step" data-step="{{ingvtc.numeroPersonas === 1 ? 3 : 4}}" ng-class="{disabled: !ingvtc.step1ok || !ingvtc.step2ok || !ingvtc.step3ok, done: ingvtc.step1ok && ingvtc.step2ok && ingvtc.step3ok}"><h3>Datos envÃ­o de PÃ³liza</h3><br><envio-poliza-directive numero-telefono-obligatorio="false" numero-direccion-obligatorio="true"><br><br></article></section></div></form><div class="col-lg-12 col-md-12 col-sm-12 text-right"><div class="col-lg-12 col-md-12 col-sm-12"><button class="btn neutro border" ui-sref="venta-seguros-viaje-total-simulacion">Cancelar</button> <button class="btn success" ng-disabled="!ingvtc.dataEnvioPoliza.envioPolizaValida();" ng-click="ingvtc.guardarContinuar();">Continuar</button></div></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><br><br><br><br><p class="text-default"><small>{{ingvtc.flujoModel.simulacion.datosPagina.parrafo1}}</small></p></div><div class="col-lg-12 col-md-12 col-sm-12"><p class="text-default"><small>{{ingvtc.flujoModel.simulacion.datosPagina.parrafo2}}</small></p><br><br><br><br><br></div></div></div></div><!-- fin Pantalla --></section>');
	}]), angular.module("venta-seguros-viajes/src/seguros/viaje-total/resumen/resumen-viaje-total.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/seguros/viaje-total/resumen/resumen-viaje-total.tpl.html", '<section class="container contrata-nuevo-seguro"><div class="row"><!-- Pantalla --><div class="col-lg-12 col-md-12 col-sm-12"><!-- Subtitulo --><div class="bch-subtitulo con-steps"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><h4 class="pull-left">Resumen {{rsvtc.flujoModel.titulo}}</h4><article class="steps-horizontales col-lg-4 col-md-4 col-sm-4 pull-right"><div class="row"><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step done"><i class="ion-ios-checkmark-empty"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step done"><i class="ion-ios-checkmark-empty"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step active"><i class="ion-ios-arrow-right"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step"><i class="ion-ios-arrow-right"></i></div></div></article></div></div></div><!-- fin Subtitulo --><div class="col-lg-12 col-md-12 col-sm-12"><form name="resumen" autocomplete="off" novalidate><div class="col-lg-12 col-md-12 col-sm-12 neutro resumen-seguro-contratado"><div class="col-lg-12 col-md-12 col-sm-12"><!-- Barra Datos Seguro--><div class="col-lg-12 col-md-12 col-sm-12 bar-datos-seguro large"><div class="row"><div class="col-lg-2 col-md-2 col-sm-2"><img ng-src="{{rsvtc.flujoModel.simulacion.planSeleccionado.iconoCia}}"></div><div class="col-lg-6 col-md-6 col-sm-6 height-databar--auto"><h3 class="text-regular">{{rsvtc.flujoModel.simulacion.datosPagina.nombreSeguro}}</h3><br><h6 class="text-regular no-ico">PaÃ­s(es) de Destino(s)</h6><h6 class="text-light">{{rsvtc.paisesDestinos}}</h6><br></div><div class="col-lg-2 col-md-2 col-sm-2"><h6 class="text-regular no-ico">Vigencia</h6><h6 class="text-light"><span class="text-regular">Desde:</span> {{rsvtc.flujoModel.ingresoDatos.seguro.fechaVigenciaDesdeformat}}</h6><h6 class="text-light"><span class="text-regular">Hasta:</span> {{rsvtc.flujoModel.ingresoDatos.seguro.fechaVigenciaHastaformat}}</h6></div><div class="col-lg-2 col-md-2 col-sm-2"><h2 class="text-regular text-info">UF {{rsvtc.flujoModel.simulacion.planSeleccionado.plnMontoMO | number : 2}}</h2><p class="text-regular text-primary"><small>$ {{rsvtc.flujoModel.simulacion.planSeleccionado.plnMontoCLP | number}}*</small></p><p class="text-regular text-primary"><small>Prima Ãšnica</small></p></div></div></div></div><!-- fin Barra Datos Seguro--><div><!--Bloque--><div class="col-lg-12 col-md-12 col-sm-12 titulo"><!--Titulo--><h5 class="text-primary">Datos Contratante</h5></div><!--fin Titulo--><div class="col-lg-2 col-md-2 col-sm-2"><h6 class="text-regular">Rut</h6><h5>{{rsvtc.flujoModel.ingresoDatos.datosContratante.rut.valor | rut}}</h5></div><div class="col-lg-4 col-md-4 col-sm-4"><h6 class="text-regular">Nombre</h6><h5>{{rsvtc.flujoModel.ingresoDatos.datosContratante.nombre.valor}} {{rsvtc.flujoModel.ingresoDatos.datosContratante.apellidoPaterno.valor}} {{rsvtc.flujoModel.ingresoDatos.datosContratante.apellidoMaterno.valor}}</h5></div><div class="col-lg-3 col-md-3 col-sm-3"></div><div class="col-lg-3 col-md-3 col-sm-3"></div></div><!--fin Bloque--><div class="row clear"><hr></div><div><!--Bloque--><div class="col-lg-12 col-md-12 col-sm-12 titulo"><!--Titulo--><h5 class="text-primary">Datos Viajero Titular</h5></div><!--fin Titulo--><div class="col-lg-2 col-md-2 col-sm-2"><h6 class="text-regular">Rut</h6><h5>{{rsvtc.flujoModel.ingresoDatos.viajeroTitular.rut.valor | rut}}</h5></div><div class="col-lg-4 col-md-4 col-sm-4"><h6 class="text-regular">Nombre</h6><h5>{{rsvtc.flujoModel.ingresoDatos.viajeroTitular.nombre.valor}} {{rsvtc.flujoModel.ingresoDatos.viajeroTitular.apellidoPaterno.valor}} {{rsvtc.flujoModel.ingresoDatos.viajeroTitular.apellidoMaterno.valor}}</h5></div><div class="col-lg-3 col-md-3 col-sm-3"><h6 class="text-regular">Fecha de Nacimiento</h6><h5>{{rsvtc.flujoModel.ingresoDatos.viajeroTitular.fechaNacimiento.date | date : \'dd/MM/yyyy\'}}</h5></div><div class="col-lg-3 col-md-3 col-sm-3"></div></div><!--fin Bloque--><div class="row clear"><hr></div><div ng-repeat="viajero in rsvtc.flujoModel.ingresoDatos.viajeros"><div><!--Bloque--><div class="col-lg-12 col-md-12 col-sm-12 titulo"><!--Titulo--><h5 class="text-primary">Viajero</h5></div><!--fin Titulo--><div class="col-lg-2 col-md-2 col-sm-2"><h6 class="text-regular">Rut</h6><h5>{{viajero.rut}}-{{viajero.dv}}</h5></div><div class="col-lg-4 col-md-4 col-sm-4"><h6 class="text-regular">Nombre</h6><h5>{{viajero.nombre}} {{viajero.apepata}} {{viajero.pemat}}</h5></div><div class="col-lg-3 col-md-3 col-sm-3"><h6 class="text-regular">Fecha de Nacimiento</h6><h5>{{viajero.fecNac | date : \'dd/MM/yyyy\'}}</h5></div><div class="col-lg-3 col-md-3 col-sm-3"><h6 class="text-regular">Parentesco</h6><h5>{{viajero.parentescoGlosa}}</h5></div></div><!--fin Bloque--><div class="row clear"><hr></div></div><div><!--Bloque--><div class="col-lg-12 col-md-12 col-sm-12 titulo"><!--Titulo--><h5 class="text-primary">Datos EnvÃ­o de PÃ³liza</h5></div><!--fin Titulo--><div class="col-lg-6 col-md-6 col-sm-6"><h6 class="text-regular">DirecciÃ³n</h6><h5>{{rsvtc.flujoModel.ingresoDatos.viajeroTitular.direccion}} {{rsvtc.flujoModel.ingresoDatos.viajeroTitular.numero}} {{rsvtc.flujoModel.ingresoDatos.viajeroTitular.bloque}}, {{rsvtc.flujoModel.ingresoDatos.viajeroTitular.comuna.nombre}}, {{rsvtc.flujoModel.ingresoDatos.viajeroTitular.ciudad.nombre}} </h5></div><div class="col-lg-3 col-md-3 col-sm-3"><h6 class="text-regular">TelÃ©fono</h6><h5>+56 {{rsvtc.flujoModel.ingresoDatos.viajeroTitular.telefono}}</h5></div><div class="col-lg-3 col-md-3 col-sm-3"><h6 class="text-regular">Email</h6><h5>{{rsvtc.flujoModel.ingresoDatos.viajeroTitular.mail}}</h5></div></div><!--fin Bloque--><div class="row clear"><hr></div><div class="col-lg-12 col-md-12 col-sm-12 caja-condiciones"><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 titulo"><!--Titulo--><h5 class="text-primary">Aceptar Condiciones</h5></div><!--fin Titulo--></div><div class="col-lg-12 col-md-12 col-sm-12 default"><div class="row"><div class="col-lg-3 col-md-3 col-sm-3 cell"><!--  --> <a href="{{rsvtc.urlCondiciones}}" target="_blank"><i class="icon-icon-pdf descarga"></i> Ver Condiciones</a></div><div class="col-lg-6 col-md-6 col-sm-6 cell"><p>Acepto condiciones, coberturas y exclusiones del seguro y autorizo a Banchile Corredores de Seguros a enviar esta informaciÃ³n por correo.</p></div><div class="col-lg-3 col-md-3 col-sm-3 cell"><div class="col-lg-12 col-md-12 col-sm-12"><label class="bch-custom-check"><div><input name="aceptarCondiciones" ng-model="rsvtc.acetarCondiciones" type="checkbox" ng-required="true"> <i></i></div>Acepto condiciones</label></div></div></div></div></div></div></form><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 text-right botones-resumen"><button class="btn neutro border" ui-sref="venta-seguros-viaje-total-simulacion">Cancelar</button> <button class="btn success" ng-click="rsvtc.pagarSeguroWebpay();" type="submit" ng-disabled="resumen.$invalid">Pagar Seguro</button></div></div><div class="bch-mensaje-empresas error" ng-if="rsvtc.mensajeErrorEnvioDocumentacion.length"><article><h5>{{rsvtc.mensajeErrorEnvioDocumentacion}}</h5></article></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><br><br><br><br><p class="text-default"><small>{{rsvtc.flujoModel.simulacion.datosPagina.parrafo1}}</small></p></div><div class="col-lg-12 col-md-12 col-sm-12"><p class="text-default"><small>{{rsvtc.flujoModel.simulacion.datosPagina.parrafo2}}</small></p><br><br><br><br><br></div></div></div></div><!-- fin Pantalla --><!-- Redirect WebPay --><div><form role="form" autocomplete="off" class="formulario" name="banco.webpayForm" method="post" novalidate><input id="tokenWebpay" type="hidden" name="TBK_TOKEN" value="el_token"></form></div></section>')
	}]), angular.module("venta-seguros-viajes/src/seguros/viaje-total/simulacion/simulacion-viaje-total.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/seguros/viaje-total/simulacion/simulacion-viaje-total.tpl.html", '<div class="spinner" ng-show="simvtCtrl.loaderDatosSimulacion"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><section class="container contrata-nuevo-seguro" ng-show="!simvtCtrl.loaderDatosSimulacion && simvtCtrl.simularContratar"><form novalidate name="simvtForm"><div class="row"><!-- Pantalla --><div class="bch-empresas-tabs col-lg-12 col-md-12 col-sm-12"><div class="row"><!-- Pantalla --><div class="col-lg-12 col-md-12 col-sm-12"><!-- Subtitulo --><div class="bch-subtitulo con-steps"><div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><h4 class="pull-left">SimulaciÃ³n {{simvtCtrl.flujoModel.titulo}}</h4><article class="steps-horizontales col-lg-4 col-md-4 col-sm-4 pull-right"><div class="row"><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step active"><i class="ion-ios-arrow-right"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step"><i class="ion-ios-checkmark-empty"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step"><i class="ion-ios-arrow-right"></i></div><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 text-center step"><i class="ion-ios-arrow-right"></i></div></div></article></div></div></div><!-- fin Subtitulo --><div class="col-lg-12 col-md-12 col-sm-12"><div class="col-lg-12 col-md-12 col-sm-12"><section class="steps forms-empresas"><article class="step done" data-step="1"><h3>Ingresa Fecha de Viaje</h3><br><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><!--Bloque--><div class="row"><div class="col-lg-2 col-md-3 col-sm-3 form-group"><!--Item--><label>Fecha de Inicio <span class="text-danger">*</span></label><p class="input-group"><input type="text" class="form-control" show-button-bar="false" readonly="readonly" name="fechaInicio" id="idFechaInicio" min-date="simvtCtrl.fechaInicioMinDate" max-date="simvtCtrl.fechaInicioMaxDate" datepicker-popup="{{simvtCtrl.datepickerInicio.format}}" ng-model="simvtCtrl.datepickerInicio.fechaInicio" is-open="simvtCtrl.datepickerInicio.opened" datepicker-options="false" ng-required="true" close-text="Close" show-weeks="false" ng-change="simvtCtrl.datepickerInicio.change();simvtCtrl.modificaFormulario();"> <span class="input-group-btn"><button type="button" class="btn neutro border" ng-click="simvtCtrl.datepickerInicio.openDatePicker($event); simvtCtrl.close();"><i class="glyphicon glyphicon-calendar"></i></button></span></p><small class="invalid" ng-show="simvtCtrl.datepickerInicio.error1">{{simvtCtrl.mensajes.errorFechaInicioMayorHoy}}</small><!-- Mensaje Error--> <small class="invalid" ng-show="simvtCtrl.datepickerInicio.error2">{{simvtCtrl.mensajes.errorFechaInicioMenorRangoMax}}</small><!-- Mensaje Error--> <small class="invalid" ng-show="simvtCtrl.datepickerInicio.error3">{{simvtCtrl.mensajes.errorFechaInicioRequerida}}</small><!-- Mensaje Error--></div><!--fin Item--><div class="col-lg-2 col-md-3 col-sm-3 form-group"><!--Item--><label>Fecha de TÃ©rmino <span class="text-danger">*</span></label><p class="input-group"><input type="text" class="form-control" show-button-bar="false" readonly="readonly" name="fechaTermino" id="idFechaTermino" min-date="simvtCtrl.fechaTerminoMinDate" max-date="simvtCtrl.fechaTerminoMaxDate" datepicker-popup="{{simvtCtrl.datepickerTermino.format}}" ng-model="simvtCtrl.datepickerTermino.fechaTermino" is-open="simvtCtrl.datepickerTermino.opened" datepicker-options="false" ng-required="true" close-text="Close" show-weeks="false" ng-change="simvtCtrl.datepickerTermino.change();simvtCtrl.modificaFormulario();"> <span class="input-group-btn"><button type="button" class="btn neutro border" ng-click="simvtCtrl.datepickerTermino.openDatePicker($event); simvtCtrl.close();"><i class="glyphicon glyphicon-calendar"></i></button></span></p><small class="invalid" ng-show="simvtCtrl.datepickerTermino.error1">{{simvtCtrl.mensajes.errorFechaTerminoMayorInicio}}</small><!-- Mensaje Error--> <small class="invalid" ng-show="simvtCtrl.datepickerTermino.error2">{{simvtCtrl.mensajes.errorFechaTerminoValida}}</small><!-- Mensaje Error--> <small class="invalid" ng-show="simvtCtrl.datepickerTermino.error3">{{simvtCtrl.mensajes.errorFechaTerminoRequerida}}</small><!-- Mensaje Error--></div><!--fin Item--><div class="col-lg-2 col-md-3 col-sm-3 form-group"><!--Item--><label>NÂº de personas <span class="text-danger">*</span></label><ui-select ng-required="true" ng-model="simvtCtrl.datosViajero.numeroPersonas" ng-change="simvtCtrl.modificaFormulario();" class="selectToClose"><ui-select-match placeholder="Seleccione..."> {{$select.selected}} </ui-select-match><ui-select-choices repeat="lista in simvtCtrl.arrNumeroPersonas"> {{ lista }} </ui-select-choices></ui-select></div><!--fin Item--></div><div class="row"><div class="col-lg-6 col-md-9 col-sm-9 form-group"><!--Item--><label>PaÃ­s(es) de Destino<span class="text-danger">*</span></label><drop-multi-select data="simvtCtrl.selectPaisesDestinos"></drop-multi-select><!-- <small class="mt-10">MÃ¡ximo 10 paÃ­ses</small> --> <small ng-if="simvtCtrl.selectPaisesDestinos.selecciones.length < 10" class="mt-10">Puede Seleccionar un MÃ¡ximo de 10 PaÃ­ses</small> <small ng-if="simvtCtrl.selectPaisesDestinos.selecciones.length == 10" class="mt-10 text-info">Ya seleccionÃ³ el mÃ¡ximo de PaÃ­ses Permitidos</small> <small ng-if="simvtCtrl.selectPaisesDestinos.selecciones.length > 10" class="mt-10 text-danger">No se debe superar el mÃ¡mixo de 10 PaÃ­ses Permitidos</small></div><!--fin Item--></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12 texto-campo-obligatorio"><p><span class="text-danger">*</span> Campos Obligatorios.</p></div></div></div><!--fin Bloque--><div class="col-lg-12 col-md-12 col-sm-12"><!--Mensaje--><div class="col-lg-12 col-md-12 col-sm-12 neutro bch-mensaje-importante"><div class="col-lg-12 col-md-12 col-sm-12"><h6><span class="text-regular text-primary">{{simvtCtrl.aviso.parrafo1}}</span> {{simvtCtrl.aviso.parrafo2}}</h6></div></div></div><!--fin Mensaje--><div class="col-lg-12 col-md-12 col-sm-12"><!--Botones--> <button class="btn primary ladda-button" ladda="simvtCtrl.flujoModel.simulacion.ladda" ng-disabled="!simvtCtrl.validaPaso1();" ng-click="simvtCtrl.buscarPlan();">Buscar Plan</button></div><!--fin Botones--></div><br><br></article><article class="step done" data-step="2" ng-class="{disabled: !simvtCtrl.flujoModel.simulacion.mostrarCarrusel, done: simvtCtrl.flujoModel.simulacion.mostrarCarrusel}"><h3>Selecciona un Plan</h3><br><carrusel-planes-seguros ng-if="simvtCtrl.flujoModel.simulacion.mostrarCarrusel"></carrusel-planes-seguros><br><br></article></section></div><div class="row"></div><div class="col-lg-12 col-md-12 col-sm-12 text-right"><button ng-click="simvtCtrl.cancelar()" class="btn neutro border">Cancelar</button> <button class="btn success" ng-disabled="!simvtCtrl.validaFormulario();" ng-click="simvtCtrl.guardarContinuar();">Continuar</button></div></div><div class="row"><div class="col-lg-12 col-md-12 col-sm-12"><br><br><br><br><p class="text-default text-justify"><small>{{simvtCtrl.flujoModel.simulacion.datosPagina.parrafo1}}</small></p></div><div class="col-lg-12 col-md-12 col-sm-12"><p class="text-default text-justify"><small>{{simvtCtrl.flujoModel.simulacion.datosPagina.parrafo2}}</small></p><br><br><br><br><br></div></div></div></div><!-- fin Pantalla --></div></form></section>')
	}]), angular.module("venta-seguros-viajes/src/venta-seguros-viajes.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("venta-seguros-viajes/src/venta-seguros-viajes.tpl.html", '<div class="spinner" ng-show="segurosCtrl.loading"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><section class="container contrata-nuevo-seguro pl-0 pr-30" ng-show="!segurosCtrl.loading"><div ui-view></div></section>')
	}]), angular.module("visualizacion-boletas-sii-nocliente/src/visualizacion-boletas-sii-nocliente/tabs/visualizacion-boletas-sii-nocliente-tabs.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("visualizacion-boletas-sii-nocliente/src/visualizacion-boletas-sii-nocliente/tabs/visualizacion-boletas-sii-nocliente-tabs.tpl.html", '<section class="container"><div ui-view></div></section>')
	}]), angular.module("visualizacion-boletas-sii-nocliente/src/visualizacion-boletas-sii-nocliente/transaction-steps/transaction-steps.tpl.html", []).run(["$templateCache", function($templateCache) {
		$templateCache.put("visualizacion-boletas-sii-nocliente/src/visualizacion-boletas-sii-nocliente/transaction-steps/transaction-steps.tpl.html", '<div class="container boletas-sii ui-minerva"><div class="login-boletas-sii"><!-- Logos de Marca --><div class="row"><div class="col-xs-12 header-boletas-sii"><img src="assets/images/logo-bec.svg" width="219" alt=""> <img src="assets/images/logo-bch-grey.svg" width="208" alt=""> <img src="assets/images/logo-cch.svg" width="243" alt=""></div></div><!-- Titulo --><div class="row"><div class="col-lg-12 text-center titulo-login"><h1 class="text-color-blue px-28">Consulta de boletas Banco de Chile</h1></div></div><!-- Cards --><div class="row contenido-login"><div class="col-xs-12 col-sm-5 col-lg-4"><div class="boletas-sii-card"><form name="boletas.boletasForm" role="form" novalidate autocomplete="false"><div class="row"><div class="col-xs-12 pl-10 pr-10"><h2 class="text-color-blue px-28">Ingresa tus datos</h2><p class="text-color-grey px-16">Para comenzar tu consulta de boletas ingresa los siguientes datos</p><div class="form-group mb-20"><label>RUT</label><input type="hidden" name="username2" id="iduserName2" value="1"> <input type="text" id="preventAutoPass" class="hidden-xs hidden-sm hidden-md hidden-lg"> <input class="form-control" style="margin-bottom:26px!important" type="text" name="username2" id="iduserName" placeholder="Sin puntos, ni guiones" autocomplete="false" ng-model="boletas.rut" ng-rut rut-format="blur" ng-blur="boletas.validarRut(boletas.rut)" maxlength="12" required ng-keypress="boletas.enterpress($event)" ng-keydown="boletas.limpiarMensajes()" ng-click="boletas.limpiarMensajes()" autofocus="true" delete-zero-left> <small class="invalid pull-left" style="margin-top:-24px" ng-show="(boletas.boletasForm.username2.$dirty || boletas.boletasForm.username2.$touched) && boletas.boletasForm.username2.$error.required">{{boletas.mensajeErrorRutVacio}} </small><small class="invalid pull-left" style="margin-top:-24px" ng-show="boletas.showRutNoValido">{{boletas.mensajeErrorNoValido}} </small><small class="invalid pull-left" style="margin-top:-24px" ng-show="boletas.showRutMayor50MM">{{boletas.mensajeRUTMayor50MM}} </small></div></div><div class="col-xs-12 pl-10 pr-10"><div class="form-group mb-20"><label>NÃºmero de documento / serie</label><input name="serie" type="text" ng-keypress="boletas.enterpress($event)" ng-model="boletas.serie" ng-keydown="boletas.limpiarSerie()" class="form-control ng-invalid" style="margin-bottom:26px!important" maxlength="10" minlength="9" placeholder="NÃºmero de serie o nÃºmero de documento" required autocomplete="false" validate="serie" ng-pattern="/^A?\\d+$/"> <small class="invalid pull-left" style="margin-top:-24px" ng-if="boletas.boletasForm.serie.$dirty && boletas.boletas.serie.$error.pattern">Ingresa nÃºmero de documento o serie vÃ¡lido.</small> <small class="invalid pull-left" style="margin-top:-24px" ng-if="(boletas.boletasForm.serie.$dirty || boletas.boletasForm.serie.$touched) && boletas.boletasForm.serie.$error.required"> {{boletas.mensajeSerieVacio}} </small><small class="invalid pull-left" style="margin-top:-24px" ng-if="boletas.boletasForm.serie.$dirty && !boletas.boletasForm.serie.$error.pattern && (boletas.boletasForm.serie.$error.maxlength || boletas.boletasForm.serie.$error.minlength)">Ingresa nÃºmero de documento o serie vÃ¡lido.</small></div></div><div class="col-xs-12 pl-12 pr-10"><re-captcha g-recaptcha-response="boletas.captchaResponse" control="boletas.captchaReload" expired-callback="boletas.captchaCallback"></re-captcha></div><div class="col-xs-12 mb-10 pl-10 pr-10 mt-5" style="margin-top:-5px"><small class="caps-lock-alert invalid" ng-if="false" id="bch-login-msj-error-chico">{{boletas.mensajeTeclaMayuscula}} </small></div><div class="col-xs-12 pl-10 pr-10"><a href="javascript:void(0)" class="btn primary pt-15 pb-15 w-100 px-14 btn-logobch" ng-disabled="!boletas.boletasForm.$valid || !boletas.validacionCaptcha" ng-click="boletas.validaUsuario()" target="_top" id="p_btn_solic_autentic-rvss_pub_iniciar-sol_portab"><span class="flex-center" ng-if="!boletas.loadingBoton">CONSULTAR MIS BOLETAS</span><section class="spinner mt-0" ng-if="boletas.loadingBoton"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></section></a></div></div></form></div></div><div class="col-xs-12 col-sm-6 col-lg-6 boletas-sii-documentos"><div class="boletas-sii-card"><h3 class="px-20 text-color-grey">Te recomendamos tener a mano tu cÃ©dula de identidad.</h3><div class="row pt-30"><div class="col-sm-6 col-lg-6"><p><strong>CÃ©dula Actual</strong></p><img class="w-100" src="assets/images/carnet-serie-front.png" alt="imagen cedula actual"></div><div class="col-sm-6 col-lg-6"><p><strong>CÃ©dula Antigua (incluye la letra A)</strong></p><img class="w-100" src="assets/images/carnet-serie-back.png" alt="imagen cedula antigua"></div></div></div></div></div><!-- Mensajes --><div class="row pt-20 contenido-login"><div class="col-xs-12 col-sm-11 col-lg-10"><div class="bch-mensaje-empresas warning" ng-if="!boletas.cedulaVigente"><article><p>No pudimos validar tus datos. Verifica que el nÃºmero de serie sea el correcto, que tu cÃ©dula estÃ© vigente, no vencida ni bloqueada. Al tercer intento se bloquearÃ¡ por 72 horas.</p></article></div><div class="bch-mensaje-empresas warning" ng-if="false"><article><p>Has agotado el nÃºmero de intentos de validaciÃ³n de datos. Vuelve a intentarlo en 72 horas contadas desde este momento.</p></article></div><div class="bch-mensaje-empresas warning" ng-if="boletas.showError"><article><p>El servicio presenta intermitencias. Por favor, intenta nuevamente.</p></article></div><div class="bch-mensaje-empresas warning" ng-if="false"><article><p>El servicio presenta intermitencias. Por favor, intenta nuevamente.</p></article></div><div class="bch-mensaje-empresas warning bch-mensaje-entendido padd-none" ng-if="boletas.esCliente"><article class="width-100 position-relative"><div class="row pl-25 pr-15 pt-15 pb-15 align-center"><div class="col-xs-12 col-sm-8 col-md-8 col-lg-9 pl-30"><p class="pl-30">SegÃºn nuestros registros ya eres cliente. Puedes acceder a Banco en LÃ­nea con tu clave haciendo clic en el botÃ³n "Ingresar como cliente". Si la has olvidado o deseas recuperarla tambiÃ©n podrÃ¡s hacerlo.</p></div><div class="col-xs-12 col-sm-4 col-md-4 col-lg-3 text-right pt-15"><button class="btn confirmar" ng-click="boletas.login();">INGRESAR COMO CLIENTE</button></div></div></article></div></div></div></div></div>')
	}])
}(window, window.angular),
function() {
	angular.module("WebBancoChile.politicasSeguridad", ["ui.router", "angular-svg-round-progress"])
}(),
function() {
	angular.module("WebBancoChile.persona.alerta-bloqueo", ["ui.router", "ui.bootstrap", "WebBancoChile.persona.desbloqueo"])
}(),
function() {
	angular.module("WebBancoChile.persona.service.desbloqueo", [])
}(),
function() {
	angular.module("WebBancoChile.persona.desbloqueo", ["ui.router", "ui.bootstrap", "platanus.rut", "angular-ladda", "WebBancoChile.cajaDesafio", "WebBancoChile.catalogo", "WebBancoChile.persona.service.desbloqueo", "WebBancoChile.directive.util.deleteZeroLeft", "WebBancoChile.mensajes", "WebBancoChile.mensajes.parametros", "noCAPTCHA"])
}(),
function() {
	angular.module("WebBancoChile.persona.service.login.folio", [])
}(),
function() {
	angular.module("WebBancoChile.loginPersona.accesoLogin", ["slick", "ui.router", "platanus.rut", "WebBancoChile.catalogo", "WebBancoChile.directive.util.deleteZeroLeft", "ngCapsLock", "WebBancoChile.mensajes", "WebBancoChile.mensajes.parametros"])
}(),
function() {
	angular.module("WebBancoChile.loginPersona.olvidoClave", ["ui.router", "ui.utils", "ui.bootstrap", "ngCapsLock", "platanus.rut", "WebBancoChile.catalogo", "WebBancoChile.cajaDesafio", "WebBancoChile.directive.util.deleteZeroLeft", "WebBancoChile.politicasSeguridad", "WebBancoChile.directive.util.setFocus", "WebBancoChile.directive.util.numericOnly", "WebBancoChile.loginPersona.olvidoClave.constants", "WebBancoChile.loginPersona.olvidoClave.factory", "angular-ladda", "WebBancoChile.mensajes", "WebBancoChile.gRecaptcha"])
}(),
function() {
	angular.module("preguntaSeguridadDirective", ["ui.router", "ui.select", "ui.bootstrap", "preguntaSeguridadDirective.filter", "WebBancoChile.mensajes", "WebBancoChile.constants"])
}(),
function(ng) {
	"use strict";
	ng.module("WebBancoChile.gRecaptcha", [])
}(angular),
function() {
	angular.module("WebBancoChile.cajaDesafio", ["ui.router", "cajaDesafioModelService", "cajaDesafioDirective", "cajaDesafioService", "cajaDesafioSoftDirective", "cajaDesafioInterceptor", "cajaDesafioSoftTokenInterceptor", "cajaDesafioRestService", "WebBancoChile.directive.util.setFocus", "WebBancoChile.directive.util.numericOnly", "WebBancoChile.catalogo", "platanus.rut"])
}(),
function() {
	angular.module("WebBancoChile.login.cambioClave", ["ui.router", "WebBancoChile.catalogo", "WebBancoChile.politicasSeguridad", "ngCookies"])
}(),
function() {
	angular.module("WebBancoChile.cartaInstruccionFilters", [])
}(),
function() {
	angular.module("WebBancoChile.filters", [])
}(),
function() {
	angular.module("WebBancoChile.comprobantes", ["ui.router", "ui.bootstrap", "WebBancoChile.constants.portal", "ngFileSaver"])
}(),
function() {
	angular.module("WebBancoChile.contacto", ["ui.router", "ui.bootstrap", "ui.utils", "WebBancoChile.constants", "WebBancoChile.filters", "ngAnimate", "offClick", "ui.select", "platanus.rut", "ngScrollbar", "highcharts-ng", "ui-rangeSlider", "angular-ladda", "noCAPTCHA", "WebBancoChile.orionTablas", "WebBancoChile.dropMultiSelect"])
}(),
function() {
	angular.module("WebBancoChile.dap-publico", ["ui.router", "ui.bootstrap", "ui.select", "ui.utils", "angular-ladda", "ng-currency", "ngFileSaver", "nocaptcha.directive", "platanus.rut", "WebBancoChile.constants", "WebBancoChile.catalogo", "WebBancoChile.cajaDesafio", "WebBancoChile.orionTablas", "WebBancoChile.constants.portal"])
}(),
function() {
	angular.module("WebBancoChile.orionTablas", ["ui.bootstrap", "offClick"])
}(),
function() {
	angular.module("herramientasLocales", [])
}(),
function() {
	angular.module("WebBancoChile.directive-eess-publico", ["ui.router", "ui.bootstrap", "ui.select", "ui.utils", "angular-ladda", "rut.directive", "WebBancoChile.constants", "WebBancoChile.catalogo", "WebBancoChile.messageHandler", "WebBancoChile.cajaDesafio", "WebBancoChile.orionTablas", "WebBancoChile.constants.portal", "WebBancoChile.filters", "WebBancoChile.directive.util.numericOnly", "ngFileSaver", "herramientasLocales"])
}(),
function() {
	angular.module("WebBancoChile.dndFileUpload", ["ui.bootstrap", "ngFileUpload"])
}(),
function() {
	angular.module("WebBancoChile.dropMultiSelect", [])
}(),
function() {
	angular.module("WebBancoChile.ejemplo", ["ui.bootstrap"])
}(),
function() {
	angular.module("WebBancoChile.mensajes", ["ui.router", "ui.bootstrap", "WebBancoChile.mensajes.parametros"])
}(),
function() {
	angular.module("WebBancoChile.messageHandler", ["ui.router", "WebBancoChile.messageHandler.service", "WebBancoChile.constants", "WebBancoChile.constants.portal"])
}(),
function() {
	angular.module("WebBancoChile.agendamiento", ["ui.bootstrap", "ui.select", "noCAPTCHA", "platanus.rut", "WebBancoChile.filters", "WebBancoChile.catalogo"])
}(),
function() {
	angular.module("herramientasLocales", [])
}(),
function() {
	angular.module("WebBancoChile.portabilidad-financiera-publico", ["slick", "ui.router", "ui.bootstrap", "ui.select", "ui.utils", "angular-ladda", "platanus.rut", "WebBancoChile.constants", "WebBancoChile.catalogo", "WebBancoChile.messageHandler", "WebBancoChile.constants.portal", "WebBancoChile.solicitudPortabilidadFactory.factory", "WebBancoChile.loginPortabilidadFactory.factory", "WebBancoChile.cotizacionFactory.factory", "ngFileSaver", "ngFileUpload", "ngCapsLock", "WebBancoChile.dndFileUpload", "WebBancoChile.archivoIngresoSolicitudPublicoService.service", "WebBancoChile.tasaIngresoSolicitudPublicoService.service", "WebBancoChile.iteIngresoSolicitudPublicoService.service", "WebBancoChile.storeComprobantePortabilidadService.service", "WebBancoChile.preguntasSeguridadService.service", "WebBancoChile.tokenPortabilidadService.service", "WebBancoChile.redirigirSolicitudService.service", "nocaptcha.directive", "WebBancoChile.directive-eess-publico"])
}(),
function() {
	angular.module("WebBancoChile.ccpublico", ["ui.router", "ui.bootstrap", "ui.select", "ui.utils", "angular-ladda", "ng-currency", "platanus.rut", "slick", "WebBancoChile.filter", "WebBancoChile.comprobantes", "WebBancoChile.constants", "WebBancoChile.catalogo", "WebBancoChile.responseSimulacion.service", "WebBancoChile.perfilCliente.service", "WebBancoChile.comprobanteData.service", "WebBancoChile.tallerProducto.service", "WebBancoChile.directive.util.validateMail", "WebBancoChile.directive.util.numericOnly", "WebBancoChile.gRecaptcha", "WebBancoChile.messageHandler"])
}(),
function() {
	angular.module("WebBancoChile.solicitudClavePersona", ["ui.router", "platanus.rut", "WebBancoChile.catalogo", "WebBancoChile.directive.util.deleteZeroLeft", "ngCapsLock", "WebBancoChile.solicitudClavePersona.constants", "WebBancoChile.cajaDesafio", "WebBancoChile.gRecaptcha", "angular-ladda", "WebBancoChile.politicasSeguridad", "WebBancoChile.mensajes", "WebBancoChile.directive.util.deleteZeroLeft"])
}(),
function() {
	angular.module("WebBancoChile.directive.util.dateFormater", [])
}(),
function() {
	angular.module("WebBancoChile.venta-seguros-viajes", ["ui.router", "ui.bootstrap", "ui.unique", "ui.select", "angular-ladda", "ui.select", "WebBancoChile.directive.util.dateFormater", "slick", "platanus.rut", "WebBancoChile.comprobantes", "ui.utils", "WebBancoChile.dropMultiSelect"])
}(),
function() {
	angular.module("WebBancoChile.visualizacion-boletas-sii-nocliente", ["ui.router", "ui.bootstrap", "ui.select", "ui.utils", "angular-ladda", "ng-currency", "platanus.rut", "WebBancoChile.constants", "WebBancoChile.catalogo", "WebBancoChile.messageHandler", "WebBancoChile.cajaDesafio", "WebBancoChile.validaUsuarioFactory.factory", "WebBancoChile.constants.portal", "nocaptcha.directive"])
}(),
function(angular, factory) {
	return "function" == typeof define && define.amd ? void define("angular-file-upload", ["angular"], function(angular) {
		return factory(angular)
	}) : factory(angular)
}("undefined" == typeof angular ? null : angular, function(angular) {
	var module = angular.module("cartaInstruccionAngularFileUpload", []);
	return module.value("fileUploaderOptions", {
		url: "/",
		alias: "file",
		headers: {},
		queue: [],
		progress: 0,
		autoUpload: !1,
		removeAfterUpload: !1,
		method: "POST",
		filters: [],
		formData: [],
		queueLimit: Number.MAX_VALUE,
		withCredentials: !1
	}).factory("FileUploader", ["fileUploaderOptions", "$rootScope", "$http", "$window", "$compile", function(fileUploaderOptions, $rootScope, $http, $window, $compile) {
		function FileUploader(options) {
			var settings = angular.copy(fileUploaderOptions);
			angular.extend(this, settings, options, {
				isUploading: !1,
				_nextIndex: 0,
				_failFilterIndex: -1,
				_directives: {
					select: [],
					drop: [],
					over: []
				}
			}), this.filters.unshift({
				name: "queueLimit",
				fn: this._queueLimitFilter
			}), this.filters.unshift({
				name: "folder",
				fn: this._folderFilter
			})
		}

		function FileLikeObject(fileOrInput) {
			var isInput = angular.isElement(fileOrInput),
				fakePathOrObject = isInput ? fileOrInput.value : fileOrInput,
				postfix = angular.isString(fakePathOrObject) ? "FakePath" : "Object",
				method = "_createFrom" + postfix;
			this[method](fakePathOrObject)
		}

		function FileItem(uploader, some, options) {
			var isInput = angular.isElement(some),
				input = isInput ? angular.element(some) : null,
				file = isInput ? null : some;
			angular.extend(this, {
				url: uploader.url,
				alias: uploader.alias,
				headers: angular.copy(uploader.headers),
				formData: angular.copy(uploader.formData),
				removeAfterUpload: uploader.removeAfterUpload,
				withCredentials: uploader.withCredentials,
				method: uploader.method
			}, options, {
				uploader: uploader,
				file: new FileUploader.FileLikeObject(some),
				isReady: !1,
				isUploading: !1,
				isUploaded: !1,
				isSuccess: !1,
				isCancel: !1,
				isError: !1,
				progress: 0,
				index: null,
				_file: file,
				_input: input
			}), input && this._replaceNode(input)
		}

		function FileDirective(options) {
			angular.extend(this, options), this.uploader._directives[this.prop].push(this), this._saveLinks(), this.bind()
		}

		function FileSelect(options) {
			FileSelect.super_.apply(this, arguments), this.uploader.isHTML5 || this.element.removeAttr("multiple"), this.element.prop("value", null)
		}

		function FileDrop(options) {
			FileDrop.super_.apply(this, arguments)
		}

		function FileOver(options) {
			FileOver.super_.apply(this, arguments)
		}
		return FileUploader.prototype.isHTML5 = !(!$window.File || !$window.FormData), FileUploader.prototype.addToQueue = function(files, options, filters) {
			var list = this.isArrayLikeObject(files) ? files : [files],
				arrayOfFilters = this._getFilters(filters),
				count = this.queue.length,
				addedFileItems = [];
			angular.forEach(list, function(some) {
				var temp = new FileUploader.FileLikeObject(some);
				if (this._isValidFile(temp, arrayOfFilters, options)) {
					var fileItem = new FileUploader.FileItem(this, some, options);
					addedFileItems.push(fileItem), this.queue.push(fileItem), this._onAfterAddingFile(fileItem)
				} else {
					var filter = this.filters[this._failFilterIndex];
					this._onWhenAddingFileFailed(temp, filter, options)
				}
			}, this), this.queue.length !== count && (this._onAfterAddingAll(addedFileItems), this.progress = this._getTotalProgress()), this._render(), this.autoUpload && this.uploadAll()
		}, FileUploader.prototype.removeFromQueue = function(value) {
			var index = this.getIndexOfItem(value),
				item = this.queue[index];
			item.isUploading && item.cancel(), this.queue.splice(index, 1), item._destroy(), this.progress = this._getTotalProgress()
		}, FileUploader.prototype.clearQueue = function() {
			for (; this.queue.length;) this.queue[0].remove();
			this.progress = 0
		}, FileUploader.prototype.uploadItem = function(value) {
			var index = this.getIndexOfItem(value),
				item = this.queue[index],
				transport = this.isHTML5 ? "_xhrTransport" : "_iframeTransport";
			item._prepareToUploading(), this.isUploading || (this.isUploading = !0, this[transport](item))
		}, FileUploader.prototype.cancelItem = function(value) {
			var index = this.getIndexOfItem(value),
				item = this.queue[index],
				prop = this.isHTML5 ? "_xhr" : "_form";
			item && item.isUploading && item[prop].abort()
		}, FileUploader.prototype.uploadAll = function() {
			var items = this.getNotUploadedItems().filter(function(item) {
				return !item.isUploading
			});
			items.length && (angular.forEach(items, function(item) {
				item._prepareToUploading()
			}), items[0].upload())
		}, FileUploader.prototype.cancelAll = function() {
			var items = this.getNotUploadedItems();
			angular.forEach(items, function(item) {
				item.cancel()
			})
		}, FileUploader.prototype.isFile = function(value) {
			var fn = $window.File;
			return fn && value instanceof fn
		}, FileUploader.prototype.isFileLikeObject = function(value) {
			return value instanceof FileUploader.FileLikeObject
		}, FileUploader.prototype.isArrayLikeObject = function(value) {
			return angular.isObject(value) && "length" in value
		}, FileUploader.prototype.getIndexOfItem = function(value) {
			return angular.isNumber(value) ? value : this.queue.indexOf(value)
		}, FileUploader.prototype.getNotUploadedItems = function() {
			return this.queue.filter(function(item) {
				return !item.isUploaded
			})
		}, FileUploader.prototype.getReadyItems = function() {
			return this.queue.filter(function(item) {
				return item.isReady && !item.isUploading
			}).sort(function(item1, item2) {
				return item1.index - item2.index
			})
		}, FileUploader.prototype.destroy = function() {
			angular.forEach(this._directives, function(key) {
				angular.forEach(this._directives[key], function(object) {
					object.destroy()
				}, this)
			}, this)
		}, FileUploader.prototype.onAfterAddingAll = function(fileItems) {}, FileUploader.prototype.onAfterAddingFile = function(fileItem) {}, FileUploader.prototype.onWhenAddingFileFailed = function(item, filter, options) {}, FileUploader.prototype.onBeforeUploadItem = function(fileItem) {}, FileUploader.prototype.onProgressItem = function(fileItem, progress) {}, FileUploader.prototype.onProgressAll = function(progress) {}, FileUploader.prototype.onSuccessItem = function(item, response, status, headers) {}, FileUploader.prototype.onErrorItem = function(item, response, status, headers) {}, FileUploader.prototype.onCancelItem = function(item, response, status, headers) {}, FileUploader.prototype.onCompleteItem = function(item, response, status, headers) {}, FileUploader.prototype.onCompleteAll = function() {}, FileUploader.prototype._getTotalProgress = function(value) {
			if (this.removeAfterUpload) return value || 0;
			var notUploaded = this.getNotUploadedItems().length,
				uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length,
				ratio = 100 / this.queue.length,
				current = (value || 0) * ratio / 100;
			return Math.round(uploaded * ratio + current)
		}, FileUploader.prototype._getFilters = function(filters) {
			if (angular.isUndefined(filters)) return this.filters;
			if (angular.isArray(filters)) return filters;
			var names = filters.match(/[^\s,]+/g);
			return this.filters.filter(function(filter) {
				return -1 !== names.indexOf(filter.name)
			}, this)
		}, FileUploader.prototype._render = function() {
			$rootScope.$$phase || $rootScope.$apply()
		}, FileUploader.prototype._folderFilter = function(item) {
			return !(!item.size && !item.type)
		}, FileUploader.prototype._queueLimitFilter = function() {
			return this.queue.length < this.queueLimit
		}, FileUploader.prototype._isValidFile = function(file, filters, options) {
			return this._failFilterIndex = -1, filters.length ? filters.every(function(filter) {
				return this._failFilterIndex++, filter.fn.call(this, file, options)
			}, this) : !0
		}, FileUploader.prototype._isSuccessCode = function(status) {
			return status >= 200 && 300 > status || 304 === status
		}, FileUploader.prototype._transformResponse = function(response, headers) {
			var headersGetter = this._headersGetter(headers);
			return angular.forEach($http.defaults.transformResponse, function(transformFn) {
				response = transformFn(response, headersGetter)
			}), response
		}, FileUploader.prototype._parseHeaders = function(headers) {
			var key, val, i, parsed = {};
			return headers ? (angular.forEach(headers.split("\n"), function(line) {
				i = line.indexOf(":"), key = line.slice(0, i).trim().toLowerCase(), val = line.slice(i + 1).trim(), key && (parsed[key] = parsed[key] ? parsed[key] + ", " + val : val)
			}), parsed) : parsed
		}, FileUploader.prototype._headersGetter = function(parsedHeaders) {
			return function(name) {
				return name ? parsedHeaders[name.toLowerCase()] || null : parsedHeaders
			}
		}, FileUploader.prototype._xhrTransport = function(item) {
			var xhr = item._xhr = new XMLHttpRequest,
				form = new FormData,
				that = this;
			that._onBeforeUploadItem(item), angular.forEach(item.formData, function(obj) {
				angular.forEach(obj, function(value, key) {
					form.append(key, value)
				})
			}), form.append(item.alias, item._file, item.file.name), xhr.upload.onprogress = function(event) {
				var progress = Math.round(event.lengthComputable ? 100 * event.loaded / event.total : 0);
				that._onProgressItem(item, progress)
			}, xhr.onload = function() {
				var headers = that._parseHeaders(xhr.getAllResponseHeaders()),
					response = that._transformResponse(xhr.response, headers),
					gist = that._isSuccessCode(xhr.status) ? "Success" : "Error",
					method = "_on" + gist + "Item";
				that[method](item, response, xhr.status, headers), that._onCompleteItem(item, response, xhr.status, headers)
			}, xhr.onerror = function() {
				var headers = that._parseHeaders(xhr.getAllResponseHeaders()),
					response = that._transformResponse(xhr.response, headers);
				that._onErrorItem(item, response, xhr.status, headers), that._onCompleteItem(item, response, xhr.status, headers)
			}, xhr.onabort = function() {
				var headers = that._parseHeaders(xhr.getAllResponseHeaders()),
					response = that._transformResponse(xhr.response, headers);
				that._onCancelItem(item, response, xhr.status, headers), that._onCompleteItem(item, response, xhr.status, headers)
			}, xhr.open(item.method, item.url, !0), xhr.withCredentials = item.withCredentials, angular.forEach(item.headers, function(value, name) {
				xhr.setRequestHeader(name, value)
			}), xhr.send(form), this._render()
		}, FileUploader.prototype._iframeTransport = function(item) {
			var form = angular.element('<form style="display: none;" />'),
				iframe = angular.element('<iframe name="iframeTransport' + Date.now() + '">'),
				input = item._input,
				that = this;
			item._form && item._form.replaceWith(input), item._form = form, that._onBeforeUploadItem(item), input.prop("name", item.alias), angular.forEach(item.formData, function(obj) {
				angular.forEach(obj, function(value, key) {
					var element = angular.element('<input type="hidden" name="' + key + '" />');
					element.val(value), form.append(element)
				})
			}), form.prop({
				action: item.url,
				method: "POST",
				target: iframe.prop("name"),
				enctype: "multipart/form-data",
				encoding: "multipart/form-data"
			}), iframe.bind("load", function() {
				try {
					var html = iframe[0].contentDocument.body.innerHTML
				} catch (e) {}
				var xhr = {
						response: html,
						status: 200,
						dummy: !0
					},
					headers = {},
					response = that._transformResponse(xhr.response, headers);
				that._onSuccessItem(item, response, xhr.status, headers), that._onCompleteItem(item, response, xhr.status, headers)
			}), form.abort = function() {
				var response, xhr = {
						status: 0,
						dummy: !0
					},
					headers = {};
				iframe.unbind("load").prop("src", "javascript:false;"), form.replaceWith(input), that._onCancelItem(item, response, xhr.status, headers), that._onCompleteItem(item, response, xhr.status, headers)
			}, input.after(form), form.append(input).append(iframe), form[0].submit(), this._render()
		}, FileUploader.prototype._onWhenAddingFileFailed = function(item, filter, options) {
			this.onWhenAddingFileFailed(item, filter, options)
		}, FileUploader.prototype._onAfterAddingFile = function(item) {
			this.onAfterAddingFile(item)
		}, FileUploader.prototype._onAfterAddingAll = function(items) {
			this.onAfterAddingAll(items)
		}, FileUploader.prototype._onBeforeUploadItem = function(item) {
			item._onBeforeUpload(), this.onBeforeUploadItem(item)
		}, FileUploader.prototype._onProgressItem = function(item, progress) {
			var total = this._getTotalProgress(progress);
			this.progress = total, item._onProgress(progress), this.onProgressItem(item, progress), this.onProgressAll(total), this._render()
		}, FileUploader.prototype._onSuccessItem = function(item, response, status, headers) {
			item._onSuccess(response, status, headers), this.onSuccessItem(item, response, status, headers)
		}, FileUploader.prototype._onErrorItem = function(item, response, status, headers) {
			item._onError(response, status, headers), this.onErrorItem(item, response, status, headers)
		}, FileUploader.prototype._onCancelItem = function(item, response, status, headers) {
			item._onCancel(response, status, headers), this.onCancelItem(item, response, status, headers)
		}, FileUploader.prototype._onCompleteItem = function(item, response, status, headers) {
			item._onComplete(response, status, headers), this.onCompleteItem(item, response, status, headers);
			var nextItem = this.getReadyItems()[0];
			return this.isUploading = !1, angular.isDefined(nextItem) ? void nextItem.upload() : (this.onCompleteAll(), this.progress = this._getTotalProgress(), void this._render())
		}, FileUploader.isFile = FileUploader.prototype.isFile, FileUploader.isFileLikeObject = FileUploader.prototype.isFileLikeObject, FileUploader.isArrayLikeObject = FileUploader.prototype.isArrayLikeObject, FileUploader.isHTML5 = FileUploader.prototype.isHTML5, FileUploader.inherit = function(target, source) {
			target.prototype = Object.create(source.prototype), target.prototype.constructor = target, target.super_ = source
		}, FileUploader.FileLikeObject = FileLikeObject, FileUploader.FileItem = FileItem, FileUploader.FileDirective = FileDirective, FileUploader.FileSelect = FileSelect, FileUploader.FileDrop = FileDrop, FileUploader.FileOver = FileOver, FileLikeObject.prototype._createFromFakePath = function(path) {
			this.lastModifiedDate = null, this.size = null, this.type = "like/" + path.slice(path.lastIndexOf(".") + 1).toLowerCase(), this.name = path.slice(path.lastIndexOf("/") + path.lastIndexOf("\\") + 2)
		}, FileLikeObject.prototype._createFromObject = function(object) {
			this.lastModifiedDate = angular.copy(object.lastModifiedDate), this.size = object.size, this.type = object.type, this.name = object.name
		}, FileItem.prototype.upload = function() {
			this.uploader.uploadItem(this)
		}, FileItem.prototype.cancel = function() {
			this.uploader.cancelItem(this)
		}, FileItem.prototype.remove = function() {
			this.uploader.removeFromQueue(this)
		}, FileItem.prototype.onBeforeUpload = function() {}, FileItem.prototype.onProgress = function(progress) {}, FileItem.prototype.onSuccess = function(response, status, headers) {}, FileItem.prototype.onError = function(response, status, headers) {}, FileItem.prototype.onCancel = function(response, status, headers) {}, FileItem.prototype.onComplete = function(response, status, headers) {}, FileItem.prototype._onBeforeUpload = function() {
			this.isReady = !0, this.isUploading = !0, this.isUploaded = !1, this.isSuccess = !1, this.isCancel = !1, this.isError = !1, this.progress = 0, this.onBeforeUpload()
		}, FileItem.prototype._onProgress = function(progress) {
			this.progress = progress, this.onProgress(progress)
		}, FileItem.prototype._onSuccess = function(response, status, headers) {
			this.isReady = !1, this.isUploading = !1, this.isUploaded = !0, this.isSuccess = !0, this.isCancel = !1, this.isError = !1, this.progress = 100, this.index = null, this.onSuccess(response, status, headers)
		}, FileItem.prototype._onError = function(response, status, headers) {
			this.isReady = !1, this.isUploading = !1, this.isUploaded = !0, this.isSuccess = !1, this.isCancel = !1, this.isError = !0, this.progress = 0, this.index = null, this.onError(response, status, headers)
		}, FileItem.prototype._onCancel = function(response, status, headers) {
			this.isReady = !1, this.isUploading = !1, this.isUploaded = !1, this.isSuccess = !1, this.isCancel = !0, this.isError = !1, this.progress = 0, this.index = null, this.onCancel(response, status, headers)
		}, FileItem.prototype._onComplete = function(response, status, headers) {
			this.onComplete(response, status, headers), this.removeAfterUpload && this.remove()
		}, FileItem.prototype._destroy = function() {
			this._input && this._input.remove(), this._form && this._form.remove(), delete this._form, delete this._input
		}, FileItem.prototype._prepareToUploading = function() {
			this.index = this.index || ++this.uploader._nextIndex, this.isReady = !0
		}, FileItem.prototype._replaceNode = function(input) {
			var clone = $compile(input.clone())(input.scope());
			clone.prop("value", null), input.css("display", "none"), input.after(clone)
		}, FileDirective.prototype.events = {}, FileDirective.prototype.bind = function() {
			for (var key in this.events) {
				var prop = this.events[key];
				this.element.bind(key, this[prop])
			}
		}, FileDirective.prototype.unbind = function() {
			for (var key in this.events) this.element.unbind(key, this.events[key])
		}, FileDirective.prototype.destroy = function() {
			var index = this.uploader._directives[this.prop].indexOf(this);
			this.uploader._directives[this.prop].splice(index, 1), this.unbind()
		}, FileDirective.prototype._saveLinks = function() {
			for (var key in this.events) {
				var prop = this.events[key];
				this[prop] = this[prop].bind(this)
			}
		}, FileUploader.inherit(FileSelect, FileDirective), FileSelect.prototype.events = {
			$destroy: "destroy",
			change: "onChange"
		}, FileSelect.prototype.prop = "select", FileSelect.prototype.getOptions = function() {}, FileSelect.prototype.getFilters = function() {}, FileSelect.prototype.isEmptyAfterSelection = function() {
			return !!this.element.attr("multiple")
		}, FileSelect.prototype.onChange = function() {
			var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0],
				options = this.getOptions(),
				filters = this.getFilters();
			this.uploader.isHTML5 || this.destroy(), this.uploader.addToQueue(files, options, filters), this.isEmptyAfterSelection() && this.element.prop("value", null)
		}, FileUploader.inherit(FileDrop, FileDirective), FileDrop.prototype.events = {
			$destroy: "destroy",
			drop: "onDrop",
			dragover: "onDragOver",
			dragleave: "onDragLeave"
		}, FileDrop.prototype.prop = "drop", FileDrop.prototype.getOptions = function() {}, FileDrop.prototype.getFilters = function() {}, FileDrop.prototype.onDrop = function(event) {
			var transfer = this._getTransfer(event);
			if (transfer) {
				var options = this.getOptions(),
					filters = this.getFilters();
				this._preventAndStop(event), angular.forEach(this.uploader._directives.over, this._removeOverClass, this), this.uploader.addToQueue(transfer.files, options, filters)
			}
		}, FileDrop.prototype.onDragOver = function(event) {
			var transfer = this._getTransfer(event);
			this._haveFiles(transfer.types) && (transfer.dropEffect = "copy", this._preventAndStop(event), angular.forEach(this.uploader._directives.over, this._addOverClass, this))
		}, FileDrop.prototype.onDragLeave = function(event) {
			event.currentTarget === this.element[0] && (this._preventAndStop(event), angular.forEach(this.uploader._directives.over, this._removeOverClass, this))
		}, FileDrop.prototype._getTransfer = function(event) {
			return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer
		}, FileDrop.prototype._preventAndStop = function(event) {
			event.preventDefault(), event.stopPropagation()
		}, FileDrop.prototype._haveFiles = function(types) {
			return types ? types.indexOf ? -1 !== types.indexOf("Files") : types.contains ? types.contains("Files") : !1 : !1
		}, FileDrop.prototype._addOverClass = function(item) {
			item.addOverClass()
		}, FileDrop.prototype._removeOverClass = function(item) {
			item.removeOverClass()
		}, FileUploader.inherit(FileOver, FileDirective), FileOver.prototype.events = {
			$destroy: "destroy"
		}, FileOver.prototype.prop = "over", FileOver.prototype.overClass = "nv-file-over", FileOver.prototype.addOverClass = function() {
			this.element.addClass(this.getOverClass())
		}, FileOver.prototype.removeOverClass = function() {
			this.element.removeClass(this.getOverClass())
		}, FileOver.prototype.getOverClass = function() {
			return this.overClass
		}, FileUploader
	}]).directive("nvFileSelect", ["$parse", "FileUploader", function($parse, FileUploader) {
		return {
			link: function(scope, element, attributes) {
				var uploader = scope.$eval(attributes.uploader);
				if (!(uploader instanceof FileUploader)) throw new TypeError('"Uploader" must be an instance of FileUploader');
				var object = new FileUploader.FileSelect({
					uploader: uploader,
					element: element
				});
				object.getOptions = $parse(attributes.options).bind(object, scope), object.getFilters = function() {
					return attributes.filters
				}
			}
		}
	}]).directive("nvFileDrop", ["$parse", "FileUploader", function($parse, FileUploader) {
		return {
			link: function(scope, element, attributes) {
				var uploader = scope.$eval(attributes.uploader);
				if (!(uploader instanceof FileUploader)) throw new TypeError('"Uploader" must be an instance of FileUploader');
				if (uploader.isHTML5) {
					var object = new FileUploader.FileDrop({
						uploader: uploader,
						element: element
					});
					object.getOptions = $parse(attributes.options).bind(object, scope), object.getFilters = function() {
						return attributes.filters
					}
				}
			}
		}
	}]).directive("nvFileOver", ["FileUploader", function(FileUploader) {
		return {
			link: function(scope, element, attributes) {
				var uploader = scope.$eval(attributes.uploader);
				if (!(uploader instanceof FileUploader)) throw new TypeError('"Uploader" must be an instance of FileUploader');
				var object = new FileUploader.FileOver({
					uploader: uploader,
					element: element
				});
				object.getOverClass = function() {
					return attributes.overClass || this.overClass
				}
			}
		}
	}]), module
}),
function() {
	function catalogoMensajesFactory($http, $q, $log, URL_CATALOGO) {
		function getMsg(codigo, parametros) {
			if (codigo in map || $log.error("CATALOGO: no existe el codigo solicitado: " + codigo), map[codigo] && parametros.length > 0) {
				var mensajeTemplate = angular.copy(map[codigo]);
				return aplicarParametros(mensajeTemplate, parametros)
			}
			return map[codigo] || DEFAULT_MSJ_CODIGO_INCORRECTO
		}

		function contarParams(mensajeTemplate) {
			for (var temp, i, mapParam = {}, matchArray = []; null != (temp = param.exec(mensajeTemplate.texto));) {
				i = 0;
				var ex = {
					indice: parseInt(temp[i].match(param2)),
					param: temp[i]
				};
				matchArray.push(ex), i++
			}
			if (matchArray.length > 0) {
				for (i = 0; i < matchArray.length; i++) mapParam[matchArray[i].indice] = matchArray[i].param;
				return mapParam
			}
		}

		function aplicarParametros(mensajeTemplate, parametros) {
			for (var mapParam = contarParams(mensajeTemplate), k = 0; k < parametros.length; k++) mapParam[k] && parametros[k] && (mensajeTemplate.texto = mensajeTemplate.texto.split(mapParam[k]).join(parametros[k]));
			return mensajeTemplate
		}

		function obtener(codigo) {
			for (var listadoParametros = [], i = 1; i < arguments.length; i++) listadoParametros.push(arguments[i]);
			var d = $q.defer();
			return null === map ? getJSON().then(function() {
				d.resolve(getMsg(codigo, listadoParametros))
			}, function() {
				d.resolve(DEFAULT_MSJ_ERROR_CATALOGO)
			}) : d.resolve(getMsg(codigo, listadoParametros)), d.promise
		}

		function obtenerListado() {
			var d = $q.defer();
			return null === map ? getJSON().then(function() {
				d.resolve(listado)
			}, function() {
				d.resolve([])
			}) : d.resolve(listado), d.promise
		}

		function getJSON() {
			return promise || (promise = $http({
				url: URL_CATALOGO,
				method: "GET",
				timeout: 1e4
			}).then(function(response) {
				map = {}, listado = [];
				for (var data = response.data && response.data.message_catalog ? response.data.message_catalog : [], i = 0; i < data.length; ++i) {
					var o = data[i],
						msj = {
							codigo: o.messageid,
							texto: o.messagebody
						};
					switch (o.severity) {
						case "error":
						case "warning":
						case "info":
							msj.tipo = o.severity;
							break;
						default:
							msj.tipo = "info"
					}
					map[msj.codigo] = msj, listado.push(msj), msj.codigo === DEFAULT_MSJ_CODIGO_INCORRECTO.codigo && (DEFAULT_MSJ_CODIGO_INCORRECTO = msj)
				}
			})), promise
		}
		var param = /{\d+}/gim,
			param2 = /\d+/g,
			map = null,
			listado = null,
			promise = null,
			DEFAULT_MSJ_CODIGO_INCORRECTO = {
				codigo: "501017",
				texto: "El error no se encuentra catalogado",
				tipo: "error"
			},
			DEFAULT_MSJ_ERROR_CATALOGO = {
				codigo: "501016",
				texto: "Estimado Cliente, en estos momentos no podemos atenderlo. Por favor, intente mÃ¡s tarde o comunÃ­quese con nuestros ejecutivos al 600 637 3838. [Error = 404]",
				tipo: "error"
			};
		return {
			obtener: obtener,
			obtenerListado: obtenerListado
		}
	}
	angular.module("WebBancoChile.catalogo", []).factory("catalogoMensajesFactory", catalogoMensajesFactory), catalogoMensajesFactory.$inject = ["$http", "$q", "$log", "URL_CATALOGO"]
}(),
function() {
	"use strict";
	var constantesSeguridadCuadro = {
		PERSONAS: {
			INTERVALO_CARACTERES: "Debe tener ocho caracteres.",
			ALFANUMERICA: "Debes crear una clave alfanumÃ©rica (letras y nÃºmeros, debe contener al menos un nÃºmero, una minÃºscula y una mayÃºscula).",
			CLAVES_ANTERIORES_NUEVO_MENSAJE: "Debe ser distinta a las Ãºltimas 4 claves ya registradas.",
			CARACTERES_ESPECIALES: "Puedes utilizar caracteres especiales (~ ! @ # $ % ^ & * () _ = + [] {} | ; : , . <> / ? -).",
			CLAVES_ANTERIORES: "Recuerda que tu nueva clave no debe ser igual a las Ãºltimas cuatro registradas.",
			PREGUNTA_SEGURIDAD: "Debes seleccionar tres Preguntas de Seguridad y respÃ³ndelas asegurÃ¡ndote de escribir respuestas fÃ¡ciles de recordar y que sÃ³lo tÃº conozcas."
		},
		EMPRESAS: {
			INTERVALO_CARACTERES: "Debe tener como mÃ­nimo seis caracteres y mÃ¡ximo ocho.",
			ALFANUMERICA: "Debe crear una clave alfanumÃ©rica (letras y nÃºmeros, debe contener al menos un nÃºmero, una minÃºscula y una mayÃºscula).",
			CARACTERES_ESPECIALES: "Puede utilizar caracteres especiales.",
			CLAVES_ANTERIORES: "Recuerde que su nueva clave no debe ser igual a las Ãºltimas 4 registradas.",
			PREGUNTA_SEGURIDAD: "Debe selecciona tres Preguntas de Seguridad y respÃ³nderlas asegurÃ¡ndose de escribir respuestas fÃ¡ciles de recordar y que sÃ³lo usted conozca."
		}
	};
	angular.module("WebBancoChile.politicasSeguridad").constant("CONSTANTS_SEGURIDAD_CUADRO", constantesSeguridadCuadro)
}(),
function() {
	"use strict";

	function completaPasswordDirective($filter) {
		return {
			restrict: "A",
			require: "?ngModel",
			link: function(scope, elem, attrs, ctrl) {
				ctrl && elem.bind("blur", function() {
					!angular.isUndefined(ctrl.$modelValue) && ctrl.$modelValue.length >= 6 && elem.val(formateaPassword(ctrl.$modelValue))
				}).bind("keypress", function(e) {
					13 === e.which && elem.val(formateaPassword(ctrl.$modelValue))
				})
			}
		}
	}

	function formateaPassword(password) {
		var nvaPassword = "";
		if (password.length < 8)
			for (var cantCeros = 8 - password.length, i = 0; cantCeros > i; i++) nvaPassword += "0";
		return nvaPassword + password
	}
	angular.module("WebBancoChile.politicasSeguridad").directive("completaPassword", ["$filter", completaPasswordDirective])
}(),
function() {
	"use strict";
	angular.module("WebBancoChile.politicasSeguridad").directive("politicasSeguridad", function() {
		return {
			restrict: "E",
			replace: !0,
			transclute: !0,
			controller: "politicasSeguridadCtrl",
			controllerAs: "ps",
			scope: {
				passwordStrength: "@"
			},
			templateUrl: "bch-azu-politica-seguridad/directives/politicaSeguridad/politicasSeguridad.tpl.html",
			link: function(scope, element, attrs, controller) {
				attrs.$observe("passwordStrength", function(value) {
					scope.strength = controller.strengthEvaluate(value)
				})
			}
		}
	}).directive("politicasSeguridadRecuadro", function() {
		return {
			restrict: "E",
			replace: !0,
			transclute: !0,
			controller: "politicasSeguridadCtrl",
			controllerAs: "ps",
			scope: {
				passwordStrength: "@",
				portal: "@",
				preguntasSeguridad: "@"
			},
			templateUrl: "bch-azu-politica-seguridad/directives/politicaSeguridad/politicasSeguridadRecuadro.tpl.html",
			link: function(scope, element, attrs, controller) {
				attrs.$observe("passwordStrength", function(value) {
					scope.recuadro = controller.validacionesRecuadro(value)
				})
			}
		}
	})
}(),
function() {
	function politicasSeguridadFactory_() {
		function getReglasValidacion() {
			return [{
				descripcion: "Largo 8",
				expresion: "^.{8}$",
				codigoRegla: "largo"
			}, {
				descripcion: "Caracteres requeridos mayusculas, minusculas y digitos",
				expresion: "(?=^.{3,}$)(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).*$",
				codigoRegla: "caracteres"
			}, {
				descripcion: "Alphanumerico",
				expresion: "(?=^.{2,}$)(?=.*[a-zA-Z])(?=.*\\d).*$",
				codigoRegla: "alphanumerico"
			}]
		}

		function getConfiguracionFortalezaPassword() {
			return {
				reglas: [{
					descripcion: "Mayusculas",
					expresion: "^.*[A-Z].*$",
					peso: 20,
					penalizacion: 0
				}, {
					descripcion: "Minusculas",
					expresion: "^.*[a-z].*$",
					peso: 20,
					penalizacion: 0
				}, {
					descripcion: "Numeros",
					expresion: "^.*[0-9].*$",
					peso: 20,
					penalizacion: 0
				}, {
					descripcion: "Si posee un caracter descuenta 15 porciento",
					expresion: "^.{1}$",
					peso: -15,
					penalizacion: 0
				}, {
					descripcion: "Si posee 2 a 3 caracteres descuenta 10 porciento",
					expresion: "^.{2,3}$",
					peso: -10,
					penalizacion: 0
				}, {
					descripcion: "Si posee 2 a 3 caracteres descuenta 10 porciento",
					expresion: "^.{4,5}$",
					peso: -5,
					penalizacion: 0
				}, {
					descripcion: "Largo mayor a 6",
					expresion: "^.{6,7}$",
					peso: 20,
					penalizacion: 0
				}, {
					descripcion: "Largo 8",
					expresion: "^.{8}$",
					peso: 40,
					penalizacion: 0
				}],
				nivelesSeguridad: [{
					tipo: "DÃ©bil",
					rango: [1, 49],
					color: "#DD1200"
				}, {
					tipo: "Media",
					rango: [50, 74],
					color: "#FEBC00"
				}, {
					tipo: "Buena",
					rango: [75, 99],
					color: "#DEBC00"
				}, {
					tipo: "Segura",
					rango: [100, 100],
					color: "#6DB400"
				}]
			}
		}

		function getInformacionAyudaCreacionPassword() {
			return ""
		}
		return {
			getReglasValidacion: getReglasValidacion,
			getConfiguracionFortalezaPassword: getConfiguracionFortalezaPassword,
			getInformacionAyudaCreacionPassword: getInformacionAyudaCreacionPassword
		}
	}
	angular.module("WebBancoChile.politicasSeguridad").factory("politicasSeguridadFactory_", politicasSeguridadFactory_)
}(),
function() {
	function politicasSeguridadCtrl($scope, politicasSeguridadService_, CONSTANTS_SEGURIDAD_CUADRO) {
		var vm = this;
		switch (vm.pruebaClase = "check", $scope.portal) {
			case "Personas":
				vm.contenido = CONSTANTS_SEGURIDAD_CUADRO.PERSONAS;
				break;
			case "Empresas":
				vm.contenido = CONSTANTS_SEGURIDAD_CUADRO.EMPRESAS;
				break;
			default:
				vm.contenido = CONSTANTS_SEGURIDAD_CUADRO.EMPRESAS
		}
		vm.preguntasSeguridad = $scope.preguntasSeguridad ? !0 : !1, this.strengthEvaluate = function(valor) {
			return politicasSeguridadService_.fortalezaDePassword(valor)
		}, this.validacionesRecuadro = function(valor) {
			return politicasSeguridadService_.getValidacionesRecuadro(valor)
		}
	}
	angular.module("WebBancoChile.politicasSeguridad").controller("politicasSeguridadCtrl", politicasSeguridadCtrl)
}(),
function() {
	angular.module("WebBancoChile.politicasSeguridad").service("politicasSeguridadService_", function(politicasSeguridadFactory_) {
		function passwordCumplePoliticasSeguridad(password) {
			for (var reglasValidacion = politicasSeguridadFactory_.getReglasValidacion(), cantidadReglas = reglasValidacion.length, cumpleReglas = !0, i = 0; cantidadReglas > i; i++) {
				var regla = reglasValidacion[i],
					regExp = new RegExp(regla.expresion);
				if (cumpleReglas = regExp.test(password), !cumpleReglas) break
			}
			return cumpleReglas
		}

		function poseeCaracteresEspeciales(password) {
			var regExp = new RegExp("[~!@#$%^&*()_=+\\[\\]{}\\|;:,\\.<>/?\\-ï¿½ï¿½]+");
			return null !== regExp.exec(password)
		}

		function fortalezaDePassword(password) {
			for (var configuracion = politicasSeguridadFactory_.getConfiguracionFortalezaPassword(), reglas = configuracion.reglas, cantidadReglas = reglas.length, fortaleza = {
					porcentaje: 0,
					tipo: "",
					color: ""
				}, i = 0; cantidadReglas > i; i++) {
				var regla = reglas[i],
					regExp = new RegExp(regla.expresion);
				regExp.test(password) ? fortaleza.porcentaje += regla.peso : fortaleza.porcentaje -= regla.penalizacion
			}
			for (var nivelesFortaleza = configuracion.nivelesSeguridad, cantidadNiveles = nivelesFortaleza.length, j = 0; cantidadNiveles > j; j++) {
				var nivel = nivelesFortaleza[j];
				fortaleza.porcentaje >= nivel.rango[0] && fortaleza.porcentaje <= nivel.rango[1] && (fortaleza.tipo = nivel.tipo, fortaleza.color = nivel.color)
			}
			return fortaleza
		}

		function getValidacionesRecuadro(password) {
			for (var reglasValidacion = politicasSeguridadFactory_.getReglasValidacion(), cantidadReglas = reglasValidacion.length, cumpleReglas = !0, i = 0; cantidadReglas > i; i++) {
				var regla = reglasValidacion[i],
					regExp = new RegExp(regla.expresion);
				cumpleReglas = regExp.test(password), recuadro[regla.codigoRegla] = cumpleReglas
			}
			return recuadro.caracteres = poseeCaracteresEspeciales(password), recuadro
		}
		this.isPasswordValido = passwordCumplePoliticasSeguridad, this.fortalezaDePassword = fortalezaDePassword, this.getValidacionesRecuadro = getValidacionesRecuadro;
		var recuadro = {}
	})
}(),
function() {
	function alertaBloqueoConfig($stateProvider) {
		$stateProvider.state("alerta-bloqueo", {
			parent: "root",
			url: "/alerta-bloqueo",
			views: {
				"main@": {
					controller: "alertaBloqueoCtrl",
					controllerAs: "vm",
					templateUrl: "bch-desbloqueo-persona/src/alerta-bloqueo.tpl.html"
				}
			},
			data: {
				pageTitle: "Clave Bloqueada"
			}
		})
	}
	angular.module("WebBancoChile.persona.alerta-bloqueo").config(alertaBloqueoConfig), alertaBloqueoConfig.$inject = ["$stateProvider"]
}(),
function() {
	function alertaBloqueoCtrl($state) {
		function irOlvidoClave() {
			$state.go("olvido-clave-persona")
		}

		function irDesbloqueo() {
			$state.go("desbloqueo")
		}
		var vm = this;
		vm.irDesbloqueo = irDesbloqueo, vm.irOlvidoClave = irOlvidoClave
	}
	angular.module("WebBancoChile.persona.alerta-bloqueo").controller("alertaBloqueoCtrl", alertaBloqueoCtrl), alertaBloqueoCtrl.$inject = ["$state"]
}(),
function() {
	function desbloqueoService($http, URL_API) {
		function obtenerDispositivoSeguridad(rut, captchaData) {
			return $http({
				url: URL_API + "/generales-reactivar-clave-persona-rest/cliente/obtener-dispositivo-seguridad?g-recaptcha-response=" + captchaData,
				dataType: "json",
				handleError: !1,
				method: "GET",
				headers: {
					CAJDEF_AUTH_USER: rut,
					"Content-Type": "application/json"
				},
				GET_CHALLENGE: !0,
				SOFTOKEN: !0
			}).then(resultadoCajaDesafio)
		}

		function resultadoCajaDesafio(result) {
			return result.data
		}

		function desbloqueo(rut, password) {
			var dataObj = {
				rutId: rut
			};
			return $http({
				url: URL_API + "/generales-reactivar-clave-persona-rest/cliente/reactivar-clave",
				dataType: "json",
				method: "POST",
				handleError: !1,
				data: JSON.stringify(dataObj),
				headers: {
					CAJDEF_AUTH_USER: rut,
					"Content-Type": "application/json"
				},
				AUTH_CHALLENGE: !0
			}).then(resultFunction)
		}

		function resultFunction(result) {
			return result.data ? !0 : !1
		}
		return {
			obtenerDispositivoSeguridad: obtenerDispositivoSeguridad,
			desbloqueo: desbloqueo
		}
	}
	angular.module("WebBancoChile.persona.service.desbloqueo").factory("DesbloqueoService", desbloqueoService), desbloqueoService.$inject = ["$http", "URL_API"]
}(),
function() {
	function desbloqueoConfig($stateProvider, $httpProvider) {
		$httpProvider.interceptors.push("cajaDesafioInterceptor_"), $stateProvider.state("desbloqueo", {
			parent: "root",
			url: "/reactivacion-clave-bloqueada",
			views: {
				"main@": {
					controller: "desbloqueoCtrl",
					controllerAs: "vm",
					templateUrl: "bch-desbloqueo-persona/src/desbloqueo/reactivar-clave.tpl.html"
				}
			},
			data: {
				pageTitle: "ReactivaciÃ³n de Clave Bloqueada"
			}
		}).state("desbloqueo-mensaje", {
			parent: "root",
			url: "/reactivacion-clave-mensaje",
			views: {
				"main@": {
					controller: "desbloqueoMensajeCtrl",
					controllerAs: "vm",
					templateUrl: "bch-desbloqueo-persona/src/desbloqueo-mensaje/desbloqueo-mensaje.tpl.html"
				}
			},
			data: {
				pageTitle: "ReactivaciÃ³n de Clave"
			}
		})
	}
	angular.module("WebBancoChile.persona.desbloqueo").config(desbloqueoConfig).config(["noCAPTCHAProvider", function(noCaptchaProvider) {
		noCaptchaProvider.setSiteKey("6LfaC3oaAAAAAJLlEbuKoR3FpLss0GSq0oVucXH1"), noCaptchaProvider.setTheme("light"), noCaptchaProvider.setLanguage("es-419")
	}]), desbloqueoConfig.$inject = ["$stateProvider", "$httpProvider"]
}(),
function() {
	function desbloqueoCtrl($scope, $state, $window, $document, $q, DesbloqueoService, cajaDesafioService_, DESBLOQUEO_CONSTANTES, RutHelper, catalogoMensajesFactory, MensajeStoreFactory, PARAMETROS_MENSAJE, $timeout) {
		function init() {
			vm.error300 = !1, vm.errorDatosIncorrectos = !1, vm.showPasoDos = !1, vm.rutProcess = !1, vm.errorRutVacio = !1, vm.mensajeError300 = "", vm.isErrorMsgActive = !1, vm.resetCaptchaReset.reset && vm.resetCaptchaReset.reset(), catalogoMensajesFactory.obtener(DESBLOQUEO_CONSTANTES.COD_ERR_RUT_NO_VALIDO).then(setMensajeErrorRutNoValido), catalogoMensajesFactory.obtener(DESBLOQUEO_CONSTANTES.COD_ERR_RUT_VACIO).then(setMensajeErrorRutVacio),
				catalogoMensajesFactory.obtener(DESBLOQUEO_CONSTANTES.COD_ERR_404).then(setMensajeError404), catalogoMensajesFactory.obtener(DESBLOQUEO_CONSTANTES.CONTENIDO_MENSAJE.ERROR_DEFAULT).then(setMensajeErrorDefault), catalogoMensajesFactory.obtener(DESBLOQUEO_CONSTANTES.CONTENIDO_MENSAJE.ERROR_SIN_DISP).then(setMensajeErrorSinDisp), catalogoMensajesFactory.obtener(DESBLOQUEO_CONSTANTES.CONTENIDO_MENSAJE.SUCCESS_DESBLOQUEO, "reactivada").then(setMensajeSuccessDesbloqueo)
		}

		function enterpress(e) {
			var code = e.keyCode ? e.keyCode : e.which;
			code !== DESBLOQUEO_CONSTANTES.KEYCODE_ENTER || vm.showPasoDos || vm.validarDispositivos()
		}

		function limpiarMensajes() {
			vm.error300 = !1, vm.errorDatosIncorrectos = !1, vm.errorRutVacio = !1, vm.errorRut = !1
		}

		function desactivarPaso2() {
			limpiarMensajes(), vm.showPasoDos = !1
		}

		function setMensajeErrorDefault(result) {
			vm.mensajeErrorDefault = result.texto
		}

		function setMensajeErrorSinDisp(result) {
			vm.mensajeErrorSinDisp = result.texto
		}

		function setMensajeSuccessDesbloqueo(result) {
			vm.mensajeSuccessDesbloqueo = result.texto
		}

		function setMensajeError404(result) {
			vm.mensajeError404 = result.texto
		}

		function setMensajeErrorRutVacio(result) {
			vm.mensajeErrorRutVacio = result.texto
		}

		function setMensajeErrorRutNoValido(result) {
			vm.mensajeError = result.texto
		}

		function validarRut() {
			var rutVacio = "" === $document[0].getElementById("rut").value;
			$document[0].getElementById("rut").value;
			vm.errorRutVacio = !0, vm.errorRut = !1;
			var rutValido = !1;
			return rutVacio || (vm.errorRutVacio = !1, rutValido = RutHelper.validate(vm.rut), rutValido || (vm.errorRut = !0)), rutVacio || !rutValido ? !1 : !0
		}

		function irLogin() {
			$window.location.href = "/persona"
		}

		function validarDispositivos() {
			var deferred = $q.defer(),
				llamaServicio = !0;
			return vm.reactivarClaveForm.rut.$setDirty(), limpiarMensajes(), vm.errorDatosIncorrectos = !1, vm.showPasoDos = !1, validarRut() && (("" == vm.gRecaptchaResponse || null == vm.gRecaptchaResponse) && (vm.isErrorMsgActive = !0, llamaServicio = !1), llamaServicio && (vm.submitted = !0, vm.laddaDesbloqueo = !0, vm.rutProcess = !0, vm.showPasoDos = !1, DesbloqueoService.obtenerDispositivoSeguridad(vm.rut, vm.gRecaptchaResponse).then(resultadoDispositivoSeguridad, errorDispositivoSeguridad))), deferred.resolve(), deferred.promise
		}

		function errorDispositivoSeguridad(result) {
			vm.rutProcess = !1, vm.errorDatosIncorrectos = !0, vm.showPasoDos = !1, vm.laddaDesbloqueo = !1, vm.submitted = !1, vm.resetCaptchaReset.reset();
			var status = result.status;
			angular.isUndefined(status) ? (MensajeStoreFactory.setTituloMensaje(PARAMETROS_MENSAJE.TITULO_MENSAJE.ERROR_TITULO_DEFAULT), MensajeStoreFactory.setTipoMensaje(PARAMETROS_MENSAJE.TIPO_MENSAJE.ERROR), MensajeStoreFactory.setContenidoMensaje(vm.mensajeErrorDefault), $state.go("mensaje")) : (MensajeStoreFactory.setTituloMensaje(PARAMETROS_MENSAJE.TITULO_MENSAJE.ERROR_TITULO_DEFAULT), MensajeStoreFactory.setTipoMensaje(PARAMETROS_MENSAJE.TIPO_MENSAJE.ERROR), MensajeStoreFactory.setContenidoMensaje(vm.mensajeErrorDefault), $state.go("mensaje"))
		}

		function resultadoDispositivoSeguridad() {
			vm.rutProcess = !1, cajaDesafioService_.tieneDispositivosHabilitados() ? (vm.showPasoDos = !0, vm.laddaDesbloqueo = !1, vm.submitted = !1, setFocusCajaDesafio()) : (MensajeStoreFactory.setTituloMensaje(PARAMETROS_MENSAJE.TITULO_MENSAJE.REACTIVAR_CLAVE), MensajeStoreFactory.setTipoMensaje(PARAMETROS_MENSAJE.TIPO_MENSAJE.WARNING), MensajeStoreFactory.setContenidoMensaje(vm.mensajeErrorSinDisp), $state.go("mensaje"))
		}

		function validarCampos(isValidForm) {
			return !isValidForm && vm.reactivarClaveForm.rut.$error.required ? (vm.reactivarClaveForm.rut.$dirty = !0, !1) : !0
		}

		function desbloquear(isValid) {
			if (validarCampos(isValid)) {
				var deferred = $q.defer();
				return vm.submitted = !0, cajaDesafioService_.isCajaDesafioValida() ? validarRut() && desbloqueo() : vm.submitted = !1, deferred.resolve(), deferred.promise
			}
		}

		function desbloqueo() {
			vm.disableRut = !0;
			var arregloData = [];
			arregloData.push({
				etiqueta: "Operaci&#243;n",
				valor: "Reactivaci&#243;n de Clave Internet"
			}), arregloData.push({
				etiqueta: "Origen",
				valor: "Internet Personas"
			});
			var sucess = '{\\"home\\": {\\"title\\": \\"Reactivaci&#243;n Clave Internet\\",\\"message\\":\\"Reactivar Clave Internet\\", \\"imageUrl\\": \\"http://login.bancochile.cl/bancochile-web/persona/login/assets/images/pantalla.png\\"},\\"success\\":{\\"title\\":\\"Autorizaci&#243;n Exitosa\\",\\"message\\":\\"Se ha Autorizado con &#201;xito Reactivaci&#243;n  de Clave\\"}}';
			return arregloData.push({
				etiqueta: "ILCAT_DESCRIPTION",
				valor: sucess
			}), cajaDesafioService_.setDatosTxSoftToken(arregloData), DesbloqueoService.desbloqueo(vm.rut).then(setDataSuccess, setDataError)
		}

		function setDataSuccess(result) {
			return vm.dataDesbloqueo = result, desbloqueoSuccess()
		}

		function setDataError(result) {
			return vm.dataDesbloqueo = result.data, cajaDesafioService_.habilitaFormulario() && (vm.disableRut = !1), desbloqueoError(result)
		}

		function desbloqueoSuccess() {
			vm.submitted = !1, vm.showPasoDos = !1, MensajeStoreFactory.setMensaje(PARAMETROS_MENSAJE.TIPO_MENSAJE.EXITO, vm.mensajeSuccessDesbloqueo, PARAMETROS_MENSAJE.TITULO_MENSAJE.REACTIVAR_CLAVE)
		}

		function desbloqueoError(result) {
			vm.submitted = !1;
			var status = result.status,
				errorInfo = result.data;
			status !== DESBLOQUEO_CONSTANTES.STATUS_CODE_401 && (vm.showPasoDos = !1, status === DESBLOQUEO_CONSTANTES.STATUS_CODE_300 ? (vm.error300 = !0, vm.mensajeError300 = errorInfo.mensaje) : status === DESBLOQUEO_CONSTANTES.STATUS_CODE_404 ? MensajeStoreFactory.setMensaje(PARAMETROS_MENSAJE.TIPO_MENSAJE.ERROR, vm.mensajeErrorDefault, PARAMETROS_MENSAJE.TITULO_MENSAJE.ERROR_TITULO_DEFAULT) : MensajeStoreFactory.setMensaje(PARAMETROS_MENSAJE.TIPO_MENSAJE.ERROR, errorInfo.mensaje, PARAMETROS_MENSAJE.TITULO_MENSAJE.ERROR_TITULO_DEFAULT))
		}

		function setFocusCajaDesafio() {
			$timeout(function() {
				dispositivos = cajaDesafioService_.getDispositivos(), dispositivoSeleccionado = cajaDesafioService_.getDispositivoSeleccionado(), angular.equals({}, dispositivoSeleccionado) && dispositivos.length > 1 ? (dispositivos[0].isFocus = !0, cajaDesafioService_.setDispositivoSeleccionado(dispositivoSeleccionado)) : (dispositivoSeleccionado.isInputFocus = [!0, !1, !1, !1, !1, !1], cajaDesafioService_.setDispositivoSeleccionado(dispositivoSeleccionado))
			}, 0)
		}
		var vm = this;
		vm.validarRut = validarRut, vm.irLogin = irLogin, vm.desbloquear = desbloquear, vm.validarDispositivos = validarDispositivos, vm.desactivarPaso2 = desactivarPaso2, vm.enterpress = enterpress, vm.disableRut = !1, vm.gRecaptchaResponse = "", vm.resetCaptchaReset = {}, vm.isErrorMsgActive = !1, vm.expiredCatcha = function() {
			vm.gRecaptchaResponse = ""
		}, $scope.$watch("vm.gRecaptchaResponse", function() {
			vm.isErrorMsgActive = !1
		}), init(), vm.verBoton = !0, vm.objetoMiPass = {}, vm.objetoMiPass.tituloMiPass = "Reactivaci&#243;n de Clave", vm.objetoMiPass.operacionMiPass = "Tienes una solicitud de Reactivaci&#243;n de Clave Internet por aprobar.", $scope.$on("cajadesafio:keydown", function(data, event) {
			var code = event.keyCode ? event.keyCode : event.which;
			code !== DESBLOQUEO_CONSTANTES.KEYCODE_ENTER || vm.submitted || vm.desbloquear(vm.reactivarClaveForm.$valid)
		}), $scope.$on("cajadesafio:focus", function(data, event) {
			vm.errorProcesoMensaje = "", vm.errorProcesoMostrar = !1
		})
	}
	angular.module("WebBancoChile.persona.desbloqueo").controller("desbloqueoCtrl", desbloqueoCtrl).constant("DESBLOQUEO_CONSTANTES", {
		TIPO_MENSAJE: {
			EXITO: "SUCCESS",
			ERROR: "ERROR",
			WARNING: "WARNING"
		},
		CONTENIDO_MENSAJE: {
			ERROR_DEFAULT: "501198",
			ERROR_SIN_DISP: "501199",
			SUCCESS_DESBLOQUEO: "501200"
		},
		CODIGO_ERROR: {
			ERROR_CODE_OK: 0,
			ERROR_CODE_ERROR: -1,
			CODIGO_PROCESO_OK: 0,
			CODIGO_PROCESO_ERROR: -1
		},
		KEYCODE_ENTER: 13,
		COD_ERR_RUT_VACIO: "501196",
		COD_ERR_RUT_NO_VALIDO: "501197",
		COD_ERR_404: "501016",
		STATUS_CODE_300: 300,
		STATUS_CODE_400: 400,
		STATUS_CODE_401: 401,
		STATUS_CODE_404: 404,
		STATUS_CODE_500: 500
	}), desbloqueoCtrl.$inject = ["$scope", "$state", "$window", "$document", "$q", "DesbloqueoService", "cajaDesafioService_", "DESBLOQUEO_CONSTANTES", "RutHelper", "catalogoMensajesFactory", "MensajeStoreFactory", "PARAMETROS_MENSAJE", "$timeout"]
}(),
function() {
	function loginFolioFactory() {
		var rutUsuarioFolio, passwordUsuarioFolio;
		return this.setUsuarioFolio = function(usuarioFolio) {
			rutUsuarioFolio = usuarioFolio
		}, this.getUsuarioFolio = function() {
			return rutUsuarioFolio
		}, this.setPasswordFolio = function(passwordFolio) {
			passwordUsuarioFolio = passwordFolio
		}, this.getPasswordFolio = function() {
			return passwordUsuarioFolio
		}, this
	}
	angular.module("WebBancoChile.persona.factory.login.folio", []).factory("loginFolioFactory", loginFolioFactory), loginFolioFactory.$inject = []
}(),
function() {
	function loginFolioService($http, URL_API) {
		function validarFolio(rut, password) {
			var dataObj = {
				rut: rut,
				password: password
			};
			return $http({
				url: URL_API + "/acceso-folio-persona-rest/enrolamiento/valida-folio",
				dataType: "json",
				method: "POST",
				handleError: !1,
				data: JSON.stringify(dataObj)
			}).then(resultFunction)
		}

		function resultFunction(result) {
			return result.data
		}
		return {
			validarFolio: validarFolio
		}
	}
	angular.module("WebBancoChile.persona.service.login.folio").factory("loginFolioService", loginFolioService), loginFolioService.$inject = ["$http", "URL_API"]
}(),
function() {
	function loginConfig($stateProvider) {
		function checkCookieOAM() {
			deleteCookie("cookieBookmarkProcess_empresa_securityLoop", "/");
			for (var cookieOAM = ["cookieBookmarkProcess"], i = 0; i < cookieOAM.length; i++) {
				if (existsCookieStartWith(cookieOAM[i])) {
					deleteCookie(cookieOAM[0], "/", DOMINIO), stateCarga();
					break
				}
				checkCookie() && (document.cookie = "cookieBookmarkProcess_persona_securityLoop=stop; Path=/;", window.location = URL_HOME)
			}
		}

		function noEsConsumoPublico() {
			return window.location.hash.indexOf("simulacion-credito-consumo") < 0
		}

		function noEsContactoPublico() {
			return window.location.hash.indexOf("requerimiento") < 0
		}

		function noEsSolicitudDeClave() {
			return window.location.hash.indexOf("clave-persona") < 0
		}

		function noEsDepositoAPlazo() {
			return window.location.hash.indexOf("dap-publico") < 0
		}

		function noEsPortabilidad() {
			return window.location.hash.indexOf("portabilidad") < 0
		}

		function noEsAgendamientoWeb() {
			return window.location.hash.indexOf("agendamiento") < 0
		}

		function noEsVisualizacionBoletasSii() {
			return window.location.hash.indexOf("visualizacion-boletas-sii-nocliente") < 0
		}

		function deleteCookie(name, path, domain) {
			document.cookie = name + "=" + (path ? ";path=" + path : "") + (domain ? ";domain=" + domain : "") + ";expires=Thu, 01 Jan 1970 00:00:01 GMT"
		}

		function existsCookieStartWith(name) {
			for (var ca = document.cookie.split(";"), i = 0; i < ca.length; i++) {
				for (var c = ca[i];
					" " == c.charAt(0);) c = c.substring(1);
				if (0 == c.indexOf(name)) return !0
			}
			return !1
		}

		function checkCookie() {
			var cookieEnabled = navigator.cookieEnabled ? !0 : !1;
			return "undefined" != typeof navigator.cookieEnabled || cookieEnabled || (document.cookie = "__verify=1", cookieEnabled = -1 != document.cookie.indexOf("__verify") ? !0 : !1), cookieEnabled
		}

		function stateCarga() {
			$stateProvider.state("login", {
				parent: "root",
				url: "/login",
				views: {
					"main@": {
						controller: "LoginCtrl",
						controllerAs: "vm",
						templateUrl: "bch-login-persona/src/loginPersonas.tpl.html"
					}
				},
				data: {
					pageTitle: "Login"
				}
			}).state("loginError", {
				parent: "root",
				url: "/loginError",
				views: {
					"main@": {
						controller: "LoginCtrl",
						controllerAs: "vm",
						templateUrl: "bch-login-persona/src/loginError.tpl.html"
					}
				},
				data: {
					pageTitle: "Login Error"
				}
			})
		}
		var DOMINIO = ".bancochile.cl",
			PROTOCOL = window.location.protocol,
			DOMINIO_BCH = window.location.host,
			URL_HOME = PROTOCOL + "//" + DOMINIO_BCH + "/persona";
		noEsConsumoPublico() && noEsContactoPublico() && noEsSolicitudDeClave() && noEsDepositoAPlazo() && noEsAgendamientoWeb() && noEsPortabilidad() && noEsVisualizacionBoletasSii() && checkCookieOAM()
	}
	angular.module("WebBancoChile.loginPersona.accesoLogin").config(loginConfig)
}();
var CSID;
! function() {
	function LoginCtrl($location, $q, RutHelper, LOGIN_CONSTANTES, catalogoMensajesFactory, $state, MensajeStoreFactory, PARAMETROS_MENSAJE, $window) {
		function uuidv4() {
			var ramId = null;
			return performance.navigation.type == performance.navigation.TYPE_RELOAD && flag ? (ramId = ramdomId(), flag = !1) : ramId = sessionStorage.getItem("ramId") ? sessionStorage.getItem("ramId") : ramdomId(), sessionStorage.setItem("ramId", ramId), ramId
		}

		function ramdomId() {
			return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
				var r = 16 * Math.random() | 0,
					v = "x" == c ? r : 3 & r | 8;
				return v.toString(16)
			})
		}

		function irLogin() {
			$window.location.href = "/persona"
		}

		function init() {
			catalogoMensajesFactory.obtener(LOGIN_CONSTANTES.COD_ERR.RUT_VACIO).then(setMensajeErrorRutVacio), catalogoMensajesFactory.obtener(LOGIN_CONSTANTES.COD_ERR.RUT_NO_VALIDO).then(setMensajeErrorRutNoValido), catalogoMensajesFactory.obtener(LOGIN_CONSTANTES.COD_ERR.PASSWORD_VACIO).then(setMensajeErrorPasswordVacio), catalogoMensajesFactory.obtener(LOGIN_CONSTANTES.COD_ERR.TECLA_MAYUSCULA).then(setMensajeErrorTeclaMayuscula), catalogoMensajesFactory.obtener(LOGIN_CONSTANTES.COD_ERR.TRES_INTENTOS).then(setMensajeErrorTresIntentos), catalogoMensajesFactory.obtener(LOGIN_CONSTANTES.COD_ERR.MAYOR_50_MM).then(setMensajeRUTMayor50MM), vm.mensajeErrorRutVacio = "", vm.mensajeErrorNoValido = "", vm.mensajeFolioIncorrecto = "", vm.mensajeRUTMayor50MM = "", vm.submitted = !1, vm.requestId = $location.search().req;
			var error = $location.search().error;
			error ? vm.showError = !0 : vm.showError = !1, vm.showRutNoValido = !1, vm.showRutMayor50MM = !1
		}

		function setMensajeErrorRutVacio(result) {
			vm.mensajeErrorRutVacio = result.texto
		}

		function setMensajeErrorRutNoValido(result) {
			vm.mensajeErrorNoValido = result.texto
		}

		function setMensajeErrorPasswordVacio(result) {
			vm.mensajePasswordVacio = result.texto
		}

		function setMensajeErrorTeclaMayuscula(result) {
			vm.mensajeTeclaMayuscula = result.texto
		}

		function setMensajeErrorTresIntentos(result) {
			vm.mensajeTresIntentos = result.texto
		}

		function setMensajeRUTMayor50MM(result) {
			vm.mensajeRUTMayor50MM = result.texto
		}

		function enterpress(e) {
			var code = e.keyCode ? e.keyCode : e.which;
			code === LOGIN_CONSTANTES.KEYCODE_ENTER && (vm.validarRut(vm.rut), vm.submitLogin())
		}

		function isRutVacio(rut) {
			return "" === rut || angular.isUndefined(rut)
		}

		function validarRut(rut) {
			var rutVacio = isRutVacio(rut);
			rutVacio && (vm.showRutNoValido = !1), vm.errorRutVacio = !0, vm.showRutNoValido = !1;
			var rutValido = !1;
			rutVacio || (vm.errorRutVacio = !1, rutValido = RutHelper.validate(rut), rutValido || (vm.showRutNoValido = !0));
			var rutMayor50MM = !1;
			if (vm.showRutMayor50MM = rutMayor50MM, !rutVacio) var rutAux = rut.replace("K", "0").replace("k", "0");
			return !rutVacio && rutValido && rutAux >= vm.rut50MM && (rutMayor50MM = !0, vm.showRutMayor50MM = rutMayor50MM), rutVacio || !rutValido || rutMayor50MM ? !1 : !0
		}

		function limpiarMensajes() {
			vm.showRutNoValido = !1, vm.showError = !1, vm.showRutMayor50MM = !1
		}

		function limpiarPassword() {
			vm.showError = !1
		}

		function submitLogin() {
			if (validarCtx()) {
				if (validarCampos() && !vm.submitted) {
					var deferred = $q.defer();
					if (validarRut(vm.rut)) {
						vm.errorPasswordVacio = !1;
						var passwordVacio = isPasswordVacio(vm.password);
						if (passwordVacio && (vm.errorPasswordVacio = !0), vm.errorPasswordVacio === !0 || vm.errorRutVacio === !0) return deferred.resolve(), deferred.promise;
						vm.submitted = !0, irLoginOAM()
					}
				}
			} else $window.location.href = "/persona"
		}

		function irLoginOAM() {
			document.forms["vm.loginForm"].action = "/oam/server/auth_cred_submit";
			var inputType = document.createElement("input");
			inputType.type = "hidden", inputType.name = "password", inputType.value = formateaPassword(vm.loginForm.userpassword.$modelValue), document.forms["vm.loginForm"].appendChild(inputType), document.getElementById("iduserName1").value = vm.rut, document.getElementById("iduserName2").value = vm.rut, document.forms["vm.loginForm"].submit(), sessionStorage.removeItem("ramId")
		}

		function validarCampos() {
			var errorForm = !0;
			return vm.loginForm.username2.$error.required && (vm.loginForm.username2.$dirty = !0, errorForm = !1), vm.loginForm.userpassword.$error.required && (vm.loginForm.userpassword.$dirty = !0, errorForm = !1), errorForm
		}

		function isPasswordVacio(password) {
			return null === password || angular.isUndefined(password) || 0 === password.length
		}

		function formateaPassword(password) {
			var nvaPassword = "";
			if (password.length < 8)
				for (var cantCeros = 8 - password.length, i = 0; cantCeros > i; i++) nvaPassword += "0";
			return nvaPassword + password
		}

		function cargarCookieCtx() {
			document.cookie = "ctx=persona; path=/"
		}

		function validarCtx() {
			return -1 !== document.cookie.indexOf("ctx=persona") ? !0 : !1
		}
		var vm = this;
		vm.validarRut = validarRut, vm.limpiarMensajes = limpiarMensajes, vm.enterpress = enterpress, vm.limpiarPassword = limpiarPassword, vm.submitLogin = submitLogin, vm.irLogin = irLogin, vm.rut50MM = 5e8;
		var flag = !0;
		CSID = uuidv4(), init(), cargarCookieCtx()
	}
	angular.module("WebBancoChile.loginPersona.accesoLogin").controller("LoginCtrl", LoginCtrl).constant("LOGIN_CONSTANTES", {
		COD_ERR: {
			RUT_VACIO: "501196",
			RUT_NO_VALIDO: "501197",
			PASSWORD_VACIO: "501195",
			TECLA_MAYUSCULA: "501011",
			TRES_INTENTOS: "501203",
			MAYOR_50_MM: "501541"
		},
		KEYCODE_ENTER: 13
	}), LoginCtrl.$inject = ["$location", "$q", "RutHelper", "LOGIN_CONSTANTES", "catalogoMensajesFactory", "$state", "MensajeStoreFactory", "PARAMETROS_MENSAJE", "$window"]
}(), "login.bancochile.cl" === window.location.host ? ! function() {
		document.cookie = "___tk394681=" + encodeURIComponent(Math.random()) + ";path=/;domain=bancochile.cl"
	}() : ! function() {
		document.cookie = "___tk394682=" + encodeURIComponent(Math.random()) + ";path=/;domain=labchile.cl"
	}(),
	function() {
		function OlvidoClavePersonaCtrl($window, $location, $animate, $document, $q, $scope, $state, $timeout, RutHelper, catalogoMensajesFactory, verificaClaveOlvidoClaveFactory, politicasSeguridadService_, cajaDesafioService_, getDispositivosSeguridadFactory, actualizarOlvidoClaveFactory, MensajeStoreFactory, SRC_CONSTANTS_MSJ_OLV_CLAVE, CONSTANT_OLVIDO_CLAVE_CODIGOS, gRecaptcha) {
			function desbloquearCamposOlvidoClave() {
				vm.primerPaso.ladda = !1, vm.tercerPaso.ladda = !1
			}

			function addInvalidClasses(id) {
				var element = $document[0].getElementById(id);
				$animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid" + id), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine")
			}

			function agregaGuionRut(rut) {
				return rut.substring(0, rut.length - 1) + "-" + rut.slice(-1)
			}

			function obtenerMensajesCatalogo() {
				catalogoMensajesFactory.obtener(501011).then(function(msj) {
					vm.mayusculaActivadaMessage = msj.texto
				}), catalogoMensajesFactory.obtener(501196).then(function(msj) {
					vm.primerPaso.mensajeIngresarRut = msj.texto
				}), catalogoMensajesFactory.obtener(501197).then(function(msj) {
					vm.primerPaso.mensajeRutInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501195).then(function(msj) {
					vm.primerPaso.mensajeIngresarClave = msj.texto
				}), catalogoMensajesFactory.obtener(501676).then(function(msj) {
					vm.primerPaso.mensajeIngresarClave = msj.texto
				}), catalogoMensajesFactory.obtener(501198).then(function(msj) {
					vm.error500 = msj.texto
				}), catalogoMensajesFactory.obtener(501199).then(function(msj) {
					vm.errorDispositivoSeguridad = msj.texto
				}), catalogoMensajesFactory.obtener(501208, "nÃºmero de Tarjeta de CrÃ©dito").then(function(msj) {
					vm.primerPaso.mensajeIngresarTarjetaCredito = msj.texto
				})
			}
			var vm = this;
			vm.primerPaso = {}, vm.segundoPaso = {}, vm.tercerPaso = {}, vm.primerPaso.producto = "debito", vm.primerPaso.confirmado = !1, vm.segundoPaso.confirmado = !1, vm.tercerPaso.confirmado = !1, vm.primerPaso.focusRut = !0, vm.verBoton = !0, vm.objetoMiPass = {}, vm.objetoMiPass.tituloMiPass = "Nueva Clave de Internet", vm.objetoMiPass.operacionMiPass = "Tienes una solicitud de creaciÃ³n de una nueva Clave Internet por aprobar.", vm.error500 = "", vm.errorDispositivoSeguridad = "", vm.mensajeExito = "", vm.primerPaso.mostrarMsje = {
				rut: !1,
				numTC: !1,
				clave: !1
			}, vm.segundoPaso.mostrarMsje = {
				password: !1,
				confirmarPassword: !1
			}, vm.segundoPaso.password = "", vm.segundoPaso.confirmaPassword = "", obtenerMensajesCatalogo(), vm.primerPaso.selectorProducto = function(producto) {
				vm.primerPaso.producto = producto, vm.primerPaso.clean(), vm.primerPaso.confirmado = !1, vm.primerPaso.focusRut = !0
			}, vm.primerPaso.clean = function() {
				vm.primerPaso.mostrarMsje = {
					rut: !1,
					numTC: !1,
					clave: !1
				}, vm.primerPaso.verificacionFallida = !1, vm.primerPaso.verificacionExitosa = !1, vm.tercerPaso.verificacionFallida = !1, vm.primerPaso.rut = "", vm.primerPaso.numTarjetaCredito = "", vm.primerPaso.clave = "", $scope.olvidoClave.rut.$setPristine(), void 0 !== $scope.olvidoClave.numeroTarjetaCredito && $scope.olvidoClave.numeroTarjetaCredito.$setPristine(), $scope.olvidoClave.claveProducto.$setPristine(), vm.primerPaso.confirmado = !1, vm.segundoPaso.clean()
			}, vm.primerPaso.volverPaso = function() {
				vm.primerPaso.confirmado = !1, vm.primerPaso.verificacionFallida = !1, vm.primerPaso.verificacionExitosa = !1, vm.tercerPaso.verificacionFallida = !1, vm.segundoPaso.clean()
			}, vm.primerPaso.validarForm = function(isRutValido, isNumTCValido, isClaveValido) {
				vm.primerPaso.volverPaso(), vm.primerPaso.mostrarMsje = {
					rut: !0,
					numTC: !0,
					clave: !0
				};
				var llamaServicio = !0;
				$scope.olvidoClave.claveProducto.$dirty = !0, void 0 !== $scope.olvidoClave.numeroTarjetaCredito && ($scope.olvidoClave.numeroTarjetaCredito.$dirty = !0), isRutValido || (addInvalidClasses("rut"), llamaServicio = !1), isNumTCValido === !1 && (addInvalidClasses("numeroTarjetaCredito"), llamaServicio = !1), isClaveValido || (addInvalidClasses("claveProducto"), llamaServicio = !1), llamaServicio && (vm.primerPaso.ladda = !0, vm.primerPaso.verificacionFallida = !1, vm.primerPaso.verificacionExitosa = !1, vm.tercerPaso.verificacionFallida = !1, gRecaptcha.execute({
					action: "seguros"
				}).then(function(token) {
					verificaClaveOlvidoClaveFactory.get({
						rut: agregaGuionRut(vm.primerPaso.rut),
						tarjeta: {
							numero: vm.primerPaso.numTarjetaCredito ? vm.primerPaso.numTarjetaCredito : "",
							pin: vm.primerPaso.clave
						}
					}, token).then(function(response) {
						gRecaptcha.execute({
							action: "seguros"
						}).then(function(token) {
							getDispositivosSeguridadFactory.obtenerDispositivosSeguridad(agregaGuionRut(vm.primerPaso.rut), token).then(function(data) {
								data.configuracionCajaDesafio.dispositivos ? (vm.primerPaso.ladda = !1, vm.primerPaso.confirmado = !0, vm.primerPaso.verificacionExitosa = !0, vm.primerPaso.verificacionFallida = !1, vm.tercerPaso.verificacionFallida = !1, vm.segundoPaso.focusPassword = !0) : MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.dispositivo.tipo, vm.errorDispositivoSeguridad, SRC_CONSTANTS_MSJ_OLV_CLAVE.dispositivo.titulo)
							})
						})
					})
				}))
			}, vm.segundoPaso.passwordValidator = function(password) {
				if ($scope.olvidoClave.password.$dirty) {
					if (null === password || angular.isUndefined(password) || 0 === password.length) return !1;
					if (!politicasSeguridadService_.isPasswordValido(password)) return !1
				}
				return !0
			}, vm.segundoPaso.passwordValidatorInput = function(password, omitirValidacion) {
				if ($scope.olvidoClave.password.$dirty || omitirValidacion) {
					if (null === password || angular.isUndefined(password) || 0 === password.length) return catalogoMensajesFactory.obtener(501195).then(function(msj) {
						vm.segundoPaso.passwordInvalidoMensaje = msj.texto
					}), vm.segundoPaso.mostrarMsje.password = !0, addInvalidClasses("password"), !1;
					if (!politicasSeguridadService_.isPasswordValido(password)) return catalogoMensajesFactory.obtener(501201).then(function(msj) {
						vm.segundoPaso.passwordInvalidoMensaje = msj.texto
					}), vm.segundoPaso.mostrarMsje.password = !0, addInvalidClasses("password"), !1
				}
				return vm.segundoPaso.mostrarMsje.password = !1, !0
			}, vm.segundoPaso.confirmarPasswordValidator = function(password, confirmarPassword) {
				return password === confirmarPassword && $scope.olvidoClave.password.$dirty && $scope.olvidoClave.confirmarPassword.$dirty ? !0 : !1
			}, vm.segundoPaso.confirmarPasswordValidatorInput = function(password, confirmaPassword, omitirValidacion) {
				if ($scope.olvidoClave.confirmarPassword.$dirty || omitirValidacion) {
					if (null === confirmaPassword || angular.isUndefined(confirmaPassword) || 0 === confirmaPassword.length) return catalogoMensajesFactory.obtener(501195).then(function(msj) {
						vm.segundoPaso.confirmarPasswordInvalidoMensaje = msj.texto
					}), vm.segundoPaso.mostrarMsje.confirmarPassword = !0, addInvalidClasses("confirmarPassword"), !1;
					if (password !== confirmaPassword) return vm.segundoPaso.mostrarMsje.confirmarPassword = !0, catalogoMensajesFactory.obtener(501202).then(function(msj) {
						vm.segundoPaso.confirmarPasswordInvalidoMensaje = msj.texto
					}), addInvalidClasses("confirmarPassword"), !1
				}
			}, $scope.$watch(function() {
				return vm.segundoPaso.password
			}, function(newValue) {
				newValue && vm.segundoPaso.password === vm.segundoPaso.confirmarPassword && ($scope.olvidoClave.confirmarPassword.$valid = !0, vm.segundoPaso.validarForm($scope.olvidoClave.password.$valid, $scope.olvidoClave.confirmarPassword.$valid))
			}), $scope.$watch(function() {
				return vm.segundoPaso.confirmarPassword
			}, function(newValue) {
				newValue && vm.segundoPaso.password === vm.segundoPaso.confirmarPassword && $scope.olvidoClave.password.$valid && $scope.olvidoClave.confirmarPassword.$valid && vm.segundoPaso.validarForm($scope.olvidoClave.password.$valid, $scope.olvidoClave.confirmarPassword.$valid)
			}), vm.segundoPaso.clean = function() {
				vm.segundoPaso.password = "", vm.segundoPaso.confirmarPassword = "", vm.segundoPaso.mostrarMsje = {
					password: !1,
					confirmarPassword: !1
				}, $scope.olvidoClave.password.$setPristine(), $scope.olvidoClave.confirmarPassword.$setPristine(), vm.segundoPaso.confirmado = !1
			}, vm.segundoPaso.volverPaso = function() {
				vm.segundoPaso.confirmado = !1, cajaDesafioService_.limpiarMensajesError(), vm.tercerPaso.clean()
			}, vm.segundoPaso.validarForm = function(passwordValido, confirmaPasswordValido) {
				vm.segundoPaso.volverPaso(), passwordValido && confirmaPasswordValido ? (vm.segundoPaso.confirmado = !0, vm.segundoPaso.mostrarMsje.password = !1, vm.segundoPaso.mostrarMsje.confirmarPassword = !1, vm.segundoPaso.focusConfirmarPassword = !1, $timeout(function() {
					dispositivos = cajaDesafioService_.getDispositivos(), dispositivoSeleccionado = cajaDesafioService_.getDispositivoSeleccionado(), angular.equals({}, dispositivoSeleccionado) && dispositivos.length > 1 ? (dispositivos[0].isFocus = !0, cajaDesafioService_.setDispositivos(dispositivos)) : (dispositivoSeleccionado.isInputFocus = [!0, !1, !1, !1, !1, !1], cajaDesafioService_.setDispositivoSeleccionado(dispositivoSeleccionado))
				}, 0)) : (passwordValido || vm.segundoPaso.passwordValidatorInput(vm.segundoPaso.password, !0), confirmaPasswordValido || vm.segundoPaso.confirmarPasswordValidatorInput(vm.segundoPaso.password, vm.segundoPaso.confirmarPassword, !0))
			}, $scope.$on("cajadesafio:keydown", function(data, event) {
				var code = event.keyCode ? event.keyCode : event.which;
				13 !== code || vm.tercerPaso.ladda || vm.tercerPaso.validarForm()
			}), $scope.$on("cajadesafio:focus", function(data, event) {
				vm.errorProcesoMensaje = "", vm.errorProcesoMostrar = !1
			}), vm.tercerPaso.clean = function() {
				vm.tercerPaso.verificacionFallida = !1, cajaDesafioService_.limpiarCajaDesafio()
			}, vm.tercerPaso.cancelar = function() {
				$window.location.href = "/persona"
			}, vm.tercerPaso.validarForm = function() {
				if (cajaDesafioService_.isCajaDesafioValida()) {
					vm.tercerPaso.ladda = !0;
					var arregloData = [];
					arregloData.push({
						etiqueta: "Origen",
						valor: "Internet Personas"
					}), arregloData.push({
						etiqueta: "Operaci&#243;n",
						valor: "Olvido de Clave Internet"
					});
					var sucess = '{\\"home\\": {\\"title\\": \\"Nueva Clave Internet\\",\\"message\\":\\"Creaci&#243;n de nueva Clave Internet\\", \\"imageUrl\\": \\"http://login.bancochile.cl/bancochile-web/persona/login/assets/images/pantalla.png\\"},\\"success\\":{\\"title\\":\\"Autorizaci&#243;n Exitosa\\",\\"message\\":\\"Se ha Autorizado con &#233;xito su Nueva Clave\\"}}';
					return arregloData.push({
						etiqueta: "ILCAT_DESCRIPTION",
						valor: sucess
					}), cajaDesafioService_.setDatosTxSoftToken(arregloData), actualizarOlvidoClaveFactory.get({
						rut: agregaGuionRut(vm.primerPaso.rut),
						password: vm.segundoPaso.password,
						tarjeta: {
							numero: vm.primerPaso.numTarjetaCredito ? vm.primerPaso.numTarjetaCredito : "",
							pin: vm.primerPaso.clave,
							tipo: vm.primerPaso.producto
						}
					}).then(function(response) {
						return cajaDesafioService_.habilitaFormulario() && desbloquearCamposOlvidoClave(), null == response ? !1 : (response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_PIN_INCORRECTO ? (vm.primerPaso.volverPaso(), vm.primerPaso.verificacionFallida = !0, vm.primerPaso.mensajeErrorValidar = response.mensaje) : response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_POLITICAS_PASSWORD ? (vm.segundoPaso.volverPaso(), vm.segundoPaso.mostrarMsje.password = !0, vm.segundoPaso.passwordInvalidoMensaje = response.mensaje, addInvalidClasses("password")) : response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_SERVICIOS ? MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, vm.error500, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo) : response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_SERVICIO_USUARIO_NO_EXISTE ? (vm.tercerPaso.errorUsuarioNoExiste = response.mensaje, vm.tercerPaso.verificacionFallida = !0) : MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, vm.error500, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo), void gRecaptcha.execute({
							action: "seguros"
						}).then(function(token) {
							return getDispositivosSeguridadFactory.obtenerDispositivosSeguridad(vm.primerPaso.rut, token).then(function(data) {
								data.configuracionCajaDesafio.dispositivos || MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.dispositivo.tipo, vm.errorDispositivoSeguridad, SRC_CONSTANTS_MSJ_OLV_CLAVE.dispositivo.titulo)
							}), !1
						}))
					}), !0
				}
				return !1
			}, vm.enterPress = function(e, validaForm, param1, param2, param3) {
				e.keyCode ? e.keyCode : e.which
			}
		}
		angular.module("WebBancoChile.loginPersona.olvidoClave").controller("OlvidoClavePersonaCtrl", OlvidoClavePersonaCtrl), OlvidoClavePersonaCtrl.$inject = ["$window", "$location", "$animate", "$document", "$q", "$scope", "$state", "$timeout", "RutHelper", "catalogoMensajesFactory", "verificaClaveOlvidoClaveFactory", "politicasSeguridadService_", "cajaDesafioService_", "getDispositivosSeguridadFactory", "actualizarOlvidoClaveFactory", "MensajeStoreFactory", "SRC_CONSTANTS_MSJ_OLV_CLAVE", "CONSTANT_OLVIDO_CLAVE_CODIGOS", "gRecaptcha"]
	}(),
	function() {
		"use strict";
		var constantesMensajes = {
				exito: {
					titulo: "Olvido de Clave",
					contenido: 'Estimado Cliente: Tu clave ha sido generada exitosamente.  Para ingresar a tu Banco en LÃ­nea, haz click en el botÃ³n "Continuar"',
					tipo: "SUCCESS"
				},
				dispositivo: {
					titulo: "Olvido de Clave",
					contenido: "Estimado Cliente: SegÃºn nuestros registros, no dispones de un dispositivo de seguridad para realizar este proceso. Para obtener mÃ¡s informaciÃ³n comunÃ­cate con nuestro Servicio al Cliente.",
					tipo: "WARNING"
				},
				error: {
					titulo: "Olvido de Clave",
					contenido: "Esta pÃ¡gina no se encuentra disponible en estos momentos. Lamentamos los inconvenientes que esto pueda ocasionarte. Por favor, intenta mas tarde o comunicate con nuestro Centro de Ayuda.",
					tipo: "ERROR"
				}
			},
			constantCodigosErrorBackend = {
				ERROR_PIN_INCORRECTO: "OLV-CLAV-1000",
				ERROR_VALIDACION_SINACOFI: "OLV-000600",
				DATOS_ENTRADA_SIN_FORMATO: "OLV-CLAV-1001",
				ERROR_SERVICIOS: "OLV-CLAV-1002",
				ERROR_SERVICIO_USUARIO_NO_EXISTE: "OLV-CLAV-1003",
				ERROR_POLITICAS_PASSWORD: "OLV-CLAV-1004",
				ERROR_SERIAL_INVALIDO: "512011",
				ERROR_SERIAL_BLOQUEADO: "512012",
				ERROR_SIN_DISPOSITIVOS_DE_SEGURIDAD: "501580"
			};
		angular.module("WebBancoChile.loginPersona.olvidoClave.constants", []).constant("SRC_CONSTANTS_MSJ_OLV_CLAVE", constantesMensajes).constant("CONSTANT_OLVIDO_CLAVE_CODIGOS", constantCodigosErrorBackend).constant("SRC_CONSTANTS_OLV_CLAVE", "bch-persona-olvido-clave/src/bch-persona-olvido-clave/").constant("MSJ_VALIDACION_SINACOFI", "Los datos ingresados son incorrectos. Intenta nuevamente.").constant("SRC_CONSTANTS_OLV_CLAVE_P", "bch-persona-olvido-clave/src/olvido-clave-persona/").constant("URL_API2", "/personas/rest").constant("MENSAJES_CATALOGO_OLVIDO", {
			DEBE_INGRESAR_RUT: "501196",
			RUT_INVALIDO: "501197",
			DEBE_INGRESAR_CLAVE: "501195",
			CLAVE_MENOR_4_DIGITOS: "501713",
			CLAVE_NO_CUMPLE_POLITICAS: "501201",
			CLAVES_NO_COINCIDEN: "501202",
			ERROR_SISTEMA: "501198",
			SIN_DISPOSITIVOS: "501199",
			SOLICITUD_OK: "501200",
			DEBE_INGRESAR_TARJETA_CREDITO: "501208",
			DEBE_INGRESAR_SERIE: "Debe ingresar NÂº de documento o NÂº de serie."
		})
	}(),
	function() {
		function verificaClaveOlvidoClaveFactory($http, URL_API, MensajeStoreFactory, SRC_CONSTANTS_MSJ_OLV_CLAVE, URL_API2) {
			function get(params, captchaData) {
				return $http({
					url: URL_API2 + "/olvido-clave-persona-rest/olvido-clave/valida-pin?g-recaptcha-response=" + captchaData,
					method: "POST",
					data: params
				}).then(function(response) {
					return response
				}, function(response) {
					return 400 === response.status ? response : (MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.contenido, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo), response)
				})
			}
			return {
				get: get
			}
		}

		function getDispositivosSeguridadFactory($http, URL_API, SRC_CONSTANTS_MSJ_OLV_CLAVE, URL_API2) {
			function obtenerDispositivosSeguridad(rut, captchaData) {
				return $http({
					url: URL_API2 + "/olvido-clave-persona-rest/olvido-clave/obtener-dispositivo-seguridad?g-recaptcha-response=" + captchaData,
					dataType: "json",
					method: "GET",
					GET_CHALLENGE: !0,
					SOFTOKEN: !0,
					handleError: !1,
					headers: {
						"Content-Type": "application/json",
						CAJDEF_AUTH_USER: rut
					}
				}).then(function(response) {
					return response
				}, function(error) {
					return error
				})
			}
			return {
				obtenerDispositivosSeguridad: obtenerDispositivosSeguridad
			}
		}

		function actualizarOlvidoClaveFactory($http, URL_API, MensajeStoreFactory, SRC_CONSTANTS_MSJ_OLV_CLAVE, getDispositivosSeguridadFactory, catalogoMensajesFactory, URL_API2) {
			function get(params) {
				return $http({
					url: URL_API2 + "/olvido-clave-persona-rest/olvido-clave/actualiza-clave",
					method: "POST",
					data: params,
					headers: {
						CAJDEF_AUTH_USER: params.rut,
						"Content-Type": "application/json"
					},
					SECURE_CHALLENGE: !0
				}).then(function(response) {
					if (200 === response.status) {
						var mensaje = "";
						catalogoMensajesFactory.obtener(501200, "generada").then(function(msj) {
							mensaje = msj.texto, MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.exito.tipo, mensaje, SRC_CONSTANTS_MSJ_OLV_CLAVE.exito.titulo)
						})
					}
				}, function(response) {
					return 401 === response.status ? null : 400 === response.status ? response.data : void(500 === response.status && "501610" === response.data.codigoError ? catalogoMensajesFactory.obtener(response.data.codigoError).then(function(resultCatalogo) {
						MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, resultCatalogo.texto, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo)
					}) : 500 === response.status ? MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, response.data.mensaje, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo) : MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.contenido, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo))
				})
			}
			return {
				get: get
			}
		}

		function actualizarOlvidoClaveSinacofiFactory($http, URL_API, MensajeStoreFactory, SRC_CONSTANTS_MSJ_OLV_CLAVE, getDispositivosSeguridadFactory, catalogoMensajesFactory, URL_API2) {
			function get(params) {
				return $http({
					url: URL_API2 + "/olvido-clave-persona-rest/olvido-clave/actualiza-clave-sinacofi",
					method: "POST",
					data: params,
					headers: {
						CAJDEF_AUTH_USER: params.rut,
						"Content-Type": "application/json"
					},
					SECURE_CHALLENGE: !0
				}).then(function(response) {
					if (200 === response.status) {
						var mensaje = "";
						catalogoMensajesFactory.obtener(501200, "generada").then(function(msj) {
							mensaje = msj.texto, MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.exito.tipo, mensaje, SRC_CONSTANTS_MSJ_OLV_CLAVE.exito.titulo)
						})
					}
				}, function(response) {
					return 401 === response.status ? null : 400 === response.status ? response.data : (500 === response.status ? MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, response.data.mensaje, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo) : MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.contenido, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo), response.data)
				})
			}
			return {
				get: get
			}
		}
		angular.module("WebBancoChile.loginPersona.olvidoClave.factory", ["WebBancoChile.mensajes", "WebBancoChile.loginPersona.olvidoClave.constants", "WebBancoChile.mensajes"]).factory("verificaClaveOlvidoClaveFactory", verificaClaveOlvidoClaveFactory).factory("getDispositivosSeguridadFactory", getDispositivosSeguridadFactory).factory("actualizarOlvidoClaveFactory", actualizarOlvidoClaveFactory).factory("actualizarOlvidoClaveSinacofiFactory", actualizarOlvidoClaveSinacofiFactory), verificaClaveOlvidoClaveFactory.$inject = ["$http", "URL_API", "MensajeStoreFactory", "SRC_CONSTANTS_MSJ_OLV_CLAVE", "URL_API2"], getDispositivosSeguridadFactory.$inject = ["$http", "URL_API", "SRC_CONSTANTS_MSJ_OLV_CLAVE", "URL_API2"], actualizarOlvidoClaveFactory.$inject = ["$http", "URL_API", "MensajeStoreFactory", "SRC_CONSTANTS_MSJ_OLV_CLAVE", "getDispositivosSeguridadFactory", "catalogoMensajesFactory", "URL_API2"], actualizarOlvidoClaveSinacofiFactory.$inject = ["$http", "URL_API", "MensajeStoreFactory", "SRC_CONSTANTS_MSJ_OLV_CLAVE", "getDispositivosSeguridadFactory", "catalogoMensajesFactory", "URL_API2"]
	}(),
	function() {
		function OlvidoClavePersonaController($window, $scope, olvidoClaveSinacofiModel, politicasSeguridadService_, catalogoMensajesFactory, MENSAJES_CATALOGO_OLVIDO, RutHelper, cajaDesafioService_, validaDatosOlvClavePersona, olvClaveServiceSinacofi, gRecaptcha) {
			function init() {
				gRecaptcha.initialize({
					key: "6Ld5EgEaAAAAALBa5OuqEp1pIyBpFM_z0Bc4VE0s"
				}), vm.datosCliente = {}, cajaDesafioService_.observeMostrarCaja().then(null, null, function(valor) {
					vm.showBtn = valor
				})
			}

			function validaRut() {
				return null === vm.olvClaveData.data.rut || void 0 === vm.olvClaveData.data.rut || "" === vm.olvClaveData.data.rut ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO_OLVIDO.DEBE_INGRESAR_RUT).then(function(resultCatalogo) {
					vm.datosCliente.msjErrorRut = resultCatalogo.texto, vm.olvClaveData.pasos.pasoUnoOk = !1
				}), !1) : RutHelper.validate(vm.olvClaveData.data.rut) ? (vm.datosCliente.msjErrorRut = "", !0) : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO_OLVIDO.RUT_INVALIDO).then(function(resultCatalogo) {
					vm.datosCliente.msjErrorRut = resultCatalogo.texto, vm.olvClaveData.pasos.pasoUnoOk = !1
				}), !1)
			}

			function changeRut() {
				var rut = RutHelper.clean(vm.olvClaveData.data.rut);
				vm.olvClaveData.data.rut = RutHelper.format(rut), vm.olvClaveData.pasos.pasoUnoOk = !1, limpiarPasoTres(), olvidoClaveSinacofiModel.limpiarVariables()
			}

			function changeClaveATM() {
				vm.olvClaveData.pasos.pasoUnoOk = !1, limpiarPasoTres(), olvidoClaveSinacofiModel.limpiarVariables()
			}

			function validaClaveATM() {
				return null === vm.olvClaveData.data.clave || void 0 === vm.olvClaveData.data.clave || "" === vm.olvClaveData.data.clave ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO_OLVIDO.DEBE_INGRESAR_CLAVE).then(function(resultCatalogo) {
					vm.datosCliente.msjErrorATM = resultCatalogo.texto, vm.olvClaveData.pasos.pasoUnoOk = !1
				}), !1) : vm.olvClaveData.data.clave.length < 4 ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO_OLVIDO.CLAVE_MENOR_4_DIGITOS).then(function(resultCatalogo) {
					vm.datosCliente.msjErrorATM = resultCatalogo.texto, vm.olvClaveData.pasos.pasoUnoOk = !1
				}), !1) : (vm.datosCliente.msjErrorATM = "", !0)
			}

			function validaNuevaClave() {
				return null === vm.olvClaveData.datosCliente.claveNueva || void 0 === vm.olvClaveData.datosCliente.claveNueva || "" === vm.olvClaveData.datosCliente.claveNueva ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO_OLVIDO.DEBE_INGRESAR_CLAVE).then(function(resultCatalogo) {
					vm.solicitudClave.nuevaClaveError = resultCatalogo.texto, limpiarPasoTres()
				}), vm.solicitudClave.msjErrorPoliticas = "", !1) : (vm.solicitudClave.nuevaClaveError = "", void validaClavesIngresadas())
			}

			function validaClaveReingreso() {
				return null === vm.olvClaveData.datosCliente.repiteClaveNueva || void 0 === vm.olvClaveData.datosCliente.repiteClaveNueva || "" === vm.olvClaveData.datosCliente.repiteClaveNueva ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO_OLVIDO.DEBE_INGRESAR_CLAVE).then(function(resultCatalogo) {
					vm.solicitudClave.nuevaClaveRepiteError = resultCatalogo.texto, limpiarPasoTres()
				}), vm.solicitudClave.msjErrorPoliticas = "", !1) : (vm.solicitudClave.nuevaClaveRepiteError = "", void validaClavesIngresadas())
			}

			function validaClavesIngresadas() {
				if ("" !== vm.olvClaveData.datosCliente.claveNueva && "" !== vm.olvClaveData.datosCliente.repiteClaveNueva) {
					if (!politicasSeguridadService_.isPasswordValido(vm.olvClaveData.datosCliente.claveNueva)) return catalogoMensajesFactory.obtener(MENSAJES_CATALOGO_OLVIDO.CLAVE_NO_CUMPLE_POLITICAS).then(function(resultCatalogo) {
						vm.solicitudClave.msjErrorPoliticas = resultCatalogo.texto, limpiarPasoTres()
					}), !1;
					if (vm.olvClaveData.datosCliente.claveNueva !== vm.olvClaveData.datosCliente.repiteClaveNueva) return catalogoMensajesFactory.obtener(MENSAJES_CATALOGO_OLVIDO.CLAVES_NO_COINCIDEN).then(function(resultCatalogo) {
						vm.solicitudClave.msjErrorPoliticas = resultCatalogo.texto, limpiarPasoTres()
					}), !1;
					vm.solicitudClave.msjErrorPoliticas = "", vm.tieneDispositivos = cajaDesafioService_.tieneDispositivosHabilitados(), vm.tieneDispositivos ? vm.olvClaveData.disableBotonSol = !1 : vm.olvClaveData.disableBotonSol = !0
				}
			}

			function limpiarPasoTres() {
				vm.tieneDispositivos = !1, vm.verMsjErrorDispositivos = !1, vm.msjErrorDispositivos = "", vm.olvClaveData.disableBotonSol = !0, vm.olvClaveData.verMsjError = !1, vm.olvClaveData.mostrarMsjFalloSinacofi = !1, vm.olvClaveData.mostrarMsjNoRegistrado = !1
			}

			function validaSerie() {
				if (vm.olvClaveData.mostrarMsjFalloSinacofi = !1, vm.olvClaveData.disableBotonSol = !0, null === vm.olvClaveData.datosCliente.serie || void 0 === vm.olvClaveData.datosCliente.serie || "" === vm.olvClaveData.datosCliente.serie) return vm.datosCliente.serieError = MENSAJES_CATALOGO_OLVIDO.DEBE_INGRESAR_SERIE, !1;
				if (vm.olvClaveData.datosCliente.serie.length < 9) return vm.datosCliente.serieError = "Ingresa serie vÃ¡lida", !1;
				if (10 === vm.olvClaveData.datosCliente.serie.length) {
					var pat = /^A[0-9]{9}$/i;
					if (!pat.test(vm.olvClaveData.datosCliente.serie)) return vm.datosCliente.serieError = "Ingresa serie vÃ¡lida", !1
				} else if (9 === vm.olvClaveData.datosCliente.serie.length) {
					var patNum = /^[0-9]{9}$/i;
					if (!patNum.test(vm.olvClaveData.datosCliente.serie)) return vm.datosCliente.serieError = "Ingresa serie vÃ¡lida", !1
				}
				vm.olvClaveData.disableBotonSol = !1, vm.datosCliente.serieError = ""
			}

			function validarDatos() {
				vm.olvClaveData.datosValidos = !1;
				var valRut = validaRut(),
					valClave = validaClaveATM();
				valRut && valClave && (vm.olvClaveData.disableCampos = !0, validaDatosOlvClavePersona.validaDatos())
			}

			function solicitarClave() {
				var arregloData = [];
				arregloData.push({
					etiqueta: "Origen",
					valor: "Internet Personas"
				}), arregloData.push({
					etiqueta: "Operacion",
					valor: "Solicitud de Clave Internet"
				});
				var sucess = '{\\"home\\": {\\"title\\": \\"Nueva Clave Internet\\",\\"message\\":\\"Creaci&#243;n de nueva Clave Internet\\", \\"imageUrl\\": \\"http://login.bancochile.cl/bancochile-web/persona/login/assets/images/pantalla.png\\"},\\"success\\":{\\"title\\":\\"Autorizaci&#243;n Exitosa\\",\\"message\\":\\"Se ha Autorizado con &#233;xito su nueva clave\\"}}';
				arregloData.push({
					etiqueta: "ILCAT_DESCRIPTION",
					valor: sucess
				}), vm.tieneDispositivos = cajaDesafioService_.tieneDispositivosHabilitados(), vm.tieneDispositivos && cajaDesafioService_.isCajaDesafioValida() && (cajaDesafioService_.setDatosTxSoftToken(arregloData), vm.olvClaveData.disableCampos = !0, olvClaveServiceSinacofi.solicitarClaveDispositivos())
			}
			var vm = this;
			vm.olvClaveData = olvidoClaveSinacofiModel.getSolicitudClave(), vm.showBtn = !0, vm.datosCliente = {}, vm.datosCliente.disablerut = "", vm.datosCliente.disableclaveATM = "", vm.datosCliente.msjErrorRut = "", vm.datosCliente.msjErrorATM = "", vm.datosCliente.serieError = "", vm.solicitudClave = {}, vm.validaRut = validaRut, vm.changeRut = changeRut, vm.validaClaveATM = validaClaveATM, vm.validaNuevaClave = validaNuevaClave, vm.validaClaveReingreso = validaClaveReingreso, vm.validaSerie = validaSerie, vm.validarDatos = validarDatos, vm.solicitarClave = solicitarClave, vm.changeClaveATM = changeClaveATM, vm.olvClaveData.mostrarMsjRegistrado = !1, vm.olvClaveData.mostrarMsjNoRegistrado = !1, vm.laddaValidaDatos = !1, vm.mostrarOk = !1, vm.mostrarBotonValidar = !0, vm.solicitudClave.nuevaClaveError = "", vm.solicitudClave.nuevaClaveRepiteError = "", vm.solicitudClave.msjErrorPoliticas = "", vm.objetoMiPass = {}, vm.objetoMiPass.tituloMiPass = "Nueva Clave de Internet", vm.objetoMiPass.operacionMiPass = "Tienes una solicitud de creaciÃ³n de una nueva Clave Internet por aprobar.", vm.verBoton = !0, vm.olvClaveData.pasos = {}, vm.olvClaveData.pasos.pasoUnoOk = !1, vm.olvClaveData.pasos.pasoDosOk = !1, vm.olvClaveData.pasos.pasoTresOk = !1, vm.tieneDispositivos = !1, vm.verMsjErrorDispositivos = !1, vm.msjErrorDispositivos = "", vm.olvClaveData.disableCampos = !1, init(), vm.cancelar = function() {
				$window.location.href = "/persona"
			}
		}
		angular.module("WebBancoChile.loginPersona.olvidoClave").controller("OlvidoClavePersonaController", OlvidoClavePersonaController), OlvidoClavePersonaController.$inject = ["$window", "$scope", "olvidoClaveSinacofiModel", "politicasSeguridadService_", "catalogoMensajesFactory", "MENSAJES_CATALOGO_OLVIDO", "RutHelper", "cajaDesafioService_", "validaDatosOlvClavePersona", "olvClaveServiceSinacofi", "gRecaptcha"]
	}(),
	function() {
		function loginConfig($stateProvider, SRC_CONSTANTS_OLV_CLAVE_P, $httpProvider) {
			$stateProvider.state("olvido-clave-persona", {
				parent: "root",
				url: "/olvido-clave-persona",
				views: {
					"main@": {
						controller: "OlvidoClavePersonaController",
						controllerAs: "ocl",
						templateUrl: SRC_CONSTANTS_OLV_CLAVE_P + "olvido-clave-persona.tpl.html"
					}
				},
				data: {
					pageTitle: "Olvido Clave"
				}
			})
		}
		angular.module("WebBancoChile.loginPersona.olvidoClave").config(loginConfig)
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.loginPersona.olvidoClave").service("olvClavDispositivosSeg", function(SRC_CONSTANTS_MSJ_OLV_CLAVE, MensajeStoreFactory, getDispositivosSeguridadFactory, RutHelper, olvidoClaveSinacofiModel, gRecaptcha) {
			olvidoClaveSinacofiModel.getSolicitudClave();
			this.obtener = function() {
				gRecaptcha.execute({
					action: "seguros"
				}).then(function(token) {
					getDispositivosSeguridadFactory.obtenerDispositivosSeguridad(agregaGuionRut(vm.primerPaso.rut), token).then(function(data) {
						data.configuracionCajaDesafio.dispositivos ? (vm.primerPaso.ladda = !1, vm.primerPaso.confirmado = !0, vm.primerPaso.verificacionExitosa = !0, vm.primerPaso.verificacionFallida = !1, vm.tercerPaso.verificacionFallida = !1, vm.segundoPaso.focusPassword = !0) : MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.dispositivo.tipo, vm.errorDispositivoSeguridad, SRC_CONSTANTS_MSJ_OLV_CLAVE.dispositivo.titulo)
					})
				})
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.loginPersona.olvidoClave").service("olvClaveServiceSinacofi", function(actualizarOlvidoClaveSinacofiFactory, CONSTANT_OLVIDO_CLAVE_CODIGOS, actualizarOlvidoClaveFactory, catalogoMensajesFactory, $state, MensajeStoreFactory, SRC_CONSTANTS_MSJ_OLV_CLAVE, cajaDesafioService_, RutHelper, $filter, olvidoClaveSinacofiModel, MSJ_VALIDACION_SINACOFI) {
			function respSolicitarClave(response) {
				var olvClaveData = olvidoClaveSinacofiModel.getSolicitudClave();
				if (olvClaveData.laddaSolicitudClave = !1, olvClaveData.disableBotonSol = !1, olvClaveData.disableCampos = !1, cajaDesafioService_.habilitaFormulario(), null == response) return !1;
				if (response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_PIN_INCORRECTO);
				else if (response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_POLITICAS_PASSWORD);
				else if (response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_SERVICIOS) MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.contenido, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo);
				else if (response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_SERVICIO_USUARIO_NO_EXISTE) olvClaveData.mostrarMsjNoRegistrado = !0, olvClaveData.mostrarMsjFalloSinacofi = !1;
				else {
					if (response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_VALIDACION_SINACOFI) return olvClaveData.mostrarMsjFalloSinacofi = !0, olvClaveData.msjValidacion = MSJ_VALIDACION_SINACOFI, olvClaveData.mostrarMsjNoRegistrado = !1, olvClaveData.laddaSolicitudClave = !1, !1;
					if (response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_SERIAL_INVALIDO || response.codigoError === CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_SERIAL_BLOQUEADO) return olvClaveData.mostrarMsjFalloSinacofi = !0, olvClaveData.msjValidacion = response.mensaje, olvClaveData.mostrarMsjNoRegistrado = !1, olvClaveData.laddaSolicitudClave = !1, !1;
					MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.contenido, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo)
				}
				return olvClaveData.disableCampos = !1, !1
			}

			function agregaGuionRut(rut) {
				return rut.substring(0, rut.length - 1) + "-" + rut.slice(-1)
			}

			function getMedio(olvClaveData) {
				return olvClaveData.isClaveTD ? "debito" : "credito"
			}
			this.solicitarClaveSinacofi = function() {
				var olvClaveData = olvidoClaveSinacofiModel.getSolicitudClave();
				olvClaveData.laddaSolicitudClave = !0, olvClaveData.mostrarMsjFalloSinacofi = !1;
				var rut = RutHelper.clean(olvClaveData.data.rut);
				return actualizarOlvidoClaveSinacofiFactory.get({
					rut: agregaGuionRut(rut),
					password: olvClaveData.datosCliente.claveNueva,
					tarjeta: {
						numero: "",
						pin: olvClaveData.data.clave,
						tipo: getMedio(olvClaveData)
					},
					serie: olvClaveData.datosCliente.serie
				}).then(respSolicitarClave), !0
			}, this.solicitarClaveDispositivos = function() {
				var olvClaveData = olvidoClaveSinacofiModel.getSolicitudClave(),
					rut = RutHelper.clean(olvClaveData.data.rut);
				olvClaveData.laddaSolicitudClave = !0, actualizarOlvidoClaveFactory.get({
					rut: agregaGuionRut(rut),
					password: olvClaveData.datosCliente.claveNueva,
					tarjeta: {
						numero: "",
						pin: olvClaveData.data.clave,
						tipo: getMedio(olvClaveData)
					}
				}).then(respSolicitarClave)
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.loginPersona.olvidoClave").service("olvidoClaveSinacofiModel", function() {
			var olvClaveData = {};
			olvClaveData.data = {}, olvClaveData.data.rut = "", olvClaveData.data.clave = "", olvClaveData.laddaSolicitudClave = !1, olvClaveData.isClaveTD = !1, olvClaveData.isClaveTC = !1, olvClaveData.datosCliente = {}, olvClaveData.datosCliente.claveNueva = "", olvClaveData.datosCliente.repiteClaveNueva = "", olvClaveData.datosCliente.serie = "", olvClaveData.pasos = {}, olvClaveData.pasos.pasoUnoOk = !1, olvClaveData.pasos.pasoDosOk = !1, olvClaveData.pasos.pasoTresOk = !1, olvClaveData.laddaValidaDatos = !1, olvClaveData.datosValidos = !1, olvClaveData.tieneDispositivos = !1, olvClaveData.mostrarMsjRegistrado = !1, olvClaveData.mostrarMsjNoRegistrado = !1, olvClaveData.mostrarMsjFalloSinacofi = !1, olvClaveData.msjError = "", olvClaveData.msjValidacion = "", olvClaveData.verMsjError = !1, olvClaveData.disableBotonSol = !0, this.getSolicitudClave = function() {
				return olvClaveData
			}, this.limpiarVariables = function() {
				olvClaveData.datosCliente.claveNueva = "", olvClaveData.datosCliente.repiteClaveNueva = "", olvClaveData.datosCliente.serie = ""
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.loginPersona.olvidoClave").service("validaDatosOlvClavePersona", function(SRC_CONSTANTS_MSJ_OLV_CLAVE, MensajeStoreFactory, getDispositivosSeguridadFactory, $state, RutHelper, olvidoClaveSinacofiModel, verificaClaveOlvidoClaveFactory, cajaDesafioService_, catalogoMensajesFactory, CONSTANT_OLVIDO_CLAVE_CODIGOS, gRecaptcha) {
			function validaDatos() {
				var olvClaveData = olvidoClaveSinacofiModel.getSolicitudClave();
				olvClaveData.data.msjError = "", olvClaveData.data.verMsjError = !1, olvClaveData.data.datosValidos = !1;
				var rut = RutHelper.clean(olvClaveData.data.rut);
				olvClaveData.laddaValidaDatos = !0, gRecaptcha.execute({
					action: "seguros"
				}).then(function(token) {
					verificaClaveOlvidoClaveFactory.get({
						rut: agregaGuionRut(rut),
						tarjeta: {
							numero: "",
							pin: olvClaveData.data.clave
						}
					}, token).then(function(response) {
						500 === response.status ? error500() : 200 === response.status ? (olvClaveData.isClaveTD = !0, olvClaveData.isClaveTC = !1, getDispositivos(olvClaveData) && resulOK(olvClaveData)) : (olvClaveData.disableCampos = !1, 400 === response.status && "OLV-CLAV-1003" === response.data.codigoError ? olvClaveData.mostrarMsjNoRegistrado = !0 : "OLV-CLAV-1000" === response.data.codigoError || "512011" === response.data.codigoError || "512012" === response.data.codigoError ? (olvClaveData.msjError = response.data.mensaje, olvClaveData.verMsjError = !0) : error500(), olvClaveData.datosValidos = !1, olvClaveData.laddaValidaDatos = !1)
					})
				})
			}

			function resulOK(olvClaveData) {
				olvClaveData.disableCampos = !1, olvClaveData.pasos.pasoUnoOk = !0, olvClaveData.datosValidos = !0, olvClaveData.tieneDispositivos = cajaDesafioService_.tieneDispositivosHabilitados(), cajaDesafioService_.tieneDispositivosHabilitados() || catalogoMensajesFactory.obtener(CONSTANT_OLVIDO_CLAVE_CODIGOS.ERROR_SIN_DISPOSITIVOS_DE_SEGURIDAD).then(function(resultCatalogo) {
					MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.dispositivo.tipo, resultCatalogo.texto, SRC_CONSTANTS_MSJ_OLV_CLAVE.dispositivo.titulo)
				})
			}

			function getDispositivos(data) {
				gRecaptcha.execute({
					action: "seguros"
				}).then(function(token) {
					getDispositivosSeguridadFactory.obtenerDispositivosSeguridad(RutHelper.clean(data.data.rut), token).then(function(response) {
						return data.laddaValidaDatos = !1, 200 === response.status ? (resulOK(data), !0) : void(500 === response.status && error500())
					})
				})
			}

			function agregaGuionRut(rut) {
				return rut.substring(0, rut.length - 1) + "-" + rut.slice(-1)
			}

			function error500() {
				MensajeStoreFactory.setMensaje(SRC_CONSTANTS_MSJ_OLV_CLAVE.error.tipo, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.contenido, SRC_CONSTANTS_MSJ_OLV_CLAVE.error.titulo)
			}
			this.validaDatos = validaDatos
		})
	}(),
	function() {
		function preguntaSeguridadCtrl($scope, $animate, $document, preguntaSeguridadFactory, preguntaSeguridadService) {
			function init() {
				cantidad = $scope.cantidad, vm.mostrarMsjePregunta = [], vm.mostrarMsjeRespuesta = [], vm.mostrarMsjeConfirmacion = [], vm.mostrarRespuesta = [], vm.mostrarConfirmar = [], initConfirmar(), vm.errorConfirmacion = [], preguntaSeguridadFactory.get().then(function(response) {
					vm.preguntas = response
				}), preguntaSeguridadService.crearInstancia(cantidad), vm.value = preguntaSeguridadService.preguntas, valido = preguntaSeguridadService.valido
			}

			function initConfirmar() {
				vm.confirmarRespuesta = [];
				for (var i = 0; cantidad > i; i++) vm.confirmarRespuesta[i] = ""
			}

			function validarFormRespuestas() {
				for (var valid = 0, i = 0; cantidad > i; i++) confirmarValido = $scope.form["respuesta" + i].$modelValue === $scope.form["confirmar" + i].$modelValue, $scope.form["respuesta" + i].$valid && confirmarValido && null !== vm.value[i].pregunta && valid++;
				valido.valor = valid === Number(cantidad) ? !0 : !1
			}

			function validarFormPreguntas() {
				for (var valid = 0, i = 0; cantidad > i; i++) $scope.form["respuesta" + i].$setDirty(), $scope.form["confirmar" + i].$setDirty(), vm.validarRespuestaBlur(vm.value[i].respuesta, i), vm.validarConfirmarBlur(vm.value[i].respuesta, vm.confirmarRespuesta[i], i), null === vm.value[i].pregunta && (vm.mostrarMsjePregunta[i] = !0), vm.mostrarRespuesta[i] = !0, vm.mostrarConfirmar[i] = !0, $scope.form["respuesta" + i].$valid && $scope.form["confirmar" + i].$valid && null !== vm.value[i].pregunta && valid++;
				valido.valor = valid === Number(cantidad) ? !0 : !1
			}
			var valido, cantidad, vm = this;
			init(), vm.validarFormRespuestas = validarFormRespuestas, vm.seleccionarPregunta = function(index) {
				vm.mostrarMsjePregunta[index] = !1
			}, vm.validarRespuestaInput = function(value, index) {
				return $scope.form["respuesta" + index].$dirty && (null === value || angular.isUndefined(value) || 0 === value.length) ? !1 : !0
			}, vm.confirmarRespuestaValidator = function(respuesta, confirmar, index) {
				return respuesta === confirmar && $scope.form["respuesta" + index].$dirty && $scope.form["confirmar" + index].$dirty && "" !== respuesta ? (vm.mostrarMsjeConfirmacion[index] = !1, $scope.form["confirmar" + index].$setValidity("minlength", !0), !0) : !1
			}, vm.validarRespuestaBlur = function(respuesta, index) {
				vm.mostrarMsjeRespuesta[index] = !1, $scope.form["respuesta" + index].$dirty && (null === respuesta || angular.isUndefined(respuesta) || 0 === respuesta.length) && (vm.errorRespuesta = "Debes ingresar una respuesta", vm.mostrarMsjeRespuesta[index] = !0, $scope.form["respuesta" + index].$setValidity("minlength", !1))
			}, vm.validarConfirmarBlur = function(respuesta, confirmacion, index) {
				vm.mostrarMsjeConfirmacion[index] = !1, $scope.form["confirmar" + index].$dirty && (null === confirmacion || angular.isUndefined(confirmacion) || 0 === confirmacion.length ? (vm.errorConfirmacion[index] = "Debes ingresar una respuesta", vm.mostrarMsjeConfirmacion[index] = !0, $scope.form["confirmar" + index].$setValidity("minlength", !1)) : respuesta !== confirmacion ? (vm.mostrarMsjeConfirmacion[index] = !0, vm.errorConfirmacion[index] = "Respuestas no coinciden", $scope.form["confirmar" + index].$setValidity("minlength", !1)) : $scope.form["confirmar" + index].$setValidity("minlength", !0))
			}, vm.enterPress = function(e) {
				var code = e.keyCode ? e.keyCode : e.which;
				13 === code ? validarFormPreguntas() : valido.valor = !1
			}, vm.reset = function() {
				valido.valor = !1, vm.value = [], vm.confirmarRespuesta = [], init();
				for (var i = 0; cantidad > i; i++) $scope.form["pregunta" + i].$setPristine(), $scope.form["respuesta" + i].$setPristine(), $scope.form["confirmar" + i].$setPristine()
			}
		}
		angular.module("preguntaSeguridadDirective").controller("preguntaSeguridadCtrl", preguntaSeguridadCtrl), preguntaSeguridadCtrl.$inject = ["$scope", "$animate", "$document", "preguntaSeguridadFactory", "preguntaSeguridadService"]
	}(),
	function() {
		"use strict";

		function cleanString(_value) {
			return "string" == typeof _value ? _value.replace(/[^a-zA-Z0-9]+/g, "") : ""
		}

		function formatCaracteresOnWatch($scope, ngModel) {
			$scope.$watch(function() {
				return ngModel.$viewValue
			}, function() {
				ngModel.$setViewValue(cleanString(ngModel.$viewValue)), ngModel.$render()
			})
		}
		angular.module("preguntaSeguridadDirective").directive("preguntaSeguridad", function() {
			return {
				restrict: "E",
				require: "^form",
				scope: {
					cantidad: "@"
				},
				keyboard: !1,
				controller: "preguntaSeguridadCtrl",
				controllerAs: "ps",
				templateUrl: "bch-preguntas-seguridad/src/bch-preguntas-seguridad/bch-preguntas-seguridad.tpl.html",
				link: function(scope, element, attrs, formCtrl) {
					scope.form = formCtrl
				}
			}
		}).directive("ngCaracteresEspeciales", function() {
			return {
				restrict: "A",
				require: "ngModel",
				link: function($scope, $element, $attrs, ngModel) {
					formatCaracteresOnWatch($scope, ngModel)
				}
			}
		})
	}();
var constantesMensajes = {
	error: {
		titulo: "Error de Sistema",
		contenido: "Este servicio estÃ¡ temporalmente fuera de servicio, por favor intenta mÃ¡s tarde [Error = 500].",
		tipo: "ERROR"
	}
};
! function() {
	function preguntaSeguridadFactory($http, URL_API, MensajeStoreFactory, CONSTANTE_PREGUNTAS_SEGURIDAD, APP_CONTEXTO) {
		function get() {
			var URL_PREGUNTAS = "";
			switch (APP_CONTEXTO) {
				case "Empresas":
					var URL_PREGUNTAS = "/enrolamiento/preguntas-seguridad";
					break;
				case "Personas":
					var URL_PREGUNTAS = "/acceso-folio-persona-rest/enrolamiento/preguntas-seguridad";
					break;
				default:
					var URL_PREGUNTAS = "/acceso-folio-persona-rest/enrolamiento/preguntas-seguridad"
			}
			return $http({
				url: URL_API + URL_PREGUNTAS,
				dataType: "json",
				handleError: !1,
				method: "GET"
			}).then(resultadoOK, function(response) {
				MensajeStoreFactory.setMensaje(CONSTANTE_PREGUNTAS_SEGURIDAD.error.tipo, CONSTANTE_PREGUNTAS_SEGURIDAD.error.contenido, CONSTANTE_PREGUNTAS_SEGURIDAD.error.titulo)
			})
		}

		function resultadoOK(response) {
			return response.data
		}
		return {
			get: get
		}
	}
	angular.module("preguntaSeguridadDirective").factory("preguntaSeguridadFactory", preguntaSeguridadFactory).constant("CONSTANTE_PREGUNTAS_SEGURIDAD", constantesMensajes), preguntaSeguridadFactory.$inject = ["$http", "URL_API", "MensajeStoreFactory", "CONSTANTE_PREGUNTAS_SEGURIDAD", "APP_CONTEXTO"]
}(), angular.module("preguntaSeguridadDirective.filter", []).filter("filterPreguntasRepetidas", function($filter) {
		return function(preguntas, seleccionadas) {
			if (!preguntas) return preguntas;
			for (var i = 0; i < seleccionadas.length; i++) seleccionadas[i].pregunta && (filterString = seleccionadas[i].pregunta.id, preguntas = $filter("filter")(preguntas, {
				id: "!" + filterString
			}, function(actual, expected) {
				return actual == expected
			}));
			return preguntas
		}
	}),
	function() {
		function preguntaSeguridadService() {
			this.preguntas = [], this.valido = {
				valor: !1
			}, this.crearInstancia = function(cantidad) {
				this.preguntas = [];
				for (var i = 0; cantidad > i; i++) this.preguntas.push({
					id: i,
					pregunta: null,
					respuesta: ""
				})
			}
		}
		angular.module("preguntaSeguridadDirective").service("preguntaSeguridadService", preguntaSeguridadService), preguntaSeguridadService.$inject = []
	}(),
	function(ng) {
		"use strict";
		var app = ng.module("WebBancoChile.gRecaptcha");
		app.provider("gRecaptcha", function() {
			var service = this;
			service.$get = ["$window", "$q", "$document", "$interval", function($window, $q, $document, $interval) {
				function writeScript() {
					var tag = document.createElement("script");
					tag.src = url + "?render=" + key + "&onload=" + onLoadFunctionName + "&render=explicit", $document.find("body")[0].appendChild(tag)
				}

				function isExecuteAvailable() {
					return angular.isFunction(($window.grecaptcha || {}).execute)
				}

				function scriptExists() {
					return $window.document.querySelector('script[src^="' + url + '"]')
				}

				function execute(params) {
					return isInitializing() ? defered.promise.then(function() {
						return execute(params)
					}) : $window.grecaptcha.execute(key, params)
				}

				function isInitialized() {
					return !!initialized
				}

				function isInitializing() {
					return !!initializing
				}

				function reset() {
					return $window.grecaptcha.reset()
				}

				function initialize(params) {
					return setTimeout(function() {
						try {
							if (!params || !params.key) throw new Error("Missing required public key for reCaptcha.");
							if (key = params.key + "", isExecuteAvailable()) initialized = !0, initializing = !1, defered.resolve();
							else if (scriptExists()) {
								initializing = !0;
								var wait = $interval(function() {
									isExecuteAvailable() && ($interval.cancel(wait), initialized = !0, initializing = !1, defered.resolve())
								}, 50)
							} else initializing = !0, $window[onLoadFunctionName] = function() {
								initialized = !0, initializing = !1, defered.resolve()
							}, writeScript()
						} catch (e) {
							defered.reject(e)
						}
					}), defered.promise
				}
				var key = null,
					url = "https://www.google.com/recaptcha/api.js",
					onLoadFunctionName = "onGRecaptchaScriptLoaded",
					defered = $q.defer(),
					initializing = !1,
					initialized = !1;
				return {
					initialize: initialize,
					execute: execute,
					reset: reset,
					isInitialized: isInitialized,
					isInitializing: isInitializing
				}
			}]
		})
	}(angular),
	function() {
		function cajaDesafioCtrl($scope, $animate, $document, cajaDesafioModelService_, cajaDesafioService_, catalogoMensajesFactory, CLAVEINTERNET, TERCERACLAVE, APP_TIPO_PORTAL, $timeout, cajaDesafioRestService_) {
			function init() {
				vm.mostrarCaja = cajaDesafioModelService_.getMostrarCaja(), cajaDesafioModelService_.limpiarDatosIngresados(), vm.dispositivos = cajaDesafioModelService_.getDispositivos(), vm.condiciones = cajaDesafioModelService_.getCondiciones(), vm.dispositivoSeleccionado = cajaDesafioModelService_.getDispositivoSeleccionado(), vm.coordenadasIngresadas = cajaDesafioModelService_.getCoordenadasIngresadas(), vm.tokenIngresado = cajaDesafioModelService_.getTokenIngresado(), vm.claveInternetIngresada = cajaDesafioModelService_.getClaveInternetIngresada(), vm.terceraClaveIngresada = cajaDesafioModelService_.getTerceraClaveIngresada(), vm.errorCajaDesafio = cajaDesafioModelService_.getErrorCajaDesafio(), vm.rutEmpresaIngresado = cajaDesafioModelService_.getRutEmpresaIngresado(), vm.tipoPortal = APP_TIPO_PORTAL, vm.multipass = cajaDesafioModelService_.getMultipass(), vm.multipasSelected = cajaDesafioModelService_.getMultipasSelected(), vm.tieneMiPass = !1, vm.bloqueAnimacionSofToken = cajaDesafioModelService_.getMostrarAnimacionSofToken(), vm.bloqueAnimacionClaveDinamica = cajaDesafioModelService_.getMostrarAnimacionClaveDinamica(), vm.animacionSoftokenclaveDinamica = cajaDesafioModelService_.getAnimarBloque(), vm.cantDispNoSoftoken = 0, vm.abreAcordeon = !0, vm.deshabilitaAcordeon = !0;
				for (var i = 0; i < vm.dispositivos.length; i++) "9" === vm.dispositivos[i].tipo ? (vm.tieneMiPass = !0, $scope.boton = !1, vm.bloqueAnimacionSofToken.valor = !0, vm.bloqueAnimacionClaveDinamica.valor = !1, vm.abreAcordeon = !1, vm.deshabilitaAcordeon = !1) : vm.cantDispNoSoftoken++;
				cajaDesafioModelService_.setActionSoftoken($scope.action), vm.action = cajaDesafioModelService_.getActionSoftoken(), vm.dataSoftoken = cajaDesafioModelService_.getDataSoftoken(), vm.tieneDigiPass = cajaDesafioModelService_.getTieneDigiPass(), vm.tieneDigiCard = cajaDesafioModelService_.getTieneDigiCard(), vm.ladda = $scope.laddaSoftToken, vm.disableSoftToken = cajaDesafioModelService_.getDisableSoftToken(), cajaDesafioModelService_.setObjetoMiPass($scope.objetoMiPass), vm.objetoMiPass = cajaDesafioModelService_.getObjetoMiPass(), vm.formularioValido = cajaDesafioModelService_.getFormularioValido()
			}

			function seleccionaMultipass(llaveSoftoken) {
				var softTokenValido = !0;
				vm.errorCajaDesafio.mostrarErrorValidacionSofToken && cleanSofToken(), $scope.boton = !1, vm.abreAcordeon = !1, cajaDesafioModelService_.setFormularioValido(!0), vm.multipasSelected.value ? (vm.disableSoftToken.valor = !0, vm.multipass = llaveSoftoken, vm.dispositivoSeleccionado.llave = llaveSoftoken, $timeout(function() {
					softTokenValido = vm.action.funcion(), angular.isUndefined(softTokenValido) || softTokenValido || (vm.multipasSelected.value = !1, vm.animacionSoftokenclaveDinamica.valor = !1, vm.disableSoftToken.valor = !1)
				}, 0)) : (vm.animacionSoftokenclaveDinamica.valor = !1, vm.multipass = void 0, vm.dispositivoSeleccionado.llave = llaveSoftoken, cajaDesafioModelService_.setDataSoftoken())
			}

			function addDigicardInvalidClasses(apply, id) {
				if (apply) {
					var element;
					digicardValidator(vm.coordenadasIngresadas.coordenada1, id, 1, !1) || (element = $document[0].getElementById(id + ";1"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";1"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine")), digicardValidator(vm.coordenadasIngresadas.coordenada2, id, 2, !1) || (element = $document[0].getElementById(id + ";2"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";2"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine")), digicardValidator(vm.coordenadasIngresadas.coordenada3, id, 3, !1) || (element = $document[0].getElementById(id + ";3"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";3"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"),
						$animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine"))
				}
			}

			function addDigipassInvalidClasses(apply, id) {
				if (apply) {
					var element;
					digipassValidator(vm.tokenIngresado.token1, id, 1, !1) || (element = $document[0].getElementById(id + ";1"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";1"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine")), digipassValidator(vm.tokenIngresado.token2, id, 2, !1) || (element = $document[0].getElementById(id + ";2"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";2"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine")), digipassValidator(vm.tokenIngresado.token3, id, 3, !1) || (element = $document[0].getElementById(id + ";3"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";3"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine")), digipassValidator(vm.tokenIngresado.token4, id, 4, !1) || (element = $document[0].getElementById(id + ";4"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";4"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine")), digipassValidator(vm.tokenIngresado.token5, id, 5, !1) || (element = $document[0].getElementById(id + ";5"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";5"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine")), digipassValidator(vm.tokenIngresado.token6, id, 6, !1) || (element = $document[0].getElementById(id + ";6"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";6"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine"))
				}
			}

			function addRutEmpresaInvalidClasses(apply, id) {
				if (apply) {
					var element;
					digipassRutEmpresaValidator(vm.rutEmpresaIngresado.valor) || (element = $document[0].getElementById(id + ";rutEmpresa"), $animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid-" + id + ";rutEmpresa"), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine"))
				}
			}

			function keyUp(event) {
				var code = event.keyCode ? event.keyCode : event.which;
				if (8 === code) {
					var id = event.target.id.split(";"),
						index = parseInt(id[2], 10) - 1;
					return index > 0 && "" === event.target.value ? (vm.dispositivoSeleccionado.isInputFocus[index - 1] = !0, !0) : !1
				}
			}

			function keyDown(event) {
				$scope.$emit("cajadesafio:keydown", event)
			}

			function focus(event) {
				vm.errorCajaDesafio.mostrarErrorDigicard = !1, vm.errorCajaDesafio.textoErrorDigicard = "", vm.errorCajaDesafio.mostrarErrorDigipass = !1, vm.errorCajaDesafio.textoErrorDigipass = "", vm.errorCajaDesafio.mostrarErrorGeneral = !1, vm.errorCajaDesafio.textoErrorGeneral = "", vm.errorCajaDesafio.mostrarErrorValidacionDigicard = !1, vm.errorCajaDesafio.textoErrorValidacionDigicard = "", vm.errorCajaDesafio.mostrarErrorValidacionDigipass = !1, vm.errorCajaDesafio.textoErrorValidacionDigipass = "", vm.errorCajaDesafio.mostrarErrorValidacion = !1, vm.errorCajaDesafio.textoErrorValidacion = "", vm.errorCajaDesafio.mostrarErrorValidacionRutEmpresa = !1, vm.errorCajaDesafio.textoErrorValidacionRutEmpresa = "", $scope.$emit("cajadesafio:focus", event)
			}

			function limpiarMensajesError() {
				cajaDesafioService_.limpiarMensajesError()
			}

			function setErrorDigicard(serie) {
				vm.errorCajaDesafio.textoErrorValidacionDigicard = "";
				for (var i = 1; 3 >= i; i++) {
					var target = $document[0].getElementById("DIGICARD;" + serie + ";" + i);
					vm.errorCajaDesafio.mostrarErrorValidacionDigicard = vm.errorCajaDesafio.mostrarErrorValidacionDigicard || hasClass(target, "ng-dirty") && hasClass(target, "ng-invalid")
				}
				return vm.errorCajaDesafio.mostrarErrorValidacionDigicard ? (vm.errorCajaDesafio.textoErrorValidacionDigicard = "Debe ingresar todas las coordenadas solicitadas de su Digicard.", !0) : !1
			}

			function setErrorDigipass(serie) {
				vm.errorCajaDesafio.textoErrorValidacionDigipass = "";
				for (var i = 1; 6 >= i; i++) {
					var target = $document[0].getElementById("DIGIPASS;" + serie + ";" + i);
					vm.errorCajaDesafio.mostrarErrorValidacionDigipass = vm.errorCajaDesafio.mostrarErrorValidacionDigipass || hasClass(target, "ng-dirty") && hasClass(target, "ng-invalid")
				}
				return vm.errorCajaDesafio.mostrarErrorValidacionDigipass ? (vm.errorCajaDesafio.textoErrorValidacionDigipass = "Debe ingresar todos los dÃ­gitos de su Digipass.", !0) : !1
			}

			function setErrorRutEmpresa(serie) {
				vm.errorCajaDesafio.textoErrorValidacionRutEmpresa = "";
				var target = $document[0].getElementById("DIGIPASS;" + serie + ";rutEmpresa");
				return vm.errorCajaDesafio.mostrarErrorValidacionRutEmpresa = vm.errorCajaDesafio.mostrarErrorValidacionRutEmpresa || hasClass(target, "ng-dirty") && hasClass(target, "ng-invalid"), vm.errorCajaDesafio.mostrarErrorValidacionRutEmpresa ? (vm.errorCajaDesafio.textoErrorValidacionRutEmpresa = "El Rut ingresado no es vÃ¡lido.", !0) : !1
			}

			function setErrorCancelarSoftoken() {
				vm.errorCajaDesafio.tituloErrorValidacionSofToken = "RechazÃ³ la OperaciÃ³n", vm.errorCajaDesafio.textoErrorValidacionSofToken = "Si desea realizar la operaciÃ³n nuevamente Reintente.", vm.errorCajaDesafio.mostrarErrorValidacionSofToken = !0
			}

			function hasClass(element, cls) {
				return (" " + element.className + " ").indexOf(" " + cls + " ") > -1
			}

			function digicardValidator(valor, coordenada, saltar) {
				var patt = /\d\d/;
				return null === valor || angular.isUndefined(valor) || valor.length < 2 || !patt.test(valor) ? (vm.errorCajaDesafio.textoErrorValidacionDigicard = "Debe ingresar todas las coordenadas solicitadas de su Digicard.", !1) : (saltar && 3 > coordenada && (coord = parseInt(coordenada, 10), vm.dispositivoSeleccionado.isInputFocus[coord] = !0), !0)
			}

			function digipassValidator(valor, coordenada, salta) {
				var patt = /\d/;
				return null === valor || angular.isUndefined(valor) || 1 !== valor.length || !patt.test(valor) ? (vm.errorCajaDesafio.textoErrorValidacionDigipass = "Debe ingresar todos los dÃ­gitos de su Digipass.", !1) : (salta && 6 > coordenada ? (coord = parseInt(coordenada, 10), vm.dispositivoSeleccionado.isInputFocus[coord] = !0, vm.dispositivoSeleccionado.isRutEmpresaFocus = !1) : salta && 6 === coordenada && (vm.dispositivoSeleccionado.isInputFocus = [!1, !1, !1, !1, !1, !1], vm.dispositivoSeleccionado.isRutEmpresaFocus = !0), !0)
			}

			function digipassRutEmpresaValidator(rutEmpresa) {
				return null === rutEmpresa || angular.isUndefined(rutEmpresa) || !cajaDesafioService_.validaRut(rutEmpresa) ? (vm.errorCajaDesafio.textoErrorValidacionRutEmpresa = "El Rut ingresado no es vÃ¡lido.", !1) : !0
			}

			function setDispositivoSeleccionado(tipo, serie) {
				return null === tipo || angular.isUndefined(tipo) || 0 === tipo.length ? !1 : (vm.multipasSelected.value = !1, vm.disableSoftToken.valor = !1, $scope.boton = !0, cajaDesafioModelService_.setFormularioValido(!0), cleanSofToken(), tipo === CLAVEINTERNET ? cleanClaveInternet() : tipo === TERCERACLAVE ? cleanTerceraClave() : null === serie || angular.isUndefined(serie) || 0 === serie.length || (cleanDigicard(), cleanDigipass()), vm.dispositivoSeleccionado.isInputFocus = [!0, !1, !1, !1, !1, !1], vm.dispositivoSeleccionado.isRutEmpresaFocus = !1, !0)
			}

			function cleanDigicard() {
				vm.errorCajaDesafio.textoErrorValidacionDigicard = "", vm.coordenadasIngresadas.coordenada1 = "", vm.coordenadasIngresadas.coordenada2 = "", vm.coordenadasIngresadas.coordenada3 = "", vm.coordenadasIngresadas.coordenada4 = "", vm.coordenadasIngresadas.coordenada5 = "", vm.coordenadasIngresadas.coordenada6 = ""
			}

			function cleanDigipass() {
				vm.errorCajaDesafio.textoErrorValidacionDigipass = "", vm.tokenIngresado.token1 = "", vm.tokenIngresado.token2 = "", vm.tokenIngresado.token3 = "", vm.tokenIngresado.token4 = "", vm.tokenIngresado.token5 = "", vm.tokenIngresado.token6 = "", vm.rutEmpresaIngresado = ""
			}

			function cleanClaveInternet() {
				vm.errorCajaDesafio.textoErrorValidacionClaveInternet = "", vm.claveInternetIngresada = ""
			}

			function cleanTerceraClave() {
				vm.errorCajaDesafio.textoErrorValidacionTeceraClave = "", vm.terceraClaveIngresada = ""
			}

			function cleanSofToken() {
				vm.errorCajaDesafio.textoErrorValidacionSofToken = "", vm.errorCajaDesafio.mostrarErrorValidacionSofToken = !1
			}

			function muestraInputRutEmpresa() {
				var tipo = vm.dispositivoSeleccionado.llave.split(";")[0],
					serie = vm.dispositivoSeleccionado.llave.split(";")[1];
				return "Publico" === vm.tipoPortal && "DIGIPASS" === tipo && "XXXX" === serie ? !0 : !1
			}

			function detenerSoftoken() {
				vm.dataSoftoken = cajaDesafioModelService_.getDataSoftoken(), cajaDesafioModelService_.setFormularioValido(!0), cajaDesafioRestService_.cancelarTrxSoftToken(vm.dataSoftoken).then(cancelarTrx, cancelarTrxNOK)
			}

			function cancelarTrx(result) {
				cajaDesafioModelService_.setDataSoftoken(), vm.animacionSoftokenclaveDinamica.valor = !1, cajaDesafioModelService_.setAnimarBloque(!1), vm.multipasSelected.value = !1, vm.disableSoftToken.valor = !1, setErrorCancelarSoftoken()
			}

			function cancelarTrxNOK(result) {
				cajaDesafioModelService_.setDataSoftoken(), vm.animacionSoftokenclaveDinamica.valor = !1, cajaDesafioModelService_.setAnimarBloque(!1), vm.multipasSelected.value = !1, vm.disableSoftToken.valor = !1, setErrorCancelarSoftoken()
			}

			function compruebaSoloUnDispositivoNoSoftToken(acordeonCerrado) {
				if (acordeonCerrado || 1 !== vm.cantDispNoSoftoken || vm.disableSoftToken.valor) acordeonCerrado && (vm.dispositivoSeleccionado.llave = void 0, $scope.boton = !1);
				else {
					vm.multipasSelected.value = !1, $scope.boton = !0;
					for (var i = 0; i < vm.dispositivos.length; i++) "1" === vm.dispositivos[i].tipo ? vm.dispositivoSeleccionado.llave = "DIGICARD;" + vm.dispositivos[i].numeroSerie : "8" === vm.dispositivos[i].tipo && 0 == vm.dispositivos[i].soportaFirma && (vm.dispositivoSeleccionado.llave = "DIGIPASS;" + vm.dispositivos[i].numeroSerie), vm.dispositivoSeleccionado.isInputFocus = [!0, !1, !1, !1, !1, !1], vm.dispositivoSeleccionado.isRutEmpresaFocus = !1
				}
			}
			var vm = this;
			vm.init = init, vm.setErrorDigicard = setErrorDigicard, vm.setErrorDigipass = setErrorDigipass, vm.digicardValidator = digicardValidator, vm.digipassValidator = digipassValidator, vm.setDispositivoSeleccionado = setDispositivoSeleccionado, vm.limpiarMensajesError = limpiarMensajesError, vm.seleccionaMultipass = seleccionaMultipass, vm.keyUp = keyUp, vm.keyDown = keyDown, vm.focus = focus, vm.muestraInputRutEmpresa = muestraInputRutEmpresa, vm.digipassRutEmpresaValidator = digipassRutEmpresaValidator, vm.setErrorRutEmpresa = setErrorRutEmpresa, vm.detenerSoftoken = detenerSoftoken, vm.compruebaSoloUnDispositivoNoSoftToken = compruebaSoloUnDispositivoNoSoftToken, vm.init(), $scope.$on("caja-desafio-cargada", function() {
				init()
			}), $scope.$watch(function() {
				return vm.errorCajaDesafio.mostrarErrorValidacionDigicard
			}, function(value) {
				var id = cajaDesafioModelService_.getDispositivoSeleccionado().llave;
				addDigicardInvalidClasses(value, id)
			}), $scope.$watch(function() {
				return vm.errorCajaDesafio.mostrarErrorValidacionDigipass
			}, function(value) {
				var id = cajaDesafioModelService_.getDispositivoSeleccionado().llave;
				addDigipassInvalidClasses(value, id)
			}), $scope.$watch(function() {
				return vm.errorCajaDesafio.mostrarErrorValidacionRutEmpresa
			}, function(value) {
				var id = cajaDesafioModelService_.getDispositivoSeleccionado().llave;
				addRutEmpresaInvalidClasses(value, id)
			})
		}
		angular.module("WebBancoChile.cajaDesafio").controller("cajaDesafioCtrl", cajaDesafioCtrl), cajaDesafioCtrl.$inject = ["$scope", "$animate", "$document", "cajaDesafioModelService_", "cajaDesafioService_", "catalogoMensajesFactory", "CLAVEINTERNET", "TERCERACLAVE", "APP_TIPO_PORTAL", "$timeout", "cajaDesafioRestService_"]
	}(), Array.prototype.get = function(value) {
		if (angular.isUndefined(value) || null === value || "" === value) return {};
		for (var i = 0, len = this.length; len > i; i++)
			if ("object" == typeof this[i] && (this[i].name.removeQuotes().toLowerCase() === value.toLowerCase() || this[i].code.toLowerCase() === value.toLowerCase())) return this[i];
		return {}
	}, String.prototype.removeQuotes = function() {
		return angular.isUndefined(this) || null === this || "" === this ? "" : this.replace(/Ã/g, "A").replace(/Ã‰/g, "E").replace(/Ã/g, "I").replace(/Ã“/g, "O").replace(/Ãš/g, "U").replace(/Ã¡/g, "a").replace(/Ã©/g, "e").replace(/Ã­/g, "i").replace(/Ã³/g, "o").replace(/Ãº/g, "u")
	},
	function() {
		"use strict";
		angular.module("cajaDesafioDirective", []).directive("cajaDesafio", function() {
			return {
				restrict: "AE",
				scope: {
					titulo: "@",
					portal: "@"
				},
				controller: "cajaDesafioCtrl",
				controllerAs: "cd",
				templateUrl: function(elem, attr) {
					return "cajadesafio/src/common/directives/cajaDesafio/cajaDesafioDirective" + attr.portal + ".tpl.html"
				}
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("cajaDesafioSoftDirective", []).directive("cajaDesafioSoft", function() {
			return {
				restrict: "AE",
				scope: {
					titulo: "@",
					portal: "@",
					action: "&",
					boton: "=",
					laddaSoftToken: "=",
					objetoMiPass: "="
				},
				controller: "cajaDesafioCtrl",
				controllerAs: "cd",
				templateUrl: function(elem, attr) {
					return "cajadesafio/src/common/directives/cajaDesafioSoft/cajaDesafioDirectiveSoft" + attr.portal + ".tpl.html"
				}
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("cajaDesafioInterceptor", []).factory("cajaDesafioInterceptor_", function($q, $rootScope, cajaDesafioService_) {
			function request(config) {
				return config || $q.when(config)
			}

			function response(resp) {
				return resp
			}

			function responseError(rejection) {
				return $q.reject(rejection)
			}
			return $rootScope.pendingRequests = 0, {
				request: request,
				response: response,
				responseError: responseError
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("cajaDesafioSoftTokenInterceptor", []).factory("cajaDesafioSoftTokenInterceptor_", function($q, $rootScope, cajaDesafioService_) {
			function request(config) {
				if (config.SECURE_CHALLENGE) {
					var defer = $q.defer(),
						authData = cajaDesafioService_.getAuthData();
					return config.headers.AUTH_DATA = JSON.stringify({
						tipoDispositivo: authData.tipoDispositivo,
						dispositivoOriginal: authData.dispositivoOriginal
					}), config.data = getAuthRequest(config.data, authData), defer.resolve(config), defer.promise
				}
				if (config.AUTH_CHALLENGE) {
					var authData = cajaDesafioService_.getAuthData();
					config.headers.AUTH_DATA = angular.toJson(authData, !1)
				}
				return config || $q.when(config)
			}

			function response(resp) {
				return resp.config.GET_CHALLENGE && (cajaDesafioService_.init(), cajaDesafioService_.processDevices(resp.data, !1, resp.config.SOFTOKEN)), resp.config.RE_CHALLENGE && cajaDesafioService_.processDevices(resp.data, !0), resp
			}

			function responseError(rejection) {
				return (rejection.config.AUTH_CHALLENGE || rejection.config.SECURE_CHALLENGE) && cajaDesafioService_.processError(rejection), $q.reject(rejection)
			}

			function getAuthRequest(requestData, authData) {
				var request = requestData;
				if (angular.isString(request) && (request = JSON.parse(request)), angular.isArray(request) && (request = {
						cajaDesafioParams: requestData
					}), request.tipoDispositivo = authData.tipoDispositivo, request.bchCajaPass = null, "CI" === request.tipoDispositivo) request.tipoDispositivo = 0, request.bchCajaPass = authData.clave;
				else if (1 === request.tipoDispositivo) request.bchCajaPass = JSON.stringify(authData.coordenadas);
				else if (5 === request.tipoDispositivo) request.bchCajaPass = authData.terceraClave;
				else if (8 === request.tipoDispositivo) request.bchCajaPass = authData.token;
				else if (9 === request.tipoDispositivo) {
					var authorized = {};
					authorized.miPass = authData.miPass, authorized.dataST = authData.dataST, request.bchCajaPass = JSON.stringify(authorized)
				}
				return request
			}
			return $rootScope.pendingRequests = 0, {
				request: request,
				response: response,
				responseError: responseError
			}
		})
	}(),
	function() {
		function cajaDesafioModelService() {
			function init() {
				vm.condiciones = {}, vm.dispositivos = [], vm.dispositivoAnterior = {}, vm.coordenadasIngresadas = {}, vm.tokenIngresado = {}, vm.claveInternetIngresada = {}, vm.terceraClaveIngresada = {}, vm.rutEmpresaIngresado = {}, vm.errorCajaDesafio = {}, vm.dispositivoSeleccionado = {}, vm.multipass = {}, vm.multipasSelected = {}, vm.multipasSelected.value = !1, vm.botonSoftoken = {}, vm.dataSoftoken = null, vm.actionSoftoken = {}, vm.actionSoftoken.funcion = null, vm.mostrarAnimacionClaveDinamica = {}, vm.mostrarAnimacionClaveDinamica.valor = !1, vm.mostrarAnimacionSofToken = {}, vm.mostrarAnimacionSofToken.valor = !1, vm.animarBloque = {}, vm.animarBloque.valor = !1, vm.tieneDigiCard = {}, vm.tieneDigiCard.valor = !1, vm.tieneDigiPass = {}, vm.tieneDigiPass.valor = !1, vm.disableSoftToken = {}, vm.disableSoftToken.valor = !1, vm.objetoMiPass = {}, vm.datosTxSoftToken = [], vm.formularioValido = {}, vm.formularioValido.valor = !0, vm.mostrarCaja = {}, vm.mostrarCaja.valor = !0
			}

			function getFormularioValido() {
				return vm.formularioValido
			}

			function setFormularioValido(valido) {
				vm.formularioValido.valor = valido
			}

			function getDatosTxSoftToken() {
				return vm.datosTxSoftToken
			}

			function setDatosTxSoftToken(datosTx) {
				vm.datosTxSoftToken = datosTx
			}

			function getObjetoMiPass() {
				return vm.objetoMiPass
			}

			function setObjetoMiPass(objeto) {
				vm.objetoMiPass = objeto
			}

			function getDisableSoftToken() {
				return vm.disableSoftToken
			}

			function getTieneDigiPass() {
				return vm.tieneDigiPass
			}

			function getTieneDigiCard() {
				return vm.tieneDigiCard
			}

			function getAnimarBloque() {
				return vm.animarBloque
			}

			function setAnimarBloque(animar) {
				vm.animarBloque = animar
			}

			function getMostrarAnimacionClaveDinamica() {
				return vm.mostrarAnimacionClaveDinamica
			}

			function setMostrarAnimacionClaveDinamica(mostrar) {
				vm.mostrarAnimacionClaveDinamica = mostrar
			}

			function getMostrarAnimacionSofToken() {
				return vm.mostrarAnimacionClaveDinamica
			}

			function setMostrarAnimacionSofToken(mostrar) {
				vm.mostrarAnimacionClaveDinamica = mostrar
			}

			function setActionSoftoken(action) {
				vm.actionSoftoken.funcion = action
			}

			function getActionSoftoken() {
				return vm.actionSoftoken
			}

			function setDataSoftoken(data) {
				vm.dataSoftoken = data
			}

			function getDataSoftoken() {
				return vm.dataSoftoken
			}

			function setBotonSoftoken(boton) {
				vm.botonSoftoken = boton
			}

			function getBotonSoftoken() {
				return vm.botonSoftoken
			}

			function getMultipasSelected() {
				return vm.multipasSelected
			}

			function getMultipass() {
				return vm.multipass
			}

			function getDispositivoAnterior() {
				return vm.dispositivoAnterior
			}

			function getDispositivoSeleccionado() {
				return vm.dispositivoSeleccionado
			}

			function getDispositivos() {
				return vm.dispositivos
			}

			function getCondiciones() {
				return vm.condiciones
			}

			function getCoordenadasIngresadas() {
				return vm.coordenadasIngresadas
			}

			function getTokenIngresado() {
				return vm.tokenIngresado
			}

			function getClaveInternetIngresada() {
				return vm.claveInternetIngresada
			}

			function getTerceraClaveIngresada() {
				return vm.terceraClaveIngresada
			}

			function getRutEmpresaIngresado() {
				return vm.rutEmpresaIngresado
			}

			function getErrorCajaDesafio() {
				return vm.errorCajaDesafio
			}

			function getMsj() {
				return vm.MSJ
			}

			function setMultipasSelected(aux) {
				vm.multipasSelected = aux
			}

			function setMultipass(aux) {
				vm.multipass = aux
			}

			function setDispositivos(aux) {
				vm.dispositivos = aux
			}

			function setCondiciones(aux) {
				vm.condiciones = aux
			}

			function setDispositivoSeleccionado(aux) {
				vm.dispositivoSeleccionado = aux
			}

			function setDispositivoAnterior(aux) {
				vm.dispositivoAnterior = aux
			}

			function setMostrarCaja(aux) {
				vm.mostrarCaja.valor = aux
			}

			function getMostrarCaja() {
				return vm.mostrarCaja
			}

			function limpiarDatosIngresados() {
				vm.coordenadasIngresadas = {}, vm.tokenIngresado = {}, vm.claveInternetIngresada = {}, vm.terceraClaveIngresada = {}, vm.multipass = {}, vm.rutEmpresaIngresado = {}
			}
			var vm = this;
			vm.MSJ = {}, vm.init = init, vm.getDispositivoAnterior = getDispositivoAnterior, vm.getDispositivoSeleccionado = getDispositivoSeleccionado, vm.getDispositivos = getDispositivos, vm.getCondiciones = getCondiciones, vm.getCoordenadasIngresadas = getCoordenadasIngresadas, vm.getTokenIngresado = getTokenIngresado, vm.getClaveInternetIngresada = getClaveInternetIngresada, vm.getTerceraClaveIngresada = getTerceraClaveIngresada, vm.getMultipass = getMultipass, vm.getMultipasSelected = getMultipasSelected, vm.getRutEmpresaIngresado = getRutEmpresaIngresado, vm.getErrorCajaDesafio = getErrorCajaDesafio, vm.getMsj = getMsj, vm.setDispositivos = setDispositivos, vm.setCondiciones = setCondiciones, vm.setDispositivoAnterior = setDispositivoAnterior, vm.setDispositivoSeleccionado = setDispositivoSeleccionado, vm.limpiarDatosIngresados = limpiarDatosIngresados, vm.setMultipass = setMultipass, vm.setMultipasSelected = setMultipasSelected, vm.setBotonSoftoken = setBotonSoftoken, vm.getBotonSoftoken = getBotonSoftoken, vm.setDataSoftoken = setDataSoftoken, vm.getDataSoftoken = getDataSoftoken, vm.getActionSoftoken = getActionSoftoken, vm.setActionSoftoken = setActionSoftoken, vm.getMostrarAnimacionClaveDinamica = getMostrarAnimacionClaveDinamica, vm.setMostrarAnimacionClaveDinamica = setMostrarAnimacionClaveDinamica, vm.getMostrarAnimacionSofToken = getMostrarAnimacionSofToken, vm.setMostrarAnimacionSofToken = setMostrarAnimacionSofToken, vm.getAnimarBloque = getAnimarBloque, vm.setAnimarBloque = setAnimarBloque, vm.getTieneDigiPass = getTieneDigiPass, vm.getTieneDigiCard = getTieneDigiCard, vm.getDisableSoftToken = getDisableSoftToken, vm.getObjetoMiPass = getObjetoMiPass, vm.setObjetoMiPass = setObjetoMiPass, vm.setDatosTxSoftToken = setDatosTxSoftToken, vm.getDatosTxSoftToken = getDatosTxSoftToken, vm.getFormularioValido = getFormularioValido, vm.setFormularioValido = setFormularioValido, vm.setMostrarCaja = setMostrarCaja, vm.getMostrarCaja = getMostrarCaja, vm.MSJ.ERROR_AL_CARGAR_DISPOSITIVOS = "No fue posible cargar los dispositivos.", vm.MSJ.DEBE_SELECCIONAR_DISPOSITIVO = "Debe seleccionar un dispositivo.", vm.MSJ.DEBE_INGRESAR_TODAS_LAS_COORDENADAS_DIGICARD = "Debe ingresar todas las coordenadas solicitadas de su Digicard.", vm.MSJ.DEBE_INGRESAR_TODOS_LOS_DIGITOS_DIGIPASS = "Debe ingresar todos los dÃ­gitos de su Digipass.", vm.MSJ.DEBE_INGRESAR_CLAVEINTERNET = "Debe ingresar su Clave Internet", vm.MSJ.DEBE_INGRESAR_TERCERACLAVE = "Debe ingresar clave", vm.MSJ.ERROR_AL_VALIDAR_TRANSACCION = "Se produjo un error al validar la trasacciÃ³n.", vm.MSJ.ERROR_SIN_DISPOSITIVOS_HABILITADOS = "Sin dispositivos habilitados.", vm.MSJ.ERROR_FALLA_CONEXION_SOFTOKEN_TITULO = "Reintenta", vm.MSJ.ERROR_FALLA_CONEXION_SOFTOKEN = "el envÃ­o de Mi Pass no ha sido posible, favor reintentar.", vm.MSJ.ERROR_CLAVE_EXPIRADA_SOFTOKEN_TITULO = "Reintenta", vm.MSJ.ERROR_CLAVE_EXPIRADA_SOFTOKEN = "el envÃ­o de Mi Pass no ha sido posible, favor reintentar.", vm.MSJ.ERROR_RECHAZO_MOVIL_SOFTOKEN_TITULO = "RechazÃ³ la OperaciÃ³n en su Celular", vm.MSJ.ERROR_RECHAZO_MOVIL_SOFTOKEN = "Si desea realizar la operaciÃ³n Reintente.", vm.MSJ.ERROR_RECHAZO_CANCELAR_TITULO = "RechazÃ³ la Transferencia", vm.MSJ.ERROR_RECHAZO_CANCELAR = "Si desea realizar la transferencia nuevamente Reintente.", vm.MSJ.REINTENTAR_VALIDACION_SOFTOKEN_TITULO = "Reintenta", vm.MSJ.REINTENTAR_VALIDACION_SOFTOKEN = "el envÃ­o de Mi Pass no ha sido posible, favor reintentar.", vm.MSJ.NUMERO_REINTENTOS_SUPERADO_TITULO = "Ha reintentado sin Ã©xito", vm.MSJ.NUMERO_REINTENTOS_SUPERADO = "Por favor intente con otro dispositivo o intente mÃ¡s tarde.", vm.MSJ.ERROR_RUT_INVALIDO = "El Rut ingresado no es vÃ¡lido.", vm.init()
		}
		angular.module("cajaDesafioModelService", []).service("cajaDesafioModelService_", cajaDesafioModelService)
	}(),
	function() {
		function cajaDesafioRestService($http, URL_API) {
			function cancelarTrxSoftToken(datos) {
				function cajaDefCancel(result) {
					return result
				}
				return $http({
					url: URL_API + "/caja-desafio-rest/soft-token/cancelar",
					dataType: "json",
					method: "POST",
					handleError: !1,
					data: JSON.stringify(datos),
					headers: {
						"Content-Type": "application/json"
					}
				}).then(cajaDefCancel)
			}
			return {
				cancelarTrxSoftToken: cancelarTrxSoftToken
			}
		}
		angular.module("cajaDesafioRestService", []).factory("cajaDesafioRestService_", cajaDesafioRestService), cajaDesafioRestService.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function cajaDesafioService_(cajaDesafioModelService_, $rootScope, DIGIPASS, DIGICARD, CLAVEINTERNET, TERCERACLAVE, RESULTADO_OPERACION_OK, SIN_DISPOSITIVOS_HABILITADOS, TIPO_DIGICARD, TIPO_DIGIPASS, TIPO_CLAVEINTERNET, TIPO_TERCERACLAVE, DISPOSITIVOS_BLOQUEADO, SOFTOKEN, APP_TIPO_PORTAL, APP_CONTEXTO, TIPO_SOFTOKEN, CANT_MILLIS_CONSULTA_SOFTOKEN, $timeout, $q) {
			function init() {
				cajaDesafioModelService_.init(), vm.conDispositivosHabilitados = !1, vm.condiciones = cajaDesafioModelService_.getCondiciones(), vm.dispositivos = cajaDesafioModelService_.getDispositivos(), vm.dispositivoSeleccionado = cajaDesafioModelService_.getDispositivoSeleccionado(), vm.coordenadasIngresadas = cajaDesafioModelService_.getCoordenadasIngresadas(), vm.tokenIngresado = cajaDesafioModelService_.getTokenIngresado(), vm.claveInternetIngresada = cajaDesafioModelService_.getClaveInternetIngresada(), vm.terceraClaveIngresada = cajaDesafioModelService_.getTerceraClaveIngresada(), vm.multipassModel = cajaDesafioModelService_.getMultipass(), vm.multipasSelected = cajaDesafioModelService_.getMultipasSelected(), vm.errorCajaDesafio = cajaDesafioModelService_.getErrorCajaDesafio(), vm.MSJ = cajaDesafioModelService_.getMsj(), vm.enterPressed = !1, vm.rutEmpresaIngresado = cajaDesafioModelService_.getRutEmpresaIngresado(), vm.dataSofToken = cajaDesafioModelService_.getDataSoftoken(), vm.action = cajaDesafioModelService_.getActionSoftoken(), vm.bloqueAnimacionSofToken = cajaDesafioModelService_.getMostrarAnimacionSofToken(), vm.bloqueAnimacionClaveDinamica = cajaDesafioModelService_.getMostrarAnimacionClaveDinamica(), vm.animacionSoftokenclaveDinamica = cajaDesafioModelService_.getAnimarBloque(), vm.disableSoftToken = cajaDesafioModelService_.getDisableSoftToken(), vm.objetoMiPass = cajaDesafioModelService_.getObjetoMiPass(), vm.formularioValido = cajaDesafioModelService_.getFormularioValido(), vm.mostrarCaja = cajaDesafioModelService_.getMostrarCaja()
			}

			function getEnterPressed() {
				return vm.enterPressed
			}

			function setEnterPressed(value) {
				vm.enterPressed = value
			}

			function processDevices(data, reload, softoken) {
				if (null === data || angular.isUndefined(data) || null === data.configuracionCajaDesafio || angular.isUndefined(data.configuracionCajaDesafio)) return mostrarMensajeErrorGeneral(vm.MSJ.ERROR_AL_CARGAR_DISPOSITIVOS), !1;
				var configuracionCajaDesafio = data.configuracionCajaDesafio;
				if (configuracionCajaDesafio.resultadoOperacion.codigo === SIN_DISPOSITIVOS_HABILITADOS) return vm.conDispositivosHabilitados = !1, mostrarMensajeErrorGeneral(vm.MSJ.ERROR_SIN_DISPOSITIVOS_HABILITADOS), !1;
				if (configuracionCajaDesafio.resultadoOperacion.codigo === DISPOSITIVOS_BLOQUEADO) return vm.conDispositivosHabilitados = !1, mostrarMensajeErrorGeneral(vm.MSJ.ERROR_SIN_DISPOSITIVOS_HABILITADOS), !1;
				if (configuracionCajaDesafio.resultadoOperacion.codigo === RESULTADO_OPERACION_OK) {
					var cantidadDispositivos = 0,
						cantidadSoftoken = 0;
					if (vm.tieneDigiPass = cajaDesafioModelService_.getTieneDigiPass(), vm.tieneDigiCard = cajaDesafioModelService_.getTieneDigiCard(), angular.forEach(configuracionCajaDesafio.dispositivos, function(dispositivo) {
							isFullPass(dispositivo) || (reload ? angular.forEach(vm.dispositivos, function(miDispositivo) {
								miDispositivo.numeroSerie === dispositivo.numeroSerie && (miDispositivo = dispositivo)
							}) : (dispositivo.tipo === TIPO_SOFTOKEN ? cantidadSoftoken++ : dispositivo.tipo === TIPO_DIGIPASS && dispositivo.soportaFirma === !1 ? vm.tieneDigiPass.valor = !0 : dispositivo.tipo === TIPO_DIGICARD && (vm.tieneDigiCard.valor = !0), vm.dispositivos.push({
								numeroSerie: dispositivo.numeroSerie,
								estado: dispositivo.estado,
								tipo: dispositivo.tipo,
								soportaFirma: dispositivo.soportaFirma,
								coordenadas: dispositivo.coordenadas,
								isFocus: !1
							})), cantidadDispositivos++)
						}), 0 === cantidadDispositivos || (angular.isUndefined(softoken) || !softoken) && cantidadDispositivos - cantidadSoftoken === 0) vm.conDispositivosHabilitados = !1, mostrarMensajeErrorGeneral(vm.MSJ.ERROR_SIN_DISPOSITIVOS_HABILITADOS);
					else if (1 === cantidadDispositivos) {
						vm.conDispositivosHabilitados = !0, vm.condiciones.mostrarRadios = !1;
						var tipo;
						vm.dispositivos[0].tipo === TIPO_DIGIPASS && vm.dispositivos[0].soportaFirma === !1 ? tipo = DIGIPASS : vm.dispositivos[0].tipo === TIPO_DIGICARD ? tipo = DIGICARD : vm.dispositivos[0].tipo === TIPO_CLAVEINTERNET ? tipo = CLAVEINTERNET : vm.dispositivos[0].tipo === TIPO_TERCERACLAVE ? tipo = TERCERACLAVE : vm.dispositivos[0].tipo === TIPO_SOFTOKEN && (tipo = SOFTOKEN), vm.dispositivoSeleccionado.llave = tipo + ";" + vm.dispositivos[0].numeroSerie, vm.dispositivoSeleccionado.isInputFocus = [!1, !1, !1, !1, !1, !1]
					} else if (vm.conDispositivosHabilitados = !0, 2 > cantidadDispositivos - cantidadSoftoken) {
						if (vm.condiciones.mostrarRadios = !1, angular.isUndefined(softoken) || !softoken) {
							var tipo;
							angular.forEach(vm.dispositivos, function(dispositivo) {
								dispositivo.tipo === TIPO_DIGIPASS && dispositivo.soportaFirma === !1 ? tipo = DIGIPASS : dispositivo.tipo === TIPO_DIGICARD ? tipo = DIGICARD : dispositivo.tipo === TIPO_CLAVEINTERNET ? tipo = CLAVEINTERNET : dispositivo.tipo === TIPO_TERCERACLAVE ? tipo = TERCERACLAVE : dispositivo.tipo === TIPO_SOFTOKEN && (tipo = SOFTOKEN), "9" !== dispositivo.tipo && (vm.dispositivoSeleccionado.llave = tipo + ";" + dispositivo.numeroSerie, vm.dispositivoSeleccionado.isInputFocus = [!1, !1, !1, !1, !1, !1])
							})
						}
					} else vm.condiciones.mostrarRadios = !0;
					return cajaDesafioModelService_.setDispositivos(vm.dispositivos), cajaDesafioModelService_.setDispositivoSeleccionado(vm.dispositivoSeleccionado), cajaDesafioModelService_.setCondiciones(vm.condiciones), $rootScope.$broadcast("caja-desafio-cargada"), reload || limpiarMensajesError(), !0
				}
				return mostrarMensajeErrorGeneral(configuracionCajaDesafio.resultadoOperacion.glosa), !1
			}

			function isFullPass(dispositivo) {
				return dispositivo.tipo === TIPO_DIGIPASS && dispositivo.soportaFirma === !0 ? !0 : !1
			}

			function isCajaDesafioValida() {
				if (limpiarMensajesError(), null === vm.dispositivoSeleccionado || angular.isUndefined(vm.dispositivoSeleccionado) || null === vm.dispositivoSeleccionado.llave || angular.isUndefined(vm.dispositivoSeleccionado.llave)) return mostrarMensajeValidacion(vm.MSJ.DEBE_SELECCIONAR_DISPOSITIVO), !1;
				var llave = vm.dispositivoSeleccionado.llave,
					tipo = llave.split(";")[0];
				if (vm.coordenadasIngresadas = cajaDesafioModelService_.getCoordenadasIngresadas(), vm.tokenIngresado = cajaDesafioModelService_.getTokenIngresado(), vm.claveInternetIngresada = cajaDesafioModelService_.getClaveInternetIngresada(), vm.terceraClaveIngresada = cajaDesafioModelService_.getTerceraClaveIngresada(), vm.rutEmpresaIngresado = cajaDesafioModelService_.getRutEmpresaIngresado(), tipo === DIGICARD) {
					var coordenada1 = vm.coordenadasIngresadas.coordenada1,
						coordenada2 = vm.coordenadasIngresadas.coordenada2,
						coordenada3 = vm.coordenadasIngresadas.coordenada3;
					return null === coordenada1 || angular.isUndefined(coordenada1) || 2 !== coordenada1.length || null === coordenada2 || angular.isUndefined(coordenada2) || 2 !== coordenada2.length || null === coordenada3 || angular.isUndefined(coordenada3) || 2 !== coordenada3.length ? (mostrarMensajeValidacionDigicard(vm.MSJ.DEBE_INGRESAR_TODAS_LAS_COORDENADAS_DIGICARD), !1) : !0
				}
				if (tipo === DIGIPASS) {
					var token1 = vm.tokenIngresado.token1,
						token2 = vm.tokenIngresado.token2,
						token3 = vm.tokenIngresado.token3,
						token4 = vm.tokenIngresado.token4,
						token5 = vm.tokenIngresado.token5,
						token6 = vm.tokenIngresado.token6,
						rutEmpresa = vm.rutEmpresaIngresado.valor;
					return null === token1 || angular.isUndefined(token1) || 1 !== token1.length || null === token2 || angular.isUndefined(token2) || 1 !== token2.length || null === token3 || angular.isUndefined(token3) || 1 !== token3.length || null === token4 || angular.isUndefined(token4) || 1 !== token4.length || null === token5 || angular.isUndefined(token5) || 1 !== token5.length || null === token6 || angular.isUndefined(token6) || 1 !== token6.length ? (mostrarMensajeValidacionDigipass(vm.MSJ.DEBE_INGRESAR_TODOS_LOS_DIGITOS_DIGIPASS), !esVacmanPublicoEmpresa(llave.split(";")[1]) || null !== rutEmpresa && !angular.isUndefined(rutEmpresa) && validaRut(rutEmpresa) || mostrarMensajesValidacionRutEmpresa(vm.MSJ.ERROR_RUT_INVALIDO), !1) : !esVacmanPublicoEmpresa(llave.split(";")[1]) || null !== rutEmpresa && !angular.isUndefined(rutEmpresa) && validaRut(rutEmpresa) ? !0 : (mostrarMensajesValidacionRutEmpresa(vm.MSJ.ERROR_RUT_INVALIDO), !1)
				}
				if (tipo === CLAVEINTERNET) {
					var clave = vm.claveInternetIngresada.valor;
					return null === clave || angular.isUndefined(clave) || clave.length < 1 ? (mostrarMensajeValidacionClaveInternet(vm.MSJ.DEBE_INGRESAR_CLAVEINTERNET), !1) : !0
				}
				if (tipo === TERCERACLAVE) {
					var clave = vm.terceraClaveIngresada.valor;
					return null === clave || angular.isUndefined(clave) || clave.length < 1 ? (mostrarMensajeValidacionTerceraClave(vm.MSJ.DEBE_INGRESAR_TERCERACLAVE), !1) : !0
				}
				return tipo === SOFTOKEN ? null === vm.multipassModel || angular.isUndefined(vm.multipassModel) ? !1 : !0 : !1
			}

			function tieneDispositivosHabilitados() {
				return vm.conDispositivosHabilitados
			}

			function getAuthData() {
				var authData = {};
				vm.coordenadasIngresadas = cajaDesafioModelService_.getCoordenadasIngresadas(), vm.tokenIngresado = cajaDesafioModelService_.getTokenIngresado(), vm.claveInternetIngresada = cajaDesafioModelService_.getClaveInternetIngresada(), vm.terceraClaveIngresada = cajaDesafioModelService_.getTerceraClaveIngresada(), vm.rutEmpresaIngresado = cajaDesafioModelService_.getRutEmpresaIngresado(), vm.dataSofToken = cajaDesafioModelService_.getDataSoftoken(), vm.objetoMiPass = cajaDesafioModelService_.getObjetoMiPass();
				var llave = cajaDesafioModelService_.getDispositivoSeleccionado().llave;
				return void 0 !== llave && (authData.tipoDispositivo = llave.split(";")[0], authData.tipoDispositivo === DIGICARD ? (authData.tipoDispositivo = 1, authData.coordenadas = [], authData.coordenadas.push(vm.coordenadasIngresadas.coordenada1), authData.coordenadas.push(vm.coordenadasIngresadas.coordenada2), authData.coordenadas.push(vm.coordenadasIngresadas.coordenada3)) : authData.tipoDispositivo === DIGIPASS ? (authData.tipoDispositivo = 8, authData.token = vm.tokenIngresado.token1 + vm.tokenIngresado.token2 + vm.tokenIngresado.token3 + vm.tokenIngresado.token4 + vm.tokenIngresado.token5 + vm.tokenIngresado.token6, esVacmanPublicoEmpresa(llave.split(";")[1]) && (authData.empresa = formatRut(vm.rutEmpresaIngresado.valor))) : authData.tipoDispositivo === CLAVEINTERNET ? (authData.tipoDispositivo = "CI", authData.clave = vm.claveInternetIngresada.valor) : authData.tipoDispositivo === TERCERACLAVE ? (authData.tipoDispositivo = 5, authData.terceraClave = vm.terceraClaveIngresada.valor, authData.dispositivoOriginal = cajaDesafioModelService_.getDispositivoAnterior().dipositivoAnterior) : authData.tipoDispositivo === SOFTOKEN && (authData.tipoDispositivo = 9, angular.isUndefined(vm.dataSofToken) || null === vm.dataSofToken || (authData.dataST = vm.dataSofToken), angular.isUndefined(vm.objetoMiPass) || null === vm.objetoMiPass || angular.isUndefined(vm.objetoMiPass.tituloMiPass) || null === vm.objetoMiPass.tituloMiPass || angular.isUndefined(vm.objetoMiPass.operacionMiPass) || null === vm.objetoMiPass.operacionMiPass || (authData.miPass = {}, authData.miPass.titulo = vm.objetoMiPass.tituloMiPass, authData.miPass.operacion = vm.objetoMiPass.operacionMiPass, authData.miPass.datosTx = this.getDatosTxSoftToken()))), authData
			}

			function formatRut(rutEmpresa) {
				if (validaRut(rutEmpresa)) {
					var rutLimpio = cleanRut(rutEmpresa);
					return rutLimpio.substr(0, rutLimpio.length - 1).concat("-", rutLimpio.substr(rutLimpio.length - 1))
				}
				return rutEmpresa
			}

			function esVacmanPublicoEmpresa(numeroSerie) {
				return "XXXX" === numeroSerie && "Empresas" === APP_CONTEXTO && "Publico" === APP_TIPO_PORTAL
			}

			function processError(rejection) {
				if (vm.mostrarCaja.valor = !0, limpiarMensajesError(), null === rejection || angular.isUndefined(rejection) || null === rejection.data || angular.isUndefined(rejection.data) || null === rejection.data.errorCajaDesafio || angular.isUndefined(rejection.data.errorCajaDesafio)) return limpiarDataSoftoken(), vm.animacionSoftokenclaveDinamica.valor = !1, cajaDesafioModelService_.setFormularioValido(!0), !1;
				var llave = cajaDesafioModelService_.getDispositivoSeleccionado().llave,
					tipo = llave.split(";")[0];
				if (limpiarCajaDesafio(), 401 !== rejection.status) return 500 === rejection.status ? (tipo === DIGICARD ? mostrarMensajeErrorDigicard(vm.MSJ.ERROR_AL_VALIDAR_TRANSACCION) : tipo === DIGIPASS ? mostrarMensajeErrorDigipass(vm.MSJ.ERROR_AL_VALIDAR_TRANSACCION) : tipo === CLAVEINTERNET ? mostrarMensajeErrorClaveInternet(vm.MSJ.ERROR_AL_VALIDAR_TRANSACCION) : tipo === TERCERACLAVE ? mostrarMensajeErrorTerceraClave(vm.MSJ.ERROR_AL_VALIDAR_TRANSACCION) : tipo === SOFTOKEN ? (limpiarDataSoftoken(), mostrarMensajeErrorSoftoken(vm.MSJ.ERROR_FALLA_CONEXION_SOFTOKEN, vm.MSJ.ERROR_FALLA_CONEXION_SOFTOKEN_TITULO), vm.animacionSoftokenclaveDinamica.valor = !1) : mostrarMensajeErrorGeneral(vm.MSJ.ERROR_AL_VALIDAR_TRANSACCION), cajaDesafioModelService_.setFormularioValido(!0), !0) : (limpiarDataSoftoken(), vm.animacionSoftokenclaveDinamica.valor = !1, cajaDesafioModelService_.setFormularioValido(!0), !1);
				if ("CDSTF01" == rejection.data.errorCajaDesafio.codigo) vm.setMostrarCaja(!1);
				else if ("99" == rejection.data.errorCajaDesafio.codigo) {
					var terceraclave = {},
						data = {},
						configuracionCajaDesafio = {},
						resultadoOperacion = {};
					resultadoOperacion.codigo = RESULTADO_OPERACION_OK, configuracionCajaDesafio.resultadoOperacion = resultadoOperacion, data.configuracionCajaDesafio = configuracionCajaDesafio, terceraclave.numeroSerie = "0", terceraclave.estado = "", terceraclave.tipo = "5", terceraclave.soportaFirma = !1;
					var disp = [];
					disp.push(terceraclave), init(), data.configuracionCajaDesafio.dispositivos = disp;
					var temp = {
						dipositivoAnterior: parseInt(rejection.data.errorCajaDesafio.glosa, 0)
					};
					cajaDesafioModelService_.setDispositivoAnterior(temp), processDevices(data, !1)
				} else if ("ST00" == rejection.data.errorCajaDesafio.codigo) $timeout(function() {
					cajaDesafioModelService_.setFormularioValido(!1), vm.animacionSoftokenclaveDinamica.valor = !0, cajaDesafioModelService_.setDataSoftoken(rejection.data.errorCajaDesafio.glosa);
					var softTokenValido = vm.action.funcion();
					angular.isUndefined(softTokenValido) || softTokenValido || (mostrarMensajeErrorSoftoken(vm.MSJ.ERROR_CLAVE_EXPIRADA_SOFTOKEN, vm.MSJ.ERROR_CLAVE_EXPIRADA_SOFTOKEN_TITULO), limpiarDataSoftoken(), vm.animacionSoftokenclaveDinamica.valor = !1)
				}, 0);
				else if ("ST01" === rejection.data.errorCajaDesafio.codigo || "ST03" === rejection.data.errorCajaDesafio.codigo || "ST05" === rejection.data.errorCajaDesafio.codigo) cajaDesafioModelService_.setFormularioValido(!0), "ST01" === rejection.data.errorCajaDesafio.codigo ? mostrarMensajeErrorSoftoken(vm.MSJ.ERROR_CLAVE_EXPIRADA_SOFTOKEN, vm.MSJ.ERROR_CLAVE_EXPIRADA_SOFTOKEN_TITULO) : "ST03" === rejection.data.errorCajaDesafio.codigo ? mostrarMensajeErrorSoftoken(vm.MSJ.ERROR_RECHAZO_MOVIL_SOFTOKEN, vm.MSJ.ERROR_RECHAZO_MOVIL_SOFTOKEN_TITULO) : mostrarMensajeErrorSoftoken(vm.MSJ.ERROR_RECHAZO_CANCELAR, vm.MSJ.ERROR_RECHAZO_CANCELAR_TITULO), limpiarDataSoftoken(), vm.animacionSoftokenclaveDinamica.valor = !1;
				else if ("ST02" == rejection.data.errorCajaDesafio.codigo) vm.animacionSoftokenclaveDinamica.valor = !0, cajaDesafioModelService_.setFormularioValido(!1), $timeout(function() {
					cajaDesafioModelService_.setDataSoftoken(rejection.data.errorCajaDesafio.glosa);
					var softTokenValido = vm.action.funcion();
					angular.isUndefined(softTokenValido) || softTokenValido || (mostrarMensajeErrorSoftoken(vm.MSJ.ERROR_CLAVE_EXPIRADA_SOFTOKEN, vm.MSJ.ERROR_CLAVE_EXPIRADA_SOFTOKEN_TITULO), limpiarDataSoftoken(), vm.animacionSoftokenclaveDinamica.valor = !1, cajaDesafioModelService_.setFormularioValido(!0))
				}, parseInt(CANT_MILLIS_CONSULTA_SOFTOKEN, 10));
				else {
					if ("ST04" != rejection.data.errorCajaDesafio.codigo) return tipo === DIGICARD ? mostrarMensajeErrorDigicard(rejection.data.errorCajaDesafio.glosa) : tipo === DIGIPASS ? mostrarMensajeErrorDigipass(rejection.data.errorCajaDesafio.glosa) : tipo === CLAVEINTERNET ? mostrarMensajeErrorClaveInternet(rejection.data.errorCajaDesafio.glosa) : tipo === TERCERACLAVE ? mostrarMensajeErrorTerceraClave(rejection.data.errorCajaDesafio.glosa) : tipo === SOFTOKEN ? (mostrarMensajeErrorSoftoken(vm.MSJ.ERROR_FALLA_CONEXION_SOFTOKEN, vm.MSJ.ERROR_FALLA_CONEXION_SOFTOKEN_TITULO), limpiarDataSoftoken(), vm.animacionSoftokenclaveDinamica.valor = !1) : mostrarMensajeErrorGeneral(rejection.data.errorCajaDesafio.glosa), !0;
					mostrarMensajeErrorSoftoken(vm.MSJ.REINTENTAR_VALIDACION_SOFTOKEN, vm.MSJ.REINTENTAR_VALIDACION_SOFTOKEN_TITULO), cajaDesafioModelService_.setDataSoftoken(), vm.animacionSoftokenclaveDinamica.valor = !1, vm.multipasSelected.value = !1, vm.disableSoftToken.valor = !1, cajaDesafioModelService_.setFormularioValido(!0)
				}
			}

			function mostrarMensajeErrorGeneral(mensaje) {
				vm.errorCajaDesafio.textoErrorGeneral = mensaje, vm.errorCajaDesafio.mostrarErrorGeneral = !0
			}

			function mostrarMensajeValidacion(mensaje) {
				vm.errorCajaDesafio.textoErrorValidacion = mensaje, vm.errorCajaDesafio.mostrarErrorValidacion = !0
			}

			function mostrarMensajeErrorDigicard(mensaje) {
				vm.errorCajaDesafio.textoErrorDigicard = mensaje, vm.errorCajaDesafio.mostrarErrorDigicard = !0
			}

			function mostrarMensajeValidacionDigicard(mensaje) {
				vm.errorCajaDesafio.textoErrorValidacionDigicard = mensaje, vm.errorCajaDesafio.mostrarErrorValidacionDigicard = !0
			}

			function mostrarMensajeErrorDigipass(mensaje) {
				vm.errorCajaDesafio.textoErrorDigipass = mensaje, vm.errorCajaDesafio.mostrarErrorDigipass = !0
			}

			function mostrarMensajeValidacionDigipass(mensaje) {
				vm.errorCajaDesafio.textoErrorValidacionDigipass = mensaje, vm.errorCajaDesafio.mostrarErrorValidacionDigipass = !0
			}

			function mostrarMensajeErrorClaveInternet(mensaje) {
				vm.errorCajaDesafio.textoErrorClaveInternet = mensaje, vm.errorCajaDesafio.mostrarErrorClaveInternet = !0
			}

			function mostrarMensajeValidacionClaveInternet(mensaje) {
				vm.errorCajaDesafio.textoErrorValidacionClaveInternet = mensaje, vm.errorCajaDesafio.mostrarErrorValidacionClaveInternet = !0
			}

			function mostrarMensajeErrorTerceraClave(mensaje) {
				vm.errorCajaDesafio.textoErrorTerceraClave = mensaje, vm.errorCajaDesafio.mostrarErrorTerceraClave = !0
			}

			function mostrarMensajeValidacionTerceraClave(mensaje) {
				vm.errorCajaDesafio.textoErrorValidacionTerceraClave = mensaje, vm.errorCajaDesafio.mostrarErrorValidacionTerceraClave = !0
			}

			function mostrarMensajeErrorSoftoken(mensaje, titulo) {
				vm.multipasSelected.value = !1, vm.disableSoftToken.valor = !1, vm.errorCajaDesafio.tituloErrorValidacionSofToken = titulo, vm.errorCajaDesafio.textoErrorValidacionSofToken = mensaje, vm.errorCajaDesafio.mostrarErrorValidacionSofToken = !0
			}

			function mostrarMensajesValidacionRutEmpresa(mensaje) {
				vm.errorCajaDesafio.textoErrorValidacionRutEmpresa = mensaje, vm.errorCajaDesafio.mostrarErrorValidacionRutEmpresa = !0
			}

			function limpiarMensajesError() {
				vm.errorCajaDesafio.textoErrorGeneral = "", vm.errorCajaDesafio.mostrarErrorGeneral = !1, vm.errorCajaDesafio.textoErrorDigicard = "", vm.errorCajaDesafio.mostrarErrorDigicard = !1, vm.errorCajaDesafio.textoErrorDigipass = "", vm.errorCajaDesafio.mostrarErrorDigipass = !1, vm.errorCajaDesafio.textoErrorClaveInternet = "", vm.errorCajaDesafio.mostrarErrorClaveInternet = !1, vm.errorCajaDesafio.textoErrorValidacion = "", vm.errorCajaDesafio.mostrarErrorValidacion = !1, vm.errorCajaDesafio.textoErrorValidacionDigicard = "", vm.errorCajaDesafio.mostrarErrorValidacionDigicard = !1, vm.errorCajaDesafio.textoErrorValidacionDigipass = "", vm.errorCajaDesafio.mostrarErrorValidacionDigipass = !1, vm.errorCajaDesafio.textoErrorValidacionClaveInternet = "", vm.errorCajaDesafio.mostrarErrorValidacionClaveInternet = !1, vm.errorCajaDesafio.textoErrorValidacionTerceraClave = "", vm.errorCajaDesafio.mostrarErrorValidacionTerceraClave = !1, vm.errorCajaDesafio.textoErrorValidacionSofToken = "", vm.errorCajaDesafio.mostrarErrorValidacionSofToken = !1, vm.errorCajaDesafio.textoErrorValidacionRutEmpresa = "", vm.errorCajaDesafio.mostrarErrorValidacionRutEmpresa = !1
			}

			function limpiarCajaDesafio() {
				limpiarDataDigicard(), limpiarDataDigipass(), limpiarDataClaveInternet(), limpiarDataTerceraClave()
			}

			function limpiarDataSoftoken() {
				vm.multipasSelected.value = !1, vm.disableSoftToken.valor = !1, cajaDesafioModelService_.setDataSoftoken()
			}

			function deseleccionarDispositivos() {
				vm.dispositivoSeleccionado.llave = ""
			}

			function limpiarDataDigicard() {
				vm.coordenadasIngresadas.coordenada1 = "", vm.coordenadasIngresadas.coordenada2 = "", vm.coordenadasIngresadas.coordenada3 = ""
			}

			function limpiarDataDigipass() {
				vm.tokenIngresado.token1 = "", vm.tokenIngresado.token2 = "", vm.tokenIngresado.token3 = "", vm.tokenIngresado.token4 = "", vm.tokenIngresado.token5 = "", vm.tokenIngresado.token6 = "", vm.rutEmpresaIngresado = ""
			}

			function limpiarDataClaveInternet() {
				vm.claveInternetIngresada.valor = ""
			}

			function limpiarDataTerceraClave() {
				vm.terceraClaveIngresada.valor = ""
			}

			function getDispositivos() {
				return vm.dispositivos
			}

			function setDispositivos(dispositivos) {
				cajaDesafioModelService_.setDispositivos(dispositivos)
			}

			function getDispositivoSeleccionado() {
				return vm.dispositivoSeleccionado
			}

			function setDispositivoSeleccionado(dispositivoSeleccionado) {
				cajaDesafioModelService_.setDispositivoSeleccionado(dispositivoSeleccionado)
			}

			function validaRut(rut) {
				if (rut = cleanRut(rut), "string" != typeof rut) return !1;
				for (var t = parseInt(rut.slice(0, -1), 10), m = 0, s = 1; t > 0;) s = (s + t % 10 * (9 - m++ % 6)) % 11, t = Math.floor(t / 10);
				var v = s > 0 ? s - 1 + "" : "K";
				return v === rut.slice(-1)
			}

			function cleanRut(rut) {
				return "string" == typeof rut ? rut.replace(/[^0-9kK]+/g, "").toUpperCase() : ""
			}

			function setDatosTxSoftToken(arregloDatosTx) {
				cajaDesafioModelService_.setDatosTxSoftToken(arregloDatosTx)
			}

			function getDatosTxSoftToken() {
				return cajaDesafioModelService_.getDatosTxSoftToken()
			}

			function habilitaFormulario() {
				return vm.formularioValido.valor
			}

			function setMostrarCaja(aux) {
				vm.mostrarCaja.valor = aux, vm.myDefer.notify(vm.mostrarCaja.valor)
			}

			function getMostrarCaja() {
				return vm.mostrarCaja
			}

			function observeMostrarCaja() {
				return vm.myDefer.promise
			}
			var vm = this;
			vm.init = init, vm.processDevices = processDevices, vm.isCajaDesafioValida = isCajaDesafioValida, vm.tieneDispositivosHabilitados = tieneDispositivosHabilitados, vm.getAuthData = getAuthData, vm.processError = processError, vm.limpiarMensajesError = limpiarMensajesError, vm.limpiarCajaDesafio = limpiarCajaDesafio, vm.deseleccionarDispositivos = deseleccionarDispositivos, vm.getDispositivos = getDispositivos, vm.setDispositivos = setDispositivos, vm.getDispositivoSeleccionado = getDispositivoSeleccionado, vm.setDispositivoSeleccionado = setDispositivoSeleccionado, vm.getEnterPressed = getEnterPressed, vm.setEnterPressed = setEnterPressed, vm.validaRut = validaRut, vm.cleanRut = cleanRut, vm.setDatosTxSoftToken = setDatosTxSoftToken, vm.getDatosTxSoftToken = getDatosTxSoftToken, vm.habilitaFormulario = habilitaFormulario, vm.setMostrarCaja = setMostrarCaja, vm.getMostrarCaja = getMostrarCaja, vm.observeMostrarCaja = observeMostrarCaja, vm.myDefer = $q.defer(), vm.init()
		}
		angular.module("cajaDesafioService", []).service("cajaDesafioService_", cajaDesafioService_)
	}(),
	function() {
		angular.module("WebBancoChile.cajaDesafio").constant("RESULTADO_OPERACION_OK", "CAJDEF-0000").constant("SIN_DISPOSITIVOS_HABILITADOS", "CAJDEF-0101").constant("DISPOSITIVOS_BLOQUEADO", "CAJDEF-0051").constant("DIGIPASS", "DIGIPASS").constant("DIGICARD", "DIGICARD").constant("TERCERACLAVE", "TERCERACLAVE").constant("CLAVEINTERNET", "CLAVEINTERNET").constant("SOFTOKEN", "SOFTOKEN").constant("TIPO_DIGIPASS", "8").constant("TIPO_DIGICARD", "1").constant("TIPO_TERCERACLAVE", "5").constant("TIPO_CLAVEINTERNET", "CI").constant("TIPO_SOFTOKEN", "9").constant("CANT_MILLIS_CONSULTA_SOFTOKEN", "5000")
	}(),
	function() {
		function cambioClaveConfig($stateProvider) {
			$stateProvider.state("cambiar-clave", {
				parent: "root",
				url: "/cambiar-clave",
				views: {
					"main@": {
						controller: "CambiarClaveCtrl",
						controllerAs: "vm"
					}
				},
				data: {
					pageTitle: "Cambiar Clave"
				}
			})
		}
		angular.module("WebBancoChile.login.cambioClave").config(cambioClaveConfig)
	}(),
	function() {
		"use strict";

		function CambiarClaveCtrl($state, nonceChgPwdFactory) {
			function init() {
				var nonce = nonceChgPwdFactory.get();
				null != nonce ? $state.go("cambio-clave") : $state.go("error500")
			}
			init()
		}
		angular.module("WebBancoChile.login.cambioClave").controller("CambiarClaveCtrl", CambiarClaveCtrl), CambiarClaveCtrl.$inject = ["$state", "nonceChgPwdFactory"]
	}(),
	function() {
		function cambioClaveSuccessConfig($stateProvider) {
			$stateProvider.state("cambio-clave-success", {
				parent: "root",
				url: "/cambio-clave-success",
				views: {
					"main@": {
						controller: "CambioClaveSuccessCtrl",
						controllerAs: "vm",
						templateUrl: "cambio-clave-publico-oci/src/bch-cambio-clave-publico-success/bch-cambio-clave-success.tpl.html"
					}
				},
				params: {
					continueUrl: null
				},
				data: {
					pageTitle: "Cambio Clave"
				}
			})
		}
		angular.module("WebBancoChile.login.cambioClave").config(cambioClaveSuccessConfig)
	}(),
	function() {
		"use strict";

		function CambioClaveSuccessCtrl($window, $stateParams, $state) {
			function init() {
				vm.submit = submit, null === $stateParams.continueUrl && $state.go("error500")
			}

			function submit() {
				$window.location.href = $stateParams.continueUrl
			}
			var vm = this;
			init()
		}
		angular.module("WebBancoChile.login.cambioClave").controller("CambioClaveSuccessCtrl", CambioClaveSuccessCtrl), CambioClaveSuccessCtrl.$inject = ["$window", "$stateParams", "$state"]
	}(),
	function() {
		function cambioClaveConfig($stateProvider) {
			$stateProvider.state("cambio-clave", {
				parent: "root",
				url: "/cambio-clave",
				views: {
					"main@": {
						controller: "CambioClaveCtrl",
						controllerAs: "vm",
						templateUrl: "cambio-clave-publico-oci/src/bch-cambio-clave-publico/bch-cambio-clave.tpl.html"
					}
				},
				data: {
					pageTitle: "Cambio Clave"
				}
			})
		}
		angular.module("WebBancoChile.login.cambioClave").config(cambioClaveConfig)
	}(),
	function() {
		"use strict";

		function CambioClaveCtrl($state, $animate, $scope, $document, $window, catalogoMensajesFactory, politicasSeguridadService_, cambioClaveDataService, nonceChgPwdFactory, cambioClaveSrvFactory) {
			function init() {
				vm.nonce = nonceChgPwdFactory.get(), vm.mensajeError500 = "", vm.mayusculaActivadaMessage = "", catalogoMensajesFactory.obtener("501198").then(setMensajeExitoEnrolar), catalogoMensajesFactory.obtener("501198").then(setMensajeError500), catalogoMensajesFactory.obtener("501011").then(setMensajeErrorMayuscula), vm.submit = submit, vm.primerPaso = {}, vm.primerPaso.oldUserPswd = "", vm.primerPaso.newPswd = "", vm.primerPaso.confirmNewPswd = "", vm.primerPaso.focusFolio = !0, vm.primerPaso.focusPassword = !1, vm.primerPaso.focusActualPassword = !1, vm.changeErrorExist = changeErrorExist, vm.showChangeError = showChangeError, vm.changeErrorExistParam = !1, vm.showChangeError = "", vm.sendingPost = !1, vm.changeErrorExistParam = changeErrorExist(), vm.showChangeErrorParam = showChangeError()
			}

			function submit() {
				var data = {
					oldPassword: formateaPassword(vm.primerPaso.oldPswd),
					newPassword: vm.primerPaso.newPswd,
					confirmPassword: vm.primerPaso.confirmNewPswd,
					nonce: vm.nonce
				};
				vm.sendingPost = !0, cambioClaveSrvFactory.post(data).then(function(response) {
					response.data.success ? (vm.sendingPost = !1, vm.error = !1, vm.primerPaso.ladda = !1, vm.errorMensaje = "", $state.go("cambio-clave-success", {
						continueUrl: response.data.nextUrl
					})) : (vm.error = !0, vm.primerPaso.ladda = !1, vm.errorMensaje = "Error inesperado, intente mÃ¡s adelante")
				}, function(responseErr) {
					vm.sendingPost = !1, vm.primerPaso.ladda = !1, vm.error = !0, vm.errorMensaje = responseErr.data.message
				})
			}

			function setMensajeExitoEnrolar(result) {
				vm.mensajeExitoEnrolar = "Estimado Cliente: Tu clave ha sido generada exitosamente.  Para ingresar al portal presiona el botÃ³n continuar."
			}

			function setMensajeError500(result) {
				vm.mensajeError500 = result.texto
			}

			function setMensajeErrorMayuscula(result) {
				vm.mayusculaActivadaMessage = result.texto
			}

			function getCookie() {
				for (var name = "ctx=", ca = document.cookie.split(";"), i = 0; i < ca.length; i++) {
					for (var c = ca[i];
						" " == c.charAt(0);) c = c.substring(1);
					if (0 == c.indexOf(name)) return c.substring(name.length, c.length)
				}
				return "false"
			}

			function addInvalidClasses(id) {
				var element = $document[0].getElementById(id);
				$animate.addClass(element, "ng-invalid"), $animate.addClass(element, "ng-invalid" + id), $animate.addClass(element, "ng-invalid-validator"), $animate.addClass(element, "ng-dirty"), $animate.addClass(element, "ng-touched"), $animate.addClass(element, "ng-valid-parse"), $animate.removeClass(element, "ng-pristine")
			}

			function formateaPassword(password) {
				var nvaPassword = "";
				if (password.length < 8)
					for (var cantCeros = 8 - password.length, i = 0; cantCeros > i; i++) nvaPassword += "0";
				return nvaPassword + password
			}

			function changeErrorExist() {
				return cambioClaveDataService.getChangeError() ? !0 : !1
			}

			function showChangeError() {
				return 1 == cambioClaveDataService.getChangeError() ? "La clave actual ingresada es incorrecta o la nueva clave no puede ser una de las 4 anteriores" : ""
			}
			var vm = this;
			init(), vm.cancelar = function() {
				var path = "/empresa";
				"persona" == getCookie() && (path = "/persona"), nonceChgPwdFactory.remove(), $window.location.href = path
			}, vm.primerPaso.folioValidatorInput = function(folio) {
				if ($("#changeErrorMessage").css("display", "none"), $scope.postForm.oldUserPswd.$dirty) {
					if (null === folio || angular.isUndefined(folio) || 0 === folio.length) return catalogoMensajesFactory.obtener(501009).then(function(msj) {
						vm.primerPaso.folioInvalidoMensaje = msj.texto
					}), vm.primerPaso.mostrarMsje.oldUserPswd = !0, addInvalidClasses("oldUserPswd"), !1;
					if (!politicasSeguridadService_.isPasswordValido(folio)) return catalogoMensajesFactory.obtener(501015).then(function(msj) {
						vm.primerPaso.folioInvalidoMensaje = msj.texto
					}), addInvalidClasses("password"), vm.primerPaso.mostrarMsje.oldUserPswd = !0, !1
				}
				return vm.primerPaso.mostrarMsje.oldUserPswd = !1, !0
			}, vm.primerPaso.folioValidator = function(folio) {
				if ($scope.postForm.oldUserPswd.$dirty) {
					if (null === folio || angular.isUndefined(folio) || 0 === folio.length) return !1;
					if (!politicasSeguridadService_.isPasswordValido(folio)) return !1
				}
				return !0
			}, vm.primerPaso.passwordValidator = function(password) {
				if ($scope.postForm.newPswd.$dirty) {
					if (null === password || angular.isUndefined(password) || 0 === password.length) return !1;
					if (!politicasSeguridadService_.isPasswordValido(password)) return !1
				}
				return !0
			}, vm.primerPaso.passwordValidatorInput = function(password, omitirValidacion) {
				if ($scope.postForm.newPswd.$dirty || omitirValidacion) {
					if (null === password || angular.isUndefined(password) || 0 === password.length) return catalogoMensajesFactory.obtener(501009).then(function(msj) {
						vm.primerPaso.passwordInvalidoMensaje = msj.texto
					}), vm.primerPaso.mostrarMsje.newPswd = !0, addInvalidClasses("password"), !1;
					if (!politicasSeguridadService_.isPasswordValido(password)) return catalogoMensajesFactory.obtener(501015).then(function(msj) {
						vm.primerPaso.passwordInvalidoMensaje = msj.texto
					}), vm.primerPaso.mostrarMsje.newPswd = !0, addInvalidClasses("password"), !1
				}
				return vm.primerPaso.oldUserPswd == vm.primerPaso.newPswd ? (catalogoMensajesFactory.obtener(501015).then(function(msj) {
					vm.primerPaso.passwordInvalidoMensaje = msj.texto
				}), vm.primerPaso.mostrarMsje.newPswd = !0, addInvalidClasses("password"), !1) : (vm.primerPaso.mostrarMsje.newPswd = !1, !0)
			}, vm.primerPaso.confirmarPasswordValidator = function(oldPassword, password, confirmarPassword) {
				return oldPassword !== password && password === confirmarPassword && $scope.postForm.newPswd.$dirty && $scope.postForm.confirmNewPswd.$dirty ? (vm.primerPaso.mostrarMsje.confirmNewPswd = !1, !0) : !1
			}, vm.primerPaso.confirmarPasswordValidatorInput = function(oldPassword, password, confirmaPassword, omitirValidacion) {
				return vm.primerPaso.mostrarMsje.confirmNewPswd = !1, $scope.postForm.confirmNewPswd.$dirty || omitirValidacion ? null === confirmaPassword || angular.isUndefined(confirmaPassword) || 0 === confirmaPassword.length ? (catalogoMensajesFactory.obtener(501009).then(function(msj) {
					vm.primerPaso.confirmarPasswordInvalidoMensaje = msj.texto
				}), vm.primerPaso.mostrarMsje.confirmNewPswd = !0, addInvalidClasses("confirmarPassword"), !1) : password !== confirmaPassword ? (vm.primerPaso.mostrarMsje.confirmNewPswd = !0, vm.primerPaso.confirmarPasswordInvalidoMensaje = "Las claves ingresadas no coinciden", addInvalidClasses("confirmarPassword"), !1) : password === oldPassword ? (addInvalidClasses("password"), !1) : !0 : void 0
			}, vm.primerPaso.validarForm = function(folioValido, passwordValido, confirmarPasswordValido) {
				vm.primerPaso.mostrarMsje.newPswd = !1, vm.primerPaso.mostrarMsje.confirmNewPswd = !1, vm.primerPaso.mostrarMsje.oldUserPswd = !1, vm.primerPaso.ladda = !0, $scope.postForm.oldUserPswd.$dirty = !0, $scope.postForm.newPswd.$dirty = !0, $scope.postForm.confirmNewPswd.$dirty = !0, folioValido && passwordValido && confirmarPasswordValido ? submit() : (vm.primerPaso.ladda = !1, folioValido || (vm.primerPaso.folioValidatorInput(vm.primerPaso.oldUserPswd), vm.primerPaso.mostrarMsje.oldUserPswd = !0), passwordValido || (vm.primerPaso.passwordValidatorInput(vm.primerPaso.newPswd, !0), vm.primerPaso.mostrarMsje.newPswd = !0), confirmarPasswordValido || (vm.primerPaso.confirmarPasswordValidatorInput(vm.primerPaso.newPswd, vm.primerPaso.confirmNewPswd, !0), vm.primerPaso.mostrarMsje.confirmNewPswd = !0))
			}, vm.enterPress = function(e, numberValidForm) {
				var code = e.keyCode ? e.keyCode : e.which;
				13 === code && vm.primerPaso.validarForm($scope.postForm.oldUserPswd.$valid, $scope.postForm.newPswd.$valid, $scope.postForm.confirmNewPswd.$valid)
			}
		}
		var constantesMensajesCambioClave = {
			error: {
				titulo: "Error de Sistema",
				contenido: "Este servicio estÃ¡ temporalmente fuera de servicio, por favor intenta mÃ¡s tarde [Error = 500].",
				tipo: "ERROR"
			},
			exito: {
				titulo: "Portal Personas",
				contenido: "Este servicio estÃ¡ temporalmente fuera de servicio, por favor intenta mÃ¡s tarde [Error = 500].",
				tipo: "ERROR"
			}
		};
		angular.module("WebBancoChile.login.cambioClave").controller("CambioClaveCtrl", CambioClaveCtrl).constant("constantesMensajesCambioClave", constantesMensajesCambioClave), CambioClaveCtrl.$inject = ["$state", "$animate", "$scope", "$document", "$window", "catalogoMensajesFactory", "politicasSeguridadService_", "cambioClaveDataService", "nonceChgPwdFactory", "cambioClaveSrvFactory"]
	}(),
	function() {
		"use strict";

		function cambioClaveSrvFactory($http) {
			function post(params) {
				return $http({
					url: "/idcs/changepwd",
					dataType: "json",
					handleError: !1,
					data: params,
					method: "POST"
				})
			}
			return {
				post: post
			}
		}
		angular.module("WebBancoChile.login.cambioClave").factory("cambioClaveSrvFactory", cambioClaveSrvFactory), cambioClaveSrvFactory.$inject = ["$http"]
	}(), angular.module("WebBancoChile.login.cambioClave").factory("CambioClaveStoreFactory", function() {
		var cambioClaveFactory = {},
			localType = "",
			localWarnMsg = "";
		return cambioClaveFactory.setType = function(type) {
			localType = type
		}, cambioClaveFactory.getType = function() {
			return localType
		}, cambioClaveFactory.setWarnMsg = function(warnMsg) {
			localWarnMsg = warnMsg
		}, cambioClaveFactory.getWarnMsg = function() {
			return localWarnMsg
		}, cambioClaveFactory
	}),
	function() {
		"use strict";

		function nonceChgPwdFactory($state, $cookies) {
			var factory = {};
			return factory.get = function() {
				var nonceCtx = $cookies["chgpwd-nonce"];
				return null == nonceCtx || void 0 == nonceCtx || "undefined" == nonceCtx || 0 == nonceCtx.trim().length ? ($state.go("error500"), null) : nonceCtx
			}, factory.remove = function() {
				delete $cookies["chgpwd-nonce"]
			}, factory
		}
		angular.module("WebBancoChile.login.cambioClave").factory("nonceChgPwdFactory", nonceChgPwdFactory), nonceChgPwdFactory.$inject = ["$state", "$cookies"]
	}(),
	function() {
		function cambioClaveDataService() {
			function setChangeError(changeErrorValue) {
				return cambioClaveDataService._changeError = changeErrorValue, null !== cambioClaveDataService._changeError ? 0 : -1
			}

			function getChangeError() {
				return cambioClaveDataService._changeError
			}
			var cambioClaveDataService = {
				_changeError: null,
				getChangeError: getChangeError,
				setChangeError: setChangeError
			};
			return cambioClaveDataService
		}
		angular.module("WebBancoChile.login.cambioClave").service("cambioClaveDataService", cambioClaveDataService)
	}(),
	function() {
		function formatCurrency($filter, $locale) {
			var numberFilter = $filter("number"),
				formats = $locale.NUMBER_FORMATS,
				pattern = formats.PATTERNS[1];
			formats.DEFAULT_PRECISION = angular.isUndefined(formats.DEFAULT_PRECISION) ? 2 : formats.DEFAULT_PRECISION;
			var processAmount = function(amount, currencySymbol, fractionSize) {
				if (isNaN(parseInt(amount, 10))) return "";
				angular.isUndefined(currencySymbol) && (currencySymbol = formats.CURRENCY_SYM);
				var isNegative = 0 > amount,
					parts = [];
				amount = amount.toString().replace(",", "."), amount = Math.abs(amount), fractionSize = angular.isDefined(fractionSize) ? fractionSize : amount % 1 !== 0 ? 2 : 0;
				var number = numberFilter(amount, fractionSize);
				return parts.push(isNegative ? pattern.negPre : pattern.posPre), parts.push(currencySymbol), parts.push(number), parts.push(isNegative ? pattern.negSuf : pattern.posSuf), parts.join("").replace(/\u00A4/g, "")
			};
			return function(amount, currencySymbol, fractionSize) {
				return processAmount(amount, currencySymbol, fractionSize)
			}
		}

		function transaction() {
			return function(input, length) {
				if (angular.isUndefined(input)) return "";
				length = angular.isUndefined(length) ? 4 : length;
				for (var result = input.toString(); result.length <= length;) result = "0".concat(result);
				return result
			}
		}

		function formatCurrencyCambioParidad($filter) {
			return function(amount, currencySymbol, fractionSize) {
				return $filter("formatCurrency")(amount, "CLP" === currencySymbol ? "$" : currencySymbol, fractionSize)
			}
		}

		function propertyFilter() {
			return function(items, props) {
				var out = [];
				return angular.isArray(items) ? items.forEach(function(item) {
					for (var itemMatches = !1, keys = Object.keys(props), i = 0; i < keys.length; i++) {
						var prop = keys[i],
							text = props[prop].toLowerCase();
						if (-1 !== item[prop].toString().toLowerCase().indexOf(text)) {
							itemMatches = !0;
							break
						}
					}
					itemMatches && out.push(item)
				}) : out = items, out
			}
		}
		angular.module("WebBancoChile.cartaInstruccionFilters").filter("formatCurrency", formatCurrency).filter("formatCurrencyCambioParidad", formatCurrencyCambioParidad).filter("transaction", transaction).filter("propertyFilter", propertyFilter)
	}(),
	function() {
		function accountFilter() {
			return function(account) {
				if (angular.isUndefined(account) || null == account || "" === account) return "";
				var str = account.slice(-4);
				return "**** ** **" + str
			}
		}
		angular.module("WebBancoChile.filters").filter("account", accountFilter)
	}(),
	function() {
		function agrupaFecha($filter) {
			var utcToDate = $filter("utcToDate"),
				todate = $filter("todate"),
				todate_mes = $filter("todate_mes"),
				dateFilter = $filter("date");
			return function(date, now) {
				if (angular.isUndefined(date) || null == date || "" === date) return "";
				if (angular.isUndefined(now) || null == now || "" === now) return todate(date, "dd/MM/yyyy");
				var hoy = now.split("T"),
					fecha = utcToDate(date),
					ahora = utcToDate(now),
					startHoy = utcToDate(hoy[0]),
					difTotal = (fecha.getYear(), ahora.getYear(), ahora - fecha),
					secondsTotal = Math.abs(difTotal) / 1e3,
					minutesTotal = Math.floor(secondsTotal / 60),
					hoursTotal = (Math.floor(secondsTotal % 60), Math.floor(minutesTotal / 60)),
					daysTotal = (Math.floor(minutesTotal % 60), Math.floor(hoursTotal / 24)),
					hours = Math.floor(hoursTotal % 24),
					difHoy = ahora - startHoy,
					secondsTotalHoy = Math.abs(difHoy) / 1e3,
					minutesTotalHoy = Math.floor(secondsTotalHoy / 60),
					hoursTotalHoy = (Math.floor(secondsTotalHoy % 60), Math.floor(minutesTotalHoy / 60)),
					hoursHoy = (Math.floor(minutesTotalHoy % 60), Math.floor(hoursTotalHoy % 24));
				return 0 === daysTotal && hoursHoy > hours ? "Hoy" : 1 === daysTotal || 0 === daysTotal ? "Ayer" : dateFilter(fecha, "dd 'de " + todate_mes(dateFilter(fecha, "MM")) + "' yyyy")
			}
		}
		angular.module("WebBancoChile.filters").filter("agrupaFecha", agrupaFecha), agrupaFecha.$inject = ["$filter"]
	}(),
	function() {
		function antiguedad($filter) {
			var utcToDate = $filter("utcToDate"),
				dateFilter = $filter("date"),
				todate_mes = $filter("todate_mes"),
				agrupaFecha = $filter("agrupaFecha");
			return function(date, now) {
				if (angular.isUndefined(date) || null == date || "" === date) return "";
				var fecha = utcToDate(date);
				if (angular.isUndefined(now) || null == now || "" === now) return dateFilter(fecha, "dd 'de " + todate_mes(dateFilter(fecha, "MM")) + " a las' HH:mm");
				var ahora = utcToDate(now),
					annoFecha = fecha.getYear(),
					annoAhora = ahora.getYear();
				return "Ayer" === agrupaFecha(date, now) ? dateFilter(fecha, "'ayer a las' HH:mm") : annoFecha == annoAhora ? dateFilter(fecha, "dd 'de " + todate_mes(dateFilter(fecha, "MM")) + " a las' HH:mm") : annoAhora > annoFecha ? dateFilter(fecha, "dd 'de " + todate_mes(dateFilter(fecha, "MM")) + "' yyyy 'a las' HH:mm") : void 0
			}
		}
		angular.module("WebBancoChile.filters").filter("antiguedad", antiguedad), antiguedad.$inject = ["$filter"]
	}(),
	function() {
		function camelcaseFilter($filter) {
			return function(input) {
				if (angular.isUndefined(input) || null == input || "" === input) return "";
				for (var words = input.toLowerCase().replace(/ +/g, " ").split(" "), skipList = [{
						skip: "de"
					}, {
						skip: "del"
					}, {
						skip: "la"
					}, {
						skip: "los"
					}, {
						skip: "las"
					}], acroList = [{
						acronym: "BBVA"
					}, {
						acronym: "ABN"
					}, {
						acronym: "BCI"
					}, {
						acronym: "USA"
					}], i = 0; i < words.length; i++) 0 === $filter("filter")(skipList, {
					skip: words[i]
				}).length && (0 !== $filter("filter")(acroList, {
					acronym: words[i]
				}).length ? words[i] = words[i].toUpperCase() : words[i] = words[i].charAt(0).toUpperCase() + words[i].substr(1).toLowerCase());
				return words.join(" ")
			}
		}
		angular.module("WebBancoChile.filters").filter("camelcase", camelcaseFilter), camelcaseFilter.$inject = ["$filter"]
	}(),
	function() {
		function capitalize() {
			return function(input) {
				return input ? input.replace(/([^\W_]+[^\s-]*) */g, function(txt) {
					return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()
				}) : ""
			}
		}
		angular.module("WebBancoChile.filters").filter("capitalize", capitalize)
	}(),
	function() {
		function cuentasMascaraFilter($filter) {
			var repeat = $filter("repeat");
			return function(code, config) {
				config = angular.extend({
					groups: [2, 3, 5, 2],
					groupSeparator: "-",
					trimToGroupsLength: !0,
					leftPadding: 0,
					mask: !0,
					maskSymbol: "*",
					unmaskedLength: 4
				}, config);
				var expectedLength = 0;
				config.groups.forEach(function(g) {
					expectedLength += g
				}), code = code ? String(code).replace(/[^\d]/g, "") : "", code = repeat(config.leftPadding, expectedLength - code.length) + code;
				for (var result = "", i = config.groups.length - 1; i >= 0; --i) {
					var g = config.groups[i],
						codePart = code.substring(code.length - g);
					config.mask && (config.unmaskedLength >= codePart.length ? config.unmaskedLength -= codePart.length : config.unmaskedLength > 0 ? (codePart = repeat(config.maskSymbol, codePart.length - config.unmaskedLength) + codePart.substring(codePart.length - config.unmaskedLength),
						config.unmaskedLength = 0) : codePart = repeat(config.maskSymbol, codePart.length)), result = config.groupSeparator + codePart + result, code = code.substring(0, code.length - g)
				}
				return result = code.length > 0 && !config.trimToGroupsLength ? (config.mask ? repeat(config.maskSymbol, code.length) : code) + result : result.substring(config.groupSeparator.length)
			}
		}
		angular.module("WebBancoChile.filters").filter("cuentasMascara", cuentasMascaraFilter), cuentasMascaraFilter.$inject = ["$filter"]
	}(),
	function() {
		function cutFilter() {
			return function(value, wordwise, max, tail) {
				if (!value) return "";
				if (max = parseInt(max, 10), !max) return value;
				if (value.length <= max) return value;
				if (value = value.substr(0, max), wordwise) {
					var lastspace = value.lastIndexOf(" "); - 1 != lastspace && (value = value.substr(0, lastspace))
				}
				return value + (tail || " â€¦")
			}
		}

		function cutFileName() {
			return function(input, size) {
				return angular.isUndefined(input) || null == input || "" === input ? "" : input.length <= size ? input : input.slice(0, size - 8) + "..." + input.slice(input.length - 6, input.length)
			}
		}
		angular.module("WebBancoChile.filters").filter("cut", cutFilter).filter("cutFileName", cutFileName)
	}(),
	function() {
		function dateToString($filter) {
			return function(fechaIn, format) {
				var fechaOut, outDefaultFormat = format ? format : "yyyy-MM-dd";
				if ("string" == typeof fechaIn) {
					var fa = fechaIn.split("/");
					fechaOut = fa.length > 1 ? fa[2] + "-" + fa[1] + "-" + fa[0] : fechaIn, fechaIn = moment(fechaOut, "YYYY-MM-DD").toDate()
				}
				return "object" == typeof fechaIn && (fechaOut = $filter("date")(fechaIn, outDefaultFormat ? outDefaultFormat : "yyyy-MM-dd")), fechaOut
			}
		}
		angular.module("WebBancoChile.filters").filter("dateToString", dateToString), dateToString.$inject = ["$filter"]
	}(),
	function() {
		function deleteZeroLeftFilter() {
			return function(input) {
				return null === input || void 0 === input ? "" : input.replace(/^0*(.*)/, "$1")
			}
		}
		angular.module("WebBancoChile.filters").filter("deleteZeroLeftFilter", deleteZeroLeftFilter)
	}(),
	function() {
		function fileSizeN() {
			return function(size, round) {
				if (!angular.isUndefined(size)) {
					var result;
					if (1 > size / 1024 ? result = size + " bytes" : size / 1024 >= 1 && 1024 > size / 1024 ? result = size / 1024 + " Kb" : size / 1024 >= 1024 && (result = size / 1024 / 1024 + " Mb"), round) {
						var split = result.split(" ");
						return Math.round(split[0]) + " " + split[1]
					}
					return result
				}
			}
		}
		angular.module("WebBancoChile.filters").filter("fileSizeN", fileSizeN)
	}(),
	function() {
		function formatNumeroCreditoHipotecarioFilter() {
			return function(input, len, pad) {
				if (!input) return input;
				var output = "";
				return input = input.toString(), input = input.toString(), input.length >= len ? output = input.slice(0, 3) + "-" + input.slice(3, 4) + "-" + input.slice(4, 10) + "-" + input.slice(10, 13) : (pad = (pad || 0).toString(), input = (new Array(1 + len - input.length).join(pad) + input).toString(), output = input.slice(0, 3) + "-" + input.slice(3, 4) + "-" + input.slice(4, 10) + "-" + input.slice(10, 13)), output
			}
		}
		angular.module("WebBancoChile.filters").filter("formatNumeroCreditoHipotecario", formatNumeroCreditoHipotecarioFilter)
	}(),
	function() {
		function formatNumeroCuentaCorrienteFilter() {
			return function(input, len, pad) {
				if (!input) return input;
				var output = "";
				return input = input.toString(), input = input.toString(), input.length >= len ? output = "00000" === input.slice(0, 5) && input.length !== len ? input.slice(0, 2) + "-" + input.slice(7, 10) + "-" + input.slice(10, 14) + "-" + input.slice(14, 17) : input.slice(0, 2) + "-" + input.slice(2, 5) + "-" + input.slice(5, 10) + "-" + input.slice(10, 12) : (pad = (pad || 0).toString(), input = (new Array(1 + len - input.length).join(pad) + input).toString(), output = input.slice(0, 2) + "-" + input.slice(2, 5) + "-" + input.slice(5, 10) + "-" + input.slice(10, 12)), output
			}
		}
		angular.module("WebBancoChile.filters").filter("formatNumeroCuentaCorriente", formatNumeroCuentaCorrienteFilter)
	}(),
	function() {
		function formatoMonedaFilter($filter) {
			var formatoNumero = $filter("formatoNumero");
			return function(monto, config) {
				config = angular.extend({
					isoCode: "CLP"
				}, config);
				var simbolo = "$",
					numeroConfig = {
						decimales: !1
					};
				switch (config.isoCode) {
					case "CLP":
						simbolo = "$", numeroConfig.decimales = !1;
						break;
					case "CLF":
						simbolo = "UF", numeroConfig.decimales = !0, numeroConfig.cantidadDecimales = 4;
						break;
					case "USD":
						simbolo = "USD", numeroConfig.decimales = !0, numeroConfig.cantidadDecimales = 2;
						break;
					case "EUR":
						simbolo = "EUR", numeroConfig.decimales = !0, numeroConfig.cantidadDecimales = 2
				}
				return simbolo + " " + formatoNumero(monto, numeroConfig)
			}
		}
		angular.module("WebBancoChile.filters").filter("formatoMoneda", formatoMonedaFilter), formatoMonedaFilter.$inject = ["$filter"]
	}(),
	function() {
		function formatoNumeroFilter($filter) {
			function replaceAll(text, busca, reemplaza) {
				for (; - 1 != text.indexOf(busca);) text = text.replace(busca, reemplaza);
				return text
			}
			var repeat = $filter("repeat");
			return function(num, config) {
				config = angular.extend({
					separadorMiles: ".",
					separadorDecimal: ",",
					decimales: !0,
					cantidadDecimales: 2,
					formatoEntrada: "USD"
				}, config), "string" == typeof num && ("CLP" == config.formatoEntrada && (num = replaceAll(num, ".", ""), num = replaceAll(num, ",", ".")), "USD" == config.formatoEntrada && (num = replaceAll(num, ",", ""))), num = String(Number(num) || 0);
				var sign = "-" === num.charAt(0) ? "-" : "";
				num = num.substring(sign.length);
				var integralPart, decimalPart, commaIndex = num.indexOf(".");
				commaIndex >= 0 ? (integralPart = num.substr(0, commaIndex), decimalPart = num.substr(commaIndex + 1)) : (integralPart = num, decimalPart = "");
				for (var result = "", i = 0; i < integralPart.length; i += 3) i > 0 && (result = config.separadorMiles + result), result = integralPart.substring(integralPart.length - 3 - i, integralPart.length - i) + result;
				return config.decimales && config.cantidadDecimales > 0 && (result += config.separadorDecimal + decimalPart.substring(0, config.cantidadDecimales) + repeat("0", config.cantidadDecimales - decimalPart.length)), sign + result
			}
		}
		angular.module("WebBancoChile.filters").filter("formatoNumero", formatoNumeroFilter), formatoNumeroFilter.$inject = ["$filter"]
	}(),
	function() {
		function lessThanZeroFilter() {
			return function(input) {
				return 0 > input ? 0 : input
			}
		}
		angular.module("WebBancoChile.filters").filter("lessThanZero", lessThanZeroFilter)
	}(),
	function() {
		function mascara() {
			return function(code, numberOfCharactersShown, targetLength) {
				function spaces(n) {
					var s = "";
					for (n; n > 0; n--) s += "X";
					return s
				}
				return code = code ? String(code) : "", targetLength || (targetLength = code.length), ("undefined" == typeof numberOfCharactersShown || null === numberOfCharactersShown) && (numberOfCharactersShown = 4), code = numberOfCharactersShown > 0 ? spaces(targetLength - numberOfCharactersShown) + code.slice(-numberOfCharactersShown) : code.slice(0, -numberOfCharactersShown) + spaces(targetLength + numberOfCharactersShown)
			}
		}
		angular.module("WebBancoChile.filters").filter("mascara", mascara)
	}(),
	function() {
		function multiCurrencyFilter($filter, $locale) {
			var numberFilter = $filter("number"),
				formats = $locale.NUMBER_FORMATS,
				pattern = formats.PATTERNS[1];
			formats.DEFAULT_PRECISION = angular.isUndefined(formats.DEFAULT_PRECISION) ? 2 : formats.DEFAULT_PRECISION;
			var processAmount = function(amount, currencySymbol, fractionSize, suffixSymbol) {
				if (!angular.isNumber(amount)) return "";
				angular.isUndefined(currencySymbol) && (currencySymbol = formats.CURRENCY_SYM);
				var isNegative = 0 > amount,
					parts = [];
				suffixSymbol = isBoolean(fractionSize) ? fractionSize : suffixSymbol, fractionSize = isBoolean(fractionSize) ? formats.DEFAULT_PRECISION : fractionSize, fractionSize = angular.isUndefined(fractionSize) ? formats.DEFAULT_PRECISION : fractionSize, amount = Math.abs(amount);
				var number = numberFilter(amount, fractionSize);
				return parts.push(isNegative ? pattern.negPre : pattern.posPre), parts.push(suffixSymbol ? number : currencySymbol), parts.push(suffixSymbol ? currencySymbol : number), parts.push(isNegative ? pattern.negSuf : pattern.posSuf), parts.join("").replace(/\u00A4/g, "")
			};
			return function(amount, type) {
				switch (type) {
					case "usd":
						return processAmount(amount, "$", 2, !1);
					case "euro":
						return processAmount(amount, "â‚¬", 2, !0);
					case "clp":
						return processAmount(amount, "$", 0, !1);
					default:
						return processAmount(amount, "$", 0, !1)
				}
			}
		}
		angular.module("WebBancoChile.filters").filter("multiCurrency", multiCurrencyFilter);
		var isBoolean = function(obj) {
			return obj === !0 || obj === !1 || "[object Boolean]" === Object.prototype.toString.call(obj)
		};
		multiCurrencyFilter.$inject = ["$filter", "$locale"]
	}(),
	function() {
		function numberByMoneyTypeFilter($filter) {
			return function(number, moneyType) {
				return "CLP" === moneyType || null == moneyType || "undefined" == moneyType ? $filter("number")(number, 0) : $filter("number")(number, 2)
			}
		}
		angular.module("WebBancoChile.filters").filter("numberByMoneyType", numberByMoneyTypeFilter), numberByMoneyTypeFilter.$inject = ["$filter"]
	}(),
	function() {
		function repeatFilter() {
			return function(symbol, n) {
				for (var s = ""; n > 0; n--) s += symbol;
				return s
			}
		}
		angular.module("WebBancoChile.filters").filter("repeat", repeatFilter)
	}(),
	function() {
		function sinFormato(rut) {
			var strRut = rut.replace(/^0+/, "");
			return strRut.replace(/[-|\.]/g, "")
		}

		function rutFilter() {
			return function(rut) {
				if (angular.isUndefined(rut)) return "";
				var sRutFormateado = "",
					sRut = sinFormato(rut),
					sDV = sRut.charAt(sRut.length - 1);
				for (sRut = sRut.substring(0, sRut.length - 1); sRut.length > 3;) sRutFormateado = "." + sRut.substr(sRut.length - 3) + sRutFormateado, sRut = sRut.substring(0, sRut.length - 3);
				return sRutFormateado = sRut + sRutFormateado, sRutFormateado += "-" + sDV
			}
		}

		function rutSinFormatoFilter() {
			return function(rut) {
				return angular.isUndefined(rut) ? "" : sinFormato(rut)
			}
		}

		function rutSinPuntoFilter() {
			return function(rut) {
				if (angular.isUndefined(rut)) return "";
				var sRut = sinFormato(rut),
					sDV = sRut.charAt(sRut.length - 1);
				sRut = sRut.substring(0, sRut.length - 1);
				var sRutFormateado = sRut;
				return sRutFormateado += "-" + sDV
			}
		}

		function rutSV() {
			return function(rut) {
				if (angular.isUndefined(rut)) return "";
				var sRutFormateado = "",
					sRut = sinFormato(rut);
				for (sRut = sRut.substring(0, sRut.length - 1); sRut.length > 3;) sRutFormateado = "." + sRut.substr(sRut.length - 3) + sRutFormateado, sRut = sRut.substring(0, sRut.length - 3);
				return sRutFormateado = sRut + sRutFormateado
			}
		}

		function rutDV() {
			return function(rut) {
				if (angular.isUndefined(rut)) return "";
				var sRut = sinFormato(rut);
				return sRut.charAt(sRut.length - 1)
			}
		}
		angular.module("WebBancoChile.filters").filter("rut", rutFilter).filter("rutSinFormato", rutSinFormatoFilter).filter("rutSinPunto", rutSinPuntoFilter).filter("rutSV", rutSV).filter("rutDV", rutDV)
	}(),
	function() {
		function rutServiceFormatFilter($filter) {
			return function(rut) {
				return $filter("zeroLeftFormat")($filter("rutSinFormato")(rut), 10)
			}
		}
		angular.module("WebBancoChile.filters").filter("rutServiceFormat", rutServiceFormatFilter), rutServiceFormatFilter.$inject = ["$filter"]
	}(),
	function() {
		function smartFilterFilter($filter) {
			return function(items, fields, filters, match) {
				var filterMatch = {
					applyFilter: function(items) {
						return $filter("filter")(items, function(item, index, array) {
							var resultToken = !0,
								tokens = filters,
								keys = fields,
								exact = match;
							return angular.isArray(tokens) || (tokens = tokens.replace(/ +/g, " ").split(" ")), tokens.forEach(function(token) {
								var resultKey = !1;
								keys.forEach(function(key) {
									var regex = new RegExp(token, "i");
									if (!angular.isUndefined(item[key]) && null !== item[key] && item[key].length > 0) {
										var valores = item[key].replace(/( )+/g, " ").split(" ");
										valores.forEach(function(valor) {
											resultKey = resultKey || (exact ? token.toLowerCase() === valor.toLowerCase() : 0 === valor.search(regex))
										})
									}
								}), resultToken = resultToken && resultKey
							}), resultToken
						})
					}
				};
				return angular.isDefined(filters) && filters.length > 0 ? filterMatch.applyFilter(items) : items
			}
		}
		angular.module("WebBancoChile.filters").filter("smartFilter", smartFilterFilter), smartFilterFilter.$inject = ["$filter"]
	}(),
	function() {
		function textCurrencyFilter() {
			return function(type) {
				switch (type) {
					case "usd":
						return "Dolar AmÃ©ricano(USD)";
					case "euro":
						return "Euro(â‚¬)";
					case "clp":
						return "Pesos Chilenos(CLP)";
					default:
						return "Pesos Chilenos(CLP)"
				}
			}
		}
		angular.module("WebBancoChile.filters").filter("textCurrency", textCurrencyFilter)
	}(),
	function() {
		function todateFilter($filter) {
			return function(string, format) {
				if (angular.isUndefined(string) || null == string || "" === string) return "";
				var data = string.split("T"),
					date = data[0].replace(/-/g, ""),
					time = data[1].replace(/:/g, ""),
					month = parseInt(date.substr(4, 2), 10) - 1,
					dateToFormat = new Date(date.substr(0, 4), month, date.substr(6, 2), time.substr(0, 2), time.substr(2, 2), time.substr(4, 2));
				return $filter("date")(dateToFormat, format)
			}
		}

		function todate_format1Filter($filter) {
			return function(string) {
				return $filter("todate")(string, "dd/MM/yyyy")
			}
		}

		function todate_intFilter($filter) {
			return function(value, format) {
				if (angular.isUndefined(value) || null == value || 0 === value) return "";
				var dateToFormat = new Date(value);
				return $filter("date")(dateToFormat, format)
			}
		}

		function todate_mes() {
			return function(str) {
				if (angular.isUndefined(str) || null === str || "" === str) return void 0;
				for (var meses = [{
						code: "01",
						name: "Enero"
					}, {
						code: "02",
						name: "Febrero"
					}, {
						code: "03",
						name: "Marzo"
					}, {
						code: "04",
						name: "Abril"
					}, {
						code: "05",
						name: "Mayo"
					}, {
						code: "06",
						name: "Junio"
					}, {
						code: "07",
						name: "Julio"
					}, {
						code: "08",
						name: "Agosto"
					}, {
						code: "09",
						name: "Septiembre"
					}, {
						code: "10",
						name: "Octubre"
					}, {
						code: "11",
						name: "Noviembre"
					}, {
						code: "12",
						name: "Diciembre"
					}], i = 0; i < meses.length; ++i)
					if (meses[i].code === str || meses[i].name.toLowerCase() === str.toLowerCase()) return meses[i].name;
				return void 0
			}
		}
		angular.module("WebBancoChile.filters").filter("todate", todateFilter).filter("todate_format1", todate_format1Filter).filter("todate_int", todate_intFilter).filter("todate_mes", todate_mes), todateFilter.$inject = ["$filter"], todate_format1Filter.$inject = ["$filter"], todate_intFilter.$inject = ["$filter"]
	}(),
	function() {
		function truncarFilter() {
			return function(value, max, tail) {
				return value ? (max = Number(max), !max || 0 >= max || value.length <= max ? value : (value = value.substr(0, max), "undefined" == typeof tail ? value : "boolean" == typeof tail ? value + (tail ? " â€¦" : "") : value + tail)) : ""
			}
		}
		angular.module("WebBancoChile.filters").filter("truncar", truncarFilter)
	}(),
	function() {
		function utcToDate() {
			return function(string) {
				string.indexOf("T") < 0 && 10 == string.length && (string += "T00:00:00");
				var data = string.split("T"),
					date = data[0].replace(/-/g, ""),
					time = data[1].replace(/:/g, ""),
					month = parseInt(date.substr(4, 2), 10) - 1;
				return new Date(date.substr(0, 4), month, date.substr(6, 2), time.substr(0, 2), time.substr(2, 2), time.substr(4, 2))
			}
		}
		angular.module("WebBancoChile.filters").filter("utcToDate", utcToDate)
	}(),
	function() {
		function zeroLeftFormatFilter() {
			return function(input, size) {
				if (angular.isUndefined(input) || null == input || "" === input) return "";
				var zeros = "";
				for (i = 0; i < size; i++) zeros += "0";
				return (zeros + input).slice(-1 * size)
			}
		}
		angular.module("WebBancoChile.filters").filter("zeroLeftFormat", zeroLeftFormatFilter)
	}(),
	function() {
		function comprobanteDirectiveCtrl($scope, CODIGO_PORTAL, comprobanteDirectiveFactory, FileSaver) {
			function cantidadColumnas(obj) {
				return obj.length
			}

			function descarga() {
				vm.descargando || (vm.error = !1, vm.descargando = !0, "GET" === vm.data.dataDescarga.method.toUpperCase() ? comprobanteDirectiveFactory.descargaComprobanteGET(vm.data.dataDescarga.url).then(procesaDescarga, fallaDescarga) : comprobanteDirectiveFactory.descargaComprobantePOST(vm.data.dataDescarga.url, vm.data.dataDescarga.data).then(procesaDescarga, fallaDescarga))
			}

			function procesaDescarga(result) {
				var file = new Blob([result], {
					type: "application/pdf"
				});
				FileSaver.saveAs(file, vm.data.dataDescarga.nombreArchivo + ".pdf"), vm.descargando = !1
			}

			function fallaDescarga() {
				vm.descargando = !1, vm.error = !0
			}

			function isDescarga() {
				return angular.isDefined(vm.data.dataDescarga)
			}

			function esVacio(valor) {
				return null === valor || void 0 === valor || 0 === valor.length
			}

			function setTimbre(value) {
				return "undefined" == typeof value ? "default" : "string" == typeof value ? "custom" : !1
			}
			var vm = this;
			vm.codPortal = CODIGO_PORTAL, vm.cantidadColumnas = cantidadColumnas, vm.descarga = descarga, vm.isDescarga = isDescarga, vm.hideDescargas = esVacio(vm.data.header.descargas), vm.hideUrlDescarga = esVacio(vm.data.header.urlDescarga), vm.setTimbre = setTimbre
		}
		angular.module("WebBancoChile.comprobantes").filter("bypass", ["$sce", function($sce) {
			return function(html) {
				return $sce.trustAsHtml(html)
			}
		}]).controller("comprobanteDirectiveCtrl", comprobanteDirectiveCtrl), comprobanteDirectiveCtrl.$inject = ["$scope", "CODIGO_PORTAL", "comprobanteDirectiveFactory", "FileSaver"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.comprobantes").directive("comprobante", function() {
			return {
				controller: "comprobanteDirectiveCtrl",
				controllerAs: "comprobante",
				restrict: "E",
				bindToController: !0,
				scope: {
					data: "=",
					tipo: "@",
					banca: "=",
					mostrarEnWarning: "&"
				},
				templateUrl: function(elem, attr) {
					return "comprobantes/src/directive/templates/comprobante-" + attr.tipo + ".tpl.html"
				}
			}
		})
	}(),
	function() {
		function comprobanteDirectiveFactory($http, URL_API) {
			function descargaComprobanteGET(url) {
				function resultDescarga(result) {
					return result.data
				}
				return $http({
					url: URL_API + url,
					dataType: "json",
					handleError: !1,
					method: "GET",
					responseType: "arraybuffer",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(resultDescarga)
			}

			function descargaComprobantePOST(url, data) {
				function resultDescarga(result) {
					return result.data
				}
				return $http({
					url: URL_API + url,
					dataType: "json",
					data: data,
					handleError: !1,
					method: "POST",
					responseType: "arraybuffer",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(resultDescarga)
			}
			return {
				descargaComprobanteGET: descargaComprobanteGET,
				descargaComprobantePOST: descargaComprobantePOST
			}
		}
		angular.module("WebBancoChile.comprobantes").factory("comprobanteDirectiveFactory", comprobanteDirectiveFactory)
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.contacto").constant("URL_API_P", "/personas/rest").constant("SRC_CONSTANTS_MENSAJE_ERROR", "Este servicio estÃ¡ temporalmente no disponible, por favor intente mÃ¡s tarde.")
	}(),
	function() {
		function numbersOnly() {
			return {
				require: "ngModel",
				link: function(scope, element, attr, ngModelCtrl) {
					function fromUser(text) {
						if (text) {
							var transformedInput = text.replace(/[^0-9-]/g, "");
							return transformedInput !== text && (ngModelCtrl.$setViewValue(transformedInput), ngModelCtrl.$render()), transformedInput
						}
						return void 0
					}
					ngModelCtrl.$parsers.push(fromUser)
				}
			}
		}
		angular.module("WebBancoChile.contacto").directive("numbersOnly", numbersOnly)
	}(),
	function() {
		function requerimientoFactory($http, $state, URL_API_P) {
			function getTipologia(dataTipologia) {
				var urlConsulta = URL_API_P + "/contacto-publico-persona/contacto/obtener-tipologias/" + dataTipologia,
					config = {
						method: "GET",
						url: urlConsulta,
						headers: {
							"Content-Type": "application/json"
						}
					};
				return $http(config)
			}

			function ingresarRequerimiento(data, captcha) {
				var urlConsulta = URL_API_P + "/contacto-publico-persona/contacto/crear-requerimiento?g-recaptcha-response=" + captcha,
					config = {
						method: "POST",
						url: urlConsulta,
						data: data,
						headers: {
							"Content-Type": "application/json"
						}
					};
				return $http(config).then(function(response) {
					return response
				}, function(response) {
					return response
				})
			}
			return {
				getTipologia: getTipologia,
				ingresarRequerimiento: ingresarRequerimiento
			}
		}
		angular.module("WebBancoChile.contacto").factory("requerimientoFactory", requerimientoFactory), requerimientoFactory.$inject = ["$http", "$state", "URL_API_P"]
	}(),
	function() {
		function bancoChileConfig($stateProvider) {
			var url_base = "contacto-publico/";
			$stateProvider.state("requerimiento", {
				parent: "root",
				url: "/requerimiento",
				views: {
					"main@": {
						templateUrl: url_base + "src/modules/contacto/seleccionRequerimiento.tpl.html"
					}
				},
				data: {
					pageTitle: "Seleccion Requerimiento"
				}
			}).state("seleccion-requerimiento", {
				parent: "root",
				url: "/seleccion-requerimiento",
				views: {
					"main@": {
						controller: "seleccionTipoRequerimientoCtrl",
						controllerAs: "vm",
						templateUrl: url_base + "src/modules/contacto/seleccion-requerimiento/seleccionTipoRequerimiento.tpl.html"
					}
				},
				data: {
					pageTitle: "Seleccion Tipo Requerimiento"
				},
				params: {
					state: "seleccion-requerimiento-problema",
					tabActive: "vm"
				}
			}).state("seleccion-requerimiento-calidad", {
				parent: "seleccion-requerimiento",
				url: "/seleccion-requerimiento-calidad",
				controller: "calidadCtrl",
				controllerAs: "vm",
				templateUrl: url_base + "src/modules/contacto/seleccion-requerimiento/calidad/calidad.tpl.html",
				data: {
					pageTitle: "Sugerencias y Felicitaciones"
				}
			}).state("seleccion-requerimiento-contacto", {
				parent: "seleccion-requerimiento",
				url: "/seleccion-requerimiento-contacto",
				controller: "contactoCtrl",
				controllerAs: "vm",
				templateUrl: url_base + "src/modules/contacto/seleccion-requerimiento/contacto/contacto.tpl.html",
				data: {
					pageTitle: "Contacto"
				}
			})
		}
		angular.module("WebBancoChile.contacto").config(bancoChileConfig).config(["noCAPTCHAProvider", function(noCaptchaProvider) {
			noCaptchaProvider.setSiteKey("6LfaC3oaAAAAAJLlEbuKoR3FpLss0GSq0oVucXH1"), noCaptchaProvider.setTheme("light"), noCaptchaProvider.setLanguage("es-419")
		}])
	}(),
	function() {
		function calidadCtrl(RutHelper, catalogoMensajesFactory, requerimientoFactory, $filter) {
			function init() {
				requerimientoFactory.getTipologia(vm.dataInicial).then(function(rs) {
					vm.tipos = angular.fromJson(rs.data), vm.tipos = vm.tipos.filter(function(tipos) {
						return "Calidad de AtenciÃ³n" === tipos.descripcion
					})
				}, function() {
					vm.errorService = !0
				})
			}
			var vm = this;
			vm.comentario = "", vm.dataInicial = "P", vm.datosCliente = {}, vm.deactivate = !1, vm.success = !1, vm.captcha = {}, vm.captcha.resetCaptchaReset = {}, vm.captcha.isErrorMsgCaptchaActive = !1, vm.captcha.expiredCatcha = function() {
				vm.captcha.gRecaptchaResponse = ""
			}, init(), vm.enviar = function() {
				vm.deactivate = !0, vm.categoria = vm.subtipo.categorias[0], vm.requerimiento = {
					comentario: vm.comentario,
					categoria: vm.categoria.id,
					subtipo: vm.subtipo.id,
					tipo: vm.tipo.id,
					rut: $filter("rutSinPunto")(vm.datosCliente.rut),
					email: vm.datosCliente.email,
					telefono: vm.datosCliente.telefono,
					nombre: vm.datosCliente.nombre,
					celular: vm.datosCliente.celular
				}, requerimientoFactory.ingresarRequerimiento(vm.requerimiento, vm.captcha.gRecaptchaResponse).then(function(response) {
					200 === response.status ? vm.success = !0 : (vm.captcha.resetCaptchaReset.reset(), vm.deactivate = !1)
				})
			}
		}
		angular.module("WebBancoChile.contacto").controller("calidadCtrl", calidadCtrl), calidadCtrl.$inject = ["RutHelper", "catalogoMensajesFactory", "requerimientoFactory", "$filter"]
	}(),
	function() {
		function contactoCtrl(RutHelper, catalogoMensajesFactory, requerimientoFactory, $filter) {
			function init() {
				requerimientoFactory.getTipologia(vm.dataInicial).then(function(rs) {
					vm.tipos = angular.fromJson(rs.data), vm.tipos = vm.tipos.filter(function(tipos) {
						return "Solicitud al Ejecutivo" === tipos.descripcion
					})
				}, function() {
					vm.errorService = !0
				})
			}
			var vm = this;
			vm.comentario = "", vm.datosCliente = {}, vm.dataInicial = "P", vm.deactivate = !1, vm.success = !1, vm.captcha = {}, vm.captcha.resetCaptchaReset = {}, vm.captcha.isErrorMsgCaptchaActive = !1, vm.captcha.expiredCatcha = function() {
				vm.captcha.gRecaptchaResponse = ""
			}, init(), vm.enviar = function() {
				vm.deactivate = !0, vm.requerimiento = {
					comentario: vm.comentario,
					categoria: vm.categoria.id,
					subtipo: vm.subtipo.id,
					tipo: vm.tipo.id,
					rut: $filter("rutSinPunto")(vm.datosCliente.rut),
					email: vm.datosCliente.email,
					telefono: vm.datosCliente.telefono,
					nombre: vm.datosCliente.nombre,
					celular: vm.datosCliente.celular
				}, requerimientoFactory.ingresarRequerimiento(vm.requerimiento, vm.captcha.gRecaptchaResponse).then(function(response) {
					200 === response.status ? vm.success = !0 : (vm.captcha.resetCaptchaReset.reset(), vm.deactivate = !1)
				})
			}
		}
		angular.module("WebBancoChile.contacto").controller("contactoCtrl", contactoCtrl), contactoCtrl.$inject = ["RutHelper", "catalogoMensajesFactory", "requerimientoFactory", "$filter"]
	}(),
	function() {
		function problemaCtrl(RutHelper, catalogoMensajesFactory, requerimientoFactory, $filter) {
			function init() {
				requerimientoFactory.getTipologia(vm.dataInicial).then(function(rs) {
					vm.tipos = angular.fromJson(rs.data), vm.tipos = vm.tipos.filter(function(tipos) {
						return "Problemas Canales Internet" === tipos.descripcion
					})
				}, function() {
					vm.errorService = !0
				})
			}
			var vm = this;
			vm.datosCliente = {}, vm.comentario = "", vm.producto = "", vm.deactivate = !1, vm.dataInicial = "P", vm.success = !1, vm.captcha = {}, vm.captcha.resetCaptchaReset = {}, vm.captcha.isErrorMsgCaptchaActive = !1, vm.captcha.expiredCatcha = function() {
				vm.captcha.gRecaptchaResponse = ""
			}, init(), vm.enviar = function() {
				vm.deactivate = !0, vm.tipo = vm.tipos[0], vm.subtipo = vm.tipo.subtipos[0], vm.categoria = vm.subtipo.categorias[0], vm.requerimiento = {
					comentario: vm.producto + " - " + vm.comentario,
					categoria: vm.categoria.id,
					subtipo: vm.subtipo.id,
					tipo: vm.tipo.id,
					rut: $filter("rutSinPunto")(vm.datosCliente.rut),
					email: vm.datosCliente.email,
					telefono: vm.datosCliente.telefono,
					nombre: vm.datosCliente.nombre,
					celular: vm.datosCliente.celular
				}, requerimientoFactory.ingresarRequerimiento(vm.requerimiento, vm.captcha.gRecaptchaResponse).then(function(response) {
					200 === response.status ? vm.success = !0 : (vm.captcha.resetCaptchaReset.reset(), vm.deactivate = !1)
				})
			}
		}
		angular.module("WebBancoChile.contacto").controller("problemaCtrl", problemaCtrl), problemaCtrl.$inject = ["RutHelper", "catalogoMensajesFactory", "requerimientoFactory", "$filter"]
	}(),
	function() {
		function seleccionTipoRequerimientoCtrl($state, $stateParams) {
			var vm = this;
			vm.problema = void 0, vm.calidad = void 0, vm.contacto = void 0, $state.go($stateParams.state), "problema" == $stateParams.tabActive && (vm.problema = !0), "calidad" == $stateParams.tabActive && (vm.calidad = !0), "contacto" == $stateParams.tabActive && (vm.contacto = !0)
		}
		angular.module("WebBancoChile.contacto").controller("seleccionTipoRequerimientoCtrl", seleccionTipoRequerimientoCtrl)
	}(),
	function(angular, undefined) {
		"use strict";
		angular.module("nocaptcha.directive", []).provider("googleGrecaptcha", function() {
			var language;
			this.setLanguage = function(_language) {
				language = _language
			}, this.$get = ["$q", "$window", "$document", "$rootScope", function($q, $window, $document, $rootScope) {
				var deferred = $q.defer();
				$window.recaptchaOnloadCallback = function() {
					$rootScope.$apply(function() {
						deferred.resolve()
					})
				};
				var s = $document[0].createElement("script"),
					src = "https://www.google.com/recaptcha/api.js?onload=recaptchaOnloadCallback&render=explicit";
				return s.type = "application/javascript", language && (src += "&hl=" + language), s.src = src, $document[0].body.appendChild(s), deferred.promise
			}]
		}).provider("noCAPTCHA", ["googleGrecaptchaProvider", function(googleGrecaptchaProvider) {
			var siteKey, size, theme;
			this.setSiteKey = function(_siteKey) {
				siteKey = _siteKey
			}, this.setSize = function(_size) {
				size = _size
			}, this.setTheme = function(_theme) {
				theme = _theme
			}, this.setLanguage = function(language) {
				googleGrecaptchaProvider.setLanguage(language)
			}, this.$get = function() {
				return {
					theme: theme,
					siteKey: siteKey,
					size: size
				}
			}
		}]).directive("reCaptcha", ["noCAPTCHA", "googleGrecaptcha", "$document", "$window", function(noCaptcha, googleGrecaptcha, $document, $window) {
			var removePLSContainers = function() {
				for (var plsContainers = $document[0].getElementsByClassName("pls-container"), i = 0; i < plsContainers.length; i++)
					for (var parent = plsContainers[i].parentNode; parent.firstChild;) parent.removeChild(parent.firstChild)
			};
			return {
				restrict: "EA",
				scope: {
					gRecaptchaResponse: "=",
					siteKey: "@",
					stoken: "@",
					size: "@",
					theme: "@",
					control: "=?",
					expiredCallback: "=?"
				},
				replace: !0,
				link: function(scope, element) {
					scope.control = scope.control || {};
					var widgetId, grecaptchaCreateParameters, control = scope.control;
					if (grecaptchaCreateParameters = {
							sitekey: scope.siteKey || noCaptcha.siteKey,
							size: scope.size || noCaptcha.size,
							theme: scope.theme || noCaptcha.theme,
							callback: function(r) {
								scope.$apply(function() {
									scope.gRecaptchaResponse = r
								})
							},
							"expired-callback": function() {
								scope.expiredCallback && "function" == typeof scope.expiredCallback && scope.$apply(function() {
									scope.expiredCallback()
								})
							}
						}, scope.stoken && (grecaptchaCreateParameters.stoken = scope.stoken), !grecaptchaCreateParameters.sitekey) throw new Error("Site Key is required");
					googleGrecaptcha.then(function() {
						widgetId = $window.grecaptcha.render(element[0], grecaptchaCreateParameters), control.reset = function() {
							$window.grecaptcha.reset(widgetId), scope.gRecaptchaResponse = null
						}
					}), scope.$on("$destroy", function() {
						$window.grecaptcha && $window.grecaptcha.reset(widgetId), removePLSContainers()
					}), noCaptcha.reset = function() {
						$window.grecaptcha && $window.grecaptcha.reset(widgetId)
					}
				}
			}
		}])
	}(angular), angular.module("WebBancoChile.dap-publico").factory("SimulacionDataServiceFactory", function($q) {
		function addIndex(array) {
			for (var i = 0; i < array.length; i++) array[i].index = i;
			return $q.when(array)
		}

		function set(simulacion) {
			this.simulacion = simulacion
		}

		function procesaSimulaciones(simulaciones, data) {
			var descripcion = "";
			switch (data.tipoDepositoTitle) {
				case "DAP Plazo Fijo":
					descripcion = "DepÃ³sito Plazo Fijo";
					break;
				case "DAP Plazo Indefinido":
					descripcion = "DepÃ³sito Renovable Indefinido"
			}
			for (var result = [], i = 0; i < simulaciones.length; i++) result.push({
				moneda: {
					codigo: "CLP",
					nombre: "PESOS"
				},
				tipoDeposito: {
					id: data.tipoDeposito,
					descripcion: descripcion
				},
				plazo: simulaciones[i].plazo,
				tasaInteres: simulaciones[i].tasaInteres,
				montoDeposito: simulaciones[i].montoDeposito,
				montoAlVencimiento: simulaciones[i].montoAlVencimiento,
				fechaVencimiento: simulaciones[i].fechaVencimiento,
				montoInteres: simulaciones[i].montoInteres,
				tasaBaseMensual: simulaciones[i].tasaBaseMensual,
				firmaData: simulaciones[i].firmaData
			});
			return result
		}
		return {
			addIndex: addIndex,
			set: set,
			procesaSimulaciones: procesaSimulaciones
		}
	}),
	function() {
		function SimulacionFactory($http, URL_API, SimulacionDataServiceFactory) {
			function simular(simulacion, captchaResponse) {
				return $http({
					data: simulacion,
					dataType: "json",
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					},
					method: "post",
					params: {
						"g-recaptcha-response": captchaResponse
					},
					url: URL_API + "/dap-publico-rest/simular/simulacionDap"
				}).then(function(result) {
					return SimulacionDataServiceFactory.addIndex(result.data).then(function(res) {
						return res
					})
				})
			}

			function descargarSimulacion(data) {
				return $http({
					data: {
						simulacionesDepositos: data
					},
					dataType: "json",
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					},
					method: "POST",
					responseType: "arraybuffer",
					url: URL_API + "/dap-publico-rest/comprobante-pdf"
				}).then(function(result) {
					return result.data
				})
			}
			return {
				simular: simular,
				descargarSimulacion: descargarSimulacion
			}
		}
		angular.module("WebBancoChile.dap-publico").factory("SimulacionFactory", SimulacionFactory), SimulacionFactory.$inject = ["$http", "URL_API", "SimulacionDataServiceFactory"]
	}(),
	function() {
		function fechaVtoDap() {
			return function(fecha) {
				var model = new Date(fecha);
				return isNaN(model.getUTCFullYear()) ? "" : model = new Date(model.getUTCFullYear(), model.getUTCMonth(), model.getUTCDate(), model.getUTCHours(), model.getUTCMinutes(), model.getUTCSeconds())
			}
		}
		angular.module("WebBancoChile.dap-publico").filter("fechaVtoDap", fechaVtoDap)
	}(),
	function() {
		function dapPublicoConfig($stateProvider, $urlRouterProvider) {
			var base_url = "dap-publico/src/dap-publico/",
				pageTitle = "DepÃ³sito a Plazo";
			$stateProvider.state("dap-publico", {
				parent: "root",
				url: "/dap-publico",
				views: {
					"main@": {
						controller: "simuladorDapCtrl",
						controllerAs: "dap",
						templateUrl: base_url + "tabs/simular/simuladordap.tpl.html"
					}
				},
				data: {
					pageTitle: pageTitle
				}
			}), $urlRouterProvider.otherwise("/dap-publico")
		}
		angular.module("WebBancoChile.dap-publico").config(dapPublicoConfig), dapPublicoConfig.$inject = ["$stateProvider", "$urlRouterProvider"]
	}(),
	function() {
		function dapPublicoTabsCtrl($rootScope, $state, $document, error500, catalogoMensajesFactory) {
			function getPermissions() {
				init()
			}

			function init() {
				evaluateTab(), vm.loading = !1
			}

			function evaluateStatus() {
				vm.state = {
					helloWorld: $state.is("dap-publico-hello-world"),
					users: $state.is("dap-publico-users"),
					transactionSteps: $state.is("dap-publico-transaction-steps")
				}
			}

			function evaluateTab() {
				switch ($state.current.name) {
					case "dap-publico-hello-world":
						vm.activeTab = "dap-publico-hello-world";
						break;
					case "dap-publico-users":
						vm.activeTab = "dap-publico-users";
						break;
					case "dap-publico-transaction-steps":
						vm.activeTab = "dap-publico-transaction-steps";
						break;
					default:
						vm.activeTab = $state.current.name
				}
				evaluateStatus()
			}
			var vm = this;
			vm.permissions = {
				helloWorld: !0,
				users: !0,
				transactionSteps: !0
			}, vm.loading = !0, getPermissions();
			$rootScope.$on("$stateChangeSuccess", function() {
				$document[0].body.scrollTop = $document[0].documentElement.scrollTop = 0, evaluateTab()
			}), vm.stateReload = function() {
				$state.go("reloadPage", {
					state: vm.activeTab
				})
			}
		}
		angular.module("WebBancoChile.dap-publico").controller("dapPublicoTabsCtrl", dapPublicoTabsCtrl), dapPublicoTabsCtrl.$inject = ["$rootScope", "$state", "$document", "error500", "catalogoMensajesFactory"]
	}(),
	function() {
		function simuladorDapCtrl(SimulacionFactory, SimulacionDataServiceFactory, FileSaver, catalogoMensajesFactory, $scope, noCAPTCHA) {
			function init() {
				vm.loading = !1, vm.step1 = !1, vm.step2 = !1, vm.DPF = ["07", "30", "35", "60", "89", "Otro"], vm.DPRI = ["07", "30", "35", "60"], catalogoMensajesFactory.obtener(501271).then(function(result) {
					vm.errorMessage = "En este momento no es posible efectuar la simulaciÃ³n del depÃ³sito, por favor intenta  mÃ¡s tarde.", vm.severidad = "error"
				}), vm.mensajeInformativo = "Estimado Cliente, para contratar depÃ³sito a plazo debes tener registrada una ficha de inversiÃ³n, por lo cuÃ¡l dirÃ­gete a cualquiera de nuestras sucursales, o comunÃ­cate con nuestro Centro de Ayuda"
			}

			function stepCompleted(stepNumber) {
				switch (stepNumber) {
					case 1:
						return vm.step1;
					case 2:
						return step2Disabled();
					default:
						return !1;
				}
			}

			function step2Disabled() {
				return angular.isUndefined(vm.step1) ? void 0 : vm.step1.$invalid || !vm.simulado
			}

			function setOpcionesPlazo() {
				switch (cleanSimulacion(), vm.plazoSelected = "", vm.tipoDepositoIsNotSelected = !1, "Otro" !== vm.plazoSelected && (vm.otroPlazo = ""), vm.tipoDeposito) {
					case "fijo":
						vm.plazos = vm.DPF, vm.simulacion.tipoDeposito = "DPF", vm.simulacion.tipoDepositoTitle = "DAP Plazo Fijo";
						break;
					case "indefinido":
						vm.plazos = vm.DPRI, vm.simulacion.tipoDeposito = "DPRI", vm.simulacion.tipoDepositoTitle = "DAP Plazo Indefinido"
				}
			}

			function simular() {
				cleanSimulacion(), "Otro" === vm.plazoSelected ? vm.simulacion.plazo = vm.otroPlazo : vm.simulacion.plazo = vm.plazoSelected, vm.simulado = !1, vm.simulando = !0, vm.error.show = !1, vm.simulacion.moneda = "CLP", SimulacionFactory.simular({
					tipoDeposito: vm.simulacion.tipoDeposito,
					plazo: vm.simulacion.plazo,
					monto: vm.simulacion.monto,
					moneda: vm.simulacion.moneda
				}, vm.captchaResponse).then(function(result) {
					vm.simulaciones = result, vm.simulado = !0
				}, function(err) {
					vm.error.show = !0, err && err.data && err.data.severidad && err.data.mensaje ? (vm.error.severidad = err.data.severidad.toLowerCase(), vm.error.errorMessage = err.data.mensaje) : (vm.error.severidad = vm.severidad, vm.error.errorMessage = vm.errorMessage)
				}).then(function() {
					vm.captchaReload(), vm.simulando = !1
				})
			}

			function cleanSimulacion() {
				SimulacionDataServiceFactory.set(null), vm.simulaciones = null, vm.simulado = !1, "Otro" !== vm.plazoSelected && (vm.otroPlazo = "")
			}

			function isFirstOption(index) {
				return 0 === index
			}

			function descargaSimulacion() {
				SimulacionFactory.descargarSimulacion(SimulacionDataServiceFactory.procesaSimulaciones(vm.simulaciones, vm.simulacion)).then(function(result) {
					var file = new Blob([result], {
						type: "application/pdf"
					});
					FileSaver.saveAs(file, "Simulacion.pdf")
				})
			}
			var vm = this;
			vm.simulacion = {}, vm.error = {
				errorMessage: void 0,
				severidad: void 0,
				show: !1
			}, vm.loading = !0, vm.tipoDepositoIsNotSelected = !0, vm.simulado = !1, vm.linkSucursales = "https://ww3.bancochile.cl/wps/wcm/connect/nuestro-banco/portal/sucursales-cajeros";
			vm.stepCompleted = stepCompleted, vm.setOpcionesPlazo = setOpcionesPlazo, vm.simular = simular, vm.step2Disabled = step2Disabled, vm.cleanSimulacion = cleanSimulacion, vm.isFirstOption = isFirstOption, vm.descargaSimulacion = descargaSimulacion, vm.captchaResponse = "", vm.captchaReload = {}, vm.captchaCallback = "", vm.validacionCaptcha = !1, init(), $scope.$watch("dap.captchaResponse", function() {
				"" !== vm.captchaResponse && null !== vm.captchaResponse && void 0 !== vm.captchaResponse ? vm.validacionCaptcha = !0 : vm.validacionCaptcha = !1
			}), vm.captchaReload = function($scope) {
				noCAPTCHA.reset(), vm.captchaResponse = ""
			}, vm.captchaCallback = function() {
				vm.captchaResponse = ""
			}, vm.resetCaptcha = function() {
				noCAPTCHA.reset()
			}
		}
		angular.module("WebBancoChile.dap-publico").config(["noCAPTCHAProvider", "NO_CAPTCHA", function(noCaptchaProvider, NO_CAPTCHA) {
			noCaptchaProvider.setSiteKey(NO_CAPTCHA.SITE_KEY), noCaptchaProvider.setTheme(NO_CAPTCHA.THEME), noCaptchaProvider.setLanguage(NO_CAPTCHA.LANGUAGE)
		}]).controller("simuladorDapCtrl", simuladorDapCtrl), simuladorDapCtrl.inject = ["SimulacionFactory", "SimulacionDataServiceFactory", "FileSaver", "catalogoMensajesFactory", "$scope", "noCAPTCHA"]
	}(),
	function() {
		function tableSelectDirective() {
			function link(scope, element) {
				function check(checked) {
					var elem = $(this);
					checked ? elem.addClass("clicked").closest("tr").addClass("selected-row") : elem.removeClass("clicked").closest("tr").removeClass("selected-row"), this.checked = !!checked
				}

				function toggleCheck() {
					check.call(this, this.checked)
				}

				function toggleCheckAll() {
					var allChecked = this.checked;
					tabla.find("td.actions .bch-custom-check:not(.disabled) input").each(function() {
						check.call(this, allChecked)
					})
				}
				var tabla = $(angular.element(element[0]));
				tabla.on("click", "td.actions .bch-custom-check input", toggleCheck).on("click", "thead > tr > th .bch-custom-check input.seleccionar-todo[type='checkbox']", toggleCheckAll)
			}
			return {
				restrict: "A",
				link: link
			}
		}
		angular.module("WebBancoChile.orionTablas").directive("tablaSelect", tableSelectDirective)
	}(),
	function() {
		function tablasInteractivasDirective($timeout, $compile, MINIMO_COLUMNAS_VISIBLES, MAXIMO_COLUMNAS_VISIBLES) {
			function link(scope, element, attrs) {
				function hasOptionalParam(name) {
					return "undefined" != typeof attrs[name]
				}

				function init() {
					function establecerTamanios() {
						headersAccionAndAcctionToggle.each(function() {
							anchoTotalAcciones += Number.parseInt($(this).attr("width"))
						}), anchoColumnaDatos = (100 - anchoTotalAcciones) / headersDatosWithOutAcctionToggle.length, hasOptionalParam("customWidth") && !angular.isUndefined(scope.customWidth) && scope.customWidth || headersDatosWithOutAcctionToggle.each(function() {
							$(this).attr("width", anchoColumnaDatos + "%")
						}), alturaCeldaInicial = $(tabla).find('.tabla-interactiva > tbody tr:not(".contenido-oculto") td:not(".actions")').not(".tabla-interactiva > tbody .contenido-oculto td td").outerHeight()
					}

					function agregarLogicaExpansionColumnas() {
						$(tabla).on("click", ".tabla-interactiva > tbody tr:not('.contenido-oculto') td:not('.actions')", function() {
							var tdSeleccionado = $(this),
								tds = $(tabla).find(".tabla-interactiva > tbody td:not(.actions):not(.actions-toggle)");
							if (tdSeleccionado.hasClass("activa")) tdSeleccionado.stop().animate({
								height: alturaCeldaInicial
							}, "fast"), tds.removeClass("activa").css("height", ""), headersDatosWithOutAcctionToggle.stop().animate({
								width: anchoColumnaDatos + "%"
							}, "slow");
							else {
								var anchoContenidoSeleccionado_px, anchoMaximo = 0,
									anchoTabla_px = $(tabla).find(".tabla-interactiva").prop("clientWidth"),
									anchoColumnaSeleccionada_px = $(this).width(),
									numeroColumnas = $(this).parent().find("td").filter(function() {
										return "none" == $(this).css("display") ? !1 : !0
									}).length,
									cellIndex = $(this)[0].cellIndex;
								anchoContenidoSeleccionado_px = obtenerLargoTextoTBody(tdSeleccionado[0], tdSeleccionado[0].innerText), headersDatosWithOutAcctionToggle.each(function(i, v) {
									cellIndex !== i && $(this).is(":visible") && (anchoMaximo += obtenerLargoTextoThead($(this)))
								}), anchoContenidoSeleccionado_px = anchoMaximo > anchoTabla_px || anchoColumnaSeleccionada_px > anchoTabla_px - anchoMaximo ? obtenerLargoTextoThead($(this).parent().parent().parent().find("th:eq(" + cellIndex + ")")) + 50 : anchoContenidoSeleccionado_px > anchoMaximo ? anchoTabla_px - anchoMaximo : anchoContenidoSeleccionado_px;
								var anchoColumnaSeleccionada_porcentaje = anchoContenidoSeleccionado_px / anchoTabla_px * 100,
									tdSeleccionadoIndex = tdSeleccionado.index();
								anchoContenidoSeleccionado_px > anchoColumnaSeleccionada_px ? (tds.removeClass("activa").css("height", ""), headersDatosWithOutAcctionToggle.each(function() {
									var currentIndex = $(this).prop("cellIndex");
									if (currentIndex === tdSeleccionadoIndex) $(this).stop().animate({
										width: anchoColumnaSeleccionada_porcentaje + "%"
									}, "slow", function() {
										tdSeleccionado.addClass("activa");
										var alturaNueva = tdSeleccionado.outerHeight();
										tdSeleccionado.removeClass("activa").animate({
											height: alturaNueva
										}, "fast", function() {
											tdSeleccionado.addClass("activa")
										})
									});
									else {
										var anchoRestoColumnas = anchoMaximo > anchoTabla_px || anchoColumnaSeleccionada_px > anchoTabla_px - anchoMaximo ? (anchoTabla_px - anchoContenidoSeleccionado_px) / numeroColumnas : obtenerLargoTextoThead($(this));
										anchoRestoColumnas = anchoRestoColumnas / anchoTabla_px * 100, $(this).stop().animate({
											width: anchoRestoColumnas + "%"
										}, "slow")
									}
								})) : tds.hasClass("activa") && (tds.removeClass("activa").css("height", ""), headersDatosWithOutAcctionToggle.stop().animate({
									width: anchoColumnaDatos + "%"
								}, "slow"))
							}
						})
					}

					function obtenerLargoTextoTBody(elem, elTexto) {
						var ancho = 0;
						return elem && elTexto ? ancho = $("#temp-tabla-interactiva").length > 0 ? $("#temp-tabla-interactiva").css({
							"font-family": obtenerCss(elem, "font-family"),
							"font-size": obtenerCss(elem, "font-size")
						}).text(elTexto).width() : $('<span id="temp-tabla-interactiva"></span>').css({
							display: "none",
							whiteSpace: "nowrap",
							"font-family": obtenerCss(elem, "font-family"),
							"font-size": obtenerCss(elem, "font-size")
						}).appendTo($("body")).text(elTexto).width() : ancho
					}

					function obtenerLargoTextoThead(elem) {
						var ancho = 0,
							anchoIcono = 10;
						return elem ? (ancho = $("#temp-tabla-interactiva").css({
							"font-family": obtenerCss(elem[0], "font-family"),
							"font-size": obtenerCss(elem[0], "font-size")
						}).html(elem.html().replace(/<(?!br\s*\/?)[^>]+>/g, "")).width() + 30, elem.children("i").length > 0 && (ancho += anchoIcono), ancho) : ancho
					}

					function obtenerCss(element, property) {
						return window.getComputedStyle(element, null).getPropertyValue(property)
					}

					function agregarLogicaColumnasOcultables() {
						function celdasOcultables() {
							return $(tabla).find(".tabla-interactiva > thead th:not(.actions), .tabla-interactiva > tbody td:not(.actions)")
						}

						function columnaDisabled(status) {
							return status.ocultable ? status.visible ? scope.cantidadSeleccionados <= scope.cantidadMinimaColumnas : scope.cantidadSeleccionados >= scope.cantidadMaximaColumnas : !0
						}

						function mostrarOcultarColumnas(status) {
							function doMostrarOcultar(status, tds) {
								var checked = validarMinimosMaximos(status.visible);
								status.ocultable || (checked = !0), tds.filter(function() {
									return $(this).prop("cellIndex") == status.index
								}).each(function() {
									var td = $(this);
									checked ? td.show() : td.hide()
								}), actualizarStatusColumnas(status.index, checked)
							}
							var tds = celdasOcultables();
							status ? doMostrarOcultar(status, tds) : angular.forEach(scope.statusColumnas, function(status) {
								doMostrarOcultar(status, tds)
							})
						}

						function actualizarStatusColumnas(index, checked) {
							scope.cantidadSeleccionados = 0, angular.forEach(scope.statusColumnas, function(status) {
								status.index == index && status.ocultable && (status.visible = checked), status.visible && ++scope.cantidadSeleccionados
							})
						}

						function validarMinimosMaximos(checked) {
							var visibles = 0;
							return angular.forEach(scope.statusColumnas, function(status) {
								status.visible && ++visibles
							}), visibles > scope.cantidadMaximaColumnas && (checked = !1), visibles < scope.cantidadMinimaColumnas && (checked = !0), checked
						}
						var listadoHeader = $(tabla).find(".tabla-interactiva > thead .listado-header");
						scope.statusColumnas = [], scope.columnaDisabled = columnaDisabled, scope.mostrarOcultarColumnas = mostrarOcultarColumnas,
							function() {
								headersDatos.each(function() {
									var th = $(this),
										nombre = th.attr("alt-nombre-columna") ? th.attr("alt-nombre-columna") : th.text();
									index = th.prop("cellIndex"), scope.statusColumnas.push({
										nombre: nombre,
										index: index,
										visible: !0
									})
								}), listadoHeader.append("<ng-include src=\"'directivas-tablas/src/orionTablas/directives/orionTablas.tpl.html'\"></ng-include>"), $compile(listadoHeader)(scope)
							}(),
							function() {
								var tbody = $(tabla).find(".tabla-interactiva > tbody")[0];
								scope.$watchCollection(function() {
									return tbody.children
								}, function(newVal, oldVal) {
									newVal !== oldVal && mostrarOcultarColumnas()
								})
							}(),
							function() {
								function extractStrArray(name) {
									var arr = [];
									return hasOptionalParam(name) && scope[name].length > 0 && (arr = scope[name].split(","), angular.forEach(arr, function(val, i) {
										arr[i] = val.trim().toLowerCase().replace(/\s/g, "")
									})), arr
								}
								var thOcultos = extractStrArray("columnasOcultas"),
									thNoOcultables = extractStrArray("columnasNoOcultables");
								angular.forEach(scope.statusColumnas, function(status) {
									var nombre = status.nombre.toLowerCase().replace(/(<([^>]+)>)/gi, "").replace(/\s/g, "");
									status.ocultable = -1 === thNoOcultables.indexOf(nombre);
									var checked = -1 === thOcultos.indexOf(nombre);
									status.ocultable || checked || (console.warn("Configuracion de columnas no ocultables y ocultas por defecto contradictorias, dejando visible columna", status.nombre), checked = !0), actualizarStatusColumnas(status.index, checked)
								}), mostrarOcultarColumnas()
							}()
					}
					var tabla = angular.element(element[0]),
						headersDatos = $(tabla).find(".tabla-interactiva > thead th:not(.actions)"),
						anchoTotalAcciones = ($(tabla).find(".tabla-interactiva > thead th.actions"), 0),
						anchoColumnaDatos = 0,
						alturaCeldaInicial = 0,
						headersDatosWithOutAcctionToggle = $(tabla).find(".tabla-interactiva > thead th:not(.actions):not(.actions-toggle)"),
						headersAccionAndAcctionToggle = $(tabla).find(".tabla-interactiva > thead th.actions, tabla-interactiva > thead th.actions-toggle");
					(!hasOptionalParam("cantidadMinimaColumnas") || angular.isUndefined(scope.cantidadMinimaColumnas)) && (scope.cantidadMinimaColumnas = MINIMO_COLUMNAS_VISIBLES), (!hasOptionalParam("cantidadMaximaColumnas") || angular.isUndefined(scope.cantidadMaximaColumnas)) && (scope.cantidadMaximaColumnas = MAXIMO_COLUMNAS_VISIBLES ? MAXIMO_COLUMNAS_VISIBLES : headersDatosWithOutAcctionToggle.length), scope.cantidadMaximaColumnas < scope.cantidadMinimaColumnas && (console.warn("Cantidad de columnas maximas y minimas mal configuradas, estableciendo maximo = minimo"), scope.cantidadMaximaColumnas = scope.cantidadMinimaColumnas), scope.cantidadSeleccionados = 0, establecerTamanios(), agregarLogicaExpansionColumnas(), agregarLogicaColumnasOcultables()
				}
				hasOptionalParam("loadingSuccess") ? scope.$watch(function() {
					return scope.loadingSuccess
				}, function() {
					scope.loadingSuccess && $timeout(init, 0)
				}) : $timeout(init, 0)
			}
			return {
				restrict: "A",
				link: link,
				scope: {
					loadingSuccess: "=?",
					columnasOcultas: "@?",
					columnasNoOcultables: "@?",
					statusColumnas: "=?",
					cantidadMinimaColumnas: "=?",
					cantidadMaximaColumnas: "=?",
					customWidth: "@?"
				}
			}
		}
		angular.module("WebBancoChile.orionTablas").directive("tablasInteractivas", tablasInteractivasDirective), tablasInteractivasDirective.$inject = ["$timeout", "$compile", "orionTablas.MINIMO_COLUMNAS_VISIBLES", "orionTablas.MAXIMO_COLUMNAS_VISIBLES"]
	}(),
	function() {
		angular.module("WebBancoChile.orionTablas").constant("orionTablas.MINIMO_COLUMNAS_VISIBLES", 3).constant("orionTablas.MAXIMO_COLUMNAS_VISIBLES", !1)
	}(),
	function() {
		angular.module("WebBancoChile.directive-eess-publico").constant("URL_BASE", "/estado-situacion").constant("URL_REST", "http://152.139.92.44:7001/mibancochile/rest/persona/firma-documentos-cc/firma-documentos").constant("url_catalogo", "/obtenerCatalogo").constant("url_nivel_estudio", "/nivelestudios").constant("url_estado_completitud", "/estadocompletitud").constant("url_actividad_actual", "/actividadactual").constant("url_nivel_dependiente", "/niveldependiente").constant("url_nivel_independiente", "/nivelindependiente").constant("url_socio", "/socio").constant("url_contacto_llegada", "/contactollegada").constant("url_bancos", "/banco").constant("url_tipo_tarjeta", "/tipotarjeta").constant("url_tipo_deuda", "/tipodeuda").constant("url_simulacion", "/obtenerSimulacion").constant("url_solicitud", "/obtenerSolicitud").constant("obtener_archivos_adjuntos", "/obtenerArchivosAdjuntos/").constant("eliminar_archivos", "/borrarArchivo/").constant("ENDPOINT", {
			TEST: "",
			GUARDAR_ESTADO_SITUACION: "/guardarEstado",
			GUARDAR_SOLICITUD: "/guardarSolicitud/",
			VER_SITUACION: "/estadoSituacion",
			DATOS_CLIENTE_MSG_TOOLTIP: "/obtenerMensajeCampos",
			SEXO: "/obtenerCatalogo/sexo",
			ESTADO_CIVIL: "/obtenerCatalogo/estadocivil",
			REGIMEN_MATRIMONIAL: "/obtenerCatalogo/regmatrimonial",
			VIVIENDA: "/obtenerCatalogo/vivienda",
			NIVEL_ESTUDIOS: "/obtenerCatalogo/nivelestudios",
			NIVEL_ESTUDIOS_CONYUGE: "/obtenerCatalogo/nivelestudiosconyuge",
			ESTADO_COMPLETITUD: "/obtenerCatalogo/estadocompletitud",
			NACIONALIDAD: "/obtenerCatalogo/nacionalidad",
			ACTIVIDAD_ACTUAL: "/obtenerCatalogo/actividadactual",
			NIVEL_OCUPACIONAL_DEPENDIENTE: "/obtenerCatalogo/niveldependiente",
			NIVEL_OCUPACIONAL_INDEPENDIENTE: "/obtenerCatalogo/nivelindependiente",
			TIPO_SOCIO: "/obtenerCatalogo/socio",
			ACTIVOS_FINANCIEROS: "/obtenerCatalogo/activosfinancieros",
			TIPO_INVERSION: "/obtenerCatalogo/tipoinversiones",
			TIPO_VEHICULO: "/obtenerCatalogo/tipovehiculos",
			TIPO_BIEN_RAIZ: "/obtenerCatalogo/tipobienraiz",
			TIPO_CREDITO: "/obtenerCatalogo/credito",
			TIPO_CANAL: "/obtenerCatalogo/tipocanal"
		}).constant("DOCUMENTOS", {
			CEDULA: "CEDULA",
			CUENTA: "ESTADO_CUENTA",
			EMPLEADOR: "CERTIFICADO_EMPLEADOR",
			LIQUIDACION: "LIQUIDACION",
			AFP: "CERTIFICADO_AFP",
			HONORARIOS: "BOLETA_HONORARIOS",
			DAI: "DECLARACION_ANUAL_IND",
			IAI: "INICIO_ACTIVIDADES_IND",
			RPJ: "RECIBO_PAGO_JUB",
			TVP: "TITULO_VIGENTE_DAP",
			DAD: "DECLARACION_ANUAL_DAP",
			ESCRITURA: "ESCRITURA_SOCIEDAD_NO_CLIENTE",
			CARPETA: "CARPETA_TRIB_NO_CLIENTE",
			ANUAL_SOCIEDAD_NOC: "DECLARACION_ANUAL_SOCIEDAD_NO_CLIENTE",
			BALANCES: "BALANCES_SOCIEDAD_NO_CLIENTE",
			ANUAL_SOCIO_NOC: "DECLARACION_ANUAL_SOCIO_NO_CLIENTE",
			PPMNOC: "PPM_SOCIEDAD_NO_CLIENTE",
			ANUAL_SOCIEDAD_C: "DECLARACION_ANUAL_SOCIEDAD_CLIENTE",
			ANUAL_SOCIO_C: "DECLARACION_ANUAL_SOCIO_CLIENTE",
			PPMC: "PPM_SOCIEDAD_CLIENTE",
			IVAS: "IVAS_SOCIEDAD_CLIENTE",
			ESTUDIOS: "CERTIFICADO_ESTUDIOS",
			CA: "CONTRATO_ARRIENDO",
			RA: "RECIBO_ARRIENDO",
			ABR: "ACREDITAR_BIEN_RAIZ",
			VEHICULO: "CERTIFICADO_VEHICULO",
			INVERSION: "CERTIFICADO_INVERSION",
			CBR: "CERTIFICADO_BIEN_RAIZ"
		})
	}(),
	function() {
		function adjuntarDocumentosCtrl($scope, $modal, archivosFactory, cajaDesafioService_, estadoSituacionFactory, FileSaver, Blob, tmpTokenService, DOCUMENTOS) {
			function incluyeArchivosTipo(tipo) {
				var existe = !1;
				return vm.listadoArchivos.forEach(function(element) {
					element.tipo == tipo && (existe = !0)
				}), existe
			}

			function b64toBlob(b64Data, contentType, sliceSize) {
				sliceSize = 512;
				for (var byteCharacters = atob(b64Data), byteArrays = [], offset = 0; offset < byteCharacters.length; offset += sliceSize) {
					for (var slice = byteCharacters.slice(offset, offset + sliceSize), byteNumbers = new Array(slice.length), i = 0; i < slice.length; i++) byteNumbers[i] = slice.charCodeAt(i);
					var byteArray = new Uint8Array(byteNumbers);
					byteArrays.push(byteArray)
				}
				var blob = new Blob(byteArrays, {
					type: contentType
				});
				return blob
			}

			function activate() {
				vm.errorArchivos = !1, vm.conocerNavegador(), vm.getEstadoSituacion()
			}

			function successGetCajaDesafio(data) {
				data ? cajaDesafioService_.tieneDispositivosHabilitados() ? (vm.errorCajaDesafio = !1, vm.loadingCajaDesafio = !1, vm.tieneDispositivos = !0) : vm.errorCajaDesafio = !0 : (vm.loadingCajaDesafio = !1, errorGetCajaDesafio())
			}

			function errorGetCajaDesafio() {
				vm.errorCajaDesafio = !0
			}

			function firmaDocumentosPublico() {
				vm.valido = vm.validarArchivos(vm.listadoArchivos), vm.valido ? (vm.loading = !0, archivosFactory.guardarDocumentos(vm.listadoArchivos).then(function(res) {
					archivosFactory.firmaDocumentos(vm.estadoSituacion).then(function(result) {
						vm.loading = !1, vm.indicarPantalla = 3
					}, function(error) {
						vm.mensajeErrorFirma = "El servicio presenta intermitencias. Por favor, intenta nuevamente. Si el problema persiste llama al 600 637 3737 (Banco de Chile), 600 231 9999 (Banco Edwards), 600 638 3838 (Banco Credichile)"
					})
				}, function(err) {
					vm.loading = !1, vm.errorArchivos = !0, vm.severidad = "error", vm.errorMessageArchivo = err.data.mensaje
				})) : vm.errorArchivos = !0
			}
			var vm = this;
			vm.usaDispositivo = void 0, vm.objetoMiPass = {}, vm.documentosValido = !1, vm.aceptoTerminos = !1, vm.indicarPantalla = 2, vm.esPrivado = "" === tmpTokenService.getToken(), vm.cargandoDocumentos = !1, vm.primeraCarga = !0, vm.showBotones = !0, vm.loadFirma = !0, vm.archivoAdjunto = "", vm.listadoArchivos = [], vm.estadoSituacion = [], vm.subiendoArchivo = !1, vm.flgPermiteEliminar = !0, vm.flgGuardandoBorrador = !1, vm.firmaDocumentosPublico = firmaDocumentosPublico, vm.tieneDocumentosNecesariosParaFirmar = !1, vm.documentosValidos = !0, vm.isOpera = "", vm.isFirefox = "", vm.isSafari = "", vm.isIE = "", vm.isEdge = "", vm.isChrome = "", vm.idAdjunto = "", vm.mensajeAdjunto = "", vm.mensajeErrorFirma = "", vm.flgIdentidad = !1, vm.flgIndependiente = !1, vm.flgDependiente = !1, vm.flgPensionado = !1, vm.flgRentaAPlazo = !1, vm.flgSocioEmpresaNoCliente = !1, vm.flgSocioEmpresaCliente = !1, vm.flgEstudiante = !1, vm.flgArriendaBienesRaices = !1, vm.flgPoseeVehiculo = !1, vm.flgDeclaraInversiones = !1, vm.flgDeclaraBienRaiz = !1, vm.listaAdjuntos = [], vm.listaCedulas = [], vm.listaEstadoCuenta = [], vm.listaBoletaHonorarios = [], vm.listaDeclaracionAnualInd = [], vm.listaInicioActividadesInd = [], vm.listaCertificadoEmpleador = [], vm.listaLiquidacion = [], vm.listaCertificadoAfp = [], vm.listaReciboPagoJub = [], vm.listaTituloVigenteDap = [], vm.listaDeclaracionAnualDap = [], vm.listaEscrituraSociedadNoCliente = [], vm.listaCarpetaTribNoCliente = [], vm.listaDeclaracionAnualSociedadNoCliente = [], vm.listaBalancesSociedadNoCliente = [], vm.listaDeclaracionAnualSocioNoCliente = [], vm.listaPpmSociedadNoCliente = [], vm.listaDeclaracionAnualSociedadCliente = [], vm.listaDeclaracionAnualSocioCliente = [], vm.listaPpmSociedadCliente = [], vm.listaIvasSociedadCliente = [], vm.listaCertificadoEstudios = [], vm.listaContratoArriendo = [], vm.listaReciboArriendo = [], vm.listaAcreditarBienRaiz = [], vm.listaCertificadoVehiculo = [], vm.listaCertificadoInversion = [], vm.listaCertificadoBienRaiz = [], vm.eliminado = !1, vm.tipoArchivo = "", vm.switchActivos = function(item) {
				"identidad" === item.grupo && (vm.flgIdentidad = !0), "independiente" === item.grupo && (vm.flgIndependiente = !0), "dependiente" === item.grupo && (vm.flgDependiente = !0), "pensionado" === item.grupo && (vm.flgPensionado = !0), "renta_a_plazo" === item.grupo && (vm.flgRentaAPlazo = !0), "socio_empresa_no_cliente" === item.grupo && (vm.flgSocioEmpresaNoCliente = !0), "socio_empresa_cliente" === item.grupo && (vm.flgSocioEmpresaCliente = !0), "estudiante" === item.grupo && (vm.flgEstudiante = !0), "arrienda_bienes_raices" === item.grupo && (vm.flgArriendaBienesRaices = !0), "vehiculos" === item.grupo && (vm.flgPoseeVehiculo = !0), "inversiones" === item.grupo && (vm.flgDeclaraInversiones = !0), "bienes_raices" === item.grupo && (vm.flgDeclaraBienRaiz = !0), vm.aceptoTerminos = !1, vm.validarDocumentosEnGrupos()
			}, vm.validaDocumentosValidosParaFirmar = function() {
				var tieneCedula = vm.listadoArchivos.findIndex(function(item) {
						return "CEDULA" === item.tipo
					}),
					tieneEstadoCuenta = vm.listadoArchivos.findIndex(function(item) {
						return "ESTADO_CUENTA" === item.tipo
					});
				vm.tieneDocumentosNecesariosParaFirmar = tieneCedula > -1 && tieneEstadoCuenta > -1
			}, vm.volverAtras = function() {
				$scope.$emit("volverAtras")
			}, vm.subArray = function(tipo) {
				var tipoArray = [];
				return vm.listadoArchivos.forEach(function(element) {
					element.tipo == tipo && tipoArray.push(element)
				}), tipoArray
			}, vm.eliminarDocumento = function(idArchivo, tipo) {
				if (vm.flgPermiteEliminar) {
					var docAEliminar = vm.listadoArchivos.findIndex(function(item) {
						return item.id === idArchivo
					});
					vm.listadoArchivos.splice(docAEliminar, 1), vm.aceptoTerminos = !1, vm.validarDocumentosEnGrupos();
					var incluyeArchivoTipo;
					incluyeArchivoTipo = incluyeArchivosTipo(tipo), incluyeArchivoTipo || vm.tipoArchivo == tipo && (vm.mensajeAdjunto = "")
				}
			}, $scope.$on("adjuntarListaArchivos", function(event, archivoJson, id) {
				vm.idAdjuntoGif = "";
				var archivoValido, existeArchivo = vm.listadoArchivos.findIndex(function(item) {
					return item.nombre === archivoJson.nombre && item.tipo === archivoJson.tipo
				});
				archivoValido = vm.validarCantidadArchivosPorTipo(archivoJson), -1 != existeArchivo ? null !== id && (vm.tipoArchivo = archivoJson.tipo, $scope.$emit("mensajeAdjuntos", id, "El archivo ya existe.")) : archivoValido ? $scope.$apply(function() {
					vm.listadoArchivos.push(archivoJson), vm.aceptoTerminos = !1, vm.validarDocumentosEnGrupos()
				}) : (vm.tipoArchivo = archivoJson.tipo, $scope.$emit("mensajeAdjuntos", id, "Supera la cantidad mÃ¡xima de archivos"))
			}), $scope.$on("actualizarAdjuntos", function() {
				vm.cargarListadoDocumentos(1), vm.mensajeAdjunto = "", vm.idAdjuntoGif = ""
			}), $scope.$on("mensajeAdjuntos", function(event, id, mensaje) {
				$scope.$apply(function() {
					vm.idAdjunto = id, (mensaje.includes("2 Mb") || mensaje.includes(".png .jpg o .pdf")) && (vm.tipoArchivo = id), vm.mensajeAdjunto = mensaje, vm.idAdjuntoGif = ""
				})
			}), $scope.$on("gifSubiendo", function(event, idAdjuntoGif) {
				vm.idAdjuntoGif = idAdjuntoGif, vm.mensajeAdjunto = ""
			}), vm.conocerNavegador = function() {
				vm.isOpera = !!window.opr && !!opr.addons || !!window.opera || navigator.userAgent.indexOf(" OPR/") >= 0, vm.isFirefox = "undefined" != typeof InstallTrigger, vm.isSafari = /constructor/i.test(window.HTMLElement) || function(p) {
					return "[object SafariRemoteNotification]" === p.toString()
				}(!window.safari || "undefined" != typeof safari && safari.pushNotification), vm.isIE = !!document.documentMode, vm.isEdge = !vm.isIE && !!window.StyleMedia, vm.isChrome = !(!window.chrome || !window.chrome.webstore && !window.chrome.runtime)
			}, vm.descargarArchivo = function(idArchivo) {
				archivosFactory.obtenerDocumento(idArchivo).then(function(archivo) {
					vm.archivo = archivo.data;
					var data = new Blob([b64toBlob(vm.archivo.archivo, vm.archivo.mimeType)], {
						type: vm.archivo.mimeType
					});
					FileSaver.saveAs(data, vm.archivo.nombre)
				})
			}, vm.getEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, vm.estadoSituacion.actividadActual = parseInt(vm.estadoSituacion.actividadActual, 10), vm.esPrivado && (vm.indicarPantalla = "Enviado" === vm.estadoSituacion.estado.trim() ? 3 : 2), vm.cargarListadoDocumentos()
				})
			}, vm.openModalPrevisualizacion = function(idDocumeto) {
				var modalInstance = $modal.open({
					templateUrl: "directive-eess/src/directive-eess/common/directives/modals/previsualizacion/previsualizacion.tpl.html",
					controller: "modalPrevisualizacionController",
					controllerAs: "modEstPrev",
					size: "md",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static",
					resolve: {
						idDocumeto: function() {
							return idDocumeto
						}
					}
				});
				modalInstance.result.then(function(e) {
					vm.getEstadoSituacion()
				})
			}, vm.validarDocumentosEnGrupos = function() {
				vm.documentosValidos = !0, vm.flgIdentidad && vm.verificarDocumento("identidad"), vm.flgDependiente && vm.verificarDocumento("dependiente"), vm.flgIndependiente && vm.verificarDocumento("independiente"), vm.flgPensionado && vm.verificarDocumento("pensionado"), vm.flgRentaAPlazo && vm.verificarDocumento("renta_a_plazo"), vm.flgSocioEmpresaNoCliente && vm.verificarDocumento("socio_empresa_no_cliente"), vm.flgSocioEmpresaCliente && vm.verificarDocumento("socio_empresa_cliente"), vm.flgEstudiante && vm.verificarDocumento("estudiante"), vm.flgArriendaBienesRaices && vm.verificarDocumento("arrienda_bienes_raices"), vm.flgPoseeVehiculo && vm.verificarDocumento("vehiculos"), vm.flgDeclaraInversiones && vm.verificarDocumento("inversiones"), vm.flgDeclaraBienRaiz && vm.verificarDocumento("bienes_raices"), vm.validaDocumentosValidosParaFirmar()
			}, vm.verificarDocumento = function(grupo) {
				var tieneDocumento = vm.listadoArchivos.findIndex(function(item) {
					return item.grupo === grupo
				});
				vm.documentosValido = !1, vm.documentosValidos && (vm.documentosValidos = tieneDocumento > -1)
			}, vm.validarDocumentos = function() {
				vm.documentosValido = !0, vm.listadoArchivos.forEach(function(i) {
					if (vm.switchActivos(i), i.obligatorio)
						for (var j = 0, len = i.documentos.length; len > j; j++) i.documentos[j].archivos.length || (vm.documentosValido = !1, vm.aceptoTerminos = !1)
				})
			}, vm.cargarListadoDocumentos = function(estado) {
				vm.cargandoDocumentos = !0, archivosFactory.getListadoArchivos(estado).then(function(resp) {
					vm.listadoArchivos = resp.data.data, vm.validarDocumentos(), vm.validarDocumentosEnGrupos(), vm.flgPermiteEliminar = !0, vm.idAdjuntoGif = "", vm.cargandoDocumentos = !1, vm.primeraCarga && (vm.primeraCarga = !1)
				}, function(error) {
					console.log("error al cargar lista", error)
				})
			}, vm.stepCompleted = function(step) {
				switch (step) {
					case 4:
						if ($scope.teletonForm.$invalid) return !1
				}
				return !0
			}, vm.guardarBorrador = function() {
				vm.valido = vm.validarArchivos(vm.listadoArchivos), vm.valido ? (vm.flgGuardandoBorrador = !0, vm.estadoSituacion.estado = "INCOMPLETO", estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(res) {
					archivosFactory.guardarDocumentos(vm.listadoArchivos).then(function(res) {
						res.error && console.log("Error al guardar lista de archivos"), vm.esPrivado ? location.href = "#home" : location.href = "https://portales.bancochile.cl/personas", vm.flgGuardandoBorrador = !1
					}, function(error) {
						vm.errorArchivos = !0, vm.severidad = "error", vm.errorMessageArchivo = error.data.mensaje
					})
				})) : vm.errorArchivos = !0
			}, vm.activaCajaDesafio = function() {
				vm.validarDocumentosEnGrupos(), vm.esPrivado && archivosFactory.getDispositivosCC().then(successGetCajaDesafio, errorGetCajaDesafio)
			}, vm.validarArchivos = function(lista) {
				var valido = !0,
					tamaÃ± o = 0;
				return lista.forEach(function(item) {
					tamaÃ± o++, "png" != item.extension && "jpeg" != item.extension && "pdf" != item.extension && (valido = !1, vm.severidad = "error", vm.errorMessageArchivo = "Formato de uno o mÃ¡s archivos no permitido"), tamaÃ± o > 70 && (valido = !1, vm.severidad = "error", vm.errorMessageArchivo = "La cantidad de archivos totales supera el mÃ¡ximo permitido")
				}), valido
			}, vm.validarCantidadArchivosPorTipo = function(archivo) {
				var tipoArchivo = _.find([{
						tipo: DOCUMENTOS.CEDULA,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.CUENTA,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.EMPLEADOR,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.LIQUIDACION,
						cantidad: 3
					}, {
						tipo: DOCUMENTOS.AFP,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.HONORARIOS,
						cantidad: 4
					}, {
						tipo: DOCUMENTOS.DAI,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.IAI,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.RPJ,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.TVP,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.DAD,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.ESCRITURA,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.CARPETA,
						cantidad: 3
					}, {
						tipo: DOCUMENTOS.ANUAL_SOCIEDAD_NOC,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.BALANCES,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.ANUAL_SOCIO_NOC,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.PPMNOC,
						cantidad: 4
					}, {
						tipo: DOCUMENTOS.ANUAL_SOCIEDAD_C,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.ANUAL_SOCIO_C,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.PPMC,
						cantidad: 4
					}, {
						tipo: DOCUMENTOS.IVAS,
						cantidad: 3
					}, {
						tipo: DOCUMENTOS.ESTUDIOS,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.CA,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.RA,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.ABR,
						cantidad: 3
					}, {
						tipo: DOCUMENTOS.VEHICULO,
						cantidad: 2
					}, {
						tipo: DOCUMENTOS.INVERSION,
						cantidad: 4
					}, {
						tipo: DOCUMENTOS.CBR,
						cantidad: 4
					}], function(item) {
						return item.tipo === archivo.tipo
					}),
					archivos = _.filter(vm.listadoArchivos, function(item) {
						return item.tipo === archivo.tipo
					});
				return archivos.length < tipoArchivo.cantidad
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("adjuntarDocumentosCtrl", adjuntarDocumentosCtrl), adjuntarDocumentosCtrl.$inject = ["$scope", "$modal", "archivosFactory", "cajaDesafioService_", "estadoSituacionFactory", "FileSaver", "Blob", "tmpTokenService", "DOCUMENTOS"]
	}(),
	function() {
		function adjuntarDocumentosDirective() {
			var directive = {
				bindToController: !0,
				restrict: "E",
				controller: "adjuntarDocumentosCtrl",
				controllerAs: "adjunta",
				templateUrl: "directive-eess-publico/src/directive-eess/common/directives/estado-situacion/adjuntar-documentos/adjuntar-documentos.directive.tpl.html",
				scope: {
					text: "="
				}
			};
			return directive
		}
		angular.module("WebBancoChile.directive-eess-publico").directive("adjuntarDocumentosDirective", adjuntarDocumentosDirective), adjuntarDocumentosDirective.$inject = []
	}(),
	function() {
		function comprobanteEESSController($scope, $state, $stateParams) {
			function init() {
				vm.indicarPantalla = 3
			}
			var vm = this;
			vm.indicarPantalla = 0, init(), vm.volverAlInicio = function() {
				location.href = "https://portales.bancochile.cl/personas"
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("comprobanteEESSController", comprobanteEESSController), comprobanteEESSController.$inject = ["$scope", "$state", "$stateParams"]
	}(),
	function() {
		function comprobanteEESSDirective() {
			return {
				bindToController: !0,
				restrict: "E",
				controller: "comprobanteEESSController",
				controllerAs: "comprobante",
				templateUrl: "directive-eess-publico/src/directive-eess/common/directives/estado-situacion/comprobante/comprobante-eess.tpl.html",
				scope: {
					text: "="
				}
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").directive("comprobanteEessDirective", comprobanteEESSDirective), comprobanteEESSDirective.$inject = []
	}(),
	function() {
		function firmaElectronicaDirectiveController(estadoSituacionFactory, $modal, datosDeudasFactory, tusActivosFactory, datosPersonalesFactory, $scope, tmpTokenService) {
			function activate() {
				tmpTokenService.deleteToken(), tmpTokenService.setToken(vm.token), vm.esPrivado = "" === vm.token, vm.getGenero(), vm.getEstadoCivil(), vm.getRegimenMatrimonial(), vm.getVivienda(), vm.getNivelEstudios(), vm.getEstadoCompletitud(), vm.getActividadActual(), vm.getNivelOcDependiente(), vm.getNivelOcIndependiente(), vm.getNacionalidad(), vm.getPaises(), vm.getActivosFinancieros(), vm.getTipoInversion(), vm.getTipoVehiculo(), vm.getEstadoSituacion(), datosDeudasFactory.getBancos().then(function(resp) {
					resp.data.length > 0 && (vm.listaBancos = resp.data)
				}), datosDeudasFactory.getTipoDeuda().then(function(resp) {
					resp.data.length > 0 && (vm.listaTipoDeuda = resp.data)
				}), datosDeudasFactory.getTipoTarjeta().then(function(resp) {
					resp.data.length > 0 && (vm.listaTipoTarjeta = resp.data)
				}), datosDeudasFactory.getContactoLlegada().then(function(resp) {
					resp.data.length > 0 && (vm.listaContactoLlegada = resp.data)
				}), vm.flgCargaEstado = !0
			}
			var vm = this,
				urlBase = "directive-eess-publico/src/directive-eess/common/directives/";
			vm.indicarPantalla = 1, vm.simulacion = {}, vm.guardadoRutSostenedor = !1, vm.complementarRenta = !1, vm.mdUsarDirParticular = !1, vm.estadoSituacionEnviado = "Enviado", vm.tieneSostenedor = !1, vm.continuar = !1, vm.continuar2 = !1, vm.continuarProceso = !1, vm.msjCompletaPasoUnoDos = !0, vm.flgCargaEstado = !1, vm.flgMsgGuardado = !1, vm.flgMsgObligatorio = !1, vm.flgCargoPublicoPropio = !1, vm.flgCargoPublicoRelacionado = !1, vm.flgEstudios = !1, vm.acorAntecedentes = !1, vm.acorAntecedentes = !0, vm.flgMsgGuardado = !1, vm.paises = [], vm.tengoSostenedor = !1, vm.sostenedorVacio = {
				actividad: null,
				apellidoMaterno: null,
				apellidoPaterno: null,
				calle: null,
				clienteBanco: null,
				dv: null,
				estadoSeccion: "INCOMPLETO",
				id: 0,
				idCiudad: 0,
				idComuna: 0,
				idPais: 0,
				idRegion: 0,
				labelCiudad: null,
				labelComuna: null,
				labelPais: null,
				labelRegion: null,
				nombres: null,
				nroDeptoCasa: null,
				numero: null,
				rut: null,
				telefonoParticular: null
			}, vm.estudiosConyugeVacio = {
				anoCursa: 0,
				completitud: 0,
				duracion: 0,
				estadoSeccion: "INCOMPLETO",
				id: 0,
				nivel: 0,
				tipo: "INDEFINIDO",
				tituloCarrera: null,
				universidadIp: null
			}, vm.acorDireParticular = !1, vm.flgMsgGuardadoDireParticular = !1, vm.acorDireComercial = !1, vm.flgMsgGuardadoDireComercial = !1, vm.acorCargosPublicos = !1, vm.flgMsgGuardadoCargosPublicos = !1, vm.acorEstudios = !1, vm.flgMsgGuardadoEstudios = !1, vm.acorActividadActual = !1, vm.flgMsgGuardadoActividadActual = !1, vm.acorRutSostenedor = !1, vm.flgMsgGuardadoRutSostenedor = !1, vm.acorIngresoLiquidoMensual = !1, vm.flgMsgGuardadoIngresoLiquidoMensual = !1, vm.acorActAnterior = !1, vm.flgMsgGuardadoActAnterior = !1, vm.acorAntecedentesConnyuge = !1, vm.flgMsgGuardadoAntecedentesConnyuge = !1, vm.acorActActualConnyuge = !1, vm.flgMsgGuardadoActActualConnyuge = !1, vm.acorIngresoLiquidoMensualConyuge = !1, vm.flgMsgGuardadoIngresoLiquidoMensualConyug = !1, vm.acorActividadAnteriorConyuge = !1, vm.flgMsgGuardadoActividadAnteriorConyuge = !1, vm.montoLineaCredito = 0, vm.cuotaLineaCredito = 0, vm.montoTarjetaCredito = 0, vm.cuotaTarjetaCredito = 0, vm.montoCreditoHipotecario = 0, vm.cuotaCreditoHipotecario = 0, vm.montoCreditoAutomotriz = 0, vm.cuotaCreditoAutomotriz = 0, vm.montoCreditoCuotas = 0, vm.cuotaCreditoCuotas = 0, vm.montoCreditoComercial = 0, vm.cuotaCreditoComercial = 0, vm.totalMontoPasivo = 0, vm.totalCuotaPasivo = 0, vm.acorActivos = !1, vm.flgMsgGuardadoActivos = !1, vm.acorActivosFinancieros = !1, vm.flgMsgGuardadoActivosFinancieros = !1, vm.acorPartSociedades = !1, vm.flgMsgGuardadoPartSociedades = !1, vm.acorCuentaDeuda = !1, vm.flgMsgGuardadoCuentaDeuda = !1, vm.acorPasivos = !1, vm.flgMsgGuardadoPasivos = !1, vm.acorContacto = !1, vm.flgMsgGuardadoContacto = !1, vm.listaGenero = [], vm.listaEstadoCivil = [], vm.listaRegimenMatrimonial = [], vm.listaVivienda = [], vm.listaNivelEstudios = [], vm.listaEstadoCompletitud = [], vm.listaActividadActual = [], vm.listaNivelOcDependiente = [], vm.listaNivelOcIndependiente = [], vm.listaNacionalidad = [], vm.listaActivosFinancieros = [], vm.listaTipoInversion = [], vm.listaTipoVehiculo = [], vm.tiposBienes = [], vm.detalleInversion = "", vm.totalInversion = 0, vm.detalleVehiculos = "", vm.totalVehiculos = 0, vm.detalleSociedades = "", vm.totalSociedades = 0, vm.detalleBien = "", vm.totalBien = 0, vm.detalleOtros = "", vm.totalOtros = 0, vm.detalleLineaCredito = "", vm.totalLineaCredito = 0, vm.detalleTarjetaCredito = "", vm.totalTarjetaCredito = 0, vm.detalleDeudaDirecta = "", vm.totalDeudaDirecta = 0, vm.detalleDeudaIndirecta = "", vm.totalDeudaIndirecta = 0, vm.listaBancos = [], vm.listaTipoDeuda = [], vm.listaTipoTarjeta = [], vm.listaContactoLlegada = [], vm.totaltotalActivos = 0, vm.flgMsgGuardadoParticipacionSociedades = !1, vm.estadoSituacion = {}, vm.direccionParticular = {}, vm.direccionComercial = {}, vm.lineaCredito = [], vm.tarjetaCredito = [], vm.creditoHipotecario = [], vm.creditoAutomotriz = [], vm.creditoCuotas = [], vm.creditoComercial = [], vm.flechaAntecedentes = !1, vm.flechaDirPart = !0, vm.flechaDirCome = !0, vm.flechaCargos = !0, vm.flechaEstudios = !0, vm.flechaActividad = !0, vm.flechaAtecedentesSost = !0, vm.flechaIngresoSost = !0, vm.flechaAntecedentesConyuge = !0, vm.flechaIngresoConyuge = !0, vm.flechaActivos = !0, vm.flechaParticipacion = !0, vm.flechaPasivos = !0, vm.guardarBorrador = function() {
				vm.estadoSituacion.estado = "INCOMPLETO", estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(res) {
					vm.esPrivado ? location.href = "#home" : location.href = "https://portales.bancochile.cl/personas"
				})
			}, vm.getPaises = function() {
				datosPersonalesFactory.getPaises().success(function(lista) {
					vm.paises = lista
				}).error(function(e) {})
			}, vm.btnContinuar = function(opcion) {
				switch (opcion) {
					case "actActual":
						3 == vm.estadoSituacion.actividadActual || 4 == vm.estadoSituacion.actividadActual || vm.tengoSostenedor ? (vm.acorRutSostenedor = !0, vm.flechaAtecedentesSost = !1) : (vm.acorIngresoLiquidoMensual = !0, vm.flechaIngresoSost = !1);
						break;
					case "ingresoLiqMensual":
						vm.acorAntecedentesConnyuge = !0, vm.flechaAntecedentesConyuge = !1
				}
			}, $scope.$on("volverAtras", function() {
				console.log("volviendo atras..."), vm.indicarPantalla = 1
			}), vm.usarDirParticular = function() {
				var posDireccionComercial = vm.estadoSituacion.direcciones.findIndex(function(item) {
					return "COMERCIAL" === item.tipo
				});
				vm.mdUsarDirParticular ? (vm.rollbackDireccionComercial = angular.copy(vm.direccionComercial), vm.direccionComercial = angular.copy(vm.direccionParticular), vm.direccionComercial.tipo = "COMERCIAL", posDireccionComercial > -1 ? (vm.estadoSituacion.direcciones[posDireccionComercial] = vm.direccionComercial, vm.estadoSituacion.direcciones[posDireccionComercial].estadoSeccion = "COMPLETADO") : (vm.direccionComercial.estadoSeccion = "COMPLETADO", vm.estadoSituacion.direcciones.push(vm.direccionComercial)), vm.validarCamposObligatorios(), vm.guardarEstadoSituacion()) : (void 0 !== vm.rollbackDireccionComercial ? (vm.direccionComercial = vm.rollbackDireccionComercial, posDireccionComercial > -1 ? vm.estadoSituacion.direcciones[posDireccionComercial] = vm.direccionComercial : vm.estadoSituacion.direcciones.push(vm.direccionComercial)) : (vm.direccionComercial.calle = null, vm.direccionComercial.celular = null, vm.direccionComercial.codigoPostal = null, vm.direccionComercial.email = null, vm.direccionComercial.fax = null, vm.direccionComercial.id = null, vm.direccionComercial.idCiudad = null, vm.direccionComercial.idComuna = null, vm.direccionComercial.idPais = null, vm.direccionComercial.idRegion = null, vm.direccionComercial.labelCiudad = null, vm.direccionComercial.labelComuna = null, vm.direccionComercial.labelPais = null, vm.direccionComercial.labelRegion = null, vm.direccionComercial.nroDeptoCasa = null, vm.direccionComercial.numero = null, vm.direccionComercial.telefono = null, vm.direccionComercial.tipo = "COMERCIAL", vm.direccionComercial.estadoSeccion = "INCOMPLETO", vm.estadoSituacion.direcciones[posDireccionComercial] = vm.direccionComercial), vm.validarCamposObligatorios(), vm.guardarEstadoSituacion())
			}, vm.ocultarMensajesGuardado = function() {
				vm.flgMsgGuardado = !1, vm.flgMsgGuardadoDireParticular = !1, vm.flgMsgGuardadoDireComercial = !1, vm.flgMsgGuardadoCargosPublicos = !1, vm.flgMsgGuardadoEstudios = !1, vm.flgMsgGuardadoActividadActual = !1, vm.flgMsgGuardadoIngresoLiquidoMensual = !1, vm.flgMsgGuardadoActAnterior = !1, vm.flgMsgGuardadoAntecedentesConyuge = !1, vm.flgMsgGuardadoAntecedentesConnyuge = !1, vm.flgMsgGuardadoActActualConnyuge = !1, vm.flgMsgGuardadoIngresoLiquidoMensualConyug = !1, vm.flgMsgGuardadoActividadAnteriorConyuge = !1, vm.flgMsgGuardadoActivos = !1, vm.flgMsgGuardadoActivosFinancieros = !1, vm.flgMsgGuardadoCuentaDeuda = !1, vm.flgMsgGuardadoPasivos = !1, vm.flgMsgGuardadoContacto = !1
			}, vm.getTipoBienes = function() {
				datosPersonalesFactory.tipoBienRaiz().success(function(data) {
					vm.tiposBienes = data
				})
			}, vm.buscar = function(tipo, id) {
				var temp;
				return "genero" === tipo && vm.listaGenero.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "estadoCivil" === tipo && vm.listaEstadoCivil.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "regimenMatrimonial" === tipo && vm.listaRegimenMatrimonial.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "vivienda" === tipo && vm.listaVivienda.forEach(function(i) {
					i.id == id && ("Propia con Deuda" == i.valor && (i.valor = "Propia con deuda"), "Propia sin Deuda" == i.valor && (i.valor = "Propia sin deuda"), "Vive con Familiares" == i.valor && (i.valor = "Vive con familiares"), temp = i.valor)
				}), "nivelEstudio" === tipo && vm.listaNivelEstudios.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "estadoCompletitud" === tipo && vm.listaEstadoCompletitud.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "actividadActual" === tipo && vm.listaActividadActual.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "nivelOcDependiente" === tipo && vm.listaNivelOcDependiente.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "nivelOcIndependiente" === tipo && vm.listaNivelOcIndependiente.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "nacionalidad" === tipo && vm.listaNacionalidad.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "paises" === tipo && vm.paises.forEach(function(i) {
					i.value == id && (temp = i.nombre)
				}), "activosFinancieros" === tipo && vm.listaActivosFinancieros.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "tipoInversion" === tipo && vm.listaTipoInversion.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "tipoVehiculo" === tipo && vm.listaTipoVehiculo.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), "bienes" === tipo && vm.tiposBienes.length > 0 && vm.tiposBienes.forEach(function(i) {
					i.id === id && (temp = i.valor)
				}), "inversion" === tipo && vm.listaTipoInversion.length > 0 && vm.listaTipoInversion.forEach(function(i) {
					i.id === id && (temp = i.valor)
				}), "vehiculo" === tipo && vm.listaTipoVehiculo.length > 0 && vm.listaTipoVehiculo.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), temp
			}, vm.getPasivos = function() {
				vm.lineaCredito = [], vm.tarjetaCredito = [], vm.creditoHipotecario = [], vm.creditoAutomotriz = [], vm.creditoCuotas = [], vm.creditoComercial = [], vm.estadoSituacion.pasivos.forEach(function(item) {
					1 == item.tipo && vm.lineaCredito.push(item), 2 == item.tipo && vm.tarjetaCredito.push(item), 3 == item.tipo && vm.creditoHipotecario.push(item), 4 == item.tipo && vm.creditoAutomotriz.push(item), 5 == item.tipo && vm.creditoCuotas.push(item), 6 == item.tipo && vm.creditoComercial.push(item)
				})
			}, vm.getEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(lista) {
					if (("M" === lista.data.datosPersonales.sexo || "m" === lista.data.datosPersonales.sexo) && (lista.data.datosPersonales.sexo = 1), ("F" === lista.data.datosPersonales.sexo || "f" === lista.data.datosPersonales.sexo) && (lista.data.datosPersonales.sexo = 2), vm.estadoSituacion = lista.data, vm.estadoSituacionEnviado = "", vm.estadoSituacion.estado && null !== vm.estadoSituacion.estado && void 0 !== vm.estadoSituacion.estado && (vm.estadoSituacionEnviado = vm.estadoSituacion.estado.trim()), 2 === vm.estadoSituacion.datosPersonales.estadoCivil ? (vm.stepActivos = 4, vm.stepPasivos = 5) : (vm.stepActivos = 3, vm.stepPasivos = 4), "COMPLETADO" === vm.estadoSituacion.datosPersonalesConyuge.estadoSeccion && (vm.tieneSostenedor = !0), vm.direccionParticular = vm.estadoSituacion.direcciones.find(function(item) {
							return "PARTICULAR" === item.tipo
						}), vm.direccionComercial = vm.estadoSituacion.direcciones.find(function(item) {
							return "COMERCIAL" === item.tipo
						}), vm.mdUsarDirParticular = vm.direccionesIguales(), 3 == vm.estadoSituacion.actividadActual || 4 == vm.estadoSituacion.actividadActual ? (vm.tengoSostenedor = 1, vm.estadoSituacion.tieneSostenedor = 1) : (vm.tengoSostenedor = 0, vm.estadoSituacion.tieneSostenedor = 0), vm.activosSociedades = angular.copy(vm.estadoSituacion.activosSociedades), vm.activosSociedades.length > 0) {
						var posEmptyElement = vm.activosSociedades.findIndex(function(item) {
							return null === item.razonSocial
						});
						posEmptyElement > -1 && vm.activosSociedades.splice(posEmptyElement, 1)
					}
					vm.obtieneCargosPublicos(), vm.obtieneNivelEstudios(), vm.sumaTotalLiquido(), vm.getPasivos(), vm.totalesTusActivos(), vm.totalesPasivos(), vm.sumaTotalLiquido(), vm.sumaTotalLiquidoSostenedor(), vm.sumaTotalLiquidoConyuge(), vm.sumatotalActivos(), vm.sumatotalParticipacionSociedades(), vm.getTipoBienes(), vm.getActivosFinancieros(), vm.getTipoVehiculo(), vm.validarCamposObligatorios()
				})
			}, vm.direccionesIguales = function() {
				var direccionParticular = angular.copy(vm.estadoSituacion.direcciones.find(function(item) {
						return "PARTICULAR" === item.tipo
					})),
					direccionComercial = angular.copy(vm.estadoSituacion.direcciones.find(function(item) {
						return "COMERCIAL" === item.tipo
					}));
				return null !== direccionParticular && void 0 !== direccionParticular && null !== direccionComercial && void 0 !== direccionComercial ? (direccionParticular.tipo = "", direccionComercial.tipo = "", _.isEqual(direccionComercial, direccionParticular)) : !1
			}, vm.getGenero = function() {
				estadoSituacionFactory.getGenero().then(function(lista) {
					vm.listaGenero = lista.data
				})
			}, vm.getEstadoCivil = function() {
				estadoSituacionFactory.getEstadoCivil().then(function(lista) {
					vm.listaEstadoCivil = lista.data
				})
			}, vm.getActivosFinancieros = function() {
				tusActivosFactory.getActivosFinancieros().success(function(lista) {
					vm.listaActivosFinancieros = lista
				}).error(function(e) {})
			}, vm.getTipoInversion = function() {
				tusActivosFactory.getTipoInversion().success(function(lista) {
					vm.listaTipoInversion = lista
				}).error(function(e) {})
			}, vm.getTipoVehiculo = function() {
				tusActivosFactory.getTipoVehiculo().success(function(lista) {
					vm.listaTipoVehiculo = lista
				}).error(function(e) {})
			}, vm.getRegimenMatrimonial = function() {
				estadoSituacionFactory.getRegimenMatrimonial().then(function(lista) {
					vm.listaRegimenMatrimonial = lista.data
				})
			}, vm.getVivienda = function() {
				estadoSituacionFactory.getVivienda().then(function(lista) {
					vm.listaVivienda = lista.data
				})
			}, vm.getNivelEstudios = function() {
				estadoSituacionFactory.getNivelEstudios().then(function(lista) {
					vm.listaNivelEstudios = lista.data
				})
			}, vm.getEstadoCompletitud = function() {
				estadoSituacionFactory.getEstadoCompletitud().then(function(lista) {
					vm.listaEstadoCompletitud = lista.data
				})
			}, vm.getActividadActual = function() {
				estadoSituacionFactory.getActividadActual().then(function(lista) {
					vm.listaActividadActual = lista.data
				})
			}, vm.getNivelOcDependiente = function() {
				estadoSituacionFactory.getNivelOcDependiente().then(function(lista) {
					vm.listaNivelOcDependiente = lista.data
				})
			}, vm.getNivelOcIndependiente = function() {
				estadoSituacionFactory.getNivelOcIndependiente().then(function(lista) {
					vm.listaNivelOcIndependiente = lista.data
				})
			}, vm.getNacionalidad = function() {
				estadoSituacionFactory.getNacionalidad().then(function(lista) {
					vm.listaNacionalidad = lista.data
				})
			}, vm.getActivosFinancieros = function() {
				estadoSituacionFactory.getActivosFinancieros().then(function(lista) {
					vm.listaActivosFinancieros = lista.data
				})
			}, vm.getTipoInversion = function() {
				estadoSituacionFactory.getTipoInversion().then(function(lista) {
					vm.listaTipoInversion = lista.data
				})
			}, vm.getTipoVehiculo = function() {
				estadoSituacionFactory.getTipoVehiculo().then(function(lista) {
					vm.listaTipoVehiculo = lista.data
				})
			}, vm.sumaTotalLiquido = function() {
				vm.totalLiquido = 0, vm.estadoSituacion.ingresos.forEach(function(item) {
					item.monto > -1 && (vm.totalLiquido += item.monto)
				})
			}, vm.sumaTotalLiquidoSostenedor = function() {
				vm.totalLiquidoSostenedor = 0, vm.estadoSituacion.ingresosSostenedor[0] && (vm.estadoSituacion.ingresosSostenedor[0].monto > 0 && (vm.totalLiquidoSostenedor += vm.estadoSituacion.ingresosSostenedor[0].monto), vm.estadoSituacion.ingresosSostenedor[1].monto > 0 && (vm.totalLiquidoSostenedor += vm.estadoSituacion.ingresosSostenedor[1].monto), vm.estadoSituacion.ingresosSostenedor[2].monto > 0 && (vm.totalLiquidoSostenedor += vm.estadoSituacion.ingresosSostenedor[2].monto), vm.estadoSituacion.ingresosSostenedor[3].monto > 0 && (vm.totalLiquidoSostenedor += vm.estadoSituacion.ingresosSostenedor[3].monto), vm.estadoSituacion.ingresosSostenedor[4].monto > 0 && (vm.totalLiquidoSostenedor += vm.estadoSituacion.ingresosSostenedor[4].monto))
			}, vm.sumaTotalLiquidoConyuge = function() {
				vm.totalLiquidoConyuge = 0, vm.estadoSituacion.ingresosConyuge[0] && (vm.estadoSituacion.ingresosConyuge[0].monto > 0 && (vm.totalLiquidoConyuge += vm.estadoSituacion.ingresosConyuge[0].monto), vm.estadoSituacion.ingresosConyuge[1].monto > 0 && (vm.totalLiquidoConyuge += vm.estadoSituacion.ingresosConyuge[1].monto), vm.estadoSituacion.ingresosConyuge[2].monto > 0 && (vm.totalLiquidoConyuge += vm.estadoSituacion.ingresosConyuge[2].monto), vm.estadoSituacion.ingresosConyuge[3].monto > 0 && (vm.totalLiquidoConyuge += vm.estadoSituacion.ingresosConyuge[3].monto), vm.estadoSituacion.ingresosConyuge[4].monto > 0 && (vm.totalLiquidoConyuge += vm.estadoSituacion.ingresosConyuge[4].monto))
			}, vm.sumatotalActivos = function() {
				vm.totaltotalActivos = 0, vm.totalActivosBienes = 0, vm.totalActivosInversiones = 0, vm.totalActivosVehiculos = 0, vm.totalActivosOtros = 0, vm.estadoSituacion.activosBienesRaices.length > 0 && vm.estadoSituacion.activosBienesRaices.forEach(function(bien) {
					(null !== bien.valorComercial || void 0 !== bien.valorComercial) && (vm.totalActivosBienes += bien.valorComercial)
				}), vm.estadoSituacion.activosInversiones.length > 0 && vm.estadoSituacion.activosInversiones.forEach(function(inversion) {
					(null !== inversion.valorComercion || void 0 !== inversion.valorComercion) && (vm.totalActivosInversiones += inversion.valorComercion)
				}), vm.estadoSituacion.activosVehiculos.length > 0 && vm.estadoSituacion.activosVehiculos.forEach(function(vehiculo) {
					(null !== vehiculo.valorComercial || void 0 !== vehiculo.valorComercial) && (vm.totalActivosVehiculos += vehiculo.valorComercial)
				}), vm.estadoSituacion.activosOtros.length > 0 && vm.estadoSituacion.activosOtros.forEach(function(otro) {
					(null !== otro.valorComercial || void 0 !== otro.valorComercial) && (vm.totalActivosOtros += otro.valorComercial)
				}), vm.totaltotalActivos = vm.totalActivosBienes + vm.totalActivosInversiones + vm.totalActivosVehiculos + vm.totalActivosOtros
			}, vm.sumatotalParticipacionSociedades = function() {
				vm.totalSociedades = 0, vm.estadoSituacion.activosSociedades.length > 0 && vm.estadoSituacion.activosSociedades.forEach(function(bien) {
					vm.totalSociedades += bien.montoParticipacion
				})
			}, vm.activarTablaCuentaCorriente = function() {
				vm.flgInversiones = !1, vm.flgAgregarInversiones = !1, vm.listaICuentasCorrientes = [], (void 0 !== vm.estadoSituacion.cuentasCorrientes || null !== vm.estadoSituacion.cuentasCorrientes) && vm.estadoSituacion.cuentasCorrientes.length > 0 && (vm.flgInversiones = !0, vm.flgAgregarInversiones = !1, vm.listaICuentasCorrientes = vm.estadoSituacion.cuentasCorrientes)
			}, vm.activarTablaLineasCreditos = function() {
				vm.flgLineaCredito = !1, vm.flgAgregarLineaCredito = !1, vm.listaLineasCredito = [], (void 0 !== vm.estadoSituacion.lineasCredito || null !== vm.estadoSituacion.lineasCredito) && vm.estadoSituacion.lineasCredito.length > 0 && (vm.flgLineaCredito = !0, vm.flgAgregarLineaCredito = !1, vm.listaLineasCredito = vm.estadoSituacion.lineasCredito)
			}, vm.activarTablaTarjetaCredito = function() {
				vm.flgTarjetaCredito = !1, vm.flgAgregarTarjetaCredito = !1, vm.listaTarjetaCredito = [], (void 0 !== vm.estadoSituacion.tarjetasCredito || null !== vm.estadoSituacion.tarjetasCredito) && vm.estadoSituacion.tarjetasCredito.length > 0 && (vm.flgTarjetaCredito = !0, vm.flgAgregarTarjetaCredito = !1, vm.listaTarjetaCredito = vm.estadoSituacion.tarjetasCredito)
			}, vm.activarTablaDeudaDirecta = function() {
				vm.flgDeudaDirecta = !1, vm.flgAgregarDeudaDirecta = !1, vm.listaDeudaDirecta = [], (void 0 !== vm.estadoSituacion.deudasDirectas || null !== vm.estadoSituacion.deudasDirectas) && vm.estadoSituacion.deudasDirectas.length > 0 && (vm.flgDeudaDirecta = !0, vm.flgAgregarDeudaDirecta = !1, vm.listaDeudaDirecta = vm.estadoSituacion.deudasDirectas)
			}, vm.activarTablaDeudaIndirecta = function() {
				vm.flgDeudaIndirecta = !1, vm.flgAgregarDeudaIndirecta = !1, vm.listaDeudaIndirecta = [], (void 0 !== vm.estadoSituacion.deudasIndirectas || null !== vm.estadoSituacion.deudasIndirectas) && vm.estadoSituacion.deudasIndirectas.length > 0 && (vm.flgDeudaIndirecta = !0, vm.flgAgregarDeudaIndirecta = !1, vm.listaDeudaIndirecta = vm.estadoSituacion.deudasIndirectas)
			}, vm.calcularActivos = function() {
				vm.totalInversion = 0, vm.totalVehiculos = 0, vm.totalSociedades = 0, vm.totalBien = 0, vm.totalOtros = 0, vm.detalleInversion = [], vm.detalleVehiculos = [], vm.detalleSociedades = [], vm.detalleBien = [], vm.detalleOtros = [], vm.estadoSituacion.activosInversiones.forEach(function(i) {
					vm.detalleInversion += vm.buscar("tipoInversion", i.tipo) + " - " + i.institucion + ", ", vm.totalInversion += i.valorComercial
				}), vm.estadoSituacion.activosVehiculos.forEach(function(i) {
					vm.detalleVehiculos += vm.buscar("tipoVehiculo", i.tipo) + " - " + i.marca + " - " + i.modelo + ", ", vm.totalVehiculos += i.valorComercial
				}), vm.estadoSituacion.activosSociedades.forEach(function(i) {
					vm.detalleSociedades += i.razonSocial + ", ", vm.totalSociedades += i.montoParticipacion
				}), vm.estadoSituacion.activosBienesRaices.forEach(function(i) {
					vm.detalleBien += i.direccion + ", ", vm.totalBien += i.valorComercial
				}), vm.estadoSituacion.activosOtros.forEach(function(i) {
					vm.detalleOtros += i.descripcion + ", ", vm.totalOtros += i.valorComercial
				})
			}, vm.totalesTusActivos = function() {
				vm.totalInversion = 0, vm.totalVehiculos = 0, vm.totalSociedades = 0, vm.totalBien = 0, vm.totalOtros = 0, vm.detalleInversion = "", vm.detalleVehiculos = "", vm.detalleSociedades = "", vm.detalleBien = "", vm.detalleOtros = "", vm.estadoSituacion.activosInversiones.forEach(function(i) {
					vm.detalleInversion += vm.buscar("tipoInversion", i.tipo) + " - " + i.institucion + ", ", vm.totalInversion += i.valorComercial
				}), vm.detalleInversion = vm.detalleInversion.slice(0, -2), vm.estadoSituacion.activosVehiculos.forEach(function(i) {
					vm.detalleVehiculos += vm.buscar("tipoVehiculo", i.tipo) + " - " + i.marca + " - " + i.modelo + ", ", vm.totalVehiculos += i.valorComercial
				}), vm.detalleVehiculos = vm.detalleVehiculos.slice(0, -2), vm.estadoSituacion.activosSociedades.forEach(function(i) {
					vm.detalleSociedades += i.razonSocial + ", ", vm.totalSociedades += i.montoParticipacion
				}), vm.detalleSociedades = vm.detalleSociedades.slice(0, -2), vm.estadoSituacion.activosBienesRaices.forEach(function(i) {
					vm.detalleBien += i.direccion + ", ", vm.totalBien += i.valorComercial
				}), vm.detalleBien = vm.detalleBien.slice(0, -2), vm.estadoSituacion.activosOtros.forEach(function(i) {
					vm.detalleOtros += i.descripcion + ", ", vm.totalOtros += i.valorComercial
				}), vm.detalleOtros = vm.detalleOtros.slice(0, -2)
			}, vm.buscarLabelContacto = function(idContacto) {
				var nombre = "";
				return vm.listaContactoLlegada.forEach(function(elemento) {
					elemento.id == idContacto && (nombre = elemento.valor)
				}), nombre
			}, vm.buscarLabelBanco = function(idBanco) {
				var nombre = "";
				return vm.listaBancos.forEach(function(elemento) {
					elemento.id == idBanco && (nombre = elemento.valor)
				}), nombre
			}, vm.buscarLabelTarjetaCredito = function(idTC) {
				var nombre = "";
				return vm.listaTipoTarjeta.forEach(function(elemento) {
					elemento.id == idTC && (nombre = elemento.valor)
				}), nombre
			}, vm.buscarLabelTipoDeuda = function(idTD) {
				var nombre = "";
				return vm.listaTipoDeuda.forEach(function(elemento) {
					elemento.id == idTD && (nombre = elemento.valor)
				}), nombre
			}, vm.totalesPasivos = function() {
				vm.montoLineaCredito = 0, vm.montoTarjetaCredito = 0, vm.montoCreditoHipotecario = 0, vm.montoCreditoAutomotriz = 0, vm.montoCreditoCuotas = 0, vm.montoCreditoComercial = 0, vm.cuotaLineaCredito = 0, vm.cuotaTarjetaCredito = 0, vm.cuotaCreditoHipotecario = 0, vm.cuotaCreditoAutomotriz = 0, vm.cuotaCreditoCuotas = 0, vm.cuotaCreditoComercial = 0, vm.lineaCredito && vm.lineaCredito.forEach(function(i) {
					vm.montoLineaCredito += i.montoCupo, vm.cuotaLineaCredito += i.valorCuotaMensual
				}), vm.tarjetaCredito && vm.tarjetaCredito.forEach(function(i) {
					vm.montoTarjetaCredito += i.montoCupo, vm.cuotaTarjetaCredito += i.valorCuotaMensual
				}), vm.creditoHipotecario && vm.creditoHipotecario.forEach(function(i) {
					vm.montoCreditoHipotecario += i.montoCupo, vm.cuotaCreditoHipotecario += i.valorCuotaMensual
				}), vm.creditoAutomotriz && vm.creditoAutomotriz.forEach(function(i) {
					vm.montoCreditoAutomotriz += i.montoCupo, vm.cuotaCreditoAutomotriz += i.valorCuotaMensual
				}), vm.creditoCuotas && vm.creditoCuotas.forEach(function(i) {
					vm.montoCreditoCuotas += i.montoCupo, vm.cuotaCreditoCuotas += i.valorCuotaMensual
				}), vm.creditoComercial && vm.creditoComercial.forEach(function(i) {
					vm.montoCreditoComercial += i.montoCupo, vm.cuotaCreditoComercial += i.valorCuotaMensual
				}), vm.totalMontoPasivo = vm.montoLineaCredito + vm.montoTarjetaCredito + vm.montoCreditoHipotecario + vm.montoCreditoAutomotriz + vm.montoCreditoCuotas + vm.montoCreditoComercial, vm.totalCuotaPasivo = vm.cuotaLineaCredito + vm.cuotaTarjetaCredito + vm.cuotaCreditoHipotecario + vm.cuotaCreditoAutomotriz + vm.cuotaCreditoCuotas + vm.cuotaCreditoComercial
			}, vm.openModalActividadActual = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/actividad-actual/actividad-actual.tpl.html",
					controller: "modalActividadActualController",
					controllerAs: "modActAct",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardadoActividadActual = !0, vm.estadoSituacion.tieneSostenedor = 0, vm.tengoSostenedor = !1)
				})
			}, vm.openModalActivos = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/activos/activo.tpl.html",
					controller: "modalActivoController",
					controllerAs: "modAct",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.calcularActivos(), vm.flgMsgGuardadoActivos = !0)
				})
			}, vm.openModalAntecedente = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/antecedentes/antecedentes.tpl.html",
					controller: "modalAntecedentesController",
					controllerAs: "modAnte",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora modal-con-telefono",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardado = !0)
				})
			}, vm.openModalAntecedentesConyuge = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/antecedentes-conyuge/antecedente-conyuge.tpl.html",
					controller: "modalAntecedentesConyugeController",
					controllerAs: "modAnteCon",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora modal-con-telefono",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardadoAntecedentesConnyuge = !0)
				})
			}, vm.openModalCargosPublicos = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/cargos-publicos/cargo-publico.tpl.html",
					controller: "modalCargosController",
					controllerAs: "modCarPub",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardadoCargosPublicos = !0)
				})
			}, vm.openModalDireccionComercial = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/direccion-comercial/direccion-comercial.tpl.html",
					controller: "modalDireccionComercialController",
					controllerAs: "modDC",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora modal-con-telefono",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardadoDireComercial = !0)
				})
			}, vm.openModalDireccionParticular = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/direccion-particular/direccion-particular.tpl.html",
					controller: "modalDireccionParticularController",
					controllerAs: "modDP",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora modal-con-telefono",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardadoDireParticular = !0)
				})
			}, vm.openModalEstudios = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/estudios/estudio.tpl.html",
					controller: "modalEstudioController",
					controllerAs: "modEstC",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardadoEstudios = !0)
				})
			}, vm.openModalActivos = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/activos/activo.tpl.html",
					controller: "modalActivoController",
					controllerAs: "modAct",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.calcularActivos(), vm.flgMsgGuardadoActivos = !0)
				})
			}, vm.openModalIngresoLiquidoMensual = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/ingreso-liquido-mensual/ingreso-liquido-mensual.tpl.html",
					controller: "modalIngresoLiquidoMensualController",
					controllerAs: "modILMC",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static",
					resolve: {
						tengoSostenedor: function() {
							return vm.tengoSostenedor
						}
					}
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardadoIngresoLiquidoMensual = !0)
				})
			}, vm.openModalRutSostenedorConyuge = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/rut-sostenedor-conyuge/rut-sostenedor-conyuge.tpl.html",
					controller: "modalRutSostenedorConyugeController",
					controllerAs: "modRSC",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora modal-con-telefono",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.guardadoRutSostenedor = !0)
				})
			}, vm.openModalIngresoLiquidoMensualConyuge = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/ingreso-liquido-mensual-conyuge/ingreso-liquido-mensual-conyuge.tpl.html",
					controller: "ingresoMensualConyugeController",
					controllerAs: "modIngreLiqMen",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardadoIngresoLiquidoMensualConyug = !0)
				})
			}, vm.openModalParticipacionSociedades = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/participacion-sociedades/participacion-sociedades.tpl.html",
					controller: "modalParticipacionSociedadesController",
					controllerAs: "modParticipacionSociedades",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (vm.getEstadoSituacion(), vm.flgMsgGuardadoParticipacionSociedades = !0)
				})
			}, vm.openModalPasivos = function() {
				var modalInstance = $modal.open({
					templateUrl: urlBase + "modals/pasivos/pasivos.tpl.html",
					controller: "pasivosModalController",
					controllerAs: "modPasC",
					size: "lg",
					windowClass: "modal-detalle modal-bitacora",
					backdrop: "static"
				});
				modalInstance.result.then(function(resp) {
					resp && (console.log("Actualizando estado situacion..."), vm.getEstadoSituacion(), vm.totalesPasivos(), vm.flgMsgGuardadoPasivos = !0)
				})
			}, vm.guardarEstadoSituacion = function() {
				estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0)
			}, vm.obtieneCargosPublicos = function() {
				vm.flgCargoPublicoPropio = !1, vm.flgCargoPublicoRelacionado = !1, null !== vm.estadoSituacion.cargosPublicos && void 0 !== vm.estadoSituacion.cargosPublicos && (vm.cargoPublico = vm.estadoSituacion.cargosPublicos.find(function(item) {
					return "PROPIO" === item.tipo
				}), vm.cargoPublicoRelacionado = vm.estadoSituacion.cargosPublicos.find(function(item) {
					return "RELACIONADO" === item.tipo
				}), null !== vm.cargoPublico && void 0 !== vm.cargoPublico && (void 0 !== vm.cargoPublico.institucion && null !== vm.cargoPublico.institucion || void 0 !== vm.cargoPublico.cargo && null !== vm.cargoPublico.cargo) && ("" !== vm.cargoPublico.institucion || "" !== vm.cargoPublico.cargo) && (vm.flgCargoPublicoPropio = !0), null !== vm.cargoPublicoRelacionado && void 0 !== vm.cargoPublicoRelacionado && (void 0 !== vm.cargoPublicoRelacionado.institucion && null !== vm.cargoPublicoRelacionado.institucion || void 0 !== vm.cargoPublicoRelacionado.cargo && null !== vm.cargoPublicoRelacionado.cargo) && ("" !== vm.cargoPublicoRelacionado.institucion || "" !== vm.cargoPublicoRelacionado.cargo) && (vm.flgCargoPublicoRelacionado = !0))
			}, vm.obtieneNivelEstudios = function() {
				null !== vm.estadoSituacion.estudios && void 0 !== vm.estadoSituacion.estudios && null !== vm.estadoSituacion.estudios.nivel && void 0 !== vm.estadoSituacion.estudios.nivel && (vm.flgEstudios = !0)
			}, vm.cambiaEstadoTieneSostenedor = function() {
				vm.estadoSituacion.tieneSostenedor = vm.tengoSostenedor ? 1 : 0, vm.validarCamposObligatorios()
			}, vm.validarIngresosCompletados = function() {
				vm.posIngresos = vm.estadoSituacion.ingresos.findIndex(function(item) {
					return item.monto > 0
				}), vm.posIngresosSostenedor = vm.estadoSituacion.ingresosSostenedor.findIndex(function(item) {
					return item.monto > 0
				}), vm.posIngresosConyuge = vm.estadoSituacion.ingresosConyuge.findIndex(function(item) {
					return item.monto > 0
				})
			}, vm.validarCamposObligatorios = function() {
				vm.validarIngresosCompletados();
				var direccionComercial = {},
					direccionParticular = {};
				direccionComercial = vm.estadoSituacion.direcciones.find(function(item) {
					return "COMERCIAL" === item.tipo
				}), direccionParticular = vm.estadoSituacion.direcciones.find(function(item) {
					return "PARTICULAR" === item.tipo
				});
				var estadoCompletitudD1 = !1;
				vm.isNil(vm.estadoSituacion.direcciones) && vm.estadoSituacion.direcciones.length > 0 && (estadoCompletitudD1 = vm.isNil(direccionParticular) ? "COMPLETADO" === direccionParticular.estadoSeccion : !1), "COMPLETADO" === vm.estadoSituacion.datosPersonales.estadoSeccion && estadoCompletitudD1 && "COMPLETADO" === vm.estadoSituacion.estudios.estadoSeccion && ("COMPLETADO" === vm.estadoSituacion.actividadDependiente.estadoSeccion || "COMPLETADO" === vm.estadoSituacion.actividadIndependiente.estadoSeccion || vm.isNil(vm.estadoSituacion.actividadActual)) ? vm.continuar = !0 : vm.continuar = !1, vm.tengoSostenedor ? -1 != vm.posIngresosSostenedor && "COMPLETADO" === vm.estadoSituacion.sostenedor.estadoSeccion && "COMPLETADO" === vm.estadoSituacion.actividadSostenedor.estadoSeccion ? vm.continuar2 = !0 : vm.continuar2 = !1 : -1 != vm.posIngresos ? vm.continuar2 = !0 : vm.continuar2 = !1, vm.isNil(vm.estadoSituacion.actividadActual) && ("9" === vm.estadoSituacion.actividadActual.trim() && (vm.activosSociedades.length > 0 ? vm.continuar = !0 : vm.continuar = !1), ("1" === vm.estadoSituacion.actividadActual.trim() || "2" === vm.estadoSituacion.actividadActual.trim()) && (vm.isNil(direccionComercial) && vm.isNil(direccionComercial.email) && vm.isNil(vm.direccionComercial.calle) ? vm.continuar = !0 : vm.continuar = !1)), vm.continuarProceso = vm.continuar && vm.continuar2, vm.continuarProceso ? vm.msjCompletaPasoUnoDos = !1 : vm.msjCompletaPasoUnoDos = !0
			}, vm.validaActividadPrincipal = function() {
				vm.indicarPantalla = 2
			}, vm.isNil = function(item) {
				return null !== item && void 0 !== item
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("estadoSituacionController", firmaElectronicaDirectiveController), firmaElectronicaDirectiveController.$inject = ["estadoSituacionFactory", "$modal", "datosDeudasFactory", "tusActivosFactory", "datosPersonalesFactory", "$scope", "tmpTokenService"]
	}(),
	function() {
		function estadoSituacionDirective() {
			return {
				bindToController: !0,
				restrict: "E",
				controller: "estadoSituacionController",
				controllerAs: "eess",
				templateUrl: "directive-eess-publico/src/directive-eess/common/directives/estado-situacion/estado-situacion.directive.tpl.html",
				scope: {
					token: "="
				}
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").directive("estadoSituacionDirective", estadoSituacionDirective), estadoSituacionDirective.$inject = []
	}(),
	function() {
		function formatNum() {
			return {
				require: "?ngModel",
				link: function(scope, element, attrs, ngModelCtrl) {
					if (ngModelCtrl) {
						var maxValue = parseFloat(attrs.max),
							minValue = parseFloat(attrs.min),
							negative = "true" === attrs.negative,
							decimal = "" === attrs.formatNumber ? 0 : parseInt(attrs.formatNumber, 10),
							maxlength = parseInt(attrs.maxlength, 10);
						ngModelCtrl.$parsers.push(function(val) {
							if (angular.isUndefined(val)) return val;
							var clean = formatNumberDirective(val, decimal, negative, maxlength);
							val != clean && (ngModelCtrl.$setViewValue(clean), ngModelCtrl.$render());
							var valor = parseFloat(clean.replace(/[\.]/g, "").replace(",", ".")),
								flgVal = (angular.isUndefined(attrs.max) || maxValue >= valor) && (angular.isUndefined(attrs.min) || valor >= minValue);
							return ngModelCtrl.$setValidity("validNumber", flgVal), valor
						}), ngModelCtrl.$formatters.push(function(val) {
							if (angular.isUndefined(val)) return val;
							var clean = val.toString().replace(".", ",");
							clean = formatNumberDirective(clean, attrs.formatNumber, negative, maxlength), ngModelCtrl.$setViewValue(clean), ngModelCtrl.$render();
							var valor = parseFloat(val),
								flgVal = (angular.isUndefined(attrs.max) || maxValue >= valor) && (angular.isUndefined(attrs.min) || maxValue >= valor);
							return ngModelCtrl.$setValidity("validNumber", flgVal), clean
						}), element.bind("keydown", function(event) {
							return 32 === event.keyCode ? (event.preventDefault(), !1) : void 0
						}), element.bind("blur", function(event) {
							2 != decimal || event.target.value.includes(",") || (event.target.value = event.target.value + ",00")
						})
					}
				}
			}
		}

		function formatNumberDirective(val, decimales, negative, maxlength) {
			var clean = "";
			if (negative) {
				clean = val.replace(/[^-0-9\,]/g, "");
				var tieneSigno = !1;
				clean.match(/^-/) && (tieneSigno = !0), clean = clean.replace(/-/g, ""), clean = (tieneSigno ? "-" : "") + clean
			} else clean = val.replace(/[^0-9\,]/g, "");
			var negativeCheck = clean.split("-"),
				decimalCheck = clean.split(",");
			angular.isUndefined(negativeCheck[1]) || (negativeCheck[1] = negativeCheck[1].slice(0, negativeCheck[1].length), clean = negativeCheck[0] + "-" + negativeCheck[1], negativeCheck[0].length > 0 && (clean = negativeCheck[0]));
			for (var entero = decimalCheck[0], enteroForm = "", a = 0, i = entero.length - 1; i >= 0; i--) 3 == a && (enteroForm = "." + enteroForm, a = 0), a++, enteroForm = entero.charAt(i) + enteroForm;
			if (clean = enteroForm, angular.isUndefined(decimalCheck[1]) || (decimales >= 0 ? (decimalCheck[1] = decimalCheck[1].slice(0, decimales), clean = 0 === decimales ? enteroForm : enteroForm + "," + decimalCheck[1], maxlength == clean.length && (clean = "," === clean.slice(-1) ? clean.slice(0, -1) : clean)) : clean = enteroForm + "," + decimalCheck[1]), 0 === decimales && (clean.length > 0 && 0 === parseInt(clean.replace(".", ""), 10) && (clean = "0"), parseInt(clean.replace(".", ""), 10) > 0))
				for (var y = 0; y < clean.length - 1; y++) "0" === clean.charAt(0) && (clean = clean.substring(1));
			return clean
		}
		formatNum.$inject = ["$filter"], angular.module("WebBancoChile.directive-eess-publico").directive("formatNum", formatNum)
	}(),
	function() {
		angular.module("herramientasLocales").directive("attachFile", ["archivosFactory", function(archivosFactory, $rootScope) {
			var archivo = "",
				nombre = "",
				tipo = "",
				extension = "",
				id_documento = "",
				archivoJson = {},
				valido = 1;
			return {
				restrict: "A",
				scope: !0,
				link: function($scope, element, attrs) {
					element.bind("change", function() {
						function toBase64(file) {
							var reader = new FileReader;
							reader.readAsDataURL(file), reader.onload = function() {
								archivo = reader.result.split("base64,")[1], archivoJson = {
									id: (new Date).getUTCMilliseconds(),
									archivo: archivo,
									nombre: nombre,
									mimeType: tipo,
									extension: extension,
									fechaSubida: null,
									tipo: idTipo,
									grupo: grupo
								}, $scope.$emit("adjuntarListaArchivos", archivoJson, attrs.id)
							}
						}
						$scope.$emit("gifSubiendo", attrs.id), valido = 1, nombre = element[0].files[0].name, tipo = element[0].files[0].type, extension = element[0].files[0].type.split("/")[1], id_documento = attrs.id, idTipo = attrs.idtipo, grupo = attrs.grupo, element[0].files[0].size > 2097152 && (valido = 0, $scope.$emit("mensajeAdjuntos", id_documento, "El archivo no puede pesar mas de 2 Mb.")), "png" != extension && "jpeg" != extension && "pdf" != extension && (valido = 0, $scope.$emit("mensajeAdjuntos", id_documento, "Los archivos deben tener los formatos .png .jpg o .pdf .")), valido && toBase64(element[0].files[0]), element.val("")
					})
				}
			}
		}])
	}(),
	function(angular, undefined) {
		"use strict";

		function cleanRut(_value) {
			return "string" == typeof _value ? _value.replace(/[^0-9kK]+/g, "").toUpperCase() : ""
		}

		function formatRut(_value, _default) {
			if (_value = cleanRut(_value), !_value) return _default;
			if (_value.length <= 1) return _value;
			for (var result = _value.slice(-4, -1) + "-" + _value.substr(_value.length - 1), i = 4; i < _value.length; i += 3) result = _value.slice(-3 - i, -i) + "." + result;
			return result
		}

		function validateRut(_value) {
			if ("string" != typeof _value) return !1;
			for (var t = parseInt(_value.slice(0, -1), 10), m = 0, s = 1; t > 0;) s = (s + t % 10 * (9 - m++ % 6)) % 11, t = Math.floor(t / 10);
			var v = s > 0 ? s - 1 + "" : "K";
			return v === _value.slice(-1)
		}

		function addValidatorToNgModel(ngModel) {
			var validate = function(value) {
					var valid = validateRut(value);
					return ngModel.$setValidity("rut", valid), valid
				},
				validateAndFilter = function(_value) {
					return _value = cleanRut(_value), validate(_value) ? _value : null
				},
				validateAndFormat = function(_value) {
					return _value = cleanRut(_value), validate(_value), formatRut(_value)
				};
			ngModel.$parsers.unshift(validateAndFilter), ngModel.$formatters.unshift(validateAndFormat)
		}

		function formatRutOnWatch($scope, ngModel) {
			$scope.$watch(function() {
				return ngModel.$viewValue
			}, function() {
				ngModel.$setViewValue(formatRut(ngModel.$viewValue)), ngModel.$render()
			})
		}

		function formatRutOnBlur($element, ngModel) {
			$element.on("blur", function() {
				ngModel.$setViewValue(formatRut(ngModel.$viewValue)), ngModel.$render()
			})
		}
		angular.module("rut.directive", []).directive("ngRutEess", function() {
			return {
				restrict: "A",
				require: "ngModel",
				link: function($scope, $element, $attrs, ngModel) {
					switch ("undefined" == typeof $attrs.rutFormat && ($attrs.rutFormat = "live"), addValidatorToNgModel(ngModel), $attrs.rutFormat) {
						case "live":
							formatRutOnWatch($scope, ngModel);
							break;
						case "blur":
							formatRutOnBlur($element, ngModel)
					}
				}
			}
		}).filter("rut", function() {
			return formatRut
		})
	}(angular),
	function() {
		function modalActividadActualConyugeController($modalInstance, estadoSituacionFactory, datosConyugeFactory, datosLaboralesFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.mostrarEstoSituacion(), vm.getActividadActual(), vm.getTipoSocio(), vm.getNivelDependiente(), vm.getNivelIndependiente()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.close = close, vm.estadoSituacion = [], vm.actividadActual = [], vm.errorModal = !1, vm.errorGuardar = !1, vm.adaptarFecha = function(fecha) {
				var dd = "",
					mm = "",
					yyyy = "";
				return fecha.getDate() < 10 && (dd += "0"), fecha.getMonth() + 1 < 10 && (mm += "0"), dd += fecha.getDate(), mm += fecha.getMonth() + 1, yyyy = fecha.getFullYear(), dd + "-" + mm + "-" + yyyy
			}, vm.mostrarEstoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data
				}, errorObtenerEstado)
			}, vm.getNivelDependiente = function() {
				datosConyugeFactory.getNivelDependiente().success(function(lista) {
					vm.nivelDependiente = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getNivelIndependiente = function() {
				datosConyugeFactory.getNivelIndependiente().success(function(lista) {
					vm.nivelIndependiente = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getTipoSocio = function() {
				datosLaboralesFactory.getTipoSocio().success(function(lista) {
					vm.tipoSocio = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getActividadActual = function() {
				datosConyugeFactory.getActividadActual().success(function(lista) {
					vm.actividadActual = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.datepicker = function($event, item) {
				$event.preventDefault(), $event.stopPropagation(), "fecNacimiento" === item && (vm.calFecNacimiento = !vm.calFecNacimiento), "ingresoDependiente" === item && (vm.calIngresoDependiente = !vm.calIngresoDependiente), "actIndependientes" === item && (vm.calActIndependientes = !vm.calActIndependientes)
			}, vm.resetearCamposDependienteIndependiente = function(valor) {
				switch (valor) {
					case 1:
						vm.resetearActividadActualIndependiente(), vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.tipo = "CONYUGE";
						break;
					case 2:
						vm.resetearActividadActualDependiente(), vm.estadoSituacion.estadoSituacion.actualIndependienteConyuge.tipo = "CONYUGE";
						break;
					default:
						vm.resetearActividadActualDependiente(), vm.resetearActividadActualIndependiente()
				}
			}, vm.resetearActividadActualDependiente = function() {
				vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.cargo = "", vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.estadoSeccion = "INCOMPLETO", vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.giroEmpresa = "", vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.inicio = "", vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.nivel = null, vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.nombreEmpresa = "", vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.rutEmpresa = "", vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.socio = "", vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.tipo = "INDEFINIDA"
			}, vm.resetearActividadActualIndependiente = function() {
				vm.estadoSituacion.estadoSituacion.actualIndependienteConyuge.actividad = "", vm.estadoSituacion.estadoSituacion.actualIndependienteConyuge.estadoSeccion = "INCOMPLETO", vm.estadoSituacion.estadoSituacion.actualIndependienteConyuge.inicio = "", vm.estadoSituacion.estadoSituacion.actualIndependienteConyuge.nivel = null, vm.estadoSituacion.estadoSituacion.actualIndependienteConyuge.tipo = "INDEFINIDA"
			}, vm.guardar = function() {
				vm.resetearCamposDependienteIndependiente(vm.estadoSituacion.estadoSituacion.datosPersonalesConyuge.actividadActual), vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.inicio && (vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.inicio = vm.adaptarFecha(vm.estadoSituacion.estadoSituacion.actualDependienteConyuge.inicio)), vm.estadoSituacion.estadoSituacion.actualIndependienteConyuge.inicio && (vm.estadoSituacion.estadoSituacion.actualIndependienteConyuge.inicio = vm.adaptarFecha(vm.estadoSituacion.estadoSituacion.actualIndependienteConyuge.inicio)), estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalActividadActualConyugeController", modalActividadActualConyugeController), modalActividadActualConyugeController.$inject = ["$modalInstance", "estadoSituacionFactory", "datosConyugeFactory", "datosLaboralesFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalActividadActualController($modalInstance, datosLaboralesFactory, estadoSituacionFactory, tmpTokenService, datepickerConfig, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				});
				var token = tmpTokenService.getToken();
				vm.esPrivado = "" === token, vm.getActividadActual(), vm.getNivelDependiente(), vm.getNivelIndependiente(), vm.getTipoSocio(), vm.mostrarEstoSituacion()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}
			var vm = this;
			vm.close = close, vm.estadoSituacion = [], vm.actividadActual = [], vm.nivelDependiente = [], vm.tipoSocio = [], vm.nivelIndependiente = [], vm.datosLaboralesFactory = datosLaboralesFactory, vm.rutEmpleadorEmpty = !1, vm.mostrarDatepickerFecha = !1, vm.fechaTmpDependiente = null, vm.fechaTmpIndependiente = null, vm.fechaConsulta = "", datepickerConfig.showWeeks = !1, vm.hoyDia = new Date, vm.fechaMinima = new Date("01/01/1900"), vm.rutmin = !1, vm.errorModal = !1, vm.errorGuardar = !1, vm.mostrarEstoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, 1 === parseInt(vm.estadoSituacion.actividadActual, 10) && (vm.fechaTmpDependiente = vm.adaptarFecha(vm.estadoSituacion.actividadDependiente.inicio), vm.resetearActividadActualIndependiente()), 2 === parseInt(vm.estadoSituacion.actividadActual, 10) && (vm.fechaTmpIndependiente = vm.adaptarFecha(vm.estadoSituacion.actividadIndependiente.inicio), vm.resetearActividadActualDependiente()), 2 !== parseInt(vm.estadoSituacion.actividadActual, 10) && 1 !== parseInt(vm.estadoSituacion.actividadActual, 10) && (vm.resetearActividadActualIndependiente(), vm.resetearActividadActualDependiente())
				}, errorObtenerEstado)
			}, vm.getActividadActual = function() {
				vm.datosLaboralesFactory.getActividadActual().success(function(lista) {
					vm.actividadActual = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getNivelIndependiente = function() {
				vm.datosLaboralesFactory.getNivelIndependiente().success(function(lista) {
					vm.nivelIndependiente = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getNivelDependiente = function() {
				vm.datosLaboralesFactory.getNivelDependiente().success(function(lista) {
					vm.nivelDependiente = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getTipoSocio = function() {
				vm.datosLaboralesFactory.getTipoSocio().success(function(lista) {
					vm.tipoSocio = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.resetearCamposDependienteIndependiente = function(valor) {
				switch (valor) {
					case 1:
						vm.resetearActividadActualIndependiente();
						break;
					case 2:
						vm.resetearActividadActualDependiente();
						break;
					default:
						vm.resetearActividadActualDependiente(), vm.resetearActividadActualIndependiente()
				}
			}, vm.resetearActividadActualIndependiente = function() {
				vm.isNil(vm.estadoSituacion.actividadIndependiente) && (vm.estadoSituacion.actividadIndependiente.actividad = null, vm.estadoSituacion.actividadIndependiente.inicio = null, vm.estadoSituacion.actividadIndependiente.id = 0, vm.estadoSituacion.actividadIndependiente.nivel = 0, vm.fechaTmpIndependiente = null)
			}, vm.resetearActividadActualDependiente = function() {
				vm.isNil(vm.estadoSituacion.actividadDependiente) && (vm.estadoSituacion.actividadDependiente.cargo = null, vm.estadoSituacion.actividadDependiente.giroEmpresa = null, vm.estadoSituacion.actividadDependiente.inicio = null, vm.estadoSituacion.actividadDependiente.id = 0, vm.estadoSituacion.actividadDependiente.nivel = 0, vm.estadoSituacion.actividadDependiente.nombreEmpresa = null, vm.estadoSituacion.actividadDependiente.rutEmpresa = null, vm.estadoSituacion.actividadDependiente.socio = null, vm.fechaTmpDependiente = null)
			}, vm.datepicker = function($event, item) {
				$event.preventDefault(), $event.stopPropagation(), vm.mostrarDatepickerFecha = !vm.mostrarDatepickerFecha, "ingresoDependiente" == item && (vm.calIngresoDependiente = !vm.calIngresoDependiente), "actIndependientes" == item && (vm.calActIndependientes = !vm.calActIndependientes)
			}, vm.adaptarFecha = function(fecha) {
				var dd = "",
					mm = "",
					yyyy = "";
				return null !== fecha ? (fecha = new Date(fecha), fecha.getDate() < 10 && (dd += "0"), fecha.getMonth() + 1 < 10 && (mm += "0"), dd += fecha.getDate(), mm += fecha.getMonth() + 1, yyyy = fecha.getFullYear()) : (dd = "01", mm = "01", yyyy = "1900"), dd + "/" + mm + "/" + yyyy
			}, vm.fechaIngresoGuardar = function(fecha) {
				if (fecha.toString().includes("/")) {
					var parts = fecha.split("/"),
						dia = parts[0],
						mes = parts[1],
						year = parts[2];
					fecha = mes + "/" + dia + "/" + year
				}
				return fecha = new Date(fecha)
			}, vm.submitForm = function() {
				vm.estadoSituacion.actividadActual = parseInt(vm.estadoSituacion.actividadActual, 10), 1 === vm.estadoSituacion.actividadActual && (vm.resetearActividadActualIndependiente(), vm.estadoSituacion.actividadDependiente.inicio = vm.fechaIngresoGuardar(vm.fechaTmpDependiente), vm.estadoSituacion.actividadDependiente.nivel = 1, vm.estadoSituacion.otraActividad = null, vm.estadoSituacion.actividadDependiente.id = vm.estadoSituacion.id, vm.estadoSituacion.actividadDependiente.estadoSeccion = "COMPLETADO"), 2 === vm.estadoSituacion.actividadActual && (vm.resetearActividadActualDependiente(), vm.estadoSituacion.otraActividad = null, vm.estadoSituacion.actividadIndependiente.inicio = vm.fechaIngresoGuardar(vm.fechaTmpIndependiente), vm.estadoSituacion.actividadIndependiente.nivel = 1, vm.estadoSituacion.actividadIndependiente.id = vm.estadoSituacion.id, vm.estadoSituacion.actividadIndependiente.estadoSeccion = "COMPLETADO"), 1 !== vm.estadoSituacion.actividadActual && 2 !== vm.estadoSituacion.actividadActual && (vm.resetearActividadActualIndependiente(), vm.resetearActividadActualDependiente()), estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(resp) {
					$modalInstance.close(!0)
				}, contingencia)
			}, vm.isNil = function(item) {
				return null !== item && void 0 !== item
			}, vm.emptyField = function(item) {
				return void 0 === item || "" === item
			}, vm.validarRut = function() {
				vm.userForm.rutEmpleador.$dirty = !vm.emptyField(vm.estadoSituacion.actividadDependiente.rutEmpresa), null !== vm.estadoSituacion.actividadDependiente.rutEmpresa && void 0 !== vm.estadoSituacion.actividadDependiente.rutEmpresa && vm.estadoSituacion.actividadDependiente.rutEmpresa.length < 8 ? vm.rutmin = !0 : vm.rutmin = !1
			}, activate(), modalActividadActualController.prototype.toggleMostrarDatepickerFecha = function() {
				vm.mostrarDatepickerFecha = !vm.mostrarDatepickerFecha
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalActividadActualController", modalActividadActualController), modalActividadActualController.$inject = ["$modalInstance", "datosLaboralesFactory", "estadoSituacionFactory", "tmpTokenService", "datepickerConfig", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalActividadAnteriorConyugeController($modalInstance, estadoSituacionFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.mostrarEstadoSituacion()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.close = close, vm.estadoSituacion = [], vm.errorGuardar = !1, vm.errorModal = !1, vm.mostrarEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data
				}, errorObtenerEstado)
			}, vm.guardar = function() {
				estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalActividadAnteriorConyugeController", modalActividadAnteriorConyugeController), modalActividadAnteriorConyugeController.$inject = ["$modalInstance", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalActividadAnteriorController($modalInstance, estadoSituacionFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.mostrarEstadoSituacion()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.estadoSituacion = [], vm.close = close, vm.errorGuardar = !1, vm.errorModal = !1, vm.mostrarEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data
				}, errorObtenerEstado)
			}, vm.guardar = function() {
				estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(res) {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalActividadAnteriorController", modalActividadAnteriorController), modalActividadAnteriorController.$inject = ["$modalInstance", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalActivoFinancieroController($modalInstance, estadoSituacionFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getActivosFinancieros(), vm.getEstadoSituacion()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorActivos(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.estadoSituacion = [], vm.listaActivosFinancieros = [], vm.close = close, vm.errorGuardar = !1, vm.errorModal = !1, vm.getEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().success(function(lista) {
					vm.estadoSituacion = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getActivosFinancieros = function() {
				estadoSituacionFactory.getActivosFinancieros().then(function(lista) {
					vm.listaActivosFinancieros = lista.data
				}, errorActivos)
			}, vm.guardar = function() {
				estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(resp) {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalActivoFinancieroController", modalActivoFinancieroController), modalActivoFinancieroController.$inject = ["$modalInstance", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalActivoController($modalInstance, tusActivosFactory, $filter, estadoSituacionFactory, datosPersonalesFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getRegiones(), vm.getEstadoSituacion(), vm.getTipoInversion(), vm.getActivosFinancieros(), vm.getTipoVehiculo(), vm.getTipoBienes(), vm.limpiarCampos("inversion"), vm.limpiarCampos("vehiculos"), vm.limpiarCampos("bienes"), vm.limpiarCampos("otros")
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}
			var vm = this;
			vm.$filter = $filter, vm.flgAgregarInversiones = !1, vm.flgAgregarVehiculos = !1, vm.flgAgregarBienes = !1, vm.flgAgregarOtros = !1, vm.flgGarantia = !1, vm.flgGarantiaVehiculo = !1, vm.modificaModal = !1, vm.listaInversiones = [], vm.listaVehiculos = [], vm.listaBienes = [], vm.listaOtros = [], vm.tiposBienes = [], vm.totalInversion = 0, vm.totalVehiculos = 0, vm.saldoBienes = 0, vm.totalBienes = 0, vm.totalOtros = 0, vm.indiceInversion = -1, vm.indiceVehiculo = -1, vm.indiceBien = -1, vm.indiceOtro = -1, vm.listaTipoInversion = [], vm.close = close, vm.errorModal = !1, vm.errorGuardar = !1, vm.prendas = [{
				valor: 1,
				descripcion: "Si"
			}, {
				valor: 0,
				descripcion: "No"
			}], vm.buscar = function(tipo, id) {
				var temp;
				return "bienes" === tipo && vm.tiposBienes.length > 0 && vm.tiposBienes.forEach(function(i) {
					i.id === id && (temp = i.valor)
				}), "inversion" === tipo && vm.listaTipoInversion.length > 0 && vm.listaTipoInversion.forEach(function(i) {
					i.id === id && (temp = i.valor)
				}), "vehiculo" === tipo && vm.listaTipoVehiculo.length > 0 && vm.listaTipoVehiculo.forEach(function(i) {
					i.id == id && (temp = i.valor)
				}), temp
			}, vm.swActivos = function(item) {
				"inversion" === item && (vm.flgInversiones = !vm.flgInversiones), "vehiculos" === item && (vm.flgVehiculos = !vm.flgVehiculos), "bienes" === item && (vm.flgBienes = !vm.flgBienes), "otros" === item && (vm.flgOtros = !vm.flgOtros)
			}, vm.limpiarCampos = function(item) {
				"inversion" === item && (vm.tipoInversion = "", vm.institicionEmisora = "", vm.flgGarantia = !1, vm.valorComercial = ""), "vehiculo" === item && (vm.tipoVehiculo = "", vm.marcaVehiculo = "", vm.modeloVehiculo = "", vm.anoVehiculo = "", vm.flgGarantiaVehiculo = !1, vm.valorComercialVehiculo = "", vm.patenteVehiculo = "", vm.prendaVehiculo = null, vm.saldoDeudaVehiculo = "", vm.valorCuotaVehiculo = ""), "bienes" === item && (vm.tipoBien = "", vm.regionBien = "", vm.ciudadBien = "", vm.comunaBien = "", vm.calleBien = "", vm.numeroBien = "", vm.numeroDepartamentoBien = "", vm.numeroRolBien = "", vm.hipotecaBien = null, vm.valorCuotaBien = "", vm.saldoDeudaBien = "", vm.valorComercialBien = "", vm.indiceBien = -1, vm.flgParticularCiudad = !1, vm.flgParticularComuna = !1), "otros" === item && (vm.descripcionOtros = "", vm.flgGarantiaOtros = !1, vm.valorComercialOtros = "")
			}, vm.getEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().success(function(lista) {
					vm.estadoSituacion = lista, vm.idEstadoSituacion = vm.estadoSituacion.id, vm.listaInversiones = vm.estadoSituacion.activosInversiones, vm.listaVehiculos = vm.estadoSituacion.activosVehiculos, vm.listaBienes = vm.estadoSituacion.activosBienesRaices, vm.listaOtros = vm.estadoSituacion.activosOtros, vm.flgInversiones = vm.estadoSituacion.activosInversiones.length > 0, vm.flgVehiculos = vm.estadoSituacion.activosVehiculos.length > 0, vm.flgBienes = vm.estadoSituacion.activosBienesRaices.length > 0, vm.flgOtros = vm.estadoSituacion.activosOtros.length > 0, vm.buscarTotales()
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.buscarTotales = function() {
				for (temp = Math.max(vm.listaInversiones.length, vm.listaVehiculos.length, vm.listaBienes.length, vm.listaOtros.length), i = 0; i < temp; i++) i + 1 <= vm.listaInversiones.length && (vm.totalInversion += vm.listaInversiones[i].valorComercial), i + 1 <= vm.listaVehiculos.length && (vm.totalVehiculos += vm.listaVehiculos[i].valorComercial), i + 1 <= vm.listaBienes.length && (vm.saldoBienes += vm.listaBienes[i].hipSaldoDeuda, vm.totalBienes += vm.listaBienes[i].valorComercial), i + 1 <= vm.listaOtros.length && (vm.totalOtros += vm.listaOtros[i].valorComercial)
			}, vm.getTipoBienes = function() {
				datosPersonalesFactory.tipoBienRaiz().success(function(data) {
					vm.tiposBienes = data
				})
			}, vm.getRegiones = function() {
				tusActivosFactory.getRegiones().success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var region = {};
						region.id = elemento.id, region.descripcion = elemento.label, listado.push(region)
					}), vm.regiones = listado
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getCiudades = function(idRegion) {
				tusActivosFactory.getCiudades(idRegion).success(function(lista) {
					vm.ciudades = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.ciudadBien = "", vm.comunaBien = "", vm.flgParticularCiudad = !0, vm.flgParticularComuna = !1
			}, vm.getCiudadesEditar = function(idRegion, index) {
				tusActivosFactory.getCiudades(idRegion).success(function(lista) {
					vm.ciudades = lista, vm.ciudadBien = vm.ciudades.find(function(item) {
						return item.id === vm.listaBienes[index].idCiudad
					})
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.ciudadBien = "", vm.comunaBien = "", vm.flgParticularCiudad = !0, vm.flgParticularComuna = !1
			}, vm.getComunas = function(idCiudad) {
				tusActivosFactory.getComunas(idCiudad).success(function(lista) {
					vm.comunas = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.comunaBien = "", vm.flgParticularComuna = !0
			}, vm.getComunasEditar = function(idCiudad, index) {
				tusActivosFactory.getComunas(idCiudad).success(function(lista) {
					vm.comunas = lista, vm.comunaBien = vm.comunas.find(function(item) {
						return item.id === vm.listaBienes[index].idComuna
					})
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.comunaBien = "", vm.flgParticularComuna = !0
			}, vm.getActivosFinancieros = function() {
				tusActivosFactory.getActivosFinancieros().success(function(lista) {
					vm.listaActivosFinancieros = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getTipoInversion = function() {
				tusActivosFactory.getTipoInversion().success(function(lista) {
					vm.listaTipoInversion = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getTipoVehiculo = function() {
				tusActivosFactory.getTipoVehiculo().success(function(lista) {
					vm.listaTipoVehiculo = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.guardarInversion = function(index) {
				if (-1 === index) {
					var temp = {
						id: vm.idEstadoSituacion,
						tipo: vm.tipoInversion,
						institucion: vm.institicionEmisora,
						valorComercion: parseInt(vm.quitarSimboloDolar(vm.valorComercial), 10)
					};
					vm.listaInversiones.push(temp), vm.flgAgregarInversiones = !1
				} - 1 !== index && (vm.totalInversion -= parseInt(vm.listaInversiones[index].valorComercial, 10), vm.listaInversiones[index].tipo = vm.tipoInversion, vm.listaInversiones[index].institucion = vm.institicionEmisora, vm.listaInversiones[index].valorComercion = parseInt(vm.quitarSimboloDolar(vm.valorComercial), 10), vm.flgAgregarInversiones = !1, vm.indiceInversion = -1), vm.modificaModal = !0, vm.totalInversion += parseInt(vm.valorComercial, 10), vm.limpiarCampos("inversion")
			}, vm.guardarVehiculo = function(index) {
				var year;
				if ("" !== vm.anoVehiculo && (year = parseInt(vm.anoVehiculo, 10)), -1 === index) {
					var temp = {
						id: vm.idEstadoSituacion,
						tipo: vm.tipoVehiculo,
						marca: vm.marcaVehiculo,
						modelo: vm.modeloVehiculo,
						ano: year,
						patente: vm.patenteVehiculo,
						saldoDeuda: parseInt(vm.quitarSimboloDolar(vm.saldoDeudaVehiculo), 10),
						prenda: vm.prendaVehiculo,
						valorComercial: parseInt(vm.quitarSimboloDolar(vm.valorComercialVehiculo), 10),
						valorCuota: parseInt(vm.quitarSimboloDolar(vm.valorCuotaVehiculo), 10)
					};
					vm.listaVehiculos.push(temp), vm.flgAgregarVehiculos = !1
				} - 1 !== index && (vm.totalVehiculos -= parseInt(vm.listaVehiculos[index].valorComercial, 10), vm.listaVehiculos[index].tipo = vm.tipoVehiculo, vm.listaVehiculos[index].marca = vm.marcaVehiculo, vm.listaVehiculos[index].modelo = vm.modeloVehiculo, vm.listaVehiculos[index].ano = year, vm.listaVehiculos[index].prenda = vm.prendaVehiculo, vm.listaVehiculos[index].valorComercial = parseInt(vm.quitarSimboloDolar(vm.valorComercialVehiculo), 10), vm.listaVehiculos[index].patente = vm.patenteVehiculo, vm.listaVehiculos[index].saldoDeuda = parseInt(vm.quitarSimboloDolar(vm.saldoDeudaVehiculo), 10), vm.listaVehiculos[index].valorCuota = parseInt(vm.quitarSimboloDolar(vm.valorCuotaVehiculo), 10), vm.flgAgregarVehiculos = !1, vm.indiceVehiculo = -1), vm.modificaModal = !0, vm.totalVehiculos += parseInt(vm.valorComercialVehiculo, 10), vm.limpiarCampos("vehiculo")
			}, vm.quitarSimboloDolar = function(valor) {
				return null === valor ? 0 : valor.replace(/[$ .]/g, "")
			}, vm.guardarBien = function(index) {
				var rol;
				if ("" !== vm.numeroRolBien && (rol = vm.numeroRolBien), -1 === index) {
					var temp2 = {
						tipo: vm.tipoBien,
						calle: vm.calleBien,
						numero: vm.numeroBien,
						numeroRol: rol,
						hipoteca: vm.hipotecaBien,
						valorCuota: parseInt(vm.quitarSimboloDolar(vm.valorCuotaBien), 10),
						saldoDeuda: parseInt(vm.quitarSimboloDolar(vm.saldoDeudaBien), 10),
						valorComercial: parseInt(vm.quitarSimboloDolar(vm.valorComercialBien), 10),
						id: vm.idEstadoSituacion,
						idRegion: vm.regionBien.id,
						labelRegion: vm.regionBien.descripcion,
						idComuna: vm.comunaBien.id,
						labelComuna: vm.comunaBien.descripcion,
						idCiudad: vm.ciudadBien.id,
						labelCiudad: vm.ciudadBien.descripcion,
						numeroDeptoCasa: vm.numeroDepartamentoBien
					};
					vm.listaBienes.push(temp2), vm.flgAgregarBienes = !1, vm.flgBienes = !0
				} - 1 !== index && (vm.saldoBienes -= parseInt(vm.listaBienes[index].hipSaldoDeuda, 10), vm.totalBienes -= parseInt(vm.listaBienes[index].valorComercial, 10), vm.listaBienes[index].calle = vm.calleBien, vm.listaBienes[index].hipoteca = vm.hipotecaBien, vm.listaBienes[index].idCiudad = void 0 !== vm.ciudadBien ? vm.ciudadBien.id : void 0, vm.listaBienes[index].idComuna = void 0 !== vm.comunaBien ? vm.comunaBien.id : void 0, vm.listaBienes[index].idRegion = void 0 !== vm.regionBien ? vm.regionBien.id : void 0,
					vm.listaBienes[index].labelCiudad = void 0 !== vm.ciudadBien ? vm.ciudadBien.descripcion : void 0, vm.listaBienes[index].labelComuna = void 0 !== vm.comunaBien ? vm.comunaBien.descripcion : void 0, vm.listaBienes[index].labelRegion = void 0 !== vm.regionBien ? vm.regionBien.descripcion : void 0, vm.listaBienes[index].numero = vm.numeroBien, vm.listaBienes[index].numeroDeptoCasa = vm.numeroDepartamentoBien, vm.listaBienes[index].numeroRol = rol, vm.listaBienes[index].saldoDeuda = parseInt(vm.quitarSimboloDolar(vm.saldoDeudaBien), 10), vm.listaBienes[index].tipo = vm.tipoBien, vm.listaBienes[index].valorComercial = parseInt(vm.quitarSimboloDolar(vm.valorComercialBien), 10), vm.listaBienes[index].valorCuota = parseInt(vm.quitarSimboloDolar(vm.valorCuotaBien), 10), vm.flgAgregarBienes = !1, vm.indiceBien = -1), vm.modificaModal = !0, vm.totalBienes += parseInt(vm.valorComercialBien, 10), vm.limpiarCampos("bienes")
			}, vm.guardarOtros = function(index) {
				if (-1 === index) {
					var temp = {
						id: vm.idEstadoSituacion,
						descripcion: vm.descripcionOtros,
						valorComercial: parseInt(vm.quitarSimboloDolar(vm.valorComercialOtros), 10)
					};
					vm.listaOtros.push(temp), vm.flgAgregarOtros = !1
				} - 1 !== index && (vm.totalOtros -= parseInt(vm.listaOtros[index].valorComercial, 10), vm.listaOtros[index].descripcion = vm.descripcionOtros, vm.listaOtros[index].valorComercial = parseInt(vm.quitarSimboloDolar(vm.valorComercialOtros), 10), vm.flgAgregarOtros = !1, vm.indiceOtro = -1), vm.modificaModal = !0, vm.totalOtros += parseInt(vm.valorComercialOtros, 10), vm.limpiarCampos("otros")
			}, vm.editarInversion = function(index) {
				vm.indiceInversion = index, vm.tipoInversion = vm.listaInversiones[index].tipo, vm.institicionEmisora = vm.listaInversiones[index].institucion, vm.flgGarantia = vm.listaInversiones[index].garantiaPrenda, vm.valorComercial = vm.formateaMoneda(vm.listaInversiones[index].valorComercion), vm.flgAgregarInversiones = !0
			}, vm.editarVehiculo = function(index) {
				vm.indiceVehiculo = index, vm.tipoVehiculo = vm.listaVehiculos[index].tipo, vm.marcaVehiculo = vm.listaVehiculos[index].marca, vm.modeloVehiculo = vm.listaVehiculos[index].modelo, vm.anoVehiculo = vm.listaVehiculos[index].ano, vm.prendaVehiculo = vm.listaVehiculos[index].prenda, vm.valorComercialVehiculo = vm.formateaMoneda(vm.listaVehiculos[index].valorComercial), vm.patenteVehiculo = vm.listaVehiculos[index].patente, vm.saldoDeudaVehiculo = vm.formateaMoneda(vm.listaVehiculos[index].saldoDeuda), vm.valorCuotaVehiculo = vm.formateaMoneda(vm.listaVehiculos[index].valorCuota), vm.flgAgregarVehiculos = !0
			}, vm.editarBien = function(index) {
				vm.getCiudadesEditar(vm.listaBienes[index].idRegion, index), vm.getComunasEditar(vm.listaBienes[index].idCiudad, index), vm.indiceBien = index, vm.tipoBien = vm.listaBienes[index].tipo, vm.regionBien = vm.regiones.find(function(item) {
					return item.id === vm.listaBienes[index].idRegion
				}), vm.calleBien = vm.listaBienes[index].calle, vm.numeroBien = vm.listaBienes[index].numero, vm.numeroRolBien = vm.listaBienes[index].numeroRol, vm.hipotecaBien = vm.listaBienes[index].hipoteca, vm.valorCuotaBien = vm.formateaMoneda(vm.listaBienes[index].valorCuota), vm.saldoDeudaBien = vm.formateaMoneda(vm.listaBienes[index].saldoDeuda), vm.valorComercialBien = vm.formateaMoneda(vm.listaBienes[index].valorComercial), vm.numeroDepartamentoBien = vm.listaBienes[index].numeroDeptoCasa, vm.flgAgregarBienes = !0
			}, vm.editarOtro = function(index) {
				vm.indiceOtro = index, vm.descripcionOtros = vm.listaOtros[index].descripcion, vm.flgGarantiaOtros = vm.listaOtros[index].garantiaPrenda, vm.valorComercialOtros = vm.formateaMoneda(vm.listaOtros[index].valorComercial), vm.flgAgregarOtros = !0
			}, vm.formateaMoneda = function(valor) {
				return $filter("formatoMonedaEESS")((valor || "").toString().replace(/[^0-9]/g, ""))
			}, vm.borrarInversion = function(index) {
				vm.totalInversion -= vm.listaInversiones[index].valorComercion ? parseInt(vm.listaInversiones[index].valorComercion.toString().replace(/[^0-9]/g, ""), 10) : 0, vm.listaInversiones.splice(index, 1), vm.modificaModal = !0, vm.limpiarCampos("inversion")
			}, vm.borrarVehiculo = function(index) {
				vm.totalVehiculos -= vm.listaVehiculos[index].valorComercial ? parseInt(vm.listaVehiculos[index].valorComercial.toString().replace(/[^0-9]/g, ""), 10) : 0, vm.listaVehiculos.splice(index, 1), vm.modificaModal = !0, vm.limpiarCampos("vehiculos")
			}, vm.borrarOtro = function(index) {
				vm.totalOtros -= vm.listaOtros[index].valorComercial ? parseInt(vm.listaOtros[index].valorComercial.toString().replace(/[^0-9]/g, ""), 10) : 0, vm.listaOtros.splice(index, 1), vm.modificaModal = !0, vm.limpiarCampos("otros")
			}, vm.borrarBien = function(index) {
				vm.modificaModal = !0, vm.listaBienes.splice(index, 1)
			}, vm.borrarSociedad = function(index) {
				vm.totalOtros -= parseInt(vm.listaOtros[index].valorComercial.toString().replace(/[^0-9]/g, ""), 10), vm.listaOtros.splice(index, 1), vm.listaOtros.length || (vm.flgAgregarOtros = !0), vm.limpiarCampos("otros")
			}, vm.guardar = function() {
				vm.flgInversiones || (vm.listaInversiones = []), vm.flgVehiculos || (vm.listaVehiculos = []), vm.flgBienes || (vm.listaBienes = []), vm.flgOtros || (vm.listaOtros = []), vm.estadoSituacion.activosInversiones = vm.listaInversiones, vm.estadoSituacion.activosVehiculos = vm.listaVehiculos, vm.estadoSituacion.activosBienesRaices = _.map(vm.listaBienes, function(bienRaiz) {
					return /^\d+\-?\d+$/.test(bienRaiz.numeroRol) && bienRaiz.numeroRol.constructor === String && (bienRaiz.numeroRol = parseInt(bienRaiz.numeroRol.replace(/\-/g, ""), 10)), bienRaiz
				}), vm.estadoSituacion.activosOtros = vm.listaOtros, estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(resp) {
					$modalInstance.close(!0)
				}, contingencia)
			}, vm.upperCase = function() {
				void 0 !== vm.patenteVehiculo && (vm.patenteVehiculo = vm.patenteVehiculo.toUpperCase())
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalActivoController", modalActivoController), modalActivoController.$inject = ["$modalInstance", "tusActivosFactory", "$filter", "estadoSituacionFactory", "datosPersonalesFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalAntecedentesConyugeController($modalInstance, estadoSituacionFactory, datosConyugeFactory, datosLaboralesFactory, tmpTokenService, $filter, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getNacionalidad(), vm.getNivelEstudiosConyuge(), vm.getEstadoCompletitud(), vm.mostrarEstoSituacion(), vm.comprobarPortal()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}
			var vm = this;
			vm.estadoSituacion = [], vm.nacionalidad = [], vm.nivelEstudios = [], vm.close = close, vm.estadoCompletitud = [], vm.mostrarTitulo = !1, vm.mostrarUniversidad = !1, vm.mostrarEstadoCompletitud = !1, vm.mostrarAnho = !1, vm.mostrarDuracion = !1, vm.esPrivado = !1, vm.esPublico = !1, vm.rut = "", vm.rutmin = !1, vm.errorModal = !1, vm.errorGuardar = !1, vm.comprobarPortal = function() {
				var token = tmpTokenService.getToken();
				"" === token ? vm.esPrivado = !0 : vm.esPublico = !0
			}, vm.getEstadoCompletitud = function() {
				datosLaboralesFactory.getEstadoCompletitud().success(function(lista) {
					vm.estadoCompletitud = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.adaptarFecha = function(fecha) {
				var dd = "",
					mm = "",
					yyyy = "";
				return fecha.getDate() < 10 && (dd += "0"), fecha.getMonth() + 1 < 10 && (mm += "0"), dd += fecha.getDate(), mm += fecha.getMonth() + 1, yyyy = fecha.getFullYear(), dd + "-" + mm + "-" + yyyy
			}, vm.bloquearInput = function(item, valor) {
				return "rut" == item ? valor.replace(/[^K^k^0-9\^_]+/g, "") : "nombre" == item && valor ? valor.replace(/[^a-zA-Z ]/g, "") : void 0
			}, vm.mostrarEstoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, vm.estadoSituacion.datosPersonalesConyuge.rut && (vm.estadoSituacion.datosPersonalesConyuge.rut = vm.estadoSituacion.datosPersonalesConyuge.rut.toString() + vm.estadoSituacion.datosPersonalesConyuge.dv.toString(), vm.rut = vm.estadoSituacion.datosPersonalesConyuge.rut), (3 == vm.estadoSituacion.datosPersonalesConyuge.nivelEstudios || 4 == vm.estadoSituacion.datosPersonalesConyuge.nivelEstudios || 5 == vm.estadoSituacion.datosPersonalesConyuge.nivelEstudios) && (vm.mostrarTitulo = !0, vm.mostrarUniversidad = !0, vm.mostrarEstadoCompletitud = !0, 1 == vm.estadoSituacion.estudiosConyuge.completitud && (vm.mostrarAnho = !0, vm.mostrarDuracion = !0)), vm.validarRut()
				}, errorObtenerEstado)
			}, vm.getNacionalidad = function() {
				datosConyugeFactory.getNacionalidad().success(function(lista) {
					vm.nacionalidad = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getNivelEstudiosConyuge = function() {
				datosConyugeFactory.getNivelEstudiosConyuge().success(function(lista) {
					vm.nivelEstudios = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.datepicker = function($event, item) {
				$event.preventDefault(), $event.stopPropagation(), "fecNacimiento" === item && (vm.calFecNacimiento = !vm.calFecNacimiento), "ingresoDependiente" === item && (vm.calIngresoDependiente = !vm.calIngresoDependiente), "actIndependientes" === item && (vm.calActIndependientes = !vm.calActIndependientes)
			}, vm.guardar = function() {
				vm.estadoSituacion.datosPersonalesConyuge.rut = $filter("rutSinFormato")(vm.rut), vm.estadoSituacion.datosPersonalesConyuge.dv = vm.estadoSituacion.datosPersonalesConyuge.rut.toString().slice(-1), vm.estadoSituacion.datosPersonalesConyuge.rut = parseInt(vm.estadoSituacion.datosPersonalesConyuge.rut.toString().slice(0, -1), 10), vm.estadoSituacion.datosPersonalesConyuge.fechaNacimiento = "", vm.estadoSituacion.datosPersonalesConyuge.id = vm.estadoSituacion.id, vm.estadoSituacion.estudiosConyuge.id = vm.estadoSituacion.id, vm.estadoSituacion.estudiosConyuge.tipo = "CONYUGE", vm.estadoSituacion.estudiosConyuge.nivel = vm.estadoSituacion.datosPersonalesConyuge.nivelEstudios, vm.estadoSituacion.datosPersonalesConyuge.estadoSeccion = "COMPLETADO", vm.estadoSituacion.estudiosConyuge.estadoSeccion = "COMPLETADO", vm.estadoSituacion.tieneConyuge = 1, estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, vm.validarCampos = function(idNivelEstudios) {
				3 == idNivelEstudios || 4 == idNivelEstudios || 5 == idNivelEstudios ? (vm.mostrarTitulo = !0, vm.mostrarUniversidad = !0, vm.mostrarEstadoCompletitud = !0, vm.mostrarAnho = !1, vm.mostrarDuracion = !1, vm.estadoSituacion.estudiosConyuge.completitud = "", vm.estadoSituacion.estudiosConyuge.tituloCarrera = "", vm.estadoSituacion.estudiosConyuge.universidadIp = "") : (vm.mostrarAnho = !1, vm.mostrarDuracion = !1, vm.mostrarTitulo = !1, vm.mostrarUniversidad = !1, vm.mostrarEstadoCompletitud = !1, vm.mostrarAnho = !1, vm.estadoSituacion.estudiosConyuge.completitud = "")
			}, vm.limpiarCampos = function() {
				vm.estadoSituacion.estudiosConyuge.completitud = "", vm.estadoSituacion.estudiosConyuge.tituloCarrera = "", vm.estadoSituacion.estudiosConyuge.universidadIp = "", vm.estadoSituacion.estudiosConyuge.anoCursa = ""
			}, vm.validarMostrarAnho = function(idEstadoCompletitud) {
				1 == idEstadoCompletitud ? (vm.mostrarAnho = !0, vm.mostrarDuracion = !0) : (vm.mostrarAnho = !1, vm.mostrarDuracion = !1, vm.estadoSituacion.estudiosConyuge.duracion = null, vm.estadoSituacion.estudiosConyuge.anoCursa = null)
			}, vm.emptyField = function(item) {
				return void 0 === item || "" === item
			}, vm.validarRut = function() {
				vm.userForm.rutConyuge.$dirty = !vm.emptyField(vm.rut), null !== vm.rut && void 0 !== vm.rut && vm.rut.length < 8 ? vm.rutmin = !0 : vm.rutmin = !1
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalAntecedentesConyugeController", modalAntecedentesConyugeController), modalAntecedentesConyugeController.$inject = ["$modalInstance", "estadoSituacionFactory", "datosConyugeFactory", "datosLaboralesFactory", "tmpTokenService", "$filter", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalAntecedentesController($filter, $modalInstance, datosPersonalesFactory, firmaDocumentosCcPeopleFactory, estadoSituacionFactory, datepickerConfig, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getNacionalidad(), vm.getSexo(), vm.getEstadoCivil(), vm.getRegimenMatrimonial(), vm.getVivienda(), vm.getPaises(), vm.getResidenciaExtranjera(), vm.getRegiones(), vm.mostrarEstadoSituacion()
			}

			function close(resp) {
				$modalInstance.close(!1)
			}

			function errorServicio(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}
			var vm = this;
			vm.estadoSituacion = {}, vm.close = close, vm.paises = [], vm.nacionalidad = [], vm.sexo = [], vm.estadoCivil = [], vm.regimenMatrimonial = [], vm.vivienda = [], vm.ResidenciaExtranjera = [], vm.datosPersonalesFactory = datosPersonalesFactory, vm.mostrarDatepickerFecha = !1, datepickerConfig.showWeeks = !1, vm.hoyDia = new Date, vm.fechaMinima = new Date("01/01/1900"), vm.fechaNacAux = "", vm.nacionalidadAux = "", vm.paisOrigenAux = "", vm.sexoAux = "", vm.estadoCivilAux = "", vm.tipoViviendaAux = "", vm.regimenMatrimonialAux = "", vm.residenciaExtranjeraAux = "", vm.paisResTributariaAux = "", vm.errorModal = !1, vm.errorGuardar = !1, vm.mostrarEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, "M" === resp.data.datosPersonales.sexo && (resp.data.datosPersonales.sexo = 1), "F" === resp.data.datosPersonales.sexo && (resp.data.datosPersonales.sexo = 2), 0 === resp.data.datosPersonales.estadoCivil && (resp.data.datosPersonales.estadoCivil = ""), 0 === resp.data.datosPersonales.tipoVivienda && (resp.data.datosPersonales.tipoVivienda = ""), vm.isNil(vm.estadoSituacion.datosPersonales.fechaNacimiento) && (vm.fechaNacAux = vm.transformarFecha(resp.data.datosPersonales.fechaNacimiento)), vm.isNil(vm.estadoSituacion.datosPersonales.nacionalidad) && (vm.nacionalidadAux = vm.nacionalidad.find(function(item) {
						return item.id === vm.estadoSituacion.datosPersonales.nacionalidad
					})), vm.isNil(vm.estadoSituacion.datosPersonales.paisOrigen) ? "USA Estados Unidos" === vm.estadoSituacion.datosPersonales.paisOrigen ? vm.paisOrigenAux = {
						value: "1",
						nombre: "Estados Unidos"
					} : vm.paisOrigenAux = vm.paises.find(function(item) {
						return vm.estadoSituacion.datosPersonales.paisOrigen === item.nombre
					}) : vm.paisOrigenAux = {
						value: "56",
						nombre: "Chile"
					}, vm.isNil(vm.estadoSituacion.datosPersonales.sexo) && (vm.sexoAux = vm.sexo.find(function(item) {
						return parseInt(vm.estadoSituacion.datosPersonales.sexo, 10) === item.id
					})), vm.isNil(vm.estadoSituacion.datosPersonales.estadoCivil) && (vm.estadoCivilAux = vm.estadoCivil.find(function(item) {
						return vm.estadoSituacion.datosPersonales.estadoCivil === item.id
					})), vm.isNil(vm.estadoSituacion.datosPersonales.regimenMatrimonial) && (vm.regimenMatrimonialAux = vm.regimenMatrimonial.find(function(item) {
						return vm.estadoSituacion.datosPersonales.regimenMatrimonial === item.id
					})), vm.isNil(vm.estadoSituacion.datosPersonales.tipoVivienda) && (vm.tipoViviendaAux = vm.vivienda.find(function(item) {
						return vm.estadoSituacion.datosPersonales.tipoVivienda === item.id
					})), vm.isNil(vm.estadoSituacion.datosPersonales.residenciaExtranjera) && (vm.residenciaExtranjeraAux = vm.ResidenciaExtranjera.find(function(item) {
						return vm.estadoSituacion.datosPersonales.residenciaExtranjera === item.valor
					})), vm.isNil(vm.estadoSituacion.datosPersonales.paisResTributaria) ? vm.paisResTributariaAux = vm.paises.find(function(item) {
						return vm.estadoSituacion.datosPersonales.paisResTributaria === item.nombre
					}) : vm.paisResTributariaAux = {
						value: "56",
						nombre: "Chile"
					}, vm.formatearMonto()
				}, errorServicio)
			}, vm.transformarFecha = function(fecha) {
				var salida = "";
				if ("" !== fecha) {
					var parts = fecha.split("-"),
						dia = parts[2],
						mes = parts[1],
						year = parts[0];
					salida = dia + "/" + mes + "/" + year
				}
				return salida
			}, vm.fechaNacGuardar = function(fecha) {
				if (fecha.toString().includes("/")) {
					var parts = fecha.split("/"),
						dia = parts[0],
						mes = parts[1],
						year = parts[2];
					fecha = mes + "/" + dia + "/" + year
				}
				return fecha = new Date(fecha)
			}, vm.getPaises = function() {
				vm.datosPersonalesFactory.getPaises().success(function(lista) {
					vm.paises = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getNacionalidad = function() {
				firmaDocumentosCcPeopleFactory.getNacionalidad().then(function(_naci) {
					_naci.data.forEach(function(v) {
						"Extr. Residente" === v.valor && (v.valor = "Extranjero Residente"), "Extranjero" === v.valor && (v.valor = "Extranjero no Residente")
					}), vm.nacionalidad = _naci.data
				}, errorServicio)
			}, vm.getRegiones = function() {
				vm.datosPersonalesFactory.getRegiones().success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var region = {};
						region.id = elemento.id, region.descripcion = elemento.label, listado.push(region)
					}), vm.regiones = listado
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getSexo = function() {
				firmaDocumentosCcPeopleFactory.getSexo().then(function(_paises) {
					vm.sexo = _paises.data
				}, errorServicio)
			}, vm.getEstadoCivil = function() {
				firmaDocumentosCcPeopleFactory.getEstadoCivil().then(function(_estadoCivil) {
					vm.estadoCivil = _estadoCivil.data
				}, errorServicio)
			}, vm.getRegimenMatrimonial = function() {
				firmaDocumentosCcPeopleFactory.getRegimenMatrimonial().then(function(_regimenMatrimonial) {
					vm.regimenMatrimonial = _regimenMatrimonial.data
				}, errorServicio)
			}, vm.getVivienda = function() {
				firmaDocumentosCcPeopleFactory.getVivienda().then(function(_vivienda) {
					_vivienda.data.forEach(function(v) {
						"Propia con Deuda" == v.valor && (v.valor = "Propia con deuda"), "Propia sin Deuda" == v.valor && (v.valor = "Propia sin deuda"), "Vive con Familiares" == v.valor && (v.valor = "Vive con familiares")
					}), vm.vivienda = _vivienda.data
				}, errorServicio)
			}, vm.getResidenciaExtranjera = function() {
				vm.ResidenciaExtranjera = [{
					valor: "Si"
				}, {
					valor: "No"
				}]
			}, vm.submitForm = function() {
				if (vm.loading = !0, vm.estadoSituacion.datosPersonales.estadoSeccion = "COMPLETADO", vm.estadoSituacion.inversionAnual = 0, vm.isNil(vm.estadoSituacion.datosPersonales.montoArriendo)) {
					var montoArriendo = vm.estadoSituacion.datosPersonales.montoArriendo.replace(/[^0-9]/g, "");
					vm.estadoSituacion.datosPersonales.montoArriendo = montoArriendo
				}
				vm.isNil(vm.nacionalidadAux) && (vm.estadoSituacion.datosPersonales.nacionalidad = vm.nacionalidadAux.id), vm.isNil(vm.paisOrigenAux) && (vm.estadoSituacion.datosPersonales.paisOrigen = vm.paisOrigenAux.nombre), vm.isNil(vm.sexoAux) && (vm.estadoSituacion.datosPersonales.sexo = vm.sexoAux.id), vm.isNil(vm.estadoCivilAux) && (vm.estadoSituacion.datosPersonales.estadoCivil = vm.estadoCivilAux.id), vm.isNil(vm.regimenMatrimonialAux) && (vm.estadoSituacion.datosPersonales.regimenMatrimonial = vm.regimenMatrimonialAux.id), vm.isNil(vm.tipoViviendaAux) && (vm.estadoSituacion.datosPersonales.tipoVivienda = vm.tipoViviendaAux.id), vm.isNil(vm.residenciaExtranjeraAux) && (vm.estadoSituacion.datosPersonales.residenciaExtranjera = vm.residenciaExtranjeraAux.valor), vm.isNil(vm.paisResTributariaAux) && (vm.estadoSituacion.datosPersonales.paisResTributaria = vm.paisResTributariaAux.nombre), vm.estadoSituacion.datosPersonales.fechaNacimiento = vm.fechaNacGuardar(vm.fechaNacAux), estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					vm.loading = !1, $modalInstance.close(!0)
				}, contingencia)
			}, vm.verificaNacionalidad = function() {
				1 === parseInt(vm.nacionalidadAux.id, 10) && (vm.residenciaExtranjeraAux = null, vm.paisResTributariaAux = null, vm.estadoSituacion.datosPersonales.numeroIdTributaria = null)
			}, vm.verificaResidenciaTributaria = function() {
				"No" === vm.residenciaExtranjeraAux.valor && (vm.paisResTributariaAux = null, vm.estadoSituacion.datosPersonales.numeroIdTributaria = null)
			}, vm.verificaEstadoCivil = function() {
				2 !== vm.estadoCivilAux.id && 5 !== vm.estadoCivilAux.id && (vm.regimenMatrimonialAux = null)
			}, vm.verificaVivienda = function() {
				7 !== vm.tipoViviendaAux.id && (vm.estadoSituacion.datosPersonales.otroTipoResidencia = null), 3 !== vm.tipoViviendaAux.id && (vm.estadoSituacion.datosPersonales.montoArriendo = null)
			}, vm.isNil = function(item) {
				return null !== item && void 0 !== item
			}, vm.datepicker = function($event) {
				$event.preventDefault(), $event.stopPropagation(), vm.mostrarDatepickerFecha = !vm.mostrarDatepickerFecha
			}, modalAntecedentesController.prototype.toggleMostrarDatepickerFecha = function() {
				vm.mostrarDatepickerFecha = !vm.mostrarDatepickerFecha
			}, vm.formatearMonto = function() {
				null !== vm.estadoSituacion.datosPersonales.montoArriendo && (vm.estadoSituacion.datosPersonales.montoArriendo = $filter("formatoMonedaEESS")(vm.estadoSituacion.datosPersonales.montoArriendo.toString().replace(/[^0-9]/g, "")))
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalAntecedentesController", modalAntecedentesController), modalAntecedentesController.$inject = ["$filter", "$modalInstance", "datosPersonalesFactory", "firmaDocumentosCcPeopleFactory", "estadoSituacionFactory", "datepickerConfig", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalCargosController($modalInstance, estadoSituacionFactory, catalogoMensajesFactory) {
			function close() {
				$modalInstance.close(!1)
			}

			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, null !== vm.estadoSituacion.cargosPublicos && void 0 !== vm.estadoSituacion.cargosPublicos && (vm.cargoPublico = vm.estadoSituacion.cargosPublicos.find(function(item) {
						return "PROPIO" === item.tipo
					}), vm.cargoPublicoRelacionado = vm.estadoSituacion.cargosPublicos.find(function(item) {
						return "RELACIONADO" === item.tipo
					}), null !== vm.cargoPublico && void 0 !== vm.cargoPublico && (void 0 !== vm.cargoPublico.institucion && null !== vm.cargoPublico.institucion || void 0 !== vm.cargoPublico.cargo && null !== vm.cargoPublico.cargo) && ("" !== vm.cargoPublico.institucion || "" !== vm.cargoPublico.cargo) && (vm.flgCargoPublicoPropio = !0), null !== vm.cargoPublicoRelacionado && void 0 !== vm.cargoPublicoRelacionado && (void 0 !== vm.cargoPublicoRelacionado.institucion && null !== vm.cargoPublicoRelacionado.institucion || void 0 !== vm.cargoPublicoRelacionado.cargo && null !== vm.cargoPublicoRelacionado.cargo) && ("" !== vm.cargoPublicoRelacionado.institucion || "" !== vm.cargoPublicoRelacionado.cargo) && (vm.flgCargoPublicoRelacionado = !0)), void 0 === vm.cargoPublicoRelacionado && (vm.cargoPublicoRelacionado = {}), void 0 === vm.cargoPublico && (vm.cargoPublico = {})
				}, errorObtenerEstado)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.flgCargoPublicoPropio = !1, vm.flgCargoPublicoRelacionado = !1, vm.estadoSituacion = [], vm.close = close, vm.flgPubInstitucionValid = !0, vm.flgPubCargoValid = !0, vm.flgRelInstitucionValid = !0, vm.flgRelCargoValid = !0, vm.cargoPublico = {}, vm.cargoPublicoRelacionado = {}, vm.errorGuardar = !1, vm.errorModal = !1, vm.validarPubInstitucion = function() {
				vm.cargoPublico.institucion && void 0 !== vm.cargoPublico.institucion ? vm.flgPubInstitucionValid = !0 : vm.flgPubInstitucionValid = !1
			}, vm.validarPubCargo = function() {
				vm.cargoPublico.cargo && void 0 !== vm.cargoPublico.cargo ? vm.flgPubCargoValid = !0 : vm.flgPubCargoValid = !1
			}, vm.validarRelInstitucion = function() {
				vm.cargoPublicoRelacionado.institucion && void 0 !== vm.cargoPublicoRelacionado.institucion ? vm.flgRelInstitucionValid = !0 : vm.flgRelInstitucionValid = !1
			}, vm.validarRelCargo = function() {
				vm.cargoPublicoRelacionado.cargo && void 0 !== vm.cargoPublicoRelacionado.cargo ? vm.flgRelCargoValid = !0 : vm.flgRelCargoValid = !1
			}, vm.swCargoPropio = function() {
				vm.cargoPublico.institucion = "", vm.cargoPublico.cargo = ""
			}, vm.swCargoOtro = function() {
				vm.cargoPublicoRelacionado.institucion = "", vm.cargoPublicoRelacionado.cargo = ""
			}, vm.guardar = function() {}, vm.submitForm = function() {
				var posCargoPublico = vm.estadoSituacion.cargosPublicos.findIndex(function(item) {
						return "PROPIO" === item.tipo
					}),
					posCargoRelacionado = vm.estadoSituacion.cargosPublicos.findIndex(function(item) {
						return "RELACIONADO" === item.tipo
					});
				vm.cargoPublico.id = vm.estadoSituacion.id, vm.cargoPublicoRelacionado.id = vm.estadoSituacion.id, vm.flgCargoPublicoPropio && (vm.cargoPublico.tipo = "PROPIO", vm.cargoPublico.estadoSeccion = "COMPLETADO", posCargoPublico > -1 ? vm.estadoSituacion.cargosPublicos[posCargoPublico] = vm.cargoPublico : vm.estadoSituacion.cargosPublicos.push(vm.cargoPublico)), vm.flgCargoPublicoRelacionado && (vm.cargoPublicoRelacionado.tipo = "RELACIONADO", vm.cargoPublicoRelacionado.estadoSeccion = "COMPLETADO", posCargoRelacionado > -1 ? vm.estadoSituacion.cargosPublicos[posCargoRelacionado] = vm.cargoPublicoRelacionado : vm.estadoSituacion.cargosPublicos.push(vm.cargoPublicoRelacionado)), vm.estadoSituacion.inversionAnual = 0, estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalCargosController", modalCargosController), modalCargosController.$inject = ["$modalInstance", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalContactoController($modalInstance, estadoSituacionFactory, datosDeudasFactory, catalogoMensajesFactory) {
			function close() {
				$modalInstance.close(!1)
			}

			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getEstadoSituacion(), datosDeudasFactory.getContactoLlegada().then(function(resp) {
					resp.data.length > 0 && (vm.listaContactoLlegada = resp.data)
				}, errorServicio)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorServicio(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.listaContactoLlegada = [], vm.close = close, vm.estadoSituacion = [], vm.errorGuardar = !1, vm.errorModal = !1, vm.getEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().success(function(lista) {
					vm.estadoSituacion = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.tipoConociobanco = function(idConocioBanco) {
				switch (idConocioBanco) {
					case 3:
						vm.estadoSituacion.estadoSituacion.contactoLlegada.otro = "";
						break;
					case 4:
						vm.estadoSituacion.estadoSituacion.contactoLlegada.nombre = "", vm.estadoSituacion.estadoSituacion.contactoLlegada.rut = "";
						break;
					default:
						vm.estadoSituacion.estadoSituacion.contactoLlegada.otro = "", vm.estadoSituacion.estadoSituacion.contactoLlegada.nombre = "", vm.estadoSituacion.estadoSituacion.contactoLlegada.rut = ""
				}
			}, vm.guardar = function() {
				estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(resp) {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalContactoController", modalContactoController), modalContactoController.$inject = ["$modalInstance", "estadoSituacionFactory", "datosDeudasFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalCuentaCorrienteController($modalInstance, datosDeudasFactory, estadoSituacionFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.limpiarCampos(), vm.getEstadoSituacion(), vm.getBancos()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorServicio(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.listaBancos = [], vm.estadoSituacion = [], vm.close = close, vm.estadoSituacion = [], vm.flgInversiones = !1, vm.flgAgregarInversiones = !1, vm.ccPosicion = -1, vm.listaICuentasCorrientes = [], vm.ccBanco = "", vm.ccNroCuentaCorriente = "", vm.sucursal = "", vm.errorGuardar = !1, vm.errorModal = !1, vm.activarTablas = function() {
				vm.activarTablaCuentaCorriente()
			}, vm.activarTablaCuentaCorriente = function() {
				vm.flgInversiones = !1, vm.flgAgregarInversiones = !1, vm.listaICuentasCorrientes = [], (void 0 !== vm.estadoSituacion.estadoSituacion.cuentasCorrientes || null !== vm.estadoSituacion.estadoSituacion.cuentasCorrientes) && vm.estadoSituacion.estadoSituacion.cuentasCorrientes.length > 0 && (vm.flgInversiones = !0, vm.flgAgregarInversiones = !1, vm.listaICuentasCorrientes = vm.estadoSituacion.estadoSituacion.cuentasCorrientes)
			}, vm.cargarEditarCuentaCoriente = function(index) {
				vm.flgAgregarInversiones = !0, vm.ccBanco = vm.listaICuentasCorrientes[index].banco, vm.ccNroCuentaCorriente = vm.listaICuentasCorrientes[index].numeroCuenta, vm.cuentaCorrienteLineaCredito = "Si" === vm.listaICuentasCorrientes[index].lineaCreditoAsociada ? !0 : !1, vm.sucursal = vm.listaICuentasCorrientes[index].sucursal, vm.ccPosicion = index
			}, vm.getEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, vm.activarTablas()
				}, errorServicio)
			}, vm.getBancos = function() {
				datosDeudasFactory.getBancos().then(function(resp) {
					resp.data.length > 0 && (vm.listaBancos = resp.data)
				}, errorServicio)
			}, vm.buscarLabelBanco = function(idBanco) {
				var nombre = "";
				return vm.listaBancos.forEach(function(elemento) {
					elemento.id == idBanco && (nombre = elemento.valor)
				}), nombre
			}, vm.swActivos = function(item) {
				"inversion" === item && (vm.flgInversiones = !vm.flgInversiones, vm.flgAgregarInversiones = vm.flgInversiones)
			}, vm.guardarCuentaCorriente = function() {
				var temp = {
					id: vm.estadoSituacion.estadoSituacion.id,
					estadoSeccion: "COMPLETADO",
					banco: vm.ccBanco,
					numeroCuenta: vm.ccNroCuentaCorriente,
					lineaCreditoAsociada: vm.cuentaCorrienteLineaCredito === !0 ? "Si" : "No",
					sucursal: vm.sucursal
				};
				if (-1 === vm.ccPosicion) vm.listaICuentasCorrientes.push(temp), vm.flgAgregarInversiones = !1, vm.estadoSituacion.estadoSituacion.cuentasCorrientes = vm.listaICuentasCorrientes, vm.limpiarCampos("inversion");
				else {
					var posicion = parseInt(vm.ccPosicion, 10);
					vm.listaICuentasCorrientes[posicion] = {
						id: vm.estadoSituacion.estadoSituacion.id,
						estadoSeccion: "COMPLETADO",
						banco: vm.ccBanco,
						numeroCuenta: vm.ccNroCuentaCorriente,
						lineaCreditoAsociada: vm.cuentaCorrienteLineaCredito === !0 ? "Si" : "No",
						sucursal: vm.sucursal
					}, vm.estadoSituacion.estadoSituacion.cuentasCorrientes = vm.listaICuentasCorrientes, vm.limpiarCampos("inversion")
				}
			}, vm.borrarCuentaCorriente = function(index) {
				vm.limpiarCampos("inversion"), vm.flgAgregarInversiones = !1, vm.listaICuentasCorrientes.splice(index, 1), vm.estadoSituacion.estadoSituacion.cuentasCorrientes = vm.listaICuentasCorrientes, vm.listaICuentasCorrientes.length || (vm.flgAgregarInversiones = !0)
			}, vm.limpiarCampos = function() {
				vm.ccBanco = "", vm.ccNroCuentaCorriente = "", vm.sucursal = "", vm.ccPosicion = -1
			}, vm.guardar = function() {
				estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(resp) {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalCuentaCorrienteController", modalCuentaCorrienteController), modalCuentaCorrienteController.$inject = ["$modalInstance", "datosDeudasFactory", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalDireccionComercialController($modalInstance, datosPersonalesFactory, estadoSituacionFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getPaises(), vm.getRegiones(), vm.mostrarEstadoSituacion()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.datosPersonalesFactory = datosPersonalesFactory, vm.estadoSituacion = [], vm.close = close, vm.paises = [], vm.regiones = [], vm.ciudades = [], vm.comunas = [], vm.idPaisAux = "", vm.idRegionAux = "", vm.idCiudadAux = "", vm.idComunaAux = "", vm.errorModal = !1, vm.errorGuardar = !1, vm.mostrarEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, vm.direccionComercial = vm.estadoSituacion.direcciones.find(function(item) {
						return "COMERCIAL" === item.tipo
					}), void 0 !== vm.direccionComercial && null !== vm.direccionComercial && void 0 !== vm.direccionComercial.idPais && null !== vm.direccionComercial.idPais ? (vm.idPaisAux = vm.paises.find(function(item) {
						return parseInt(item.value, 10) === vm.direccionComercial.idPais
					}), "Chile" === vm.idPaisAux.nombre ? (null !== vm.direccionComercial.idRegion && void 0 !== vm.direccionComercial.idRegion && (vm.getCiudades(vm.direccionComercial.idRegion), vm.flgParticularCiudad = !0, vm.idRegionAux = vm.regiones.find(function(item) {
						return parseInt(item.id, 10) === vm.direccionComercial.idRegion
					}), null !== vm.direccionComercial.idCiudad && void 0 !== vm.direccionComercial.idCiudad && (vm.getComunas(vm.direccionComercial.idCiudad), vm.flgParticularComuna = !0)), 0 === parseInt(vm.direccionComercial.idPais, 10) && (vm.idPaisAux = {
						value: "56",
						nombre: "Chile"
					})) : vm.noEsChile = !0) : vm.idPaisAux = {
						value: "56",
						nombre: "Chile"
					}
				}, errorObtenerEstado)
			}, vm.getPaises = function() {
				datosPersonalesFactory.getPaises().success(function(lista) {
					vm.paises = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getRegiones = function() {
				datosPersonalesFactory.getRegiones().success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var region = {};
						region.id = elemento.id, region.descripcion = elemento.label, listado.push(region)
					}), vm.regiones = listado
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getCiudades = function(idRegion) {
				datosPersonalesFactory.getCiudades(idRegion).success(function(lista) {
					vm.ciudades = lista, vm.idCiudadAux = vm.ciudades.find(function(item) {
						return parseInt(item.id, 10) === vm.direccionComercial.idCiudad
					})
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularCiudad = !0, vm.flgParticularComuna = !1
			}, vm.getComunas = function(idCiudad) {
				datosPersonalesFactory.getComunas(idCiudad).success(function(lista) {
					vm.comunas = lista, vm.idComunaAux = vm.comunas.find(function(item) {
						return item.descripcion === vm.direccionComercial.labelComuna
					})
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.comunaBien = "", vm.flgParticularComuna = !0
			}, vm.getCiudadesFront = function(idRegion) {
				vm.idCiudadAux = null, vm.ciudades = [], vm.datosPersonalesFactory.getCiudades(idRegion).success(function(lista) {
					vm.ciudades = lista, vm.idComunaAux = null
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularCiudad = !0, vm.flgParticularComuna = !1
			}, vm.getComunasFront = function(idCiudad, existe) {
				vm.idComunaAux = null, vm.comunas = [], datosPersonalesFactory.getComunas(idCiudad).success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var comuna = {};
						comuna.id = elemento.id, comuna.descripcion = elemento.descripcion, listado.push(comuna)
					}), vm.comunas = listado
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularComuna = !0
			}, vm.cambioPais = function() {
				null !== vm.direccionComercial && void 0 !== vm.direccionComercial && null !== vm.idPaisAux && void 0 !== vm.idPaisAux && ("Chile" === vm.idPaisAux.nombre ? vm.noEsChile = !1 : (vm.noEsChile = !0, vm.idRegionAux = null, vm.idCiudadAux = null, vm.idComunaAux = null))
			}, vm.submitForm = function() {
				vm.direccionComercial.id = vm.estadoSituacion.id, vm.direccionComercial.tipo = "COMERCIAL", vm.direccionComercial.estadoSeccion = "COMPLETADO", null !== vm.direccionComercial && void 0 !== vm.direccionComercial && (null !== vm.idPaisAux && void 0 !== vm.idPaisAux ? (vm.direccionComercial.labelPais = vm.idPaisAux.nombre, vm.direccionComercial.idPais = vm.idPaisAux.value) : (vm.direccionComercial.labelPais = null, vm.direccionComercial.idPais = null), void 0 !== vm.idRegionAux && null !== vm.idRegionAux ? (vm.direccionComercial.labelRegion = vm.idRegionAux.descripcion, vm.direccionComercial.idRegion = vm.idRegionAux.id) : (vm.direccionComercial.labelRegion = null, vm.direccionComercial.idRegion = null), void 0 !== vm.idCiudadAux && null !== vm.idCiudadAux ? (vm.direccionComercial.labelCiudad = vm.idCiudadAux.descripcion, vm.direccionComercial.idCiudad = vm.idCiudadAux.id) : (vm.direccionComercial.labelCiudad = null, vm.direccionComercial.idCiudad = null), void 0 !== vm.idComunaAux && null !== vm.idComunaAux ? (vm.direccionComercial.labelComuna = vm.idComunaAux.descripcion, vm.direccionComercial.idComuna = vm.idComunaAux.id) : (vm.direccionComercial.labelComuna = null, vm.direccionComercial.idComuna = null)), vm.direccionComercial.codigoPostal = 0, vm.estadoSituacion.inversionAnual = 0;
				var direccionComercialPos = vm.estadoSituacion.direcciones.findIndex(function(item) {
					return "COMERCIAL" === item.tipo
				});
				direccionComercialPos > -1 ? vm.estadoSituacion.direcciones[direccionComercialPos] = vm.direccionComercial : vm.estadoSituacion.direcciones.push(vm.direccionComercial), estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalDireccionComercialController", modalDireccionComercialController), modalDireccionComercialController.$inject = ["$modalInstance", "datosPersonalesFactory", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalDireccionParticularController($modalInstance, datosPersonalesFactory, estadoSituacionFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getPaises(), vm.getRegiones(!1), vm.mostrarEstadoSituacion()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.datosPersonalesFactory = datosPersonalesFactory, vm.estadoSituacion = {}, vm.direccionParticular = {}, vm.close = close, vm.paises = [], vm.regiones = [], vm.ciudades = [], vm.idPaisAux = "", vm.idRegionAux = "", vm.idCiudadAux = "", vm.idComunaAux = "", vm.errorModal = !1, vm.errorGuardar = !1, vm.mostrarEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, vm.direccionParticular = vm.estadoSituacion.direcciones.find(function(item) {
						return "PARTICULAR" === item.tipo
					}), void 0 !== vm.direccionParticular && null !== vm.direccionParticular ? (void 0 !== vm.direccionParticular.idPais && null !== vm.direccionParticular.idPais ? vm.idPaisAux = vm.paises.find(function(item) {
						return parseInt(item.value, 10) === vm.direccionParticular.idPais
					}) : vm.idPaisAux = {
						value: "56",
						nombre: "Chile"
					}, "Chile" === vm.idPaisAux.nombre ? (null !== vm.direccionParticular.idRegion && void 0 !== vm.direccionParticular.idRegion && (vm.getCiudades(vm.direccionParticular.idRegion, !0), vm.flgParticularCiudad = !0, vm.idRegionAux = vm.regiones.find(function(item) {
						return parseInt(item.id, 10) === vm.direccionParticular.idRegion
					}), null !== vm.direccionParticular.idCiudad && void 0 !== vm.direccionParticular.idCiudad && (vm.getComunas(vm.direccionParticular.idCiudad), vm.flgParticularComuna = !0)), 0 === parseInt(vm.direccionParticular.idPais, 10) && (vm.idPaisAux = {
						value: "56",
						nombre: "Chile"
					})) : vm.noEsChile = !0) : vm.idPaisAux = {
						value: "56",
						nombre: "Chile"
					}
				}, errorObtenerEstado)
			}, vm.getPaises = function() {
				vm.datosPersonalesFactory.getPaises().success(function(lista) {
					vm.paises = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getRegiones = function(existe) {
				vm.datosPersonalesFactory.getRegiones().success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var region = {};
						region.id = elemento.id, region.descripcion = elemento.label, listado.push(region)
					}), vm.regiones = listado, existe && (vm.estadoSituacion.direccionParticular.ciudad = null, vm.estadoSituacion.direccionParticular.comuna = null)
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularCiudad = !0
			}, vm.getCiudades = function(idRegion, existe) {
				vm.ciudades = [], vm.datosPersonalesFactory.getCiudades(idRegion).success(function(lista) {
					vm.ciudades = lista, vm.idCiudadAux = vm.ciudades.find(function(item) {
						return parseInt(item.id, 10) === vm.direccionParticular.idCiudad
					})
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularCiudad = !0, vm.flgParticularComuna = !1
			}, vm.getComunas = function(idCiudad) {
				vm.comunas = [], datosPersonalesFactory.getComunas(idCiudad).success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var comuna = {};
						comuna.id = elemento.id, comuna.descripcion = elemento.descripcion, listado.push(comuna)
					}), vm.comunas = listado, vm.idComunaAux = vm.comunas.find(function(item) {
						return item.descripcion === vm.direccionParticular.labelComuna
					})
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularComuna = !0
			}, vm.getRegionesFront = function(existe) {
				vm.datosPersonalesFactory.getRegiones().success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var region = {};
						region.id = elemento.id, region.descripcion = elemento.label, listado.push(region)
					}), vm.regiones = listado, vm.estadoSituacion.direccionParticular.ciudad = null, vm.estadoSituacion.direccionParticular.comuna = null
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularCiudad = !0
			}, vm.getCiudadesFront = function(idRegion) {
				vm.idCiudadAux = null, vm.ciudades = [], vm.datosPersonalesFactory.getCiudades(idRegion).success(function(lista) {
					vm.ciudades = lista, vm.idComunaAux = null
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularCiudad = !0, vm.flgParticularComuna = !1
			}, vm.getComunasFront = function(idCiudad, existe) {
				vm.idComunaAux = null, vm.comunas = [], datosPersonalesFactory.getComunas(idCiudad).success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var comuna = {};
						comuna.id = elemento.id, comuna.descripcion = elemento.descripcion, listado.push(comuna)
					}), vm.comunas = listado
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularComuna = !0
			}, vm.cambioPais = function() {
				null !== vm.direccionParticular && void 0 !== vm.direccionParticular && null !== vm.idPaisAux && void 0 !== vm.idPaisAux && ("Chile" === vm.idPaisAux.nombre ? vm.noEsChile = !1 : (vm.noEsChile = !0, vm.idRegionAux = null, vm.idCiudadAux = null, vm.idComunaAux = null))
			}, vm.submitForm = function() {
				vm.direccionParticular.id = vm.estadoSituacion.id, vm.direccionParticular.tipo = "PARTICULAR", vm.direccionParticular.estadoSeccion = "COMPLETADO", null !== vm.direccionParticular && void 0 !== vm.direccionParticular && (null !== vm.idPaisAux && void 0 !== vm.idPaisAux ? (vm.direccionParticular.labelPais = vm.idPaisAux.nombre, vm.direccionParticular.idPais = vm.idPaisAux.value) : (vm.direccionParticular.labelPais = null, vm.direccionParticular.idPais = null), void 0 !== vm.idRegionAux && null !== vm.idRegionAux ? (vm.direccionParticular.labelRegion = vm.idRegionAux.descripcion, vm.direccionParticular.idRegion = vm.idRegionAux.id) : (vm.direccionParticular.labelRegion = null, vm.direccionParticular.idRegion = null), void 0 !== vm.idCiudadAux && null !== vm.idCiudadAux ? (vm.direccionParticular.labelCiudad = vm.idCiudadAux.descripcion, vm.direccionParticular.idCiudad = vm.idCiudadAux.id) : (vm.direccionParticular.labelCiudad = null, vm.direccionParticular.idCiudad = null), void 0 !== vm.idComunaAux && null !== vm.idComunaAux ? (vm.direccionParticular.labelComuna = vm.idComunaAux.descripcion, vm.direccionParticular.idComuna = vm.idComunaAux.id) : (vm.direccionParticular.labelComuna = null, vm.direccionParticular.idComuna = null)), vm.direccionParticular.codigoPostal = 0, vm.estadoSituacion.inversionAnual = 0;
				var direccionParticularPos = vm.estadoSituacion.direcciones.findIndex(function(item) {
					return "PARTICULAR" === item.tipo
				});
				direccionParticularPos > -1 ? vm.estadoSituacion.direcciones[direccionParticularPos] = vm.direccionParticular : vm.estadoSituacion.direcciones.push(vm.direccionParticular), estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(resp) {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalDireccionParticularController", modalDireccionParticularController), modalDireccionParticularController.$inject = ["$modalInstance", "datosPersonalesFactory", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalDocumentosaSolicitarController($modalInstance, datosLaboralesFactory, estadoSituacionFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getActividadActual(), vm.getNivelDependiente(), vm.getNivelIndependiente(), vm.getNivelDependiente(), vm.getTipoSocio(), vm.mostrarEstoSituacion()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.close = close, vm.estadoSituacion = [], vm.actividadActual = [], vm.nivelDependiente = [], vm.tipoSocio = [], vm.nivelIndependiente = [], vm.datosLaboralesFactory = datosLaboralesFactory, vm.errorModal = !1, vm.errorGuardar = !1, vm.mostrarEstoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, null === vm.estadoSituacion.estadoSituacion.actualDependienteTitular && (vm.estadoSituacion.estadoSituacion.actualDependienteTitular = {}, vm.resetearActividadActualDependiente()), null === vm.estadoSituacion.estadoSituacion.actualIndependienteTitular && (vm.estadoSituacion.estadoSituacion.actualIndependienteTitular = {}, vm.resetearActividadActualIndependiente())
				}, errorObtenerEstado)
			}, vm.getActividadActual = function() {
				vm.datosLaboralesFactory.getActividadActual().success(function(lista) {
					vm.actividadActual = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getNivelIndependiente = function() {
				vm.datosLaboralesFactory.getNivelIndependiente().success(function(lista) {
					vm.nivelIndependiente = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getNivelDependiente = function() {
				vm.datosLaboralesFactory.getNivelDependiente().success(function(lista) {
					vm.nivelDependiente = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getTipoSocio = function() {
				vm.datosLaboralesFactory.getTipoSocio().success(function(lista) {
					vm.tipoSocio = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.resetearCamposDependienteIndependiente = function(valor) {
				switch (valor) {
					case 1:
						vm.resetearActividadActualIndependiente();
						break;
					case 2:
						vm.resetearActividadActualDependiente();
						break;
					default:
						vm.resetearActividadActualDependiente(), vm.resetearActividadActualIndependiente()
				}
			}, vm.resetearActividadActualIndependiente = function() {
				vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.actividad = "", vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.estadoSeccion = "INCOMPLETO", vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.inicio = "", vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.nivel = null, vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.tipo = "INDEFINIDA"
			}, vm.resetearActividadActualDependiente = function() {
				vm.estadoSituacion.estadoSituacion.actualDependienteTitular.cargo = "", vm.estadoSituacion.estadoSituacion.actualDependienteTitular.estadoSeccion = "INCOMPLETO", vm.estadoSituacion.estadoSituacion.actualDependienteTitular.giroEmpresa = "", vm.estadoSituacion.estadoSituacion.actualDependienteTitular.inicio = "", vm.estadoSituacion.estadoSituacion.actualDependienteTitular.nivel = null, vm.estadoSituacion.estadoSituacion.actualDependienteTitular.nombreEmpresa = "", vm.estadoSituacion.estadoSituacion.actualDependienteTitular.rutEmpresa = "", vm.estadoSituacion.estadoSituacion.actualDependienteTitular.socio = "", vm.estadoSituacion.estadoSituacion.actualDependienteTitular.tipo = "INDEFINIDA"
			}, vm.datepicker = function($event, item) {
				$event.preventDefault(), $event.stopPropagation(), "ingresoDependiente" == item && (vm.calIngresoDependiente = !vm.calIngresoDependiente), "actIndependientes" == item && (vm.calActIndependientes = !vm.calActIndependientes)
			}, vm.completarTipoTitular = function(valor) {
				switch (valor = parseInt(valor, 10)) {
					case 1:
						vm.estadoSituacion.estadoSituacion.actualDependienteTitular.tipo = "TITULAR", vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.tipo = "INDEFINIDA";
						break;
					case 2:
						vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.tipo = "TITULAR", null !== vm.estadoSituacion.estadoSituacion.actualDependienteTitular && (vm.estadoSituacion.estadoSituacion.actualDependienteTitular.tipo = "INDEFINIDA");
						break;
					default:
						vm.estadoSituacion.estadoSituacion.actualDependienteTitular.tipo = "INDEFINIDA", vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.tipo = "INDEFINIDA"
				}
			}, vm.adaptarFecha = function(fecha) {
				var dd = "",
					mm = "",
					yyyy = "";
				return fecha.getDate() < 10 && (dd += "0"), fecha.getMonth() + 1 < 10 && (mm += "0"), dd += fecha.getDate(), mm += fecha.getMonth() + 1, yyyy = fecha.getFullYear(), dd + "-" + mm + "-" + yyyy
			}, vm.guardar = function() {}, vm.submitForm = function() {
				vm.completarTipoTitular(vm.estadoSituacion.estadoSituacion.actividadActual), vm.estadoSituacion.estadoSituacion.anteriorDependienteTitular.tipo = "TITULAR", vm.estadoSituacion.estadoSituacion.anteriorIndependienteTitular.tipo = "TITULAR", vm.estadoSituacion.estadoSituacion.actualDependienteTitular.inicio && (vm.estadoSituacion.estadoSituacion.actualDependienteTitular.inicio = vm.adaptarFecha(vm.estadoSituacion.estadoSituacion.actualDependienteTitular.inicio)), vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.inicio && (vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.inicio = vm.adaptarFecha(vm.estadoSituacion.estadoSituacion.actualIndependienteTitular.inicio)), estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalDocumentosaSolicitarController", modalDocumentosaSolicitarController), modalDocumentosaSolicitarController.$inject = ["$modalInstance", "datosLaboralesFactory", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalEstudioController($modalInstance, estadoSituacionFactory, datosLaboralesFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getNivelEstudio(), vm.getEstadoCompletitud(), estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, (3 === vm.estadoSituacion.estudios.nivel || 4 === vm.estadoSituacion.estudios.nivel || 5 === vm.estadoSituacion.estudios.nivel) && (vm.mostrarTitulo = !0, vm.mostrarUniversidad = !0, vm.mostrarEstadoCompletitud = !0), 1 === vm.estadoSituacion.estudios.completitud && (vm.mostrarAnho = !0, vm.mostrarDuracion = !0), (2 === vm.estadoSituacion.estudios.completitud || 3 === vm.estadoSituacion.estudios.completitud) && (vm.mostrarAnho = !1, vm.mostrarDuracion = !0)
				}, errorObtenerEstado)
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.nivelEstudio = [], vm.close = close, vm.estadoSituacion = [], vm.estadoCompletitud = [], vm.mostrarTitulo = !1, vm.mostrarUniversidad = !1, vm.mostrarEstadoCompletitud = !1, vm.mostrarAnho = !1, vm.mostrarDuracion = !1, vm.errorModal = !1, vm.errorGuardar = !1, vm.limpiarCampos = function(userForm) {
				vm.estadoSituacion.estudios.completitud = "", vm.estadoSituacion.estudios.duracion = "", vm.estadoSituacion.estudios.tituloCarrera = "", vm.estadoSituacion.estudios.universidadIp = "", vm.estadoSituacion.estudios.anoCursa = "", userForm.$setPristine(), userForm.$setUntouched()
			}, vm.getNivelEstudio = function() {
				datosLaboralesFactory.getNivelEstudio().success(function(lista) {
					vm.nivelEstudio = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getEstadoCompletitud = function() {
				datosLaboralesFactory.getEstadoCompletitud().success(function(lista) {
					vm.estadoCompletitud = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.validarCampos = function(idNivelEstudios) {
				3 === idNivelEstudios || 4 === idNivelEstudios || 5 === idNivelEstudios ? (vm.mostrarTitulo = !0, vm.mostrarUniversidad = !0, vm.mostrarEstadoCompletitud = !0, vm.mostrarAnho = !1, vm.mostrarDuracion = !1, vm.estadoSituacion.estudios.completitud = "", vm.estadoSituacion.estudios.tituloCarrera = "", vm.estadoSituacion.estudios.universidadIp = "") : (vm.mostrarAnho = !1, vm.mostrarDuracion = !1, vm.mostrarTitulo = !1, vm.mostrarUniversidad = !1, vm.mostrarEstadoCompletitud = !1, vm.mostrarAnho = !1, vm.estadoSituacion.estudios.completitud = "")
			}, vm.validarMostrarAnho = function(idEstadoCompletitud) {
				1 == idEstadoCompletitud && (vm.mostrarAnho = !0, vm.mostrarDuracion = !0), (2 == idEstadoCompletitud || 3 == idEstadoCompletitud) && (vm.mostrarDuracion = !0, vm.mostrarAnho = !1)
			}, vm.submitForm = function(userForm) {
				vm.guardar()
			}, vm.guardar = function() {
				1 !== vm.estadoSituacion.estudios.completitud && (vm.estadoSituacion.estudios.anoCursa = null), vm.estadoSituacion.inversionAnual = 0, vm.estadoSituacion.estudios.estadoSeccion = "COMPLETADO", estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalEstudioController", modalEstudioController), modalEstudioController.$inject = ["$modalInstance", "estadoSituacionFactory", "datosLaboralesFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function ingresoMensualConyugeController($filter, $modalInstance, estadoSituacionFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.mostrarEstadoSituacion()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}
			var vm = this;
			vm.estadoSituacion = [], vm.flgSueldo = !1, vm.flgHonorarios = !1, vm.flgArriendos = !1, vm.flgRetiros = !1, vm.flgOtros = !1, vm.sueldo = "", vm.honorarios = "", vm.arriendos = "", vm.retiros = "", vm.otros = "", vm.totales = 0, vm.close = close, vm.existeCambio = !1, vm.existeUnIngresoDeAntes = !1, vm.flgEditarSueldo = !1, vm.flgEditarHonorarios = !1, vm.flgEditarArriendos = !1, vm.flgEditarRetiros = !1, vm.flgEditarOtros = !1, vm.errorGuardar = !1, vm.errorModal = !1, vm.mostrarEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, vm.validarIngresosLiquidoMensual(), vm.formateaMoneda()
				}, errorObtenerEstado)
			}, vm.validarIngresosLiquidoMensual = function() {
				null !== vm.estadoSituacion && void 0 !== vm.estadoSituacion && null !== vm.estadoSituacion.ingresosConyuge && void 0 !== vm.estadoSituacion.ingresosConyuge && (null == vm.estadoSituacion.ingresosConyuge[0].monto || vm.estadoSituacion.ingresosConyuge[0].monto <= 0 ? (vm.flgSueldo = !1, vm.sueldo = "") : (vm.flgSueldo = !0, vm.sueldo = vm.estadoSituacion.ingresosConyuge[0].monto, vm.flgEditarSueldo = !0, vm.existeUnIngresoDeAntes = !0), null == vm.estadoSituacion.ingresosConyuge[1].monto || vm.estadoSituacion.ingresosConyuge[1].monto <= 0 ? (vm.flgHonorarios = !1, vm.honorarios = "") : (vm.flgHonorarios = !0, vm.honorarios = vm.estadoSituacion.ingresosConyuge[1].monto, vm.flgEditarHonorarios = !0, vm.existeUnIngresoDeAntes = !0), null == vm.estadoSituacion.ingresosConyuge[2].monto || vm.estadoSituacion.ingresosConyuge[2].monto <= 0 ? (vm.flgArriendos = !1, vm.arriendos = "") : (vm.flgArriendos = !0, vm.flgEditarArriendos = !0, vm.existeUnIngresoDeAntes = !0, vm.arriendos = vm.estadoSituacion.ingresosConyuge[2].monto), null == vm.estadoSituacion.ingresosConyuge[3].monto || vm.estadoSituacion.ingresosConyuge[3].monto <= 0 ? (vm.flgRetiros = !1, vm.retiros = "") : (vm.flgRetiros = !0, vm.retiros = vm.estadoSituacion.ingresosConyuge[3].monto, vm.flgEditarRetiros = !0, vm.existeUnIngresoDeAntes = !0), null == vm.estadoSituacion.ingresosConyuge[4].monto || vm.estadoSituacion.ingresosConyuge[4].monto <= 0 ? (vm.flgOtros = !1, vm.otros = "") : (vm.flgOtros = !0, vm.otros = vm.estadoSituacion.ingresosConyuge[4].monto, vm.flgEditarOtros = !0, vm.existeUnIngresoDeAntes = !0))
			}, vm.sumaTotal = function() {
				vm.totales = (parseInt(vm.sueldo.replace(/[^0-9]/g, ""), 10) || 0) + (parseInt(vm.honorarios.replace(/[^0-9]/g, ""), 10) || 0) + (parseInt(vm.arriendos.replace(/[^0-9]/g, ""), 10) || 0) + (parseInt(vm.retiros.replace(/[^0-9]/g, ""), 10) || 0) + (parseInt(vm.otros.replace(/[^0-9]/g, ""), 10) || 0)
			}, vm.detectaCambioSueldo = function() {
				vm.flgEditarSueldo = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.detectaCambioArriendos = function() {
				vm.flgEditarArriendos = !0, !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.detectaCambioHonorarios = function() {
				vm.flgEditarHonorarios = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.detectaCambioOtros = function() {
				vm.flgEditarOtros = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.detectaCambioRetiros = function() {
				vm.flgEditarRetiros = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarSueldo && vm.flgSueldo ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.cambioMoneda = function(campo) {
				"sueldo" == campo && (vm.sueldo = $filter("formatoMonedaEESS")(vm.sueldo.replace(/[^0-9]/g, ""))), "honorarios" == campo && (vm.honorarios = $filter("formatoMonedaEESS")(vm.honorarios.replace(/[^0-9]/g, ""))), "recibo" == campo && (vm.arriendos = $filter("formatoMonedaEESS")(vm.arriendos.replace(/[^0-9]/g, ""))), "retiros" == campo && (vm.retiros = $filter("formatoMonedaEESS")(vm.retiros.replace(/[^0-9]/g, ""))), "otros" == campo && (vm.otros = $filter("formatoMonedaEESS")(vm.otros.replace(/[^0-9]/g, ""))), vm.sumaTotal()
			}, vm.formateaMoneda = function() {
				vm.sueldo = $filter("formatoMonedaEESS")(vm.sueldo.toString().replace(/[^0-9]/g, "")), vm.honorarios = $filter("formatoMonedaEESS")(vm.honorarios.toString().replace(/[^0-9]/g, "")), vm.arriendos = $filter("formatoMonedaEESS")(vm.arriendos.toString().replace(/[^0-9]/g, "")), vm.retiros = $filter("formatoMonedaEESS")(vm.retiros.toString().replace(/[^0-9]/g, "")), vm.otros = $filter("formatoMonedaEESS")(vm.otros.toString().replace(/[^0-9]/g, ""))
			}, vm.swSueldo = function() {
				vm.flgSueldo = !vm.flgSueldo, vm.sueldo = "", vm.flgSueldo ? vm.existeCambio = !1 : (vm.flgEditarSueldo = !1, vm.flgEditarArriendos || vm.flgEditarHonorarios || vm.flgEditarOtros || vm.flgEditarRetiros ? (vm.existeCambio = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1), vm.sumaTotal()
			}, vm.swHonorarios = function() {
				vm.flgHonorarios = !vm.flgHonorarios, vm.honorarios = "", vm.flgHonorarios ? vm.existeCambio = !1 : (vm.flgEditarHonorarios = !1, vm.flgEditarArriendos || vm.flgEditarSueldo || vm.flgEditarOtros || vm.flgEditarRetiros ? (vm.existeCambio = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1), vm.sumaTotal()
			}, vm.swArriendo = function() {
				vm.flgArriendos = !vm.flgArriendos, vm.arriendos = "", vm.flgArriendos ? vm.existeCambio = !1 : (vm.flgEditarArriendos = !1, vm.flgEditarHonorarios || vm.flgEditarSueldo || vm.flgEditarOtros || vm.flgEditarRetiros ? (vm.existeCambio = !0, !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1), vm.sumaTotal()
			}, vm.swRetiros = function() {
				vm.flgRetiros = !vm.flgRetiros, vm.retiros = "", vm.flgRetiros ? vm.existeCambio = !1 : (vm.flgEditarRetiros = !1, vm.flgEditarArriendos || vm.flgEditarHonorarios || vm.flgEditarOtros || vm.flgEditarSueldo ? (vm.existeCambio = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarSueldo && vm.flgSueldo ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1), vm.sumaTotal()
			}, vm.swOtros = function() {
				vm.flgOtros = !vm.flgOtros, vm.otros = "", vm.flgOtros ? vm.existeCambio = !1 : (vm.flgEditarOtros = !1, vm.flgEditarArriendos || vm.flgEditarHonorarios || vm.flgEditarSueldo || vm.flgEditarRetiros ? (vm.existeCambio = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1), vm.sumaTotal()
			}, vm.verificarCeros = function() {
				"" === vm.sueldoTemp || vm.sueldoTemp <= 0 ? (vm.estadoSituacion.ingresosConyuge[0].monto = 0, vm.sueldo = "", vm.sueldoTemp = "") : vm.estadoSituacion.ingresosConyuge[0].monto = vm.sueldoTemp, "" === vm.honorariosTemp || vm.honorariosTemp <= 0 ? (vm.estadoSituacion.ingresosConyuge[1].monto = 0, vm.honorarios = "", vm.honorariosTemp = "") : vm.estadoSituacion.ingresosConyuge[1].monto = vm.honorariosTemp, "" === vm.arriendosTemp || vm.arriendosTemp <= 0 ? (vm.estadoSituacion.ingresosConyuge[2].monto = 0, vm.arriendosTemp = "", vm.arriendos = "") : vm.estadoSituacion.ingresosConyuge[2].monto = vm.arriendosTemp, "" === vm.retirosTemp || vm.retirosTemp <= 0 ? (vm.estadoSituacion.ingresosConyuge[3].monto = 0, vm.retirosTemp = "", vm.retiros = "") : vm.estadoSituacion.ingresosConyuge[3].monto = vm.retirosTemp, "" === vm.otrosTemp || vm.otrosTemp <= 0 ? (vm.estadoSituacion.ingresosConyuge[4].monto = 0, vm.otros = "", vm.otrosTemp = "") : vm.estadoSituacion.ingresosConyuge[4].monto = vm.otrosTemp, vm.estadoSituacion.ingresosConyuge[0].estadoSeccion = "COMPLETADO", vm.estadoSituacion.ingresosConyuge[1].estadoSeccion = "COMPLETADO", vm.estadoSituacion.ingresosConyuge[2].estadoSeccion = "COMPLETADO", vm.estadoSituacion.ingresosConyuge[3].estadoSeccion = "COMPLETADO", vm.estadoSituacion.ingresosConyuge[4].estadoSeccion = "COMPLETADO"
			}, vm.quitaSimboloDolar = function() {
				vm.sueldoTemp = vm.sueldo.replace(/[$ .]/g, ""), vm.honorariosTemp = vm.honorarios.replace(/[$ .]/g, ""), vm.arriendosTemp = vm.arriendos.replace(/[$ .]/g, ""), vm.retirosTemp = vm.retiros.replace(/[$ .]/g, ""), vm.otrosTemp = vm.otros.replace(/[$ .]/g, "")
			}, vm.guardar = function() {
				vm.quitaSimboloDolar(), vm.verificarCeros(), estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("ingresoMensualConyugeController", ingresoMensualConyugeController), ingresoMensualConyugeController.$inject = ["$filter", "$modalInstance", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalIngresoLiquidoMensualController($filter, $modalInstance, estadoSituacionFactory, tengoSostenedor, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), tengoSostenedor ? vm.index = "ingresosSostenedor" : vm.index = "ingresos", vm.mostrarEstadoSituacion()
			}

			function close() {
				$modalInstance.close(!1)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.estadoSituacion = [], vm.flgSueldo = !1, vm.flgHonorarios = !1, vm.flgArriendos = !1, vm.flgRetiros = !1, vm.flgOtros = !1, vm.sueldo = "", vm.honorarios = "", vm.arriendos = "", vm.retiros = "", vm.otros = "", vm.totales = 0, vm.close = close, vm.existeCambio = !1, vm.flgEditarSueldo = !1, vm.flgEditarHonorarios = !1, vm.flgEditarArriendos = !1, vm.flgEditarRetiros = !1, vm.flgEditarOtros = !1, vm.existeUnIngresoDeAntes = !1, vm.errorGuardar = !1, vm.errorModal = !1, vm.mostrarEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, vm.validarIngresosLiquidoMensual(), vm.formateaMoneda()
				}, errorObtenerEstado);
			}, vm.validarIngresosLiquidoMensual = function() {
				null !== vm.estadoSituacion && void 0 !== vm.estadoSituacion && null !== vm.estadoSituacion[vm.index] && void 0 !== vm.estadoSituacion[vm.index] && vm.estadoSituacion[vm.index].length > 0 && (vm.estadoSituacion[vm.index][0].monto <= 0 || null == vm.estadoSituacion[vm.index][0].monto ? (vm.flgSueldo = !1, vm.sueldo = "") : (vm.flgSueldo = !0, vm.flgEditarSueldo = !0, vm.sueldo = vm.estadoSituacion[vm.index][0].monto, vm.existeUnIngresoDeAntes = !0), vm.estadoSituacion[vm.index][1].monto <= 0 || null == vm.estadoSituacion[vm.index][1].monto ? (vm.flgHonorarios = !1, vm.honorarios = "") : (vm.flgHonorarios = !0, vm.flgEditarHonorarios = !0, vm.honorarios = vm.estadoSituacion[vm.index][1].monto, vm.existeUnIngresoDeAntes = !0), vm.estadoSituacion[vm.index][2].monto <= 0 || null == vm.estadoSituacion[vm.index][2].monto ? (vm.flgArriendos = !1, vm.arriendos = "") : (vm.flgArriendos = !0, vm.flgEditarArriendos = !0, vm.arriendos = vm.estadoSituacion[vm.index][2].monto, vm.existeUnIngresoDeAntes = !0), vm.estadoSituacion[vm.index][3].monto <= 0 || null == vm.estadoSituacion[vm.index][3].monto ? (vm.flgRetiros = !1, vm.retiros = "") : (vm.flgRetiros = !0, vm.flgEditarRetiros = !0, vm.retiros = vm.estadoSituacion[vm.index][3].monto, vm.existeUnIngresoDeAntes = !0), vm.estadoSituacion[vm.index][4].monto <= 0 || null == vm.estadoSituacion[vm.index][4].monto ? (vm.flgOtros = !1, vm.otros = "") : (vm.flgOtros = !0, vm.flgEditarOtros = !0, vm.otros = vm.estadoSituacion[vm.index][4].monto, vm.existeUnIngresoDeAntes = !0))
			}, vm.sumaTotal = function() {
				vm.totales = (parseInt(vm.sueldo.replace(/[^0-9]/g, ""), 10) || 0) + (parseInt(vm.honorarios.replace(/[^0-9]/g, ""), 10) || 0) + (parseInt(vm.arriendos.replace(/[^0-9]/g, ""), 10) || 0) + (parseInt(vm.retiros.replace(/[^0-9]/g, ""), 10) || 0) + (parseInt(vm.otros.replace(/[^0-9]/g, ""), 10) || 0)
			}, vm.detectaCambioSueldo = function() {
				vm.flgEditarSueldo = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.detectaCambioArriendos = function() {
				vm.flgEditarArriendos = !0, !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.detectaCambioHonorarios = function() {
				vm.flgEditarHonorarios = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.detectaCambioOtros = function() {
				vm.flgEditarOtros = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.detectaCambioRetiros = function() {
				vm.flgEditarRetiros = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarSueldo && vm.flgSueldo ? vm.existeCambio = !1 : vm.existeCambio = !0
			}, vm.cambioMoneda = function(campo) {
				"sueldo" === campo && (vm.sueldo = $filter("formatoMonedaEESS")(vm.sueldo.replace(/[^0-9]/g, ""))), "honorarios" === campo && (vm.honorarios = $filter("formatoMonedaEESS")(vm.honorarios.replace(/[^0-9]/g, ""))), "recibo" === campo && (vm.arriendos = $filter("formatoMonedaEESS")(vm.arriendos.replace(/[^0-9]/g, ""))), "retiros" === campo && (vm.retiros = $filter("formatoMonedaEESS")(vm.retiros.replace(/[^0-9]/g, ""))), "otros" === campo && (vm.otros = $filter("formatoMonedaEESS")(vm.otros.replace(/[^0-9]/g, ""))), vm.sumaTotal()
			}, vm.swSueldo = function() {
				vm.sueldo = "", vm.flgSueldo ? vm.existeCambio = !1 : (vm.flgEditarSueldo = !1, vm.flgEditarArriendos || vm.flgEditarHonorarios || vm.flgEditarOtros || vm.flgEditarRetiros ? (vm.existeCambio = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1)
			}, vm.swHonorarios = function() {
				vm.honorarios = "", vm.flgHonorarios ? vm.existeCambio = !1 : (vm.flgEditarHonorarios = !1, vm.flgEditarArriendos || vm.flgEditarSueldo || vm.flgEditarOtros || vm.flgEditarRetiros ? (vm.existeCambio = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1)
			}, vm.swArriendo = function() {
				vm.arriendos = "", vm.flgArriendos ? vm.existeCambio = !1 : (vm.flgEditarArriendos = !1, vm.flgEditarHonorarios || vm.flgEditarSueldo || vm.flgEditarOtros || vm.flgEditarRetiros ? (vm.existeCambio = !0, !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1)
			}, vm.swRetiros = function() {
				vm.retiros = "", vm.flgRetiros ? vm.existeCambio = !1 : (vm.flgEditarRetiros = !1, vm.flgEditarArriendos || vm.flgEditarHonorarios || vm.flgEditarOtros || vm.flgEditarSueldo ? (vm.existeCambio = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarOtros && vm.flgOtros || !vm.flgEditarSueldo && vm.flgSueldo ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1)
			}, vm.swOtros = function() {
				vm.otros = "", vm.flgOtros ? vm.existeCambio = !1 : (vm.flgEditarOtros = !1, vm.flgEditarArriendos || vm.flgEditarHonorarios || vm.flgEditarSueldo || vm.flgEditarRetiros ? (vm.existeCambio = !0, !vm.flgEditarArriendos && vm.flgArriendos || !vm.flgEditarHonorarios && vm.flgHonorarios || !vm.flgEditarSueldo && vm.flgSueldo || !vm.flgEditarRetiros && vm.flgRetiros ? vm.existeCambio = !1 : vm.existeCambio = !0) : vm.existeUnIngresoDeAntes ? vm.existeCambio = !0 : vm.existeCambio = !1)
			}, vm.validarIngresos = function() {
				if (tengoSostenedor)
					for (var i = 0; i < vm.estadoSituacion.ingresos.length; i++) vm.estadoSituacion.ingresos[i].monto = 0;
				else
					for (var j = 0; j < vm.estadoSituacion.ingresosSostenedor.length; j++) vm.estadoSituacion.ingresosSostenedor[j].monto = 0;
				"" === vm.sueldoTemp || vm.sueldoTemp <= 0 ? (vm.estadoSituacion[vm.index][0].monto = 0, vm.sueldo = "", vm.sueldoTemp = "") : vm.estadoSituacion[vm.index][0].monto = vm.sueldoTemp, "" === vm.honorariosTemp || vm.honorariosTemp <= 0 ? (vm.estadoSituacion[vm.index][1].monto = 0, vm.honorarios = "", vm.honorariosTemp = "") : vm.estadoSituacion[vm.index][1].monto = vm.honorariosTemp, "" === vm.arriendosTemp || vm.arriendosTemp <= 0 ? (vm.estadoSituacion[vm.index][2].monto = 0, vm.arriendos = "", vm.arriendosTemp = "") : vm.estadoSituacion[vm.index][2].monto = vm.arriendosTemp, "" === vm.retirosTemp || vm.retirosTemp <= 0 ? (vm.estadoSituacion[vm.index][3].monto = 0, vm.retiros = "", vm.retirosTemp = "") : vm.estadoSituacion[vm.index][3].monto = vm.retirosTemp, "" === vm.otrosTemp || vm.otrosTemp <= 0 ? (vm.estadoSituacion[vm.index][4].monto = 0, vm.otros = "", vm.otrosTemp = "") : vm.estadoSituacion[vm.index][4].monto = vm.otrosTemp, vm.estadoSituacion[vm.index][0].estadoSeccion = "COMPLETADO", vm.estadoSituacion[vm.index][1].estadoSeccion = "COMPLETADO", vm.estadoSituacion[vm.index][2].estadoSeccion = "COMPLETADO", vm.estadoSituacion[vm.index][3].estadoSeccion = "COMPLETADO", vm.estadoSituacion[vm.index][4].estadoSeccion = "COMPLETADO", vm.estadoSituacion.tieneSostenedor = tengoSostenedor ? 1 : 0
			}, vm.formateaMoneda = function() {
				vm.sueldo = $filter("formatoMonedaEESS")(vm.sueldo.toString().replace(/[^0-9]/g, "")), vm.honorarios = $filter("formatoMonedaEESS")(vm.honorarios.toString().replace(/[^0-9]/g, "")), vm.arriendos = $filter("formatoMonedaEESS")(vm.arriendos.toString().replace(/[^0-9]/g, "")), vm.retiros = $filter("formatoMonedaEESS")(vm.retiros.toString().replace(/[^0-9]/g, "")), vm.otros = $filter("formatoMonedaEESS")(vm.otros.toString().replace(/[^0-9]/g, ""))
			}, vm.quitaSimboloDolar = function() {
				vm.sueldoTemp = vm.sueldo.replace(/[$ .]/g, ""), vm.honorariosTemp = vm.honorarios.replace(/[$ .]/g, ""), vm.arriendosTemp = vm.arriendos.replace(/[$ .]/g, ""), vm.retirosTemp = vm.retiros.replace(/[$ .]/g, ""), vm.otrosTemp = vm.otros.replace(/[$ .]/g, "")
			}, vm.guardar = function() {
				vm.quitaSimboloDolar(), vm.validarIngresos(), estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalIngresoLiquidoMensualController", modalIngresoLiquidoMensualController), modalIngresoLiquidoMensualController.$inject = ["$filter", "$modalInstance", "estadoSituacionFactory", "tengoSostenedor", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalParticipacionSociedadesController($modalInstance, estadoSituacionFactory, tmpTokenService, $filter, catalogoMensajesFactory) {
			function close() {
				$modalInstance.close(!1)
			}

			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				});
				var token = tmpTokenService.getToken();
				vm.esPrivado = "" === token, estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data;
					var posEmptyElement = vm.estadoSituacion.activosSociedades.findIndex(function(item) {
						return null === item.razonSocial
					});
					posEmptyElement > -1 && vm.estadoSituacion.activosSociedades.splice(posEmptyElement, 1), vm.estadoSituacion.activosSociedades.length > 0 && (vm.flgCargoPublicoPropio = !0)
				}, errorObtenerEstado)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}
			var vm = this;
			vm.flgCargoPublicoPropio = !1, vm.flgCargoPublicoOtro = !1, vm.estadoSituacion = [], vm.close = close, vm.flgAgregarSociedad = !1, vm.indiceVehiculo = 0, vm.sociedadAux = {
				id: 0,
				montoParticipacion: "",
				participacion: "",
				patrimonio: "",
				razonSocial: "",
				rut: ""
			}, vm.rutmin = !1, vm.agregoEditoElimino = !1, vm.count = 0, vm.mayor100 = !1, vm.igual0 = !1, vm.sociedadEditada = !1, vm.errorGuardar = !1, vm.errorModal = !1, vm.swCargoPropio = function() {
				vm.flgCargoPublicoPropio = !vm.flgCargoPublicoPropio
			}, vm.swCargoOtro = function() {
				vm.flgCargoPublicoOtro = !vm.flgCargoPublicoOtro, vm.estadoSituacion.cargoPublicoRelacionado.institucion = "", vm.estadoSituacion.cargoPublicoRelacionado.cargo = ""
			}, vm.guardar = function() {}, vm.borrarSociedad = function(index) {
				vm.agregoEditoElimino = !0, vm.estadoSituacion.activosSociedades.splice(index, 1), 0 === vm.estadoSituacion.activosSociedades.length
			}, vm.editarSociedad = function(index) {
				vm.sociedadEditada = !0, vm.sociedadAux = {
					id: vm.estadoSituacion.activosSociedades[index].id,
					montoParticipacion: $filter("formatoMonedaEESS")(vm.estadoSituacion.activosSociedades[index].montoParticipacion),
					participacion: vm.estadoSituacion.activosSociedades[index].participacion,
					patrimonio: $filter("formatoMonedaEESS")(vm.estadoSituacion.activosSociedades[index].patrimonio),
					razonSocial: vm.estadoSituacion.activosSociedades[index].razonSocial,
					rut: vm.estadoSituacion.activosSociedades[index].rut
				}, vm.flgAgregarSociedad = !0, vm.indiceSociedad = index
			}, vm.limpiarCampos = function() {
				vm.count >= 1 ? vm.agregoEditoElimino = !0 : vm.agregoEditoElimino = !1, vm.sociedadAux = {
					id: 0,
					montoParticipacion: "",
					participacion: "",
					patrimonio: "",
					razonSocial: "",
					rut: ""
				}
			}, vm.quitarSimboloDolar = function(valor) {
				return valor.replace(/[$ .]/g, "")
			}, vm.insertarSociedad = function() {
				vm.agregoEditoElimino = !0, vm.count++, vm.indiceSociedad >= 0 ? (vm.estadoSituacion.activosSociedades[vm.indiceSociedad].id = vm.sociedadAux.id, vm.estadoSituacion.activosSociedades[vm.indiceSociedad].montoParticipacion = parseInt(vm.quitarSimboloDolar(vm.sociedadAux.montoParticipacion), 10), vm.estadoSituacion.activosSociedades[vm.indiceSociedad].participacion = vm.sociedadAux.participacion, vm.estadoSituacion.activosSociedades[vm.indiceSociedad].patrimonio = parseInt(vm.quitarSimboloDolar(vm.sociedadAux.patrimonio), 10), vm.estadoSituacion.activosSociedades[vm.indiceSociedad].razonSocial = vm.sociedadAux.razonSocial, vm.estadoSituacion.activosSociedades[vm.indiceSociedad].rut = vm.sociedadAux.rut) : (vm.sociedadAux.id = vm.estadoSituacion.id, vm.sociedadAux.montoParticipacion = parseInt(vm.quitarSimboloDolar(vm.sociedadAux.montoParticipacion), 10), vm.sociedadAux.patrimonio = parseInt(vm.quitarSimboloDolar(vm.sociedadAux.patrimonio), 10), vm.estadoSituacion.activosSociedades.push(vm.sociedadAux)), vm.indiceSociedad = -1, vm.limpiarCampos(), vm.flgAgregarSociedad = !1
			}, vm.submitForm = function() {
				vm.flgCargoPublicoPropio === !1 && (vm.estadoSituacion.activosSociedades = []), 0 === vm.estadoSituacion.activosSociedades.length && vm.estadoSituacion.activosSociedades.push({
					id: vm.estadoSituacion.id,
					estadoSeccion: null,
					montoParticipacion: null,
					participacion: null,
					patrimonio: null,
					razonSocial: null,
					rut: null
				}), estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function() {
					$modalInstance.close(!0)
				}, contingencia)
			}, vm.emptyField = function(item) {
				return void 0 === item || "" === item
			}, vm.validarRut = function() {
				vm.userForm.rutSociedad.$dirty = !vm.emptyField(vm.sociedadAux.rut), null !== vm.sociedadAux.rut && void 0 !== vm.sociedadAux.rut && vm.sociedadAux.rut.length < 8 ? vm.rutmin = !0 : vm.rutmin = !1
			}, vm.porcentaje = function(porcentaje) {
				vm.mayor100 = parseInt(porcentaje, 10) > 100
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalParticipacionSociedadesController", modalParticipacionSociedadesController), modalParticipacionSociedadesController.$inject = ["$modalInstance", "estadoSituacionFactory", "tmpTokenService", "$filter", "catalogoMensajesFactory"]
	}(),
	function() {
		function pasivosModalController($filter, $modalInstance, estadoSituacionFactory, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.limpiarCampos(), vm.getTipoCredito(), vm.getEstadoSituacion()
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}
			var vm = this;
			vm.filter = $filter, vm.flgAgregarPasivo = !1, vm.flgEditar = !1, vm.indexEditado = 0, vm.tipoEditado = "", vm.tipoCredito = "", vm.listaDeudaDirecta = [{
				valor: "Si"
			}, {
				valor: "No"
			}], vm.lineaCredito = [], vm.tarjetaCredito = [], vm.creditoHipotecario = [], vm.creditoAutomotriz = [], vm.creditoCuotas = [], vm.creditoComercial = [], vm.pasivoAgregado = !1, vm.contador = 0, vm.pasivoEditado = !1, vm.errorGuardar = !1, vm.errorModal = !1, vm.getEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().success(function(lista) {
					vm.estadoSituacion = lista, vm.idEstadoSituacion = lista.id, vm.getPasivos()
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getPasivos = function() {
				vm.lineaCredito = [], vm.tarjetaCredito = [], vm.creditoHipotecario = [], vm.creditoAutomotriz = [], vm.creditoCuotas = [], vm.creditoComercial = [], vm.estadoSituacion.pasivos.forEach(function(item) {
					void 0 !== item.institucion && null !== item.institucion && (1 === parseInt(item.tipo, 10) && vm.lineaCredito.push(item), 2 === parseInt(item.tipo, 10) && vm.tarjetaCredito.push(item), 3 === parseInt(item.tipo, 10) && vm.creditoHipotecario.push(item), 4 === parseInt(item.tipo, 10) && vm.creditoAutomotriz.push(item), 5 === parseInt(item.tipo, 10) && vm.creditoCuotas.push(item), 6 === parseInt(item.tipo, 10) && vm.creditoComercial.push(item))
				})
			}, vm.getTipoCredito = function() {
				estadoSituacionFactory.getTipoCredito().success(function(lista) {
					lista.forEach(function(v) {
						"LÃnea de crÃ©dito" === v.valor && (v.valor = "LÃ­nea de CrÃ©dito"), "Tarjeta de crÃ©dito" === v.valor && (v.valor = "Tarjeta de CrÃ©dito"), "CrÃ©dito hipotecario" === v.valor && (v.valor = "CrÃ©dito Hipotecario"), "CrÃ©dito automotriz" === v.valor && (v.valor = "CrÃ©dito Automotriz"), "CrÃ©dito en cuotas" === v.valor && (v.valor = "CrÃ©dito en Cuotas"), "CrÃ©dito comercial" === v.valor && (v.valor = "CrÃ©dito Comercial")
					}), vm.listaTipoCredito = lista
				})
			}, vm.editarLineaCredito = function(index) {
				vm.pasivoEditado = !0, vm.indexEditado = index, vm.tipoEditado = "lineaCredito", vm.tipoCredito = 1, vm.institucion = vm.lineaCredito[index].institucion, vm.deudaDirecta = vm.lineaCredito[index].deudaDirecta, vm.monto = $filter("formatoMonedaEESS")(vm.lineaCredito[index].montoCupo), vm.valor = $filter("formatoMonedaEESS")(vm.lineaCredito[index].valorCuotaMensual), vm.flgEditar = !0
			}, vm.editarTarjetaCredito = function(index) {
				vm.pasivoEditado = !0, vm.indexEditado = index, vm.tipoEditado = "tarjetaCredito", vm.tipoCredito = 2, vm.institucion = vm.tarjetaCredito[index].institucion, vm.deudaDirecta = vm.tarjetaCredito[index].deudaDirecta, vm.monto = $filter("formatoMonedaEESS")(vm.tarjetaCredito[index].montoCupo), vm.valor = $filter("formatoMonedaEESS")(vm.tarjetaCredito[index].valorCuotaMensual), vm.flgEditar = !0
			}, vm.editarCreditoHipotecario = function(index) {
				vm.pasivoEditado = !0, vm.indexEditado = index, vm.tipoEditado = "creditoHipotecario", vm.tipoCredito = 3, vm.institucion = vm.creditoHipotecario[index].institucion, vm.deudaDirecta = vm.creditoHipotecario[index].deudaDirecta, vm.monto = $filter("formatoMonedaEESS")(vm.creditoHipotecario[index].montoCupo), vm.valor = $filter("formatoMonedaEESS")(vm.creditoHipotecario[index].valorCuotaMensual), vm.flgEditar = !0
			}, vm.editarCreditoAutomotriz = function(index) {
				vm.pasivoEditado = !0, vm.indexEditado = index, vm.tipoEditado = "creditoAutomotriz", vm.tipoCredito = 4, vm.institucion = vm.creditoAutomotriz[index].institucion, vm.deudaDirecta = vm.creditoAutomotriz[index].deudaDirecta, vm.monto = $filter("formatoMonedaEESS")(vm.creditoAutomotriz[index].montoCupo), vm.valor = $filter("formatoMonedaEESS")(vm.creditoAutomotriz[index].valorCuotaMensual), vm.flgEditar = !0
			}, vm.editarCreditoCuotas = function(index) {
				vm.pasivoEditado = !0, vm.indexEditado = index, vm.tipoEditado = "creditoCuotas", vm.tipoCredito = 5, vm.institucion = vm.creditoCuotas[index].institucion, vm.deudaDirecta = vm.creditoCuotas[index].deudaDirecta, vm.monto = $filter("formatoMonedaEESS")(vm.creditoCuotas[index].montoCupo), vm.valor = $filter("formatoMonedaEESS")(vm.creditoCuotas[index].valorCuotaMensual), vm.flgEditar = !0
			}, vm.editarCreditoComercial = function(index) {
				vm.pasivoEditado = !0, vm.indexEditado = index, vm.tipoEditado = "creditoComercial", vm.tipoCredito = 6, vm.institucion = vm.creditoComercial[index].institucion, vm.deudaDirecta = vm.creditoComercial[index].deudaDirecta, vm.monto = $filter("formatoMonedaEESS")(vm.creditoComercial[index].montoCupo), vm.valor = $filter("formatoMonedaEESS")(vm.creditoComercial[index].valorCuotaMensual), vm.flgEditar = !0
			}, vm.guardarPasivoEditado = function() {
				switch (vm.pasivoAgregado = !0, vm.contador++, vm.tipoEditado) {
					case "lineaCredito":
						vm.lineaCredito.splice(vm.indexEditado, 1);
						break;
					case "tarjetaCredito":
						vm.tarjetaCredito.splice(vm.indexEditado, 1);
						break;
					case "creditoHipotecario":
						vm.creditoHipotecario.splice(vm.indexEditado, 1);
						break;
					case "creditoAutomotriz":
						vm.creditoAutomotriz.splice(vm.indexEditado, 1);
						break;
					case "creditoCuotas":
						vm.creditoCuotas.splice(vm.indexEditado, 1);
						break;
					case "creditoComercial":
						vm.creditoComercial.splice(vm.indexEditado, 1)
				}
				vm.actualizarArrayPasivos(), vm.guardarPasivo(), vm.limpiarCampos(), vm.flgEditar = !1
			}, vm.actualizarArrayPasivos = function() {
				vm.estadoSituacion.pasivos = [], vm.lineaCredito.length > 0 ? vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat(vm.lineaCredito) : vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat([{
					id: vm.estadoSituacion.id,
					institucion: null,
					deudaDirecta: null,
					montoCupo: null,
					valorCuotaMensual: null,
					tipo: 1
				}]), vm.tarjetaCredito.length > 0 ? vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat(vm.tarjetaCredito) : vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat([{
					id: vm.estadoSituacion.id,
					institucion: null,
					deudaDirecta: null,
					montoCupo: null,
					valorCuotaMensual: null,
					tipo: 2
				}]), vm.creditoHipotecario.length > 0 ? vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat(vm.creditoHipotecario) : vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat([{
					id: vm.estadoSituacion.id,
					institucion: null,
					deudaDirecta: null,
					montoCupo: null,
					valorCuotaMensual: null,
					tipo: 3
				}]), vm.creditoAutomotriz.length > 0 ? vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat(vm.creditoAutomotriz) : vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat([{
					id: vm.estadoSituacion.id,
					institucion: null,
					deudaDirecta: null,
					montoCupo: null,
					valorCuotaMensual: null,
					tipo: 4
				}]), vm.creditoCuotas.length > 0 ? vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat(vm.creditoCuotas) : vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat([{
					id: vm.estadoSituacion.id,
					institucion: null,
					deudaDirecta: null,
					montoCupo: null,
					valorCuotaMensual: null,
					tipo: 5
				}]), vm.creditoComercial.length > 0 ? vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat(vm.creditoComercial) : vm.estadoSituacion.pasivos = vm.estadoSituacion.pasivos.concat([{
					id: vm.estadoSituacion.id,
					institucion: null,
					deudaDirecta: null,
					montoCupo: null,
					valorCuotaMensual: null,
					tipo: 6
				}])
			}, vm.guardarPasivo = function() {
				vm.pasivoAgregado = !0, vm.contador++;
				var temp = {
					id: vm.idEstadoSituacion,
					institucion: vm.institucion,
					deudaDirecta: vm.deudaDirecta,
					montoCupo: parseInt(vm.monto.replace(/[^0-9]/g, ""), 10),
					valorCuotaMensual: parseInt(vm.valor.replace(/[^0-9]/g, ""), 10),
					tipo: vm.tipoCredito
				};
				switch (vm.tipoCredito) {
					case 1:
						vm.lineaCredito.push(temp);
						break;
					case 2:
						vm.tarjetaCredito.push(temp);
						break;
					case 3:
						vm.creditoHipotecario.push(temp);
						break;
					case 4:
						vm.creditoAutomotriz.push(temp);
						break;
					case 5:
						vm.creditoCuotas.push(temp);
						break;
					case 6:
						vm.creditoComercial.push(temp)
				}
				vm.limpiarCampos()
			}, vm.isNil = function(item) {
				return null !== item && void 0 !== item
			}, vm.borrarLineaCredito = function(index) {
				vm.lineaCredito.splice(index, 1), vm.pasivoAgregado = !0
			}, vm.borrarTarjetaCredito = function(index) {
				vm.tarjetaCredito.splice(index, 1), vm.pasivoAgregado = !0
			}, vm.borrarCreditoHipotecario = function(index) {
				vm.creditoHipotecario.splice(index, 1), vm.pasivoAgregado = !0
			}, vm.borrarCreditoAutomotriz = function(index) {
				vm.creditoAutomotriz.splice(index, 1), vm.pasivoAgregado = !0
			}, vm.borrarCreditoCuotas = function(index) {
				vm.creditoCuotas.splice(index, 1), vm.pasivoAgregado = !0
			}, vm.borrarCreditoComercial = function(index) {
				vm.creditoComercial.splice(index, 1), vm.pasivoAgregado = !0
			}, vm.limpiarCampos = function(item) {
				vm.contador >= 1 ? vm.pasivoAgregado = !0 : vm.pasivoAgregado = !1, vm.tipoCredito = "", vm.institucion = "", vm.deudaDirecta = "", vm.monto = "", vm.valor = ""
			}, vm.close = function() {
				$modalInstance.close(!1)
			}, vm.guardar = function() {
				vm.actualizarArrayPasivos(), vm.estadoSituacion.estado = "Incompleto", estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(resp) {
					$modalInstance.close(!0)
				}, contingencia)
			}, vm.prepararParaEditar = function() {}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("pasivosModalController", pasivosModalController), pasivosModalController.$inject = ["$filter", "$modalInstance", "estadoSituacionFactory", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalPrevisualizacionController($modalInstance, idDocumeto, archivosFactory) {
			function close() {
				$modalInstance.close()
			}

			function activate() {
				vm.obtenerArchivo()
			}
			var vm = this;
			vm.close = close, vm.archivo = "", vm.mostrar = !1, vm.obtenerArchivo = function() {
				archivosFactory.obtenerDocumento(idDocumeto).then(function(archivo) {
					vm.archivo = archivo.data
				})
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalPrevisualizacionController", modalPrevisualizacionController), modalPrevisualizacionController.$inject = ["$modalInstance", "idDocumeto", "archivosFactory"]
	}(),
	function() {
		function modalRutSostenedorConyugeController($modalInstance, datosPersonalesFactory, estadoSituacionFactory, datosLaboralesFactory, tmpTokenService, datepickerConfig, $filter, catalogoMensajesFactory) {
			function activate() {
				catalogoMensajesFactory.obtener(501161).then(function(result) {
					vm.error = result.texto
				}), vm.getPaises(), vm.getRegiones(), vm.getActividadActual(), vm.mostrarEstadoSituacion(), vm.comprobarPortal()
			}

			function contingencia(result) {
				200 !== result.status && (vm.errorGuardar = !0, vm.severidad = "error", vm.mensajeErrorGuardar = vm.error)
			}

			function errorObtenerEstado(result) {
				200 !== result.status && (vm.errorModal = !0, vm.severidad = "error", vm.mensajeErrorModal = vm.error)
			}
			var vm = this;
			vm.cliente = [{
				id: 1,
				valor: "Si"
			}, {
				id: 2,
				valor: "No"
			}], vm.idCiudad = 0, vm.idComuna = 0, vm.paises = [], vm.regiones = [], vm.ciudades = [], vm.ciudadesLaboral = [], vm.comunas = [], vm.comunasLaboral = [], vm.actividadActual = [], vm.esPrivado = !1, vm.esPublico = !1, vm.rut = null, vm.mostrarDatepickerFecha = !1, datepickerConfig.showWeeks = !1, vm.hoyDia = new Date, vm.fechaMinima = new Date("01/01/1900"), vm.actividadAux = "", vm.clienteBancoAux = "", vm.idPaisAux = "", vm.idRegionAux = "", vm.idCiudadAux = "", vm.idComunaAux = "", vm.rutmin = !1, vm.errorModal = !1, vm.errorGuardar = !1, vm.comprobarPortal = function() {
				var token = tmpTokenService.getToken();
				"" === token ? vm.esPrivado = !0 : vm.esPublico = !0
			}, vm.getActividadActual = function() {
				datosLaboralesFactory.getActividadActual().success(function(lista) {
					vm.actividadActual = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getPaises = function() {
				datosPersonalesFactory.getPaises().success(function(lista) {
					vm.paises = lista
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getRegiones = function() {
				datosPersonalesFactory.getRegiones().success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var region = {};
						region.id = elemento.id, region.descripcion = elemento.label, listado.push(region)
					}), vm.regiones = listado
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				})
			}, vm.getCiudades = function(idRegion, tipo) {
				datosPersonalesFactory.getCiudades(idRegion).success(function(lista) {
					"normal" === tipo ? (vm.ciudades = lista, vm.idCiudadAux = vm.ciudades.find(function(item) {
						return parseInt(item.id, 10) === vm.estadoSituacion.sostenedor.idCiudad
					})) : (vm.ciudadesLaboral = lista, vm.estadoSituacion.actividadSostenedor.idCiudadLaboral = vm.ciudadesLaboral.find(function(item) {
						return parseInt(item.id, 10) === vm.estadoSituacion.actividadSostenedor.idCiudadLaboral
					}))
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgCiudad = !0, vm.flgComuna = !1
			}, vm.getComunas = function(idCiudad, tipo) {
				datosPersonalesFactory.getComunas(idCiudad).success(function(lista) {
					"normal" === tipo ? (vm.comunas = lista, vm.idComunaAux = vm.comunas.find(function(item) {
						return item.descripcion === vm.estadoSituacion.sostenedor.labelComuna
					})) : (vm.comunasLaboral = lista, vm.estadoSituacion.actividadSostenedor.idComunaLaboral = vm.comunasLaboral.find(function(item) {
						return item.descripcion === vm.estadoSituacion.actividadSostenedor.labelComunaLaboral
					}))
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.comunaBien = "", vm.flgParticularComuna = !0
			}, vm.getCiudadesFront = function(idRegion, tipo) {
				"normal" === tipo ? (vm.idCiudadAux = null, vm.ciudades = []) : (vm.estadoSituacion.actividadSostenedor.idCiudadLaboral = null, vm.ciudadesLaboral = []), datosPersonalesFactory.getCiudades(idRegion).success(function(lista) {
					"normal" === tipo ? (vm.ciudades = lista, vm.idComunaAux = null) : (vm.ciudadesLaboral = lista, vm.estadoSituacion.actividadSostenedor.idComunaLaboral = null)
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularCiudad = !0, vm.flgParticularComuna = !1
			}, vm.getComunasFront = function(idCiudad, tipo) {
				"normal" === tipo ? (vm.idComunaAux = null, vm.comunas = []) : (vm.estadoSituacion.actividadSostenedor.idComunaLaboral = null, vm.comunasLaboral = []), datosPersonalesFactory.getComunas(idCiudad).success(function(lista) {
					var listado = [];
					lista.forEach(function(elemento) {
						var comuna = {};
						comuna.id = elemento.id, comuna.descripcion = elemento.descripcion, listado.push(comuna)
					}), "normal" === tipo ? vm.comunas = listado : vm.comunasLaboral = listado
				}).error(function(e) {
					vm.severidad = "error", vm.errorModal = !0, vm.mensajeErrorModal = vm.error
				}), vm.flgParticularComuna = !0
			}, vm.mostrarEstadoSituacion = function() {
				estadoSituacionFactory.mostrarEstadoSituacion().then(function(resp) {
					vm.estadoSituacion = resp.data, vm.isNil(vm.estadoSituacion.sostenedor.rut) && vm.isNil(vm.estadoSituacion.sostenedor.dv) && (vm.rut = vm.estadoSituacion.sostenedor.rut + vm.estadoSituacion.sostenedor.dv), vm.isNil(vm.estadoSituacion.sostenedor.activodad) && (vm.actividadAux = vm.actividadActual.find(function(item) {
						return item.id === parseInt(vm.estadoSituacion.sostenedor.activodad, 10)
					})), vm.isNil(vm.estadoSituacion.sostenedor.idPais) ? (vm.idPaisAux = vm.paises.find(function(item) {
						return parseInt(item.value, 10) === vm.estadoSituacion.sostenedor.idPais
					}), "Chile" === vm.idPaisAux.nombre ? (vm.isNil(vm.estadoSituacion.sostenedor.idRegion) && (vm.getCiudades(vm.estadoSituacion.sostenedor.idRegion, "normal"), vm.flgParticularCiudad = !0, vm.idRegionAux = vm.regiones.find(function(item) {
						return parseInt(item.id, 10) === vm.estadoSituacion.sostenedor.idRegion
					}), vm.isNil(vm.estadoSituacion.sostenedor.idCiudad) && (vm.getComunas(vm.estadoSituacion.sostenedor.idCiudad, "normal"), vm.flgParticularComuna = !0)), 0 === parseInt(vm.estadoSituacion.sostenedor.idPais, 10) && (vm.idPaisAux = {
						value: "56",
						nombre: "Chile"
					})) : vm.noEsChile = !0) : vm.idPaisAux = {
						value: "56",
						nombre: "Chile"
					}, vm.isNil(vm.estadoSituacion.actividadSostenedor.fechaInicio) && (vm.estadoSituacion.actividadSostenedor.fechaInicio = vm.transformarFecha(new Date(vm.estadoSituacion.actividadSostenedor.fechaInicio))), void 0 !== vm.estadoSituacion.actividadSostenedor.idPaisLaboral && null !== vm.estadoSituacion.actividadSostenedor.idPaisLaboral && (vm.estadoSituacion.actividadSostenedor.idPaisLaboral = vm.paises.find(function(item) {
						return parseInt(item.value, 10) === vm.estadoSituacion.actividadSostenedor.idPaisLaboral
					})), vm.isNil(vm.estadoSituacion.actividadSostenedor.idPaisLaboral) && "Chile" === vm.estadoSituacion.actividadSostenedor.idPaisLaboral.nombre ? (vm.isNil(vm.estadoSituacion.actividadSostenedor.idRegionLaboral) && (vm.getCiudades(vm.estadoSituacion.actividadSostenedor.idRegionLaboral, "laboral"), vm.flgParticularCiudad = !0, vm.estadoSituacion.actividadSostenedor.idRegionLaboral = vm.regiones.find(function(item) {
						return parseInt(item.id, 10) === vm.estadoSituacion.actividadSostenedor.idRegionLaboral
					}), vm.isNil(vm.estadoSituacion.actividadSostenedor.idCiudadLaboral) && (vm.getComunas(vm.estadoSituacion.actividadSostenedor.idCiudadLaboral, "laboral"), vm.flgParticularComuna = !0)), 0 === parseInt(vm.estadoSituacion.actividadSostenedor.idPaisLaboral, 10) && (vm.estadoSituacion.actividadSostenedor.idPaisLaboral = {
						value: "56",
						nombre: "Chile"
					})) : vm.noEsChileLaboral = !0, "Si" == vm.estadoSituacion.sostenedor.clienteBanco && (vm.clienteBancoAux = {
						id: 1,
						valor: "Si"
					}), "No" == vm.estadoSituacion.sostenedor.clienteBanco && (vm.clienteBancoAux = {
						id: 2,
						valor: "No"
					})
				}, errorObtenerEstado)
			}, vm.close = function() {
				$modalInstance.close(!1)
			}, vm.cambioPais = function() {
				null !== vm.idPaisAux && void 0 !== vm.idPaisAux && ("Chile" === vm.idPaisAux.nombre ? vm.noEsChile = !1 : (vm.noEsChile = !0, vm.idRegionAux = null, vm.idCiudadAux = null, vm.idComunaAux = null))
			}, vm.cambioPaisLaboral = function() {
				vm.isNil(vm.estadoSituacion.actividadSostenedor) && vm.isNil(vm.estadoSituacion.actividadSostenedor.idPaisLaboral) && ("Chile" === vm.estadoSituacion.actividadSostenedor.idPaisLaboral.nombre ? vm.noEsChileLaboral = !1 : (vm.noEsChileLaboral = !0, vm.estadoSituacion.actividadSostenedor.idRegionLaboral = null, vm.estadoSituacion.actividadSostenedor.idCiudadLaboral = null, vm.estadoSituacion.actividadSostenedor.idComunaLaboral = null))
			}, vm.guardar = function() {
				null !== vm.estadoSituacion.sostenedor && void 0 !== vm.estadoSituacion.sostenedor && (vm.procesarDireccion("sostenedor"), vm.procesarDireccion("actividadSostenedor"), vm.isNil(vm.actividadAux) && (vm.estadoSituacion.sostenedor.activodad = vm.actividadAux.id), vm.estadoSituacion.sostenedor.estadoSeccion = "COMPLETADO", vm.estadoSituacion.actividadSostenedor.estadoSeccion = "COMPLETADO"), vm.isNil(vm.idPaisAux) && (vm.estadoSituacion.sostenedor.idPais = vm.idPaisAux.value, vm.estadoSituacion.sostenedor.labelPais = vm.idPaisAux.nombre), vm.isNil(vm.idRegionAux) && (vm.estadoSituacion.sostenedor.idRegion = vm.idRegionAux.id, vm.estadoSituacion.sostenedor.labelRegion = vm.idRegionAux.descripcion), vm.isNil(vm.idCiudadAux) && (vm.estadoSituacion.sostenedor.idCiudad = vm.idCiudadAux.id, vm.estadoSituacion.sostenedor.labelCuidad = vm.idCiudadAux.descripcion), vm.isNil(vm.idComunaAux) && (vm.estadoSituacion.sostenedor.idComuna = vm.idComunaAux.id, vm.estadoSituacion.sostenedor.labelComuna = vm.idComunaAux.descripcion), vm.rut = $filter("rutSinFormato")(angular.copy(vm.rut)), vm.estadoSituacion.sostenedor.dv = vm.rut.toString().slice(-1), vm.estadoSituacion.sostenedor.rut = parseInt(vm.rut.toString().slice(0, -1), 10), vm.estadoSituacion.tieneSostenedor = 1, vm.estadoSituacion.sostenedor.id = vm.estadoSituacion.id, vm.estadoSituacion.actividadSostenedor.id = vm.estadoSituacion.id, null === vm.clienteBancoAux ? vm.estadoSituacion.sostenedor.clienteBanco = null : vm.estadoSituacion.sostenedor.clienteBanco = vm.clienteBancoAux.valor,
					estadoSituacionFactory.guardarEstadoSituacion(vm.estadoSituacion, !0).then(function(resp) {
						$modalInstance.close(!0)
					}, contingencia)
			}, vm.isNil = function(item) {
				return null !== item && void 0 !== item
			}, vm.emptyField = function(item) {
				return void 0 === item || "" === item
			}, vm.validarRut = function() {
				vm.userForm.rutSostenedor.$dirty = !vm.emptyField(vm.rut), null !== vm.rut && void 0 !== vm.rut && vm.rut.length < 8 ? vm.rutmin = !0 : vm.rutmin = !1
			}, vm.procesarDireccion = function(item) {
				var labels = [{
					id: "idPais",
					label: "labelPais"
				}, {
					id: "idRegion",
					label: "labelRegion"
				}, {
					id: "idCiudad",
					label: "labelCuidad"
				}, {
					id: "idComuna",
					label: "labelComuna"
				}];
				labels.forEach(function(label) {
					"sostenedor" !== item && (label.id = label.id.concat("Laboral"), label.label = label.label.concat("Laboral")), vm.isNil(vm.estadoSituacion[item][label.id]) ? label.id.indexOf("Pais") > -1 ? (vm.estadoSituacion[item][label.label] = vm.estadoSituacion[item][label.id].nombre, vm.estadoSituacion[item][label.id] = vm.estadoSituacion[item][label.id].value) : (vm.estadoSituacion[item][label.label] = vm.estadoSituacion[item][label.id].descripcion, vm.estadoSituacion[item][label.id] = vm.estadoSituacion[item][label.id].id) : (vm.estadoSituacion[item][label.label] = null, vm.estadoSituacion[item][label.id] = null)
				})
			}, vm.resetearCamposDependienteIndependiente = function(valor) {
				2 === valor && (vm.estadoSituacion.actividadSostenedor.nombreEmpleador = null, vm.estadoSituacion.actividadSostenedor.cargo = null), 1 === valor && (vm.estadoSituacion.actividadSostenedor.cargo = null), 2 !== valor && 1 !== valor && (vm.noEsChileLaboral = !0, vm.estadoSituacion.actividadSostenedor.nombreEmpleador = null, vm.estadoSituacion.actividadSostenedor.cargo = null, vm.estadoSituacion.actividadSostenedor.fechaInicio = null, vm.estadoSituacion.actividadSostenedor.telefono = null, vm.estadoSituacion.actividadSostenedor.idPaisLaboral = null, vm.estadoSituacion.actividadSostenedor.labelPaisLaboral = null, vm.estadoSituacion.actividadSostenedor.idRegionLaboral = null, vm.estadoSituacion.actividadSostenedor.labelRegionLaboral = null, vm.estadoSituacion.actividadSostenedor.idCiudadLaboral = null, vm.estadoSituacion.actividadSostenedor.labelCuidadLaboral = null, vm.estadoSituacion.actividadSostenedor.idComunaLaboral = null, vm.estadoSituacion.actividadSostenedor.labelComunaLaboral = null, vm.estadoSituacion.actividadSostenedor.calleLaboral = null, vm.estadoSituacion.actividadSostenedor.numeroLaboral = null, vm.estadoSituacion.actividadSostenedor.nroDeptoCasaLaboral = null, vm.estadoSituacion.actividadSostenedor.estadoSeccion = null)
			}, vm.transformarFecha = function(fecha) {
				var today = new Date(fecha),
					dd = today.getDate(),
					mm = today.getMonth() + 1,
					yyyy = today.getFullYear();
				10 > mm && (mm = "0" + mm);
				var today_form = dd + "/" + mm + "/" + yyyy;
				return today_form
			}, vm.datepicker = function($event) {
				$event.preventDefault(), $event.stopPropagation(), vm.mostrarDatepickerFecha = !vm.mostrarDatepickerFecha
			}, modalRutSostenedorConyugeController.prototype.toggleMostrarDatepickerFecha = function() {
				vm.mostrarDatepickerFecha = !vm.mostrarDatepickerFecha
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalRutSostenedorConyugeController", modalRutSostenedorConyugeController), modalRutSostenedorConyugeController.$inject = ["$modalInstance", "datosPersonalesFactory", "estadoSituacionFactory", "datosLaboralesFactory", "tmpTokenService", "datepickerConfig", "$filter", "catalogoMensajesFactory"]
	}(),
	function() {
		function modalSimulacionController($filter, $modalInstance, datosDeudasFactory, estadoSituacionFactory) {
			function activate() {
				vm.obtenerSimulacion()
			}
			var vm = this;
			vm.simulacion = {}, vm.obtenerSimulacion = function() {
				estadoSituacionFactory.getSimulacion().then(function(simulacion) {
					vm.simulacion = simulacion
				})
			}, vm.close = function() {
				$modalInstance.close()
			}, vm.numeroMesTexto = function(nro_mes) {
				var mestexto = "";
				switch (nro_mes = parseInt(nro_mes, 10)) {
					case 1:
						mestexto = "Enero";
						break;
					case 2:
						mestexto = "Febrero";
						break;
					case 3:
						mestexto = "Marzo";
						break;
					case 4:
						mestexto = "Abril";
						break;
					case 5:
						mestexto = "Mayo";
						break;
					case 6:
						mestexto = "Junio";
						break;
					case 7:
						mestexto = "Julio";
						break;
					case 8:
						mestexto = "Agosto";
						break;
					case 9:
						mestexto = "Septiembre";
						break;
					case 10:
						mestexto = "Octubre";
						break;
					case 11:
						mestexto = "Noviembre";
						break;
					case 12:
						mestexto = "Diciembre"
				}
				return mestexto
			}, activate()
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("modalSimulacionController", modalSimulacionController), modalSimulacionController.$inject = ["$filter", "$modalInstance", "datosDeudasFactory", "estadoSituacionFactory"]
	}(),
	function() {
		function formateaNumeroDirectiva() {
			function limpiarCaracteres(numRol) {
				return numRol ? numRol.replace(/[^\d\-]/g, "") : ""
			}
			return {
				link: function(scope, element, attrs, ngModelCtrl) {
					var cantidadDigitos = parseInt(isNaN(attrs.cantidadDigitos) ? 10 : attrs.cantidadDigitos, 10);
					ngModelCtrl.$parsers.unshift(function(numero) {
						return numero = limpiarCaracteres(numero), numero = numero.replace(/^\-/, ""), ngModelCtrl.$viewValue = numero, ngModelCtrl.$commitViewValue(), ngModelCtrl.$render(), numero
					}), ngModelCtrl.$validators.rolValido = function(modelValue, viewValue) {
						return !viewValue || /^\d{2,5}\-?(\d{1,5})?$/.test(viewValue)
					}, element.on("keydown", function(event) {
						if (/\-/.test(event.key) && /\-/.test(event.target.value)) return void event.preventDefault();
						var rol = (event.target.value || "") + event.key;
						return (rol.match(/\d/g) || []).length > cantidadDigitos ? void event.preventDefault() : void 0
					}), element.on("blur", function(event) {
						var rol = limpiarCaracteres(event.target.value);
						rol = rol.replace(/\-$/, ""), ngModelCtrl.$setViewValue(rol), ngModelCtrl.$render(), ngModelCtrl.$setDirty()
					})
				},
				require: "ngModel",
				restrict: "A"
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").directive("numeroDeRol", formateaNumeroDirectiva)
	}(),
	function() {
		function archivosFactory($http, $q, URL_REST, URL_API, URL_BASE, obtener_archivos_adjuntos, eliminar_archivos, catalogoMensajesFactory, tmpTokenService) {
			function eliminarArchivo(idArchivo) {
				return $http({
					method: "POST",
					url: URL_API + URL_BASE + eliminar_archivos + idArchivo
				})
			}

			function guardarDocumentos(listaArchivos) {
				var token = tmpTokenService.getToken();
				return $http("" === token ? {
					method: "POST",
					url: URL_API + URL_BASE + "/guardarArchivosAdjuntos",
					headers: {
						"Content-Type": "application/json"
					},
					data: listaArchivos
				} : {
					method: "POST",
					url: URL_API + URL_BASE + "/guardarArchivosAdjuntos",
					headers: {
						"Content-Type": "application/json"
					},
					data: {
						documentos: listaArchivos,
						token: {
							cifrado: token
						}
					}
				})
			}

			function obtenerDocumento(idDocumento) {
				return $http({
					method: "GET",
					url: URL_API + URL_BASE + "/obtenerArchivo/" + idDocumento
				})
			}

			function obteberListadoSolicitudesPDF(rut) {
				return $http({
					method: "GET",
					url: URL_API + URL_BASE + "/generarPdfMisSolicitudes/" + rut
				})
			}

			function obteberListadoBorradoresPDF(rut) {
				return $http({
					method: "GET",
					url: URL_API + URL_BASE + "/generarPdfBorradores/" + rut
				})
			}

			function getListadoArchivos() {
				var token = tmpTokenService.getToken();
				return $http("" === token ? {
					method: "GET",
					url: URL_API + URL_BASE + "/obtenerArchivosAdjuntos"
				} : {
					method: "POST",
					url: URL_API + URL_BASE + "/obtenerArchivosAdjuntos",
					data: {
						cifrado: token
					}
				})
			}

			function getDispositivosCC() {
				var deferred = $q.defer();
				return $http({
					url: URL_API + URL_BASE + "/caja-desafio-personas",
					dataType: "json",
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					},
					GET_CHALLENGE: !0,
					SOFTOKEN: !0
				}).then(function(response) {
					deferred.resolve(response.data)
				}, function(error) {
					angular.isDefined(error.data) ? deferred.reject(error.data) : deferred.reject(error)
				}), deferred.promise
			}

			function firmaDocumentos(estadoSituacion) {
				var token = tmpTokenService.getToken(),
					deferred = $q.defer();
				return "" === token ? ($http({
					method: "POST",
					url: URL_API + URL_BASE + "/firmar",
					headers: {
						"Content-Type": "Application/json"
					},
					data: estadoSituacion,
					SECURE_CHALLENGE: !0
				}).then(function(response) {
					deferred.resolve(response.data)
				}, function(err) {
					deferred.reject(err)
				}), deferred.promise) : ($http({
					method: "POST",
					url: URL_API + URL_BASE + "/firmar",
					headers: {
						"Content-Type": "application/json"
					},
					data: {
						estadoSituacion: estadoSituacion,
						token: {
							cifrado: token
						}
					}
				}).then(function(response) {
					deferred.resolve(response.data)
				}, function(err) {
					deferred.reject(err)
				}), deferred.promise)
			}
			var service = {
				getListadoArchivos: getListadoArchivos,
				eliminarArchivo: eliminarArchivo,
				getDispositivosCC: getDispositivosCC,
				firmaDocumentos: firmaDocumentos,
				obtenerDocumento: obtenerDocumento,
				obteberListadoSolicitudesPDF: obteberListadoSolicitudesPDF,
				obteberListadoBorradoresPDF: obteberListadoBorradoresPDF,
				guardarDocumentos: guardarDocumentos
			};
			return service
		}
		angular.module("WebBancoChile.directive-eess-publico").factory("archivosFactory", archivosFactory), archivosFactory.$inject = ["$http", "$q", "URL_REST", "URL_API", "URL_BASE", "obtener_archivos_adjuntos", "eliminar_archivos", "catalogoMensajesFactory", "tmpTokenService"]
	}(),
	function() {
		function datosConyugeFactory($http, URL_API, URL_BASE, ENDPOINT) {
			function getNacionalidad() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NACIONALIDAD,
					method: "GET"
				})
			}

			function getNivelEstudio() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NIVEL_ESTUDIOS,
					method: "GET"
				})
			}

			function getActividadActual() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.ACTIVIDAD_ACTUAL,
					method: "GET"
				})
			}

			function getNivelDependiente() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NIVEL_OCUPACIONAL_DEPENDIENTE,
					method: "GET"
				})
			}

			function getNivelIndependiente() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NIVEL_OCUPACIONAL_INDEPENDIENTE,
					method: "GET"
				})
			}

			function getNivelEstudiosConyuge() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NIVEL_ESTUDIOS_CONYUGE,
					method: "GET"
				})
			}
			var service = {
				getNacionalidad: getNacionalidad,
				getNivelEstudio: getNivelEstudio,
				getActividadActual: getActividadActual,
				getNivelDependiente: getNivelDependiente,
				getNivelIndependiente: getNivelIndependiente,
				getNivelEstudiosConyuge: getNivelEstudiosConyuge
			};
			return service
		}
		angular.module("WebBancoChile.directive-eess-publico").factory("datosConyugeFactory", datosConyugeFactory), datosConyugeFactory.$inject = ["$http", "URL_API", "URL_BASE", "ENDPOINT", "url_catalogo"]
	}(),
	function() {
		function datosDeudasFactory($http, URL_API, URL_BASE, ENDPOINT, url_catalogo, url_contacto_llegada, url_bancos, url_tipo_tarjeta, url_tipo_deuda) {
			function getTipoTarjeta() {
				return $http({
					url: URL_API + URL_BASE + url_catalogo + url_tipo_tarjeta,
					method: "GET"
				})
			}

			function getTipoDeuda() {
				return $http({
					url: URL_API + URL_BASE + url_catalogo + url_tipo_deuda,
					method: "GET"
				})
			}

			function getContactoLlegada() {
				return $http({
					url: URL_API + URL_BASE + url_catalogo + url_contacto_llegada,
					method: "GET"
				})
			}

			function getBancos() {
				return $http({
					url: URL_API + URL_BASE + url_catalogo + url_bancos,
					method: "GET"
				})
			}
			var service = {
				getContactoLlegada: getContactoLlegada,
				getBancos: getBancos,
				getTipoTarjeta: getTipoTarjeta,
				getTipoDeuda: getTipoDeuda
			};
			return service
		}
		angular.module("WebBancoChile.directive-eess-publico").factory("datosDeudasFactory", datosDeudasFactory), datosDeudasFactory.$inject = ["$http", "URL_API", "URL_BASE", "ENDPOINT", "url_catalogo", "url_contacto_llegada", "url_bancos", "url_tipo_tarjeta", "url_tipo_deuda"]
	}(),
	function() {
		function datosLaboralesFactory($http, URL_BASE, url_catalogo, url_nivel_estudio, url_estado_completitud, url_actividad_actual, url_nivel_dependiente, url_nivel_independiente, ENDPOINT, URL_API, url_socio) {
			function getNivelEstudio() {
				var urlConsulta = URL_API + URL_BASE + url_catalogo + url_nivel_estudio;
				return $http.get(urlConsulta)
			}

			function getEstadoCompletitud() {
				var urlConsulta = URL_API + URL_BASE + url_catalogo + url_estado_completitud;
				return $http.get(urlConsulta)
			}

			function mostartMensajesTooltip() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.DATOS_CLIENTE_MSG_TOOLTIP,
					method: "GET"
				})
			}

			function getActividadActual() {
				return $http({
					url: URL_API + URL_BASE + url_catalogo + url_actividad_actual,
					method: "GET"
				})
			}

			function getNivelDependiente() {
				return $http({
					url: URL_API + URL_BASE + url_catalogo + url_nivel_dependiente,
					method: "GET"
				})
			}

			function getNivelIndependiente() {
				return $http({
					url: URL_API + URL_BASE + url_catalogo + url_nivel_independiente,
					method: "GET"
				})
			}

			function getNivelOcupacionalDependiente() {
				return $http({
					url: URL_API + URL_BASE + url_catalogo + url_nivel_independiente,
					method: "GET"
				})
			}

			function getNivelOcupacionalIndependiente() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NIVEL_OCUPACIONAL_INDEPENDIENTE,
					method: "GET"
				})
			}

			function getTipoSocio() {
				return $http({
					url: URL_API + URL_BASE + url_catalogo + url_socio,
					method: "GET"
				})
			}
			var service = {
				getNivelEstudio: getNivelEstudio,
				getEstadoCompletitud: getEstadoCompletitud,
				getActividadActual: getActividadActual,
				getNivelDependiente: getNivelDependiente,
				getNivelIndependiente: getNivelIndependiente,
				mostartMensajesTooltip: mostartMensajesTooltip,
				getNivelOcupacionalDependiente: getNivelOcupacionalDependiente,
				getNivelOcupacionalIndependiente: getNivelOcupacionalIndependiente,
				getTipoSocio: getTipoSocio
			};
			return service
		}
		angular.module("WebBancoChile.directive-eess-publico").factory("datosLaboralesFactory", datosLaboralesFactory), datosLaboralesFactory.$inject = ["$http", "URL_BASE", "url_catalogo", "url_nivel_estudio", "url_estado_completitud", "url_actividad_actual", "url_nivel_dependiente", "url_nivel_independiente", "ENDPOINT", "URL_API", "url_socio"]
	}(),
	function() {
		function datosPersonalesFactory($http, URL_BASE, ENDPOINT, URL_API, URL_REST, tmpTokenService) {
			function mostartMensajesTooltip() {
				return $http({
					method: "GET",
					url: URL_API + ENDPOINT.DATOS_CLIENTE_MSG_TOOLTIP
				})
			}

			function mostrarEstadoSituacion() {
				var urlConsulta = URL_REST + "/estadoSituacion";
				return $http.get(urlConsulta).then(function(res) {
					console.log("mostrarEstadoSituacion :", res)
				}), $http.get(urlConsulta)
			}

			function getPaises() {
				return $http({
					url: "/mibancochile/rest/persona/geo/codigosPais",
					method: "GET"
				})
			}

			function getRegiones() {
				var token = tmpTokenService.getToken(),
					url = "";
				return url = "" === token ? "/portabilidad-financiera-rest" : "/portabilidad-financiera-publico-rest", $http({
					url: URL_API + url + "/geo/regiones",
					method: "GET"
				})
			}

			function getCiudades(idRegion) {
				var token = tmpTokenService.getToken(),
					url = "";
				return url = "" === token ? "/portabilidad-financiera-rest" : "/portabilidad-financiera-publico-rest", $http({
					url: URL_API + url + "/geo/ciudades/" + idRegion,
					method: "GET"
				})
			}

			function getComunas(idCiudad) {
				var token = tmpTokenService.getToken(),
					url = "";
				return url = "" === token ? "/portabilidad-financiera-rest" : "/portabilidad-financiera-publico-rest", $http({
					url: URL_API + url + "/geo/comunas/" + idCiudad,
					method: "GET"
				})
			}

			function tipoBienRaiz() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.TIPO_BIEN_RAIZ,
					method: "GET"
				})
			}
			var service = {
				mostrarEstadoSituacion: mostrarEstadoSituacion,
				getPaises: getPaises,
				getRegiones: getRegiones,
				getCiudades: getCiudades,
				getComunas: getComunas,
				mostartMensajesTooltip: mostartMensajesTooltip,
				tipoBienRaiz: tipoBienRaiz
			};
			return service
		}
		angular.module("WebBancoChile.directive-eess-publico").factory("datosPersonalesFactory", datosPersonalesFactory), datosPersonalesFactory.$inject = ["$http", "URL_BASE", "ENDPOINT", "URL_API", "URL_REST", "tmpTokenService"]
	}(),
	function() {
		function estadoSituacionFactory($http, URL_BASE, ENDPOINT, URL_API, tmpTokenService) {
			function guardarEstadoSituacion(estadoSituacion, isDraft) {
				var token = tmpTokenService.getToken();
				return $http("" === token ? {
					method: "POST",
					url: URL_API + URL_BASE + ENDPOINT.GUARDAR_ESTADO_SITUACION,
					headers: {
						"Content-Type": "application/json",
						isDraft: isDraft
					},
					data: estadoSituacion
				} : {
					method: "POST",
					url: URL_API + URL_BASE + ENDPOINT.GUARDAR_ESTADO_SITUACION,
					headers: {
						"Content-Type": "application/json",
						isDraft: isDraft
					},
					data: {
						estadoSituacion: estadoSituacion,
						token: {
							cifrado: token
						}
					}
				})
			}

			function mostrarEstadoSituacion() {
				var token = tmpTokenService.getToken();
				return $http("" === token ? {
					url: URL_API + URL_BASE + "/obtenerEstado",
					method: "GET"
				} : {
					url: URL_API + URL_BASE + "/obtenerEstado",
					method: "POST",
					data: {
						cifrado: token
					}
				})
			}

			function getGenero() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.SEXO,
					method: "GET"
				})
			}

			function getEstadoCivil() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.ESTADO_CIVIL,
					method: "GET"
				})
			}

			function getRegimenMatrimonial() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.REGIMEN_MATRIMONIAL,
					method: "GET"
				})
			}

			function getVivienda() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.VIVIENDA,
					method: "GET"
				})
			}

			function getNivelEstudios() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NIVEL_ESTUDIOS,
					method: "GET"
				})
			}

			function getNivelEstudiosConyuge() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NIVEL_ESTUDIOS_CONYUGE,
					method: "GET"
				})
			}

			function getEstadoCompletitud() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.ESTADO_COMPLETITUD,
					method: "GET"
				})
			}

			function getActividadActual() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.ACTIVIDAD_ACTUAL,
					method: "GET"
				})
			}

			function getNivelOcDependiente() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NIVEL_OCUPACIONAL_DEPENDIENTE,
					method: "GET"
				})
			}

			function getNivelOcIndependiente() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NIVEL_OCUPACIONAL_INDEPENDIENTE,
					method: "GET"
				})
			}

			function getNacionalidad() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NACIONALIDAD,
					method: "GET"
				})
			}

			function getActivosFinancieros() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.ACTIVOS_FINANCIEROS,
					method: "GET"
				})
			}

			function getTipoInversion() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.TIPO_INVERSION,
					method: "GET"
				})
			}

			function getTipoVehiculo() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.TIPO_VEHICULO,
					method: "GET"
				})
			}

			function getTipoCredito() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.TIPO_CREDITO,
					method: "GET"
				})
			}

			function descarga() {
				function resultDescarga(result) {
					return result.data
				}
				return $http({
					url: URL_API + "/portabilidad-financiera-rest/oferta/descargar/SPF-1598974345-829676",
					dataType: "json",
					handleError: !1,
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(resultDescarga)
			}

			function guardarSolicitud(estadoSituacion) {
				var data = {},
					p1 = new Promise(function(resolve, reject) {
						var sim = getSimulacion();
						resolve(sim)
					});
				p1.then(function(simulacion) {
					var rut = estadoSituacion.datosPersonales.rut;
					return rut = parseInt(rut, 10), data = {
						id: 0,
						idSimulacion: 2,
						rut: rut,
						simulacion: simulacion.id,
						tipoSolicitud: "CrÃ©dito de Consumo",
						fechaSolicitud: new Date,
						montoSolicitado: simulacion.montoSolicitado,
						numeroCuotas: simulacion.cuotas,
						valorCuotaReferencial: simulacion.cuotaMensual,
						canal: "INTERNET",
						estado: estadoSituacion.estado
					}, console.log(new Date), console.log("data guardarSolicitud: ", data), $http({
						url: URL_API + URL_BASE + ENDPOINT.GUARDAR_SOLICITUD,
						method: "POST",
						data: data
					})
				})
			}
			return {
				guardarEstadoSituacion: guardarEstadoSituacion,
				mostrarEstadoSituacion: mostrarEstadoSituacion,
				getGenero: getGenero,
				getEstadoCivil: getEstadoCivil,
				getRegimenMatrimonial: getRegimenMatrimonial,
				getVivienda: getVivienda,
				getNivelEstudios: getNivelEstudios,
				getNivelEstudiosConyuge: getNivelEstudiosConyuge,
				getEstadoCompletitud: getEstadoCompletitud,
				getActividadActual: getActividadActual,
				getNivelOcDependiente: getNivelOcDependiente,
				getNivelOcIndependiente: getNivelOcIndependiente,
				getNacionalidad: getNacionalidad,
				getActivosFinancieros: getActivosFinancieros,
				getTipoInversion: getTipoInversion,
				getTipoVehiculo: getTipoVehiculo,
				getTipoCredito: getTipoCredito,
				guardarSolicitud: guardarSolicitud,
				descarga: descarga
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").factory("estadoSituacionFactory", estadoSituacionFactory), estadoSituacionFactory.$inject = ["$http", "URL_BASE", "ENDPOINT", "URL_API", "tmpTokenService"]
	}(),
	function() {
		function firmaDocumentosCcPeopleFactory($http, URL_API, URL_BASE, ENDPOINT, tmpTokenService) {
			function getPaises() {
				return $http({
					url: "/mibancochile/rest/persona/geo/codigosPais ",
					method: "GET"
				})
			}

			function getRegiones() {
				var token = tmpTokenService.getToken(),
					url = "";
				return url = "" === token ? "/portabilidad-financiera-rest" : "/portabilidad-financiera-publico-rest", $http({
					url: URL_API + url + "/geo/regiones",
					method: "GET"
				})
			}

			function getNacionalidad() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.NACIONALIDAD,
					method: "GET"
				})
			}

			function getSexo() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.SEXO,
					method: "GET"
				})
			}

			function getEstadoCivil() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.ESTADO_CIVIL,
					method: "GET"
				})
			}

			function getRegimenMatrimonial() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.REGIMEN_MATRIMONIAL,
					method: "GET"
				})
			}

			function getVivienda() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.VIVIENDA,
					method: "GET"
				})
			}
			var service = {
				getNacionalidad: getNacionalidad,
				getSexo: getSexo,
				getEstadoCivil: getEstadoCivil,
				getRegimenMatrimonial: getRegimenMatrimonial,
				getVivienda: getVivienda,
				getPaises: getPaises,
				getRegiones: getRegiones
			};
			return service
		}
		angular.module("WebBancoChile.directive-eess-publico").factory("firmaDocumentosCcPeopleFactory", firmaDocumentosCcPeopleFactory), firmaDocumentosCcPeopleFactory.$inject = ["$http", "URL_API", "URL_BASE", "ENDPOINT", "tmpTokenService"]
	}(),
	function() {
		function solicitudesFactory($http, URL_BASE, URL_API, url_simulacion, ENDPOINT) {
			function getSimulacionById(idSimulacion) {
				return $http({
					url: URL_API + URL_BASE + url_simulacion + "/" + idSimulacion,
					method: "GET"
				})
			}

			function getBorradores() {
				return $http({
					url: URL_API + URL_BASE + "/obtenerBorradores/",
					method: "GET"
				})
			}

			function getOportunidades(rut, desde, hasta) {
				return ("" === desde || "" === hasta) && (desde = null, hasta = null), console.log("rut:", rut), console.log("desde:", desde), console.log("hasta:", hasta), $http({
					url: "/miplataforma/reporte-oportunidad-multicanal/comercial/listar",
					data: {
						filtro: {
							codTarea: null,
							fechaDesde: desde,
							fechaHasta: hasta,
							rutCliente: rut,
							pagina: 1,
							regsPag: 100
						},
						ordenamiento: {
							ordenadoPor: null,
							orden: "ASC"
						}
					},
					method: "POST"
				})
			}

			function getRut() {
				return $http({
					url: URL_API + URL_BASE + "/retornarRut/",
					method: "GET"
				})
			}

			function obtenerSolicitudesMap(rut, desde, hasta) {
				return ("" === desde || "" === hasta) && (desde = null, hasta = null), console.log("rut:", rut), console.log("desde:", desde), console.log("hasta:", hasta), rut = "7047981-8", $http({
					url: URL_API + URL_BASE + "/obtenerSolicitudesActivas/",
					data: {
						filtro: {
							codTarea: null,
							fechaDesde: desde,
							fechaHasta: hasta,
							rutCliente: rut,
							pagina: 1,
							regsPag: 100
						},
						ordenamiento: {
							ordenadoPor: null,
							orden: "ASC"
						}
					},
					method: "POST"
				})
			}

			function eliminarBorrador(idBorrador) {
				return $http({
					url: URL_API + URL_BASE + "/eliminarBorrador/" + idBorrador,
					method: "GET"
				})
			}

			function guardarSolicitud(solicitud) {
				return $http({
					url: URL_API + URL_BASE + "/guardarSolicitud/",
					data: solicitud,
					method: "POST"
				})
			}

			function filtrarOportunidades() {}

			function filtrarBorradores(desde, hasta) {
				return console.log("desde: ", desde), console.log("hasta: ", hasta), $http({
					url: URL_API + URL_BASE + "/obtenerBorradoresPorFecha/" + desde + "/" + hasta,
					method: "GET"
				})
			}

			function getTipoCanal() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.TIPO_CANAL,
					method: "GET"
				})
			}
			var service = {
				getSimulacionById: getSimulacionById,
				getBorradores: getBorradores,
				getOportunidades: getOportunidades,
				getRut: getRut,
				obtenerSolicitudesMap: obtenerSolicitudesMap,
				eliminarBorrador: eliminarBorrador,
				guardarSolicitud: guardarSolicitud,
				filtrarOportunidades: filtrarOportunidades,
				filtrarBorradores: filtrarBorradores,
				getTipoCanal: getTipoCanal
			};
			return service
		}
		angular.module("WebBancoChile.directive-eess-publico").factory("solicitudesFactory", solicitudesFactory), solicitudesFactory.$inject = ["$http", "URL_BASE", "URL_API", "url_simulacion", "ENDPOINT"]
	}(),
	function() {
		function tusActivosFactory($http, URL_API, URL_BASE, ENDPOINT, tmpTokenService) {
			function getRegiones() {
				var token = tmpTokenService.getToken(),
					url = "";
				return url = "" === token ? "/portabilidad-financiera-rest" : "/portabilidad-financiera-publico-rest", $http({
					url: URL_API + url + "/geo/regiones",
					method: "GET"
				})
			}

			function getCiudades(idRegion) {
				var token = tmpTokenService.getToken(),
					url = "";
				return url = "" === token ? "/portabilidad-financiera-rest" : "/portabilidad-financiera-publico-rest", $http({
					url: URL_API + url + "/geo/ciudades/" + idRegion,
					method: "GET"
				})
			}

			function getComunas(idCiudad) {
				var token = tmpTokenService.getToken(),
					url = "";
				return url = "" === token ? "/portabilidad-financiera-rest" : "/portabilidad-financiera-publico-rest", $http({
					url: URL_API + url + "/geo/comunas/" + idCiudad,
					method: "GET"
				})
			}

			function getActivosFinancieros() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.ACTIVOS_FINANCIEROS,
					method: "GET"
				})
			}

			function getTipoInversion() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.TIPO_INVERSION,
					method: "GET"
				})
			}

			function getTipoVehiculo() {
				return $http({
					url: URL_API + URL_BASE + ENDPOINT.TIPO_VEHICULO,
					method: "GET"
				})
			}
			var service = {
				getRegiones: getRegiones,
				getCiudades: getCiudades,
				getComunas: getComunas,
				getActivosFinancieros: getActivosFinancieros,
				getTipoInversion: getTipoInversion,
				getTipoVehiculo: getTipoVehiculo
			};
			return service
		}
		angular.module("WebBancoChile.directive-eess-publico").factory("tusActivosFactory", tusActivosFactory), tusActivosFactory.$inject = ["$http", "URL_API", "URL_BASE", "ENDPOINT", "tmpTokenService"]
	}(),
	function() {
		function formatoMonedaEESSFilter($filter) {
			var formatoNumero = $filter("formatoNumeroEESS");
			return function(monto, config) {
				config = angular.extend({
					isoCode: "CLP"
				}, config);
				var simbolo = "$",
					numeroConfig = {
						decimales: !1
					};
				switch (config.isoCode) {
					case "CLP":
						simbolo = "$", numeroConfig.decimales = !1;
						break;
					case "CLF":
						simbolo = "UF", numeroConfig.decimales = !0, numeroConfig.cantidadDecimales = 4;
						break;
					case "USD":
						simbolo = "USD", numeroConfig.decimales = !0, numeroConfig.cantidadDecimales = 2;
						break;
					case "EUR":
						simbolo = "EUR", numeroConfig.decimales = !0, numeroConfig.cantidadDecimales = 2
				}
				return simbolo + " " + formatoNumero(monto, numeroConfig)
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").filter("formatoMonedaEESS", formatoMonedaEESSFilter), formatoMonedaEESSFilter.$inject = ["$filter"]
	}(),
	function() {
		function formatoNumeroEESSFilter($filter) {
			function replaceAll(text, busca, reemplaza) {
				for (; - 1 != text.indexOf(busca);) text = text.replace(busca, reemplaza);
				return text
			}
			var repeat = $filter("repeatEESS");
			return function(num, config) {
				config = angular.extend({
					separadorMiles: ".",
					separadorDecimal: ",",
					decimales: !0,
					cantidadDecimales: 2,
					formatoEntrada: "USD"
				}, config), "string" == typeof num && ("CLP" == config.formatoEntrada && (num = replaceAll(num, ".", ""), num = replaceAll(num, ",", ".")), "USD" == config.formatoEntrada && (num = replaceAll(num, ",", ""))), num = String(Number(num) || 0);
				var sign = "-" === num.charAt(0) ? "-" : "";
				num = num.substring(sign.length);
				var integralPart, decimalPart, commaIndex = num.indexOf(".");
				commaIndex >= 0 ? (integralPart = num.substr(0, commaIndex), decimalPart = num.substr(commaIndex + 1)) : (integralPart = num, decimalPart = "");
				for (var result = "", i = 0; i < integralPart.length; i += 3) i > 0 && (result = config.separadorMiles + result), result = integralPart.substring(integralPart.length - 3 - i, integralPart.length - i) + result;
				return config.decimales && config.cantidadDecimales > 0 && (result += config.separadorDecimal + decimalPart.substring(0, config.cantidadDecimales) + repeat("0", config.cantidadDecimales - decimalPart.length)), sign + result
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").filter("formatoNumeroEESS", formatoNumeroEESSFilter), formatoNumeroEESSFilter.$inject = ["$filter"]
	}(),
	function() {
		function formatoTelefonoEESSFilter() {
			function startsWith(original, search) {
				return null != search && "" !== search.trim() ? original.toString().substr(0, search.length) === search : !0
			}
			return function(telefono, prefijo) {
				return null != telefono && "" !== telefono ? startsWith(telefono, prefijo) ? telefono : prefijo + telefono : "-"
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").filter("formatoTelefonoEESS", formatoTelefonoEESSFilter), formatoTelefonoEESSFilter.$inject = []
	}(),
	function() {
		function repeatEESSFilter() {
			return function(symbol, n) {
				for (var s = ""; n > 0; n--) s += symbol;
				return s
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").filter("repeatEESS", repeatEESSFilter)
	}(),
	function() {
		function mostarEstadoActualService() {
			var mostrarDatosPersonales = !0,
				mostrarDatosLaborales = !1,
				mostrarDatosConyuge = !1,
				mostrarTusActivos = !1,
				mostrarDeudas = !1;
			this.setMostrarDatosPersonales = function(datosPersonales) {
				mostrarDatosPersonales = datosPersonales
			}, this.getMostrarDatosPersonales = function() {
				return mostrarDatosPersonales
			}, this.setMostrarDatosLaborales = function(datosLaborales) {
				mostrarDatosLaborales = datosLaborales
			}, this.getMostrarDatosLaborales = function() {
				return mostrarDatosLaborales
			}, this.setMostrarDatosConyuge = function(datosConyuge) {
				mostrarDatosConyuge = datosConyuge
			}, this.getMostrarDatosConyuge = function() {
				return mostrarDatosConyuge
			}, this.getMostrarTusActivos = function() {
				return mostrarTusActivos
			}, this.setMostrarTusActivos = function(_mostrarTusActivos) {
				mostrarTusActivos = _mostrarTusActivos
			}, this.setMostrarDeudas = function(datosDeudas) {
				mostrarDeudas = datosDeudas
			}, this.getMostrarDeudas = function() {
				return mostrarDeudas
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").service("mostarEstadoActualService", mostarEstadoActualService)
	}(),
	function() {
		function tmpTokenService() {
			function setToken(value) {
				token = null !== value && void 0 !== value ? value : ""
			}

			function getToken() {
				return token
			}

			function deleteToken() {
				token = ""
			}
			var token = "";
			return {
				setToken: setToken,
				getToken: getToken,
				deleteToken: deleteToken
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").service("tmpTokenService", tmpTokenService)
	}(),
	function() {
		function directiveEessConfig($stateProvider, $urlRouterProvider) {
			var base_url = "directive-eess-publico/src/directive-eess/",
				pageTitle = "Front Base";
			$stateProvider.state("directive-eess", {
				parent: "root",
				url: "/directive-eess",
				views: {
					"main@": {
						controller: "directiveEessTabsCtrl",
						controllerAs: "tabs",
						templateUrl: base_url + "tabs/directive-eess-tabs.tpl.html"
					}
				},
				data: {
					pageTitle: pageTitle
				}
			}), $urlRouterProvider.otherwise("/directive-eess")
		}
		angular.module("WebBancoChile.directive-eess-publico").config(directiveEessConfig), directiveEessConfig.$inject = ["$stateProvider", "$urlRouterProvider"]
	}(),
	function() {
		function directiveEessTabsCtrl($rootScope, $state, $document, $scope, error500, catalogoMensajesFactory) {
			function getPermissions() {
				init()
			}

			function init() {
				console.log("Soy la nueva versiÃ³n"), evaluateTab(), vm.loading = !1
			}

			function evaluateStatus() {
				vm.state = {
					helloWorld: $state.is("directive-eess-hello-world"),
					users: $state.is("directive-eess-users"),
					transactionSteps: $state.is("directive-eess-transaction-steps")
				}
			}

			function evaluateTab() {
				switch ($state.current.name) {
					case "directive-eess-hello-world":
						vm.activeTab = "directive-eess-hello-world";
						break;
					case "directive-eess-users":
						vm.activeTab = "directive-eess-users";
						break;
					case "directive-eess-transaction-steps":
						vm.activeTab = "directive-eess-transaction-steps";
						break;
					default:
						vm.activeTab = $state.current.name
				}
				evaluateStatus()
			}
			var vm = this;
			vm.tmpToken = "o6CV7mIvTLyML1k1bh7Nuw/dhes9WlaDqYAFcGwug7ol75DvYt+s4Rl9hqFEiOb6", vm.permissions = {
				helloWorld: !0,
				users: !0,
				transactionSteps: !0
			}, vm.loading = !0, getPermissions();
			$rootScope.$on("$stateChangeSuccess", function() {
				$document[0].body.scrollTop = $document[0].documentElement.scrollTop = 0, evaluateTab()
			}), vm.stateReload = function() {
				$state.go("reloadPage", {
					state: vm.activeTab
				})
			}
		}
		angular.module("WebBancoChile.directive-eess-publico").controller("directiveEessTabsCtrl", directiveEessTabsCtrl), directiveEessTabsCtrl.$inject = ["$rootScope", "$state", "$document", "$scope", "error500", "catalogoMensajesFactory"]
	}(),
	function() {
		function deleteZeroLeftDraw() {
			var directive = {
				require: "ngModel",
				link: function(scope, element, attrs, modelCtrl) {
					modelCtrl.$parsers.push(function(inputValue) {
						if (void 0 === inputValue || null === inputValue) return null;
						var transformedInput = inputValue.replace(/^0+/, "");
						return transformedInput != inputValue && (modelCtrl.$setViewValue(transformedInput), modelCtrl.$render()), transformedInput
					})
				}
			};
			return directive
		}
		angular.module("WebBancoChile.directive.util.deleteZeroLeft", []).directive("deleteZeroLeft", deleteZeroLeftDraw)
	}(),
	function() {
		function numericOnlyDraw() {
			return {
				require: "ngModel",
				link: function(scope, element, attrs, modelCtrl) {
					modelCtrl.$parsers.push(function(inputValue) {
						var transformedInput = inputValue.replace(/[^\d]/g, "");
						return transformedInput != inputValue && (modelCtrl.$setViewValue(transformedInput), modelCtrl.$render()), transformedInput
					})
				}
			}
		}
		angular.module("WebBancoChile.directive.util.numericOnly", []).directive("numericOnly", numericOnlyDraw)
	}(),
	function() {
		function setFocus($timeout, $rootScope) {
			return {
				restrict: "A",
				scope: {
					focusValue: "=setFocus"
				},
				link: function($scope, $element, attrs) {
					$scope.$watch("focusValue", function(currentValue, previousValue) {
						currentValue === !0 && $element[0].focus()
					})
				}
			}
		}
		angular.module("WebBancoChile.directive.util.setFocus", []).directive("setFocus", setFocus)
	}(),
	function() {
		function validateMailDraw() {
			var directive = {
				require: "ngModel",
				restrict: "A",
				link: function(scope, elem, attrs, ctrl) {
					scope.$watch(function() {
						var modelValue = ctrl.$modelValue || ctrl.$$invalidModelValue;
						if (void 0 === modelValue) return !0;
						var emailReg = /^([\dA-Za-z_\.-]+)@([\dA-Za-z\.-]+)\.([A-Za-z\.]{2,3})$/;
						return emailReg.test(modelValue)
					}, function(currentValue) {
						ctrl.$setValidity("mail", currentValue)
					})
				}
			};
			return directive
		}
		angular.module("WebBancoChile.directive.util.validateMail", []).directive("validateMail", validateMailDraw)
	}(),
	function() {
		function dndFileUploadController($scope, Upload, URL_API, dndFileUploadService) {
			function validateUpload(arrayFiles) {
				angular.forEach(arrayFiles, function(file) {
					$scope.validator(file) && (dndFileUploadService.setUseUpload(!0), file.id = vm.prefijo + "-" + Math.floor(9900 * Math.random()) + 100,
						dndFileUploadService.existItem(file) || dndFileUploadService.pushItem(file))
				}), vm.uploadManual ? uploadFileInMemory() : uploadFiles()
			}

			function uploadFiles() {
				var filesToSend = dndFileUploadService.getSelected();
				if (filesToSend && filesToSend.length > 0)
					for (var i = 0; i < filesToSend.length; i++) {
						var file = filesToSend[i];
						filesToSend[i].isUpload ? (uploadOk += 1, uploadOk == dndFileUploadService.getLengthItems() && $scope.successAllCallBack && ($scope.successAllCallBack(), uploadOk = 0)) : uploadFile(file)
					}
			}

			function uploadFile(file) {
				dndFileUploadService.setName(file.name), dndFileUploadService.setSize(file.size), dndFileUploadService.setFile(file), dndFileUploadService.setStatus("progress");
				var documento, dataFormulario = $scope.config.dataFormulario;
				dataFormulario && (documento = dataFormulario.data, dataFormulario.fileDetail && (documento.nombre = file.name, documento.mimeType = file.type));
				var request = angular.copy(data);
				request.username = vm.username, request.documento = JSON.stringify(documento), request.file = file;
				var urlRest;
				urlRest = vm.urlCompleta === !0 ? vm.url : URL_API + vm.url, Upload.upload({
					url: urlRest,
					data: request
				}).then(ok, $scope.failCallBack, progress)
			}

			function uploadFileInMemory() {
				var filesToSend = dndFileUploadService.getSelected();
				dndFileUploadService.setStatus("done"), angular.forEach(filesToSend, function(file) {
					dndFileUploadService.setName(file.name), dndFileUploadService.setSize(file.size), dndFileUploadService.setFile(file);
					var attachment = {
						file: file,
						attachedStr: file.name + " (" + Math.round(file.size / 1e3) + " kb)",
						attachedName: file.name,
						attachedSize: Math.round(file.size / 1e3) + " kb",
						attached64: ""
					};
					vm.attachments[file.id + attachment.file.name] = attachment;
					var index = dndFileUploadService.findItem(file),
						fileToUpdate = dndFileUploadService.pullItem(index);
					fileToUpdate.isUpload = !0, $scope.successCallBack(file)
				})
			}
			var vm = this,
				uploadOk = 0,
				data = angular.isUndefined($scope.config.data) ? {} : $scope.config.data;
			vm.prefijo = angular.isUndefined($scope.config.dataUpload.prefijo) ? "ufi" : $scope.config.dataUpload.prefijo, vm.maxFileSize = $scope.config.dataUpload.maxFileSize, vm.fileMeasure = vm.maxFileSize < 1 ? "KB" : "MB", vm.maxRegistros = angular.isUndefined($scope.config.dataUpload.maxRegistros) ? 30 : $scope.config.dataUpload.maxRegistros, vm.limitFiles = $scope.config.data.limitFiles, vm.url = $scope.config.dataUpload.url, vm.urlCompleta = angular.isUndefined($scope.config.dataUpload.urlCompleta) ? !1 : $scope.config.dataUpload.urlCompleta, vm.uploadManual = $scope.config.data.uploadManual, vm.showFileSize = angular.isUndefined($scope.config.dataUpload.showFileSize) ? !0 : $scope.config.dataUpload.showFileSize, vm.selectMultiple = angular.isUndefined($scope.config.dataUpload.selectMultiple) ? !1 : $scope.config.dataUpload.selectMultiple, vm.validMimeType = $scope.config.dataUpload.validMimeType, vm.iniciaEscucha = $scope.config.escucha, vm.attachments = angular.isUndefined($scope.config.dataUpload.attachments) ? {} : $scope.config.dataUpload.attachments, vm.attachments && 0 === _.size(vm.attachments) && dndFileUploadService.setSelected([]), vm.limitFiles && $scope.$watch(function() {
				return dndFileUploadService.getLengthItems()
			}, function() {
				var quantity = dndFileUploadService.getLengthItems();
				vm.onLimitFilesQ = quantity >= vm.limitFiles
			}), $scope.manualEvent = uploadFiles, $scope.manualEvent = function() {
				uploadFiles()
			};
			var ok = function(result) {
					uploadOk += 1;
					var file = result.config.data.file,
						index = dndFileUploadService.findItem(file),
						fileToUpdate = dndFileUploadService.pullItem(index);
					fileToUpdate.isUpload = !0, fileToUpdate.id = result.data.id, dndFileUploadService.updateItem(index, fileToUpdate), $scope.successCallBack && $scope.successCallBack(result), uploadOk == dndFileUploadService.getLengthItems() && $scope.successAllCallBack && ($scope.successAllCallBack(result), uploadOk = 0)
				},
				progress = function(evt) {
					$scope.progressCallBack && $scope.progressCallBack(evt);
					var fileToSetPerc = evt.config.data.file,
						progressPercentage = parseInt(100 * evt.loaded / evt.total, 10);
					$("#" + fileToSetPerc.id).css("width", progressPercentage + "%")
				};
			$scope.$watch("dndUpload.files", function() {
				if (!angular.isUndefined(vm.files) && null !== vm.files) {
					var arrayFiles;
					arrayFiles = vm.selectMultiple ? vm.files : [vm.files], validateUpload(arrayFiles)
				}
			})
		}
		angular.module("WebBancoChile.dndFileUpload").controller("dndFileUploadController", dndFileUploadController)
	}(),
	function() {
		function dndFileUpload() {
			return {
				restrict: "E",
				scope: {
					config: "=",
					successCallBack: "=?",
					successAllCallBack: "=?",
					failCallBack: "=?",
					progressCallBack: "=?",
					cleanCallBack: "=?",
					validator: "=?",
					manualEvent: "=?"
				},
				templateUrl: "drag-and-drop-file-upload/src/directive/dnd-file-upload.tpl.html",
				controller: "dndFileUploadController",
				controllerAs: "dndUpload"
			}
		}
		angular.module("WebBancoChile.dndFileUpload").directive("dndFileUpload", dndFileUpload)
	}(),
	function() {
		function dndFileUploadService() {
			function setName(name) {
				service.name = name
			}

			function getName() {
				return service.name
			}

			function setSize(size) {
				service.size = size
			}

			function getSize() {
				return service.size
			}

			function getStatus() {
				return service.status
			}

			function setStatus(stat) {
				return service.status = stat
			}

			function setFile(file) {
				service.file = file
			}

			function getFile() {
				return service.file
			}

			function pushItem(Item) {
				this.allSelected.push(Item)
			}

			function pullItem(index) {
				return this.allSelected[index]
			}

			function findItem(Item) {
				var index;
				return index = -1 !== this.allSelected.indexOf(Item) ? this.allSelected.indexOf(Item) : !1
			}

			function updateItem(index, Item) {
				this.allSelected[index] = Item
			}

			function existItem(Item) {
				return -1 !== this.allSelected.indexOf(Item)
			}

			function deleteItem(Item) {
				var index = service.findItem(Item);
				return index > -1 ? (this.allSelected.splice(index, 1), !0) : !1
			}

			function getLengthItems() {
				return this.allSelected.length
			}

			function getSelected() {
				return this.allSelected
			}

			function getList() {
				return this.fileList
			}

			function getUses() {
				return this.inUse
			}

			function setSelected(selectedList) {
				this.allSelected = selectedList
			}

			function setList(list) {
				this.fileList = list
			}

			function setUseUpload(status) {
				this.inUse.fileUpload = status
			}

			function setUseContent(status) {
				this.inUse.fileContent = status
			}
			var service = {
				name: null,
				size: null,
				status: "init",
				file: null,
				fileList: null,
				allSelected: [],
				inUse: {
					fileUpload: !1,
					fileContent: !1
				},
				setName: setName,
				getName: getName,
				setSize: setSize,
				getSize: getSize,
				getStatus: getStatus,
				setStatus: setStatus,
				setFile: setFile,
				getFile: getFile,
				pushItem: pushItem,
				pullItem: pullItem,
				updateItem: updateItem,
				findItem: findItem,
				existItem: existItem,
				deleteItem: deleteItem,
				getLengthItems: getLengthItems,
				getSelected: getSelected,
				getList: getList,
				getUses: getUses,
				setSelected: setSelected,
				setList: setList,
				setUseUpload: setUseUpload,
				setUseContent: setUseContent
			};
			return service
		}
		angular.module("WebBancoChile.dndFileUpload").factory("dndFileUploadService", dndFileUploadService)
	}(),
	function() {
		function dmsClickOutside($document) {
			return {
				link: function(scope, element, attrs) {
					function onClick(event) {
						var isChild = element[0].contains(event.target),
							isSelf = element[0] === event.target,
							isInside = isChild || isSelf;
						isInside || scope.$apply(attrs.dmsClickOutside)
					}
					scope.$watch(attrs.dmsIsActive, function(newValue, oldValue) {
						newValue !== oldValue && newValue === !0 ? $document.bind("click", onClick) : newValue !== oldValue && newValue === !1 && $document.unbind("click", onClick)
					})
				}
			}
		}
		angular.module("WebBancoChile.dropMultiSelect").directive("dmsClickOutside", dmsClickOutside), dmsClickOutside.$inject = ["$document"]
	}(),
	function() {
		function dropMultiSelectCtrl($scope) {
			function cancelar() {
				vm.data.selecciones = [];
				for (var i = vm.seleccionesPrevias.length - 1; i >= 0; i--) vm.data.selecciones.push(vm.seleccionesPrevias[i]);
				vm.multiSelectOpen = !1
			}

			function abrir() {
				if (0 !== vm.data.opciones.length && !vm.data.disabled)
					if (vm.multiSelectOpen) vm.multiSelectOpen = !1;
					else {
						vm.seleccionesPrevias = [];
						for (var i = vm.data.selecciones.length - 1; i >= 0; i--) vm.seleccionesPrevias.push(vm.data.selecciones[i]);
						vm.multiSelectOpen = !0
					}
			}

			function textoAceptar() {
				return vm.data.textoAceptar ? vm.data.textoAceptar : "Aceptar"
			}

			function placeholder(selecciones) {
				if (vm.placeholderText = !1, selecciones.length > 0) return void 0 !== vm.data.msjSeleccionados ? vm.data.msjSeleccionados + " " + selecciones.length : "Seleccionados: " + selecciones.length;
				if (0 === vm.data.opciones.length) {
					var mensajeVacio = angular.isUndefined(vm.data.placeholderVacio) ? "Sin opciones" : vm.data.placeholderVacio;
					return mensajeVacio
				}
				return vm.data.disabled && !angular.isUndefined(vm.data.placeholderDisabled) ? vm.data.placeholderDisabled : (vm.placeholderText = !0, void 0 !== vm.data.placeholder ? vm.data.placeholder : "Seleccione...")
			}

			function seleccionarTodos(data) {
				vm.selectorAll ? angular.forEach(data, function(value, key) {
					-1 === vm.data.selecciones.indexOf(value) && (vm.data.selecciones = addString(vm.data.selecciones, value))
				}) : vm.data.selecciones = []
			}

			function seleccionar(item) {
				-1 === vm.data.selecciones.indexOf(item) ? vm.data.selecciones = addString(vm.data.selecciones, item) : vm.data.selecciones = removeString(vm.data.selecciones, item)
			}

			function addString(list, item) {
				return list.push(item), list
			}

			function removeString(list, item) {
				for (var i = list.length - 1; i >= 0; i--)
					if (list[i] === item) {
						list.splice(i, 1);
						break
					}
				return list
			}

			function blurMultiselect() {
				vm.multiSelectOpen = !1
			}
			var vm = this;
			vm.data = $scope.data, vm.seleccionar = seleccionar, vm.blurMultiselect = blurMultiselect, vm.placeholder = placeholder, vm.textoAceptar = textoAceptar, vm.abrir = abrir, vm.cancelar = cancelar, vm.multiSelectOpen = !1, vm.seleccionesPrevias = [], $scope.$on("orionDropMultiSelect::refrescarData", function(event, data) {
				vm.data = data
			}), vm.seleccionarTodos = seleccionarTodos
		}
		angular.module("WebBancoChile.dropMultiSelect").controller("dropMultiSelectCtrl", dropMultiSelectCtrl), dropMultiSelectCtrl.$inject = ["$scope"]
	}(),
	function() {
		function dropMultiSelect() {
			return {
				restrict: "E",
				scope: {
					data: "="
				},
				templateUrl: "drop-multi-select/src/drop-multi-select/drop-multi-select.tpl.html",
				controller: "dropMultiSelectCtrl",
				controllerAs: "dmsCtrl"
			}
		}
		angular.module("WebBancoChile.dropMultiSelect").directive("dropMultiSelect", dropMultiSelect)
	}(), angular.module("ngLocale", [], ["$provide", function($provide) {
		var PLURAL_CATEGORY = {
			ZERO: "zero",
			ONE: "one",
			TWO: "two",
			FEW: "few",
			MANY: "many",
			OTHER: "other"
		};
		$provide.value("$locale", {
			DATETIME_FORMATS: {
				AMPMS: ["am", "pm"],
				DAY: ["domingo", "lunes", "martes", "miÃ©rcoles", "jueves", "viernes", "sÃ¡bado"],
				MONTH: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
				SHORTDAY: ["Dom.", "Lun.", "Mar.", "MiÃ©.", "Jue.", "Vie.", "SÃ¡b."],
				SHORTMONTH: ["Ene.", "Feb.", "Mar.", "Abr.", "May.", "Jun.", "Jul.", "Ago.", "Set.", "Oct.", "Nov.", "Dic."],
				fullDate: "EEEE, d 'de' MMMM 'de' y",
				longDate: "d 'de' MMMM 'de' y",
				medium: "dd-MM-y h:mm:ss a",
				mediumDate: "dd-MM-y",
				mediumTime: "h:mm:ss a",
				"short": "dd-MM-yy h:mm a",
				shortDate: "dd-MM-yy",
				shortTime: "h:mm a"
			},
			NUMBER_FORMATS: {
				CURRENCY_SYM: "$",
				DECIMAL_SEP: ",",
				GROUP_SEP: ".",
				PATTERNS: [{
					gSize: 3,
					lgSize: 3,
					maxFrac: 3,
					minFrac: 0,
					minInt: 1,
					negPre: "-",
					negSuf: "",
					posPre: "",
					posSuf: ""
				}, {
					gSize: 3,
					lgSize: 3,
					maxFrac: 2,
					minFrac: 2,
					minInt: 1,
					negPre: "Â¤-",
					negSuf: "",
					posPre: "Â¤",
					posSuf: ""
				}]
			},
			id: "es-cl",
			pluralCat: function(n, opt_precision) {
				return 1 == n ? PLURAL_CATEGORY.ONE : PLURAL_CATEGORY.OTHER
			}
		})
	}]),
	function() {
		angular.module("WebBancoChile.mensajes.parametros", []).constant("PARAMETROS_MENSAJE", {
			TIPO_MENSAJE: {
				EXITO: "SUCCESS",
				ERROR: "ERROR",
				WARNING: "WARNING"
			},
			CONTENIDO_MENSAJE: {
				ERROR_DEFAULT: "Este servicio estÃ¡ temporalmente fuera de servicio, por favor intenta mÃ¡s tarde [Error = 500].",
				SUCCESS_DEFAULT: 'Estimado Cliente: Tu clave ha sido reactivada exitosamente.Para ingresar al portal presione el botÃ³n continuar".',
				REACTIVAR_CLAVE_DEFAULT: "Estimado Cliente: SegÃºn nuestros registros, no dispones de un dispositivo de seguridad para realizar este proceso.Para obtener mÃ¡s informaciÃ³n comunÃ­cate con nuestro Servicio a Clientes."
			},
			TITULO_MENSAJE: {
				ERROR_TITULO_DEFAULT: "Error del Sistema",
				REACTIVAR_CLAVE: "ReactivaciÃ³n de clave"
			},
			NOMBRE_BOTON: {
				VOLVER: "Volver",
				CONTINUAR: "Continuar"
			}
		})
	}(),
	function() {
		angular.module("WebBancoChile.mensajes").factory("MensajeStoreFactory", function($state) {
			var mensajeFactory = {},
				tipoMensaje = null,
				tituloMensaje = null,
				contenidoMensaje = null;
			return mensajeFactory.setTipoMensaje = function(tipoMensajeParam) {
				tipoMensaje = tipoMensajeParam
			}, mensajeFactory.setContenidoMensaje = function(contenidoMensajeParam) {
				contenidoMensaje = contenidoMensajeParam
			}, mensajeFactory.setTituloMensaje = function(tituloMensajeParam) {
				tituloMensaje = tituloMensajeParam
			}, mensajeFactory.getTipoMensaje = function() {
				return tipoMensaje
			}, mensajeFactory.getTituloMensaje = function() {
				return tituloMensaje
			}, mensajeFactory.getContenidoMensaje = function() {
				return contenidoMensaje
			}, mensajeFactory.setMensaje = function(tipo, contenido, titulo) {
				mensajeFactory.setTipoMensaje(tipo), mensajeFactory.setContenidoMensaje(contenido), mensajeFactory.setTituloMensaje(titulo), $state.go("mensaje")
			}, mensajeFactory
		})
	}(),
	function() {
		function mensajesConfig($stateProvider) {
			$stateProvider.state("mensaje", {
				parent: "root",
				url: "/mensaje",
				views: {
					"main@": {
						controller: "mensajeController",
						controllerAs: "vm",
						templateUrl: "mensajes-login/src/mensaje.tpl.html"
					}
				},
				data: {
					pageTitle: "Banco de Chile"
				}
			})
		}
		angular.module("WebBancoChile.mensajes").config(mensajesConfig), mensajesConfig.$inject = ["$stateProvider"]
	}(),
	function() {
		function mensajeController($state, $window, MensajeStoreFactory, PARAMETROS_MENSAJE) {
			function init() {
				vm.tipoMensaje = MensajeStoreFactory.getTipoMensaje(), vm.contenidoMensaje = MensajeStoreFactory.getContenidoMensaje(), vm.tituloMensaje = MensajeStoreFactory.getTituloMensaje(), seteaMensaje(vm.tipoMensaje)
			}

			function seteaContenidoMensaje(contenidoFactory, contenidoDefault) {
				vm.contenidoMensaje = contenidoDefault, null === contenidoFactory || angular.isUndefined(contenidoFactory) || 0 === contenidoFactory.length || (vm.contenidoMensaje = contenidoFactory)
			}

			function volverLogin() {
				$window.location.href = "/persona"
			}

			function seteaMensaje(tipoMensaje) {
				switch (tipoMensaje) {
					case PARAMETROS_MENSAJE.TIPO_MENSAJE.ERROR:
						vm.tipoError = !0, vm.tipoWarning = !1, vm.tipoSuccess = !1, vm.nombreBoton = PARAMETROS_MENSAJE.NOMBRE_BOTON.VOLVER, seteaContenidoMensaje(MensajeStoreFactory.getContenidoMensaje(), PARAMETROS_MENSAJE.CONTENIDO_MENSAJE.ERROR_DEFAULT);
						break;
					case PARAMETROS_MENSAJE.TIPO_MENSAJE.WARNING:
						vm.tipoWarning = !0, vm.tipoError = !1, vm.tipoSuccess = !1, vm.nombreBoton = PARAMETROS_MENSAJE.NOMBRE_BOTON.CONTINUAR, seteaContenidoMensaje(MensajeStoreFactory.getContenidoMensaje(), PARAMETROS_MENSAJE.CONTENIDO_MENSAJE.WARNING_DEFAULT);
						break;
					case PARAMETROS_MENSAJE.TIPO_MENSAJE.EXITO:
						vm.tipoSuccess = !0, vm.tipoWarning = !1, vm.tipoError = !1, vm.nombreBoton = PARAMETROS_MENSAJE.NOMBRE_BOTON.CONTINUAR, seteaContenidoMensaje(MensajeStoreFactory.getContenidoMensaje(), PARAMETROS_MENSAJE.CONTENIDO_MENSAJE.SUCCESS_DEFAULT);
						break;
					default:
						vm.tipoError = !0, vm.tipoWarning = !1, vm.tipoSuccess = !1, vm.nombreBoton = PARAMETROS_MENSAJE.NOMBRE_BOTON.VOLVER, vm.tituloMensaje = PARAMETROS_MENSAJE.TITULO_MENSAJE.ERROR_TITULO_DEFAULT, seteaContenidoMensaje(MensajeStoreFactory.getContenidoMensaje(), PARAMETROS_MENSAJE.CONTENIDO_MENSAJE.ERROR_DEFAULT)
				}
			}
			var vm = this;
			vm.volverLogin = volverLogin, init()
		}
		angular.module("WebBancoChile.mensajes").controller("mensajeController", mensajeController), mensajeController.$inject = ["$state", "$window", "MensajeStoreFactory", "PARAMETROS_MENSAJE"]
	}(),
	function() {
		function messageHandlerConfig($stateProvider) {
			$stateProvider.state("error500", {
				parent: "root",
				url: "/error500",
				views: {
					"main@": {
						controller: "messageHandlerCtrl",
						controllerAs: "messageHandler",
						templateUrl: "message-handler/message-handler/messageHandler.tpl.html"
					}
				},
				data: {
					pageTitle: "Error 500"
				}
			})
		}
		angular.module("WebBancoChile.messageHandler").config(messageHandlerConfig), messageHandlerConfig.$inject = ["$stateProvider"]
	}(),
	function() {
		function messageHandlerCtrl($filter, $modal, $scope, $state, $window, error500, APP_CONTEXTO, CODIGO_PORTAL) {
			var vm = this;
			switch (vm.labelButton = "Continuar", vm.continueTo = function() {
				"" !== vm.information.stateDestino && $state.go(vm.information.stateDestino)
			}, APP_CONTEXTO) {
				case "Empresas":
					vm.telefono = "600 637 3838";
					break;
				case "Personas":
					switch (CODIGO_PORTAL) {
						case "BCH":
							vm.telefono = "600 637 3737";
							break;
						case "BEC":
							vm.telefono = "600 231 9999";
							break;
						case "CCH":
							vm.telefono = "800 123 777";
							break;
						default:
							vm.telefono = "600 637 3737"
					}
					break;
				default:
					vm.telefono = "600 637 3838"
			}
			vm.buttonContinue = function() {
				return "" !== vm.information.stateDestino && "" === vm.information.tipoCuenta && "" === vm.information.estadoActual ? !0 : !1
			}, vm.information = {
				mensajeError: "Este servicio estÃ¡ temporalmente no disponible, por favor intente mÃ¡s tarde.",
				tipoCuenta: "",
				estadoActual: ""
			}, vm.response = error500.getErrorMsj(), "" !== vm.response.mensajeError && vm.response.mensajeError && (vm.information.mensajeError = vm.response.mensajeError), vm.information.stateDestino = vm.response.stateDestino, vm.information.tipoCuenta = vm.response.tipoCuenta, vm.information.estadoActual = vm.response.estadoActual, vm.isCTD = "LCD" === vm.information.tipoCuenta ? !1 : !0, vm.labelButton = vm.response.labelButton
		}
		angular.module("WebBancoChile.messageHandler").controller("messageHandlerCtrl", messageHandlerCtrl), messageHandlerCtrl.$inject = ["$filter", "$modal", "$scope", "$state", "$window", "error500", "APP_CONTEXTO", "CODIGO_PORTAL"]
	}(),
	function() {
		function error500($state) {
			var mensajeError = "",
				stateDestino = "",
				tipoCuenta = "",
				estadoActual = "",
				labelButton = "Continuar";
			this.setErrorMsj = function() {
				var args = arguments,
					tamano = args.length,
					state = "error500";
				6 === tamano ? (mensajeError = void 0 === args[0] ? mensajeError : args[0], stateDestino = void 0 === args[1] ? stateDestino : args[1], tipoCuenta = void 0 === args[2] ? tipoCuenta : args[2], estadoActual = void 0 === args[3] ? estadoActual : args[3], state = void 0 === args[4] ? state : args[4], labelButton = void 0 === args[5] ? "Continuar" : args[5]) : 5 === tamano ? (mensajeError = void 0 === args[0] ? mensajeError : args[0], stateDestino = void 0 === args[1] ? stateDestino : args[1], tipoCuenta = void 0 === args[2] ? tipoCuenta : args[2], estadoActual = void 0 === args[3] ? estadoActual : args[3], state = void 0 === args[4] ? state : args[4]) : 4 === tamano ? (mensajeError = void 0 === args[0] ? mensajeError : args[0], stateDestino = void 0 === args[1] ? stateDestino : args[1], tipoCuenta = void 0 === args[2] ? tipoCuenta : args[2], estadoActual = void 0 === args[3] ? estadoActual : args[3]) : 3 === tamano ? (mensajeError = void 0 === args[0] ? mensajeError : args[0], stateDestino = void 0 === args[1] ? stateDestino : args[1], tipoCuenta = void 0 === args[2] ? tipoCuenta : args[2]) : 2 === tamano ? (mensajeError = void 0 === args[0] ? mensajeError : args[0], stateDestino = void 0 === args[1] ? stateDestino : args[1]) : mensajeError = void 0 === args[0] ? mensajeError : args[0], $state.go(state)
			}, this.getErrorMsj = function() {
				return {
					mensajeError: mensajeError,
					stateDestino: stateDestino,
					tipoCuenta: tipoCuenta,
					estadoActual: estadoActual,
					labelButton: labelButton
				}
			}
		}
		angular.module("WebBancoChile.messageHandler.service", []).service("error500", error500), error500.$inject = ["$state"]
	}(), angular.module("ng-currency", ["WebBancoChile.cartaInstruccionFilters"]).directive("ngCurrency", function($filter, $locale) {
		return {
			require: "ngModel",
			scope: {
				min: "=min",
				max: "=max",
				currencyType: "=currencyType",
				ngRequired: "=ngRequired",
				fractionSize: "=fractionSize"
			},
			link: function(scope, element, attrs, ngModel) {
				function decimalRex(dChar) {
					return new RegExp("\\d|\\" + dChar, "g")
				}

				function clearRex(dChar) {
					var decimal = scope.fractionSize;
					return angular.isUndefined(scope.fractionSize) && (decimal = 2), new RegExp("((\\" + dChar + ")|([0-9]{1,}\\" + dChar + "?))&?[0-9]{0," + decimal + "}", "g")
				}

				function decimalSepRex(dChar) {
					return new RegExp("\\" + dChar, "g")
				}

				function clearValue(value) {
					value = String(value);
					var dSeparator = $locale.NUMBER_FORMATS.DECIMAL_SEP,
						clear = null;
					return value.match(decimalSepRex(dSeparator)) ? (clear = value.match(decimalRex(dSeparator)).join("").match(clearRex(dSeparator)), clear = clear ? clear[0].replace(dSeparator, ".") : null) : (clear = value.match(/\d/g), clear = clear ? clear.join("") : null), 0 === scope.fractionSize && (clear = null != clear ? clear.split(".")[0] : ""), clear
				}

				function getValue(value) {
					var dSeparator = $locale.NUMBER_FORMATS.DECIMAL_SEP;
					return value ? value.toString().replace(".", dSeparator) : ""
				}

				function runValidations(cVal) {
					if (scope.ngRequired || !isNaN(cVal)) {
						if (scope.min) {
							var min = parseFloat(scope.min);
							ngModel.$setValidity("min", cVal >= min)
						}
						if (scope.max) {
							var max = parseFloat(scope.max);
							ngModel.$setValidity("max", max >= cVal)
						}
					}
				}
				var cVal = null;
				ngModel.$parsers.push(function(viewValue) {
					return cVal = clearValue(viewValue), parseFloat(cVal)
				}), element.on("blur", function() {
					element.val($filter("formatCurrency")(ngModel.$modelValue, scope.currencyType, scope.fractionSize))
				}), element.on("focus", function() {
					element.val(isNaN(ngModel.$modelValue) ? "" : getValue(ngModel.$modelValue))
				}), ngModel.$formatters.unshift(function(value) {
					return $filter("formatCurrency")(value, scope.currencyType)
				}), scope.$watch("currencyType", function() {
					element.val($filter("formatCurrency")(ngModel.$modelValue, scope.currencyType))
				}), scope.$watch(function() {
					return ngModel.$modelValue
				}, function(newValue, oldValue) {
					runValidations(newValue)
				}), scope.$watchGroup(["min", "max"], function() {
					void 0 !== ngModel.$modelValue && null != ngModel.$modelValue && runValidations(ngModel.$modelValue)
				})
			}
		}
	}),
	function() {
		function agendamientoConfig($stateProvider, $urlRouterProvider, agendamiento_url_base) {
			var base_url = agendamiento_url_base,
				pageTitle = "Agendamiento Web";
			$stateProvider.state("agendamiento", {
				parent: "root",
				url: "/agendamiento",
				views: {
					"main@": {
						controller: "agendamientoEjemploCtrl",
						controllerAs: "agendamiento",
						templateUrl: base_url + "agendamiento.tpl.html"
					}
				},
				data: {
					pageTitle: pageTitle
				}
			}).state("agendamiento-validar-rut", {
				parent: "agendamiento",
				url: "/validacion-rut",
				controller: "validarRutCtrl",
				controllerAs: "validaRut",
				templateUrl: base_url + "validar-rut/validar-rut.tpl.html",
				data: {
					pageTitle: "Agendar"
				}
			}).state("agendamiento-escoger-tramite", {
				parent: "agendamiento",
				url: "/tramites",
				controller: "escogerTramiteCtrl",
				controllerAs: "escogerTramite",
				templateUrl: base_url + "escoger-tramite/escoger-tramite.tpl.html",
				data: {
					pageTitle: pageTitle
				},
				params: {
					rut: {}
				}
			}).state("agendamiento-presencial", {
				parent: "agendamiento-escoger-tramite",
				url: "/tramite-presencial",
				controller: "tramitePresencialCtrl",
				controllerAs: "presencial",
				templateUrl: base_url + "tramite-presencial/tramite-presencial.tpl.html",
				data: {
					pageTitle: pageTitle
				},
				params: {
					data: {}
				}
			}).state("agendamiento-comprobante-presencial", {
				parent: "agendamiento",
				url: "/comprobante",
				controller: "comprobantePresencialCtrl",
				controllerAs: "compPresencial",
				templateUrl: base_url + "comprobantes/comprobante-presencial.tpl.html",
				data: {
					pageTitle: "Comprobante"
				},
				params: {
					data: {}
				}
			}).state("agendamiento-remoto", {
				parent: "agendamiento-escoger-tramite",
				url: "/tramite-remoto",
				controller: "tramiteRemotoCtrl",
				controllerAs: "remoto",
				templateUrl: base_url + "tramite-remoto/tramite-remoto.tpl.html",
				data: {
					pageTitle: "Contacto"
				},
				params: {
					data: {}
				}
			}).state("agendamiento-comprobante-remoto", {
				parent: "agendamiento",
				url: "/solicitud-enviada",
				controller: "comprobanteRemotoCtrl",
				controllerAs: "compRemoto",
				templateUrl: base_url + "comprobantes/comprobante-remoto.tpl.html",
				data: {
					pageTitle: "Solicitud enviada"
				},
				params: {
					data: {}
				}
			}).state("agendamiento-consultas", {
				parent: "agendamiento-escoger-tramite",
				url: "/consultas",
				controller: "consultasCtrl",
				controllerAs: "consultas",
				templateUrl: base_url + "consultas/consultas.tpl.html",
				data: {
					pageTitle: "Consultas"
				},
				params: {
					data: {}
				}
			}).state("agendamiento-error", {
				parent: "agendamiento",
				url: "/error",
				controller: "error500Ctrl",
				controllerAs: "error",
				templateUrl: base_url + "error-500/error-500.tpl.html",
				data: {
					pageTitle: "Error"
				},
				params: {
					msj: ""
				}
			}), $urlRouterProvider.otherwise("/agendamiento/validacion-rut")
		}
		angular.module("WebBancoChile.agendamiento").config(agendamientoConfig).config(["noCAPTCHAProvider", "NO_CAPTCHA", function(noCaptchaProvider, NO_CAPTCHA) {
			noCaptchaProvider.setSiteKey(NO_CAPTCHA.SITE_KEY), noCaptchaProvider.setTheme(NO_CAPTCHA.THEME), noCaptchaProvider.setLanguage(NO_CAPTCHA.LANGUAGE)
		}]), agendamientoConfig.$inject = ["$stateProvider", "$urlRouterProvider", "agendamiento_url_base"]
	}(),
	function() {
		function agendamientoEjemploCtrl($state) {
			! function() {
				$state.go("agendamiento-validar-rut")
			}()
		}
		angular.module("WebBancoChile.agendamiento").controller("agendamientoEjemploCtrl", agendamientoEjemploCtrl)
	}(),
	function() {
		function comprobantePresencialCtrl($stateParams, $state, $window, catalogoMensajesFactory, agendamiento_codigo) {
			function init() {
				obtenerMensajes(), vm.correoEnviado = vm.data.response.envioCorreo ? !0 : !1
			}

			function obtenerMensajes() {
				catalogoMensajesFactory.obtener(agendamiento_codigo.compPaso1).then(function(response) {
					vm.textoPaso1 = response.texto + "."
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.compPaso2).then(function(response) {
					vm.textoPaso2 = response.texto + "."
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.compPaso3).then(function(response) {
					vm.textoPaso3 = response.texto + "."
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.compPaso4).then(function(response) {
					vm.textoPaso4 = response.texto
				})
			}

			function continuar() {
				$window.top.location.href = "https://portales.bancochile.cl/personas"
			}
			var vm = this;
			vm.data = $stateParams.data, vm.continuar = continuar, angular.equals({}, vm.data) ? $state.go("agendamiento-validar-rut") : init()
		}
		angular.module("WebBancoChile.agendamiento").controller("comprobantePresencialCtrl", comprobantePresencialCtrl)
	}(),
	function() {
		function comprobanteRemotoCtrl($state, $stateParams, $window) {
			function continuar() {
				$window.top.location.href = "https://portales.bancochile.cl/personas"
			}
			var vm = this;
			vm.data = $stateParams.data, vm.continuar = continuar, angular.equals({}, vm.data) && $state.go("agendamiento-validar-rut")
		}
		angular.module("WebBancoChile.agendamiento").controller("comprobanteRemotoCtrl", comprobanteRemotoCtrl)
	}(),
	function() {
		function consultasCtrl($stateParams, agendamientoFactory, agenConsultasFactory, $window, $filter, catalogoMensajesFactory, agendamiento_codigo, agenServices) {
			function init() {
				vm.rut = $stateParams.data.rut.string, obtenerTramites(), obtenerMensajes()
			}

			function obtenerTramites() {
				agendamientoFactory.obtenerTramites(vm.data.accion.idAccion).then(function(response) {
					response && (vm.listadoTramites = response)
				})
			}

			function obtenerMensajes() {
				catalogoMensajesFactory.obtener(agendamiento_codigo.ingrese).then(function(response) {
					vm.msjSinTramite = response.texto.replace("{0}", "una categorÃ­a"), vm.msjSinConsulta = response.texto.replace("{0}", "una consulta")
				})
			}

			function selectTramite() {
				vm.sinTramite = !1, vm.consulta = vm.listadoConsultas = void 0, agenServices.trackEvent({
					event: "flujo_agendarVisitas",
					eventCategory: "Visita Sucursal",
					eventAction: "AcciÃ³n - " + vm.data.accion.nombreAccion,
					eventLabel: "CategorÃ­a - " + vm.tramite.nombreTramite,
					pasoFlujo: "definir-tramite"
				}), agenConsultasFactory.obtenerConsultas(vm.tramite.idTramite).then(function(response) {
					response && (vm.listadoConsultas = response)
				})
			}

			function validarDatos() {
				return vm.tramite && vm.consulta
			}

			function continuar() {
				vm.datosValidos() ? (logSinEnvioPub(), $window.top.location.href = vm.consulta.url) : (!vm.tramite && vm.listadoTramites && (vm.sinTramite = !0), !vm.consulta && vm.listadoConsultas && (vm.sinConsulta = !0))
			}

			function logSinEnvioPub() {
				agendamientoFactory.logSinEnvioPub({
					rut: $filter("rutSinPunto")(vm.rut),
					accion: vm.data.accion.idAccion,
					categoria: vm.tramite.idTramite,
					consulta: vm.consulta.idConsulta,
					tipoRespuesta: "L"
				})
			}
			var vm = this;
			vm.data = $stateParams.data, vm.selectTramite = selectTramite, vm.datosValidos = validarDatos, vm.continuar = continuar, angular.equals({}, vm.data) ? $state.go("agendamiento-escoger-tramite") : init()
		}
		angular.module("WebBancoChile.agendamiento").controller("consultasCtrl", consultasCtrl)
	}(),
	function() {
		function error500Ctrl($state, $stateParams) {
			function init() {
				vm.mensaje = $stateParams.msj
			}
			var vm = this;
			$stateParams.msj ? init() : $state.go("agendamiento-validar-rut")
		}
		angular.module("WebBancoChile.agendamiento").controller("error500Ctrl", error500Ctrl)
	}(),
	function() {
		function escogerTramiteCtrl($state, agendamientoFactory, agenPresencialFactory, $stateParams, $filter, catalogoMensajesFactory, agendamiento_codigo, agenServices, $scope) {
			function init() {
				obtenerMensajes(), obtenerAcciones(), obtenerDiasHabiles()
			}

			function obtenerMensajes() {
				catalogoMensajesFactory.obtener(agendamiento_codigo.seleccione).then(function(response) {
					vm.msjSinAccion = response.texto.replace("{0}", "un acciÃ³n"), vm.msjSinTramite = response.texto.replace("{0}", "un tramite")
				})
			}

			function obtenerAcciones() {
				agendamientoFactory.obtenerAcciones().then(function(response) {
					response && (vm.listadoAcciones = response)
				})
			}

			function obtenerDiasHabiles() {
				agenPresencialFactory.obtenerDiasHabiles().then(function(response) {
					response && (vm.diasHabiles = [], angular.forEach(response, function(value, key) {
						vm.diasHabiles.push(new Date(value))
					}))
				})
			}

			function selectAccion() {
				vm.sinAccion = !1, vm.tramite = vm.listadoTramites = void 0, vm.showPasoDos = !1, 6 == vm.accion.idAccion ? vm.flujoConsultas = !0 : (vm.flujoConsultas = !1, agendamientoFactory.obtenerTramites(vm.accion.idAccion).then(function(response) {
					response && (vm.listadoTramites = response)
				}))
			}

			function selectTramite() {
				vm.showPasoDos = vm.sinTramite = !1
			}

			function validarBtnSgte() {
				if (vm.flujoConsultas) {
					if (!vm.accion) return !0
				} else if (!vm.tramite) return !0;
				return !1
			}

			function nextStep() {
				var data = {
					rut: rut,
					diasHabiles: vm.diasHabiles
				};
				if (vm.flujoConsultas) {
					if (!vm.accion) return void(vm.sinAccion = !0);
					vm.showPasoDos = !0, data.accion = vm.accion, $state.go("agendamiento-consultas", {
						data: data
					})
				} else {
					if (!vm.tramite) return void(vm.sinTramite = !0);
					vm.showPasoDos = !0, data.accion = vm.accion, data.tramite = vm.tramite, trackEvent(), 2 === vm.tramite.idTipoTramite ? (logSinEnvioPub("P"), $state.go("agendamiento-presencial", {
						data: data
					})) : (logSinEnvioPub("R"), $state.go("agendamiento-remoto", {
						data: data
					}))
				}
			}

			function logSinEnvioPub(tipo) {
				agendamientoFactory.logSinEnvioPub({
					rut: $filter("rutSinPunto")(rut.string),
					accion: vm.accion.idAccion,
					categoria: vm.tramite.idTramite,
					consulta: "",
					tipoRespuesta: tipo
				})
			}

			function trackEvent() {
				agenServices.trackEvent({
					event: "flujo_agendarVisitas",
					eventCategory: "Visita Sucursal",
					eventAction: "AcciÃ³n - " + vm.accion.nombreAccion,
					eventLabel: "CategorÃ­a - " + vm.tramite.nombreTramite,
					pasoFlujo: "definir-tramite"
				})
			}
			var vm = this,
				rut = $stateParams.rut;
			vm.flujoConsultas = !0, vm.selectAccion = selectAccion, vm.selectTramite = selectTramite, vm.nextStep = nextStep, vm.showBtnSgte = validarBtnSgte, angular.equals({}, rut) ? $state.go("agendamiento-validar-rut") : init(), $scope.$on("$stateChangeSuccess", function(ev, to, toParams, from, fromParams) {
				"agendamiento-escoger-tramite" == to.name && (vm.showPasoDos = !1)
			})
		}
		angular.module("WebBancoChile.agendamiento").controller("escogerTramiteCtrl", escogerTramiteCtrl), escogerTramiteCtrl.$inject = ["$state", "agendamientoFactory", "agenPresencialFactory", "$stateParams", "$filter", "catalogoMensajesFactory", "agendamiento_codigo", "agenServices", "$scope"]
	}(),
	function() {
		function tramitePresencialCtrl($state, $stateParams, agenPresencialFactory, $filter, catalogoMensajesFactory, agendamiento_codigo, agendamiento_msj_error, $document, $scope, agenServices) {
			function init() {
				$document[0].body.style.marginBottom = 0, vm.rut = $stateParams.data.rut, vm.hoy = new Date, vm.email = "", vm.datepickerOptions = {
					startingDay: 1,
					showWeeks: !1
				}, obtenerMensajes(), obtenerRegiones()
			}

			function obtenerMensajes() {
				catalogoMensajesFactory.obtener(agendamiento_codigo.seleccione).then(function(response) {
					vm.msjSinRegion = response.texto.replace("{0}", "una regiÃ³n"), vm.msjSinComuna = response.texto.replace("{0}", "una comuna")
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.ingrese).then(function(response) {
					vm.msjSinNombre = response.texto.replace("{0}", "tu nombre"), vm.msjSinApellido = response.texto.replace("{0}", "tu apellido"), vm.msjSinEmail = response.texto.replace("{0}", "un correo electrÃ³nico"), vm.msjEmailInvalido = response.texto.replace("{0}", "un correo electrÃ³nico vÃ¡lido"), vm.msjSinFono = response.texto.replace("{0}", "tu telÃ©fono celular")
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.sinSucursal).then(function(response) {
					vm.msjSinSucursales = response.texto
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.fonoInvalido).then(function(response) {
					vm.msjFonoInvalido = response.texto + "."
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.sinCupos).then(function(response) {
					vm.msjSinCupos = response.texto
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.sinHorarios).then(function(response) {
					vm.msjSinHorarios = response.texto
				})
			}

			function obtenerRegiones() {
				agenPresencialFactory.obtenerRegiones().then(function(response) {
					response && (vm.listadoRegiones = response)
				})
			}

			function selectRegion() {
				vm.listadoComunas = vm.comuna = vm.sucursal = void 0, vm.showSucursales = vm.showHorarios = vm.sinRegion = vm.showPasoCuatro = !1, agenPresencialFactory.obtenerComunas(vm.region.idRegion).then(function(response) {
					response && (vm.listadoComunas = response)
				})
			}

			function selectComuna() {
				vm.sucursal = vm.listadoSucursales = void 0, vm.sinComuna = vm.showSucursales = vm.showHorarios = vm.showPasoCuatro = vm.sinSucursales = !1
			}

			function validarBusqueda() {
				return vm.region && vm.comuna ? !0 : !1
			}

			function buscar() {
				vm.busquedaValida() ? (vm.showSucursales = !0, agenPresencialFactory.obtenerSucursales(vm.comuna.idComuna).then(function(response) {
					response && (response.length ? vm.listadoSucursales = response : vm.sinSucursales = !0)
				}), agenServices.trackEvent({
					event: "flujo_agendarVisitas",
					eventCategory: "Visita Sucursal",
					eventAction: "Region - " + vm.region.nombreRegion,
					eventLabel: "Comuna - " + vm.comuna.nombreComuna,
					pasoFlujo: "seleccionar-sucursal"
				})) : (vm.region || (vm.sinRegion = !0), !vm.comuna && vm.listadoComunas && (vm.sinComuna = !0))
			}

			function selectSucursal() {
				vm.listadoHorarios = vm.fecha = void 0, vm.showHorarios = vm.showPasoCuatro = !1
			}

			function deshabilitarDias(date, mode) {
				for (var esDiaNoHabil = !0, i = 0; i < vm.data.diasHabiles.length; i++) vm.sonDiasIguales(vm.data.diasHabiles[i], date) && (esDiaNoHabil = !1);
				return "day" === mode && esDiaNoHabil
			}

			function compararFechas(date1, date2) {
				return date1.getDate() == date2.getDate() && date1.getMonth() == date2.getMonth() && date1.getFullYear() == date2.getFullYear()
			}

			function datepicker($event) {
				$event.preventDefault(), $event.stopPropagation(), vm.opened = {}, vm.opened[$event.currentTarget.id] = !0
			}

			function selectFecha() {
				vm.listadoHorarios = vm.horario = void 0, vm.showHorarios = !0, vm.showSinHorarios = vm.showPasoCuatro = !1;
				var data = {
					fecha: $filter("date")(vm.fecha, "yyyy-MM-dd"),
					rut: $filter("rutSinPunto")(vm.rut.string),
					codedRut: vm.rut.coded,
					idTramite: vm.data.tramite.idTramite,
					idRegion: vm.region.idRegion,
					idComuna: vm.comuna.idComuna,
					idSucursal: vm.sucursal.cui
				};
				agenPresencialFactory.obtenerHorarios(data).then(function(response) {
					response && (vm.userAuth = response.userAuth, response.payload[0].estadoDia || (vm.showSinHorarios = !0), vm.listadoHorarios = response.payload[0].horarios)
				})
			}

			function selectHorario(horario) {
				vm.showPasoCuatro = !0, angular.forEach(vm.listadoHorarios, function(value, key) {
					value.selected = !1
				}), horario.selected = !0, vm.horario = horario
			}

			function checkNombre() {
				vm.sinNombre = vm.nombre ? !1 : !0
			}

			function checkApellido() {
				vm.sinApellido = vm.apellido ? !1 : !0
			}

			function checkEmail() {
				vm.sinEmail = "" === vm.email ? !0 : !1, vm.emailInvalido = void 0 === vm.email ? !0 : !1
			}

			function checkFono() {
				vm.fono ? (vm.sinFono = !1, vm.fonoInvalido = 8 === vm.fono.toString().length ? !1 : !0) : (vm.sinFono = !0, vm.fonoInvalido = !1)
			}

			function validarCampos() {
				return vm.nombre && vm.apellido && vm.email && vm.fono && !vm.fonoInvalido
			}

			function agendar() {
				if (vm.camposValidos()) {
					vm.btnAgendarInactivo = !0;
					var data = {
						rut: $filter("rutSinPunto")(vm.rut.string),
						nombre: $filter("agenReplaceDiacritics")(vm.nombre),
						apellido: $filter("agenReplaceDiacritics")(vm.apellido),
						correo: vm.email,
						telefono: vm.fono,
						idTramite: vm.data.tramite.idTramite,
						idRegion: vm.region.idRegion,
						idComuna: vm.comuna.idComuna,
						idSucursal: vm.sucursal.cui,
						idHora: vm.horario.idHora,
						comentario: vm.comentario ? vm.comentario : "",
						fecha: $filter("date")(vm.fecha, "yyyy-MM-dd")
					};
					agenPresencialFactory.agendarHora(data, vm.userAuth).then(function(response) {
						if (response) {
							var cod = response.codigo;
							if (cod) vm.btnAgendarInactivo = !1, vm.msjErrorAgendamiento = "AGENDA_999" === cod ? agendamiento_msj_error : response.mensaje, vm.errorAgendamiento = !0;
							else {
								vm.errorAgendamiento = !1, trackAgendamiento();
								var dataComprobante = {
									email: vm.email,
									accion: vm.data.accion.nombreAccion,
									tramite: vm.data.tramite.nombreTramite,
									sucursal: vm.sucursal,
									region: vm.region.nombreRegion,
									comuna: vm.comuna.nombreComuna,
									fecha: $filter("date")(vm.fecha, "dd-MM-yyyy"),
									horario: vm.horario.hora,
									response: response
								};
								$state.go("agendamiento-comprobante-presencial", {
									data: dataComprobante
								})
							}
						}
					})
				} else vm.checkNombre(), vm.checkApellido(), vm.checkEmail(), vm.checkFono()
			}

			function trackAgendamiento() {
				agenServices.trackEvent({
					event: "flujo_agendarVisitas_exito",
					Nltt: {
						agendar_accion: vm.data.accion.nombreAccion,
						agendar_categoria: vm.data.tramite.nombreTramite,
						agendar_region: vm.region.nombreRegion,
						agendar_comuna: vm.comuna.nombreComuna,
						agendar_sucursal: vm.sucursal.nombreSucursal,
						agendar_hora: vm.horario.hora,
						agendar_dia_semana: $filter("agenDiaSemana")(vm.fecha.getDay()),
						agendar_mes: vm.fecha.getMonth() + 1
					}
				})
			}
			var vm = this;
			vm.data = $stateParams.data, vm.selectRegion = selectRegion, vm.selectComuna = selectComuna, vm.busquedaValida = validarBusqueda, vm.buscar = buscar, vm.selectSucursal = selectSucursal, vm.datepicker = datepicker, vm.deshabilitarDias = deshabilitarDias, vm.selectFecha = selectFecha, vm.sonDiasIguales = compararFechas, vm.selectHorario = selectHorario, vm.checkNombre = checkNombre, vm.checkApellido = checkApellido, vm.checkEmail = checkEmail, vm.checkFono = checkFono, vm.camposValidos = validarCampos, vm.agendar = agendar, angular.equals({}, vm.data) ? $state.go("agendamiento-validar-rut") : init(), $scope.$on("$destroy", function() {
				$document[0].body.removeAttribute("style")
			})
		}
		angular.module("WebBancoChile.agendamiento").controller("tramitePresencialCtrl", tramitePresencialCtrl)
	}(),
	function() {
		function tramiteRemotoCtrl($state, $stateParams, agenRemotoFactory, $filter, catalogoMensajesFactory, agendamiento_codigo) {
			function init() {
				vm.rut = $stateParams.data.rut, obtenerTipos(), obtenerMensajes()
			}

			function obtenerTipos() {
				agenRemotoFactory.obtenerTipologia("P").then(function(response) {
					response && (response.length ? (vm.listadoTipos = response, vm.tipo = vm.listadoTipos.filter(function(tipo) {
						return 75 === tipo.id
					})[0], vm.listadoProductos = vm.tipo.subtipos[0].categorias, vm.producto = vm.listadoProductos.filter(function(producto) {
						return "Otros" === producto.descripcion
					})[0]) : (vm.tipo = {
						id: 75,
						descripcion: "Solicitud al Ejecutivo",
						subtipos: [{
							id: 454,
							descripcion: "Contacto Por"
						}]
					}, vm.producto = {
						id: 19807,
						descripcion: "Otros"
					}), vm.loading = !1)
				})
			}

			function obtenerMensajes() {
				catalogoMensajesFactory.obtener(agendamiento_codigo.ingrese).then(function(response) {
					vm.msjSinNombre = response.texto.replace("{0}", "tu nombre"), vm.msjSinEmail = response.texto.replace("{0}", "un correo electrÃ³nico"), vm.msjEmailInvalido = response.texto.replace("{0}", "un correo electrÃ³nico vÃ¡lido"), vm.msjSinCelular = response.texto.replace("{0}", "tu telÃ©fono celular")
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.fonoInvalido).then(function(response) {
					vm.msjFonoInvalido = response.texto + "."
				})
			}

			function checkNombre() {
				vm.sinNombre = vm.nombre ? !1 : !0
			}

			function checkEmail() {
				vm.sinEmail = "" === vm.email ? !0 : !1, vm.emailInvalido = void 0 === vm.email ? !0 : !1
			}

			function checkCelular() {
				vm.celular ? (vm.sinCelular = !1, vm.celularInvalido = 8 === vm.celular.toString().length ? !1 : !0) : (vm.sinCelular = !0, vm.celularInvalido = !1)
			}

			function checkFono() {
				vm.fono ? vm.fonoInvalido = 8 === vm.fono.toString().length ? !1 : !0 : vm.fonoInvalido = !1
			}

			function validarCampos() {
				return vm.nombre && vm.email && vm.celular && !vm.celularInvalido && !vm.fonoInvalido
			}

			function enviar() {
				if (vm.camposValidos()) {
					var comentario = "Tramite: " + vm.data.accion.nombreAccion + ", " + vm.data.tramite.nombreTramite + (vm.comentario ? " - Comentario: " + vm.comentario : ""),
						data = {
							nombre: vm.nombre,
							rut: $filter("rutSinPunto")(vm.rut.string),
							email: vm.email,
							celular: vm.celular,
							telefono: vm.fono ? vm.fono : "",
							comentario: comentario,
							tipo: vm.tipo.id,
							subtipo: vm.tipo.subtipos[0].id,
							categoria: vm.producto.id
						};
					agenRemotoFactory.crearRequerimiento(data).then(function(response) {
						response && (vm.btnEnviarInactivo = !0, $state.go("agendamiento-comprobante-remoto", {
							data: response
						}))
					})
				} else vm.checkNombre(), vm.checkEmail(), vm.checkCelular(), vm.checkFono()
			}
			var vm = this;
			vm.data = $stateParams.data, vm.loading = !0, vm.email = "", vm.checkNombre = checkNombre, vm.checkEmail = checkEmail, vm.checkCelular = checkCelular, vm.checkFono = checkFono, vm.camposValidos = validarCampos, vm.enviar = enviar, angular.equals({}, vm.data) ? $state.go("agendamiento-validar-rut") : init()
		}
		angular.module("WebBancoChile.agendamiento").controller("tramiteRemotoCtrl", tramiteRemotoCtrl)
	}(),
	function() {
		function validarRutCtrl($scope, RutHelper, agendamientoFactory, $state, $filter, catalogoMensajesFactory, agendamiento_codigo, agenServices) {
			function init() {
				obtenerMensajes(), vm.captcha = {}, vm.captcha.resetCaptchaReset = {}, vm.captcha.isErrorMsgCaptchaActive = !1, vm.captcha.expiredCatcha = function() {
					vm.captcha.gRecaptchaResponse = ""
				}, vm.captcha.resetCaptchaReset.reset && vm.captcha.resetCaptchaReset.reset()
			}

			function obtenerMensajes() {
				catalogoMensajesFactory.obtener(agendamiento_codigo.seleccione).then(function(response) {
					vm.mensajeError = response.texto
				}), vm.msjRut = {}, catalogoMensajesFactory.obtener(agendamiento_codigo.ingrese).then(function(response) {
					vm.msjRut.rutVacio = response.texto.replace("{0}", "tu RUT")
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.rutInvalido).then(function(response) {
					vm.msjRut.rutInvalido = response.texto
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.rutEmpresa).then(function(response) {
					vm.msjRut.rutEmpresa = response.texto
				}), catalogoMensajesFactory.obtener(agendamiento_codigo.maxAgen).then(function(response) {
					vm.msjMaxAgendamientos = response.texto
				})
			}

			function validarRut(rut) {
				var rutAux, rutVacio = rutEstaVacio(rut),
					rutValido = !1,
					rutEmpresa = !1;
				return vm.showRutEmpresa = rutEmpresa, rutVacio ? rutVacioConfig() : (rutValido = RutHelper.validate(rut), rutValido ? (rutAux = rut.replace("K", "0").replace("k", "0"), rutAux >= vm.rutEmpresaMin && (rutEmpresa = !0, vm.showRutEmpresa = rutEmpresa)) : (vm.showRutNoValido = !0, vm.msjErrorRut = vm.msjRut.rutInvalido)), rutVacio || !rutValido || rutEmpresa ? !1 : !0
			}

			function rutEstaVacio(rut) {
				return "" === rut || angular.isUndefined(rut)
			}

			function rutVacioConfig() {
				vm.showRutVacio = !0, vm.msjErrorRut = vm.msjRut.rutVacio
			}

			function validaErrorRut() {
				return vm.showRutVacio || vm.showRutNoValido || vm.showRutEmpresa ? !0 : !1
			}

			function limpiarMensajes() {
				vm.showRutVacio = !1, vm.showRutNoValido = !1, vm.showRutEmpresa = !1, vm.showMaxAgendamientos = !1, vm.msjErrorRut = ""
			}

			function validarDatos() {
				return void 0 === vm.rut || vm.rutConError() || !vm.captcha.gRecaptchaResponse ? !1 : !0
			}

			function validarCaptcha() {
				"" === vm.captcha.gRecaptchaResponse || null == vm.captcha.gRecaptchaResponse ? vm.captcha.isErrorMsgCaptchaActive = !0 : vm.captcha.isErrorMsgCaptchaActive = !1
			}

			function validaAgendamientos() {
				if (vm.datosValidos()) {
					vm.btnValidarInactivo = !0;
					var rut = RutHelper.clean(vm.rut);
					agendamientoFactory.validaAgendamientos({
						rut: $filter("rutSinPunto")(vm.rut),
						captcha: vm.captcha.gRecaptchaResponse
					}).then(function(response) {
						response && (response.validState === !0 ? (agenServices.trackEvent({
							event: "flujo_agendarVisitas",
							eventCategory: "Visita Sucursal",
							eventAction: "Validar datos",
							pasoFlujo: "validarRut"
						}), $state.go("agendamiento-escoger-tramite", {
							rut: {
								string: rut,
								coded: response.codedRut
							}
						})) : response.validState === !1 && (vm.btnValidarInactivo = !1, vm.showMaxAgendamientos = !0, vm.captcha.resetCaptchaReset.reset(), vm.captcha.gRecaptchaResponse = ""))
					})
				} else void 0 === vm.rut && rutVacioConfig(), validarCaptcha()
			}
			var vm = this;
			vm.rutEmpresaMin = 5e8, vm.validarRut = validarRut, vm.limpiarMensajes = limpiarMensajes, vm.rutConError = validaErrorRut, vm.validaAgendamientos = validaAgendamientos, vm.datosValidos = validarDatos, init(), $scope.$watch(function() {
				return vm.captcha.gRecaptchaResponse
			}, function() {
				void 0 !== vm.captcha.gRecaptchaResponse && validarCaptcha()
			})
		}
		angular.module("WebBancoChile.agendamiento").controller("validarRutCtrl", validarRutCtrl), validarRutCtrl.$inject = ["$scope", "RutHelper", "agendamientoFactory", "$state", "$filter", "catalogoMensajesFactory", "agendamiento_codigo", "agenServices"]
	}(),
	function() {
		angular.module("WebBancoChile.agendamiento").constant("agendamiento_url_base", "nocliente-agendamiento/src/agendamiento/").constant("agendamiento_msj_error", "Por el momento el servicio no estÃ¡ disponible. Intenta mÃ¡s tarde.").constant("agendamiento_codigo", {
			seleccione: "501217",
			ingrese: "501208",
			rutInvalido: "501197",
			rutEmpresa: "501682",
			maxAgen: "501683",
			sinSucursal: "501684",
			fonoInvalido: "501685",
			sinCupos: "501686",
			sinHorarios: "501687",
			compPaso1: "501688",
			compPaso2: "501689",
			compPaso3: "501690",
			compPaso4: "501691"
		})
	}(),
	function() {
		angular.module("WebBancoChile.agendamiento").directive("agendamientoSoloLetras", function() {
			return {
				require: "ngModel",
				link: function(scope, element, attr, ngModelCtrl) {
					function fromUser(text) {
						if (text) {
							var transformedInput = text.replace(/[^a-zA-ZÃ€-Ã¿ ]/g, "");
							return transformedInput !== text && (ngModelCtrl.$setViewValue(transformedInput), ngModelCtrl.$render()), transformedInput
						}
						return void 0
					}
					ngModelCtrl.$parsers.push(fromUser)
				}
			}
		})
	}(),
	function() {
		angular.module("WebBancoChile.agendamiento").directive("agendamientoSoloNumeros", function() {
			return {
				require: "ngModel",
				link: function(scope, element, attr, ngModelCtrl) {
					function fromUser(text) {
						if (text) {
							var transformedInput = text.replace(/[^0-9]/g, "");
							return transformedInput !== text && (ngModelCtrl.$setViewValue(transformedInput), ngModelCtrl.$render()), transformedInput
						}
						return void 0
					}
					ngModelCtrl.$parsers.push(fromUser)
				}
			}
		})
	}(),
	function() {
		"use strict";

		function agenConsultasFactory($http, URL_API, $state, agendamiento_msj_error) {
			function obtenerConsultas(data) {
				return $http({
					url: URL_API + "/agendamiento/consulta/tramite/" + data,
					method: "GET"
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}
			return {
				obtenerConsultas: obtenerConsultas
			}
		}
		angular.module("WebBancoChile.agendamiento").factory("agenConsultasFactory", agenConsultasFactory), agenConsultasFactory.$inject = ["$http", "URL_API", "$state", "agendamiento_msj_error"]
	}(),
	function() {
		"use strict";

		function agenPresencialFactory($http, URL_API, $state, agendamiento_msj_error) {
			function obtenerRegiones() {
				return $http({
					url: URL_API + "/agendamiento/regiones",
					method: "GET"
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}

			function obtenerComunas(data) {
				return $http({
					url: URL_API + "/agendamiento/obtenerComunas/" + data,
					method: "GET"
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}

			function obtenerSucursales(data) {
				return $http({
					url: URL_API + "/agendamiento/comunas/" + data + "/sucursales",
					method: "GET"
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}

			function obtenerDiasHabiles() {
				return $http({
					url: URL_API + "/agendamiento/obtener-dias-habiles",
					method: "GET"
				}).then(function(response) {
					return response.data
				}, function(response) {
					$state.go("agendamiento-error", {
						msj: agendamiento_msj_error
					})
				})
			}

			function obtenerHorarios(data) {
				return $http({
					url: URL_API + "/agendamiento/horarios/" + data.idSucursal,
					method: "POST",
					params: {
						fechaInicio: data.fecha
					},
					data: {
						idTramite: data.idTramite,
						idRegion: data.idRegion,
						idComuna: data.idComuna,
						idSucursal: data.idSucursal
					},
					headers: {
						"Content-Type": "application/json",
						USER_AUTH: data.rut,
						USER_AUTH_CODE: data.codedRut
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}

			function agendarHora(data, userAuth) {
				return $http({
					url: URL_API + "/agendamiento/agendar-hora",
					method: "POST",
					data: data,
					headers: {
						"Content-Type": "application/json",
						USER_AUTH_CODE: userAuth
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					return response.data.mensaje ? response.data : void $state.go("agendamiento-error", {
						msj: agendamiento_msj_error
					})
				})
			}
			return {
				obtenerRegiones: obtenerRegiones,
				obtenerComunas: obtenerComunas,
				obtenerSucursales: obtenerSucursales,
				obtenerDiasHabiles: obtenerDiasHabiles,
				obtenerHorarios: obtenerHorarios,
				agendarHora: agendarHora
			}
		}
		angular.module("WebBancoChile.agendamiento").factory("agenPresencialFactory", agenPresencialFactory), agenPresencialFactory.$inject = ["$http", "URL_API", "$state", "agendamiento_msj_error"]
	}(),
	function() {
		"use strict";

		function agenRemotoFactory($http, URL_API, $state, agendamiento_msj_error) {
			function obtenerTipologia(data) {
				return $http({
					url: URL_API + "/contacto-publico-persona/contacto/obtener-tipologias/" + data,
					method: "GET"
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}

			function crearRequerimiento(data) {
				return $http({
					url: URL_API + "/contacto-publico-persona/contacto/crear-requerimiento",
					method: "POST",
					data: data
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}
			return {
				obtenerTipologia: obtenerTipologia,
				crearRequerimiento: crearRequerimiento
			}
		}
		angular.module("WebBancoChile.agendamiento").factory("agenRemotoFactory", agenRemotoFactory), agenRemotoFactory.$inject = ["$http", "URL_API", "$state", "agendamiento_msj_error"]
	}(),
	function() {
		"use strict";

		function agendamientoFactory($http, URL_API, $state, agendamiento_msj_error) {
			function validaAgendamientos(data) {
				return $http({
					url: URL_API + "/agendamiento/validar",
					method: "POST",
					data: data.rut,
					params: {
						"g-recaptcha-response": data.captcha
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}

			function obtenerAcciones() {
				return $http({
					url: URL_API + "/agendamiento/acciones",
					method: "GET"
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}

			function obtenerTramites(data) {
				return $http({
					url: URL_API + "/agendamiento/obtenerTramites/" + data,
					method: "GET"
				}).then(function(response) {
					return response.data
				}, function(response) {
					var mensaje = "";
					mensaje = response.data.mensaje ? response.data.mensaje : agendamiento_msj_error, $state.go("agendamiento-error", {
						msj: mensaje
					})
				})
			}

			function logSinEnvioPub(data) {
				return $http({
					url: URL_API + "/agendamiento/log",
					method: "POST",
					data: data
				})
			}
			return {
				validaAgendamientos: validaAgendamientos,
				obtenerAcciones: obtenerAcciones,
				obtenerTramites: obtenerTramites,
				logSinEnvioPub: logSinEnvioPub
			}
		}
		angular.module("WebBancoChile.agendamiento").factory("agendamientoFactory", agendamientoFactory), agendamientoFactory.$inject = ["$http", "URL_API", "$state", "agendamiento_msj_error"]
	}(),
	function() {
		angular.module("WebBancoChile.agendamiento").filter("agendamientoCamelcase", function() {
			return function(input) {
				if (angular.isUndefined(input) || null == input || "" === input) return "";
				for (var words = input.toLowerCase().replace(/ +/g, " ").split(" "), i = 0; i < words.length; i++) words[i] = words[i].charAt(0).toUpperCase() + words[i].substr(1).toLowerCase();
				return words.join(" ")
			}
		})
	}(),
	function() {
		angular.module("WebBancoChile.agendamiento").filter("agenDiaSemana", [function() {
			return function(numero) {
				if (angular.isUndefined(numero) || null == numero || "" === numero) return "";
				var dia = "";
				switch (numero) {
					case 1:
						dia = "Lun";
						break;
					case 2:
						dia = "Mar";
						break;
					case 3:
						dia = "Mie";
						break;
					case 4:
						dia = "Jue";
						break;
					case 5:
						dia = "Vie";
						break;
					case 6:
						dia = "Sab";
						break;
					case 0:
						dia = "Dom"
				}
				return dia
			}
		}])
	}(),
	function() {
		angular.module("WebBancoChile.agendamiento").filter("agenReplaceDiacritics", [function() {
			return function(string) {
				if (angular.isUndefined(string) || null == string || "" === string) return "";
				var nuevoString = string.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
				return nuevoString
			}
		}])
	}(),
	function() {
		angular.module("WebBancoChile.agendamiento").factory("agenServices", ["$window", function($window) {
			return {
				trackEvent: function(data) {
					var dataLayer = $window.dataLayer = $window.dataLayer || [];
					dataLayer.push(data)
				}
			}
		}])
	}(),
	function() {
		var CATEGORIAS_PRODUCTO = {
				CUENTA: "Cuenta",
				LINEA: "Lineas",
				TARJETA: "Tarjetas",
				CREDITO: "Creditos"
			},
			TIPOS_PRODUCTO = {
				CUENTA_CORRIENTE: "Cuenta Corriente",
				CUENTA_CORRIENTE_MONEDA_EXTRANJERA: "Cuenta Corriente Moneda Extranjera",
				CUENTA_VISTA: "Cuenta Vista",
				LINEA_CREDITO: "LÃ­nea de CrÃ©dito",
				TARJETA_CREDITO: "Tarjeta de CrÃ©dito",
				CREDITO_CONSUMO: "CrÃ©dito de Consumo",
				CREDITO_COMERCIAL: "CrÃ©dito Comercial",
				CREDITO_HIPOTECARIO: "CrÃ©dito Hipotecario"
			},
			CODIGO_PRODUCTO = {
				CUENTA_CORRIENTE: "CTACTE",
				CUENTA_CORRIENTE_MONEDA_EXTRANJERA: "CTACME",
				CUENTA_VISTA: "CTAVIS",
				CUENTA_PREPAGO: "CTAPRE",
				LINEA_CREDITO: "LINCRE",
				TARJETA_CREDITO: "TARCRE",
				CREDITO_CONSUMO: "CRECON",
				CREDITO_COMERCIAL: "CRECOM",
				CREDITO_HIPOTECARIO: "CREHIP",
				CREDITO_AUTOMOTRIZ: "CREAUT",
				OTROS: "CREOTR"
			},
			MONEDAS = {
				CLP: "CLP",
				CLF: "CLF",
				USD: "USD"
			},
			CODIGO_FAMILIA = {
				CUENTA: "CTAALL",
				ROTATIVO: "ROTALL",
				CREDITO: "CREALL"
			},
			FAMILIA_PRODUCTO = {
				CTACTE: {
					DESCRIPCION: "Cuenta Corriente",
					FAMILIA: "Cuentas",
					CODIGO_FAMILIA: "CTAALL",
					tipoProducto: "Cuenta Corriente"
				},
				CTAVIS: {
					DESCRIPCION: "Cuenta Vista",
					FAMILIA: "Cuentas",
					CODIGO_FAMILIA: "CTAALL",
					tipoProducto: "Cuenta Vista"
				},
				CTACME: {
					DESCRIPCION: "Cuenta Corriente Moneda Extranjera",
					FAMILIA: "Cuentas",
					CODIGO_FAMILIA: "CTAALL",
					tipoProducto: "Cuenta Corriente ME"
				},
				CTAPRE: {
					DESCRIPCION: "Cuenta Prepago",
					FAMILIA: "Cuentas",
					CODIGO_FAMILIA: "CTAALL",
					tipoProducto: "Cuenta Prepago"
				},
				LINCRE: {
					DESCRIPCION: "LÃ­nea de CrÃ©dito",
					FAMILIA: "Lineas",
					CODIGO_FAMILIA: "ROTALL",
					tipoProducto: "LÃ­nea de CrÃ©dito"
				},
				TARCRE: {
					DESCRIPCION: "Tarjeta de CrÃ©dito",
					FAMILIA: "Tarjetas",
					CODIGO_FAMILIA: "ROTALL",
					tipoProducto: "Tarjeta de CrÃ©dito"
				},
				CRECON: {
					DESCRIPCION: "CrÃ©dito de Consumo",
					FAMILIA: "CrÃ©ditos",
					CODIGO_FAMILIA: "CREALL",
					tipoProducto: "CrÃ©dito de Consumo"
				},
				CRECOM: {
					DESCRIPCION: "CrÃ©dito Comercial",
					FAMILIA: "CrÃ©ditos",
					CODIGO_FAMILIA: "CREALL",
					tipoProducto: "CrÃ©dito Comercial"
				},
				CREHIP: {
					DESCRIPCION: "CrÃ©dito Hipotecario",
					FAMILIA: "CrÃ©ditos",
					CODIGO_FAMILIA: "CREALL",
					tipoProducto: "CrÃ©dito Hipotecario"
				},
				CREAUT: {
					DESCRIPCION: "CrÃ©dito Automotriz",
					FAMILIA: "CrÃ©ditos",
					CODIGO_FAMILIA: "CREALL",
					tipoProducto: "CrÃ©dito Automotriz"
				},
				CREOTR: {
					DESCRIPCION: "Otro CrÃ©dito",
					FAMILIA: "CrÃ©ditos",
					CODIGO_FAMILIA: "CREALL",
					tipoProducto: "Otro CrÃ©dito"
				}
			},
			TIPOS_PRODUCTO_REPOSITORIO = [{
				nombre: "Cuenta Corriente",
				descripcion: "Cuenta Corriente",
				codigo: "CTACTE",
				categoria: "Cuentas"
			}, {
				nombre: "Cuenta Corriente ME",
				descripcion: "Cuenta Corriente Moneda Extranjera",
				codigo: "CTACME",
				categoria: "Cuentas"
			}, {
				nombre: "Cuenta Vista",
				descripcion: "Cuenta Vista",
				codigo: "CTAVIS",
				categoria: "Cuentas"
			}, {
				nombre: "Cuenta Prepago",
				descripcion: "Cuenta Prepago",
				codigo: "CTAPRE",
				categoria: "Cuentas"
			}, {
				nombre: "LÃ­nea de CrÃ©dito",
				descripcion: "LÃ­nea de CrÃ©dito",
				codigo: "LINCRE",
				categoria: "LÃ­neas"
			}, {
				nombre: "Tarjeta de CrÃ©dito",
				descripcion: "Tarjeta de CrÃ©dito",
				codigo: "TARCRE",
				categoria: "Tarjetas"
			}, {
				nombre: "CrÃ©dito de Consumo",
				descripcion: "CrÃ©dito de Consumo",
				codigo: "CRECON",
				categoria: "CrÃ©ditos"
			}, {
				nombre: "CrÃ©dito Comercial",
				descripcion: "CrÃ©dito Comercial",
				codigo: "CRECOM",
				categoria: "CrÃ©ditos"
			}, {
				nombre: "CrÃ©dito Automotriz",
				descripcion: "CrÃ©dito Automotriz",
				codigo: "CREAUT",
				categoria: "CrÃ©ditos"
			}, {
				nombre: "Otro CrÃ©dito",
				descripcion: "Otro CrÃ©dito",
				codigo: "CREOTR",
				categoria: "CrÃ©ditos"
			}, {
				nombre: "CrÃ©dito Hipotecario",
				descripcion: "CrÃ©dito Hipotecario",
				codigo: "CREHIP",
				categoria: "CrÃ©ditos"
			}, {
				nombre: "Otro Producto",
				descripcion: "Otro Producto",
				codigo: "PRDOTR",
				categoria: "Otros"
			}];
		angular.module("WebBancoChile.portabilidad-financiera-publico").constant("portabilidad-financiera-publico_url_base", "portabilidad-financiera-publico/src/portabilidad-financiera-publico/").constant("portabilidad-financiera-publico_uris", {}).constant("URL_PORTAL_LOGIN", "https://login.bancochile.cl/bancochile-web/persona/login/index.html#/login").constant("PF_CATEGORIAS_PRODUCTO", CATEGORIAS_PRODUCTO).constant("PF_TIPOS_PRODUCTO", TIPOS_PRODUCTO).constant("PF_TIPOS_PRODUCTO_REPOSITORIO", TIPOS_PRODUCTO_REPOSITORIO).constant("PF_MONEDAS", MONEDAS).constant("PF_FAMILIA_PRODUCTO", FAMILIA_PRODUCTO).constant("PF_CODIGO_PRODUCTO", CODIGO_PRODUCTO).constant("PF_CODIGO_FAMILIA", CODIGO_FAMILIA).constant("URL_PRINCIPAL_BANCO", "https://portales.bancochile.cl/personas").constant("TIPO_PRODUCTOS_CERRAR", {
			tipoProductosCerrar: [{
				descripcion: "Cuenta Corriente",
				codigoProducto: "CTACTE",
				tipo: "Cuenta"
			}, {
				descripcion: "Cuenta Vista",
				codigoProducto: "CTAVIS",
				tipo: "Cuenta"
			}, {
				descripcion: "Cuenta Prepago",
				codigoProducto: "CTAPRE",
				tipo: "Cuenta"
			}, {
				descripcion: "LÃ­nea de CrÃ©dito",
				codigoProducto: "LINCRE",
				tipo: "Lineas"
			}, {
				descripcion: "Tarjeta de CrÃ©dito",
				codigoProducto: "TARCRE",
				tipo: "Tarjetas"
			}, {
				descripcion: "CrÃ©dito de Consumo",
				codigoProducto: "CRECON",
				tipo: "Creditos"
			}, {
				descripcion: "CrÃ©dito Comercial",
				codigoProducto: "CRECOM",
				tipo: "Creditos"
			}, {
				descripcion: "CrÃ©dito Hipotecario",
				codigoProducto: "CREHIP",
				tipo: "Creditos"
			}, {
				descripcion: "CrÃ©dito Automotriz",
				codigoProducto: "CREAUT",
				tipo: "Creditos"
			}, {
				descripcion: "Otros CrÃ©ditos",
				codigoProducto: "CREOTR",
				tipo: "Creditos"
			}]
		})
	}(),
	function() {
		function formatNumber() {
			return {
				require: "?ngModel",
				link: function(scope, element, attrs, ngModelCtrl) {
					if (ngModelCtrl) {
						var maxValue = parseFloat(attrs.max),
							minValue = parseFloat(attrs.min),
							negative = "true" === attrs.negative,
							decimal = "" === attrs.formatNumber ? 0 : parseInt(attrs.formatNumber, 10),
							maxlength = parseInt(attrs.maxlength, 10);
						ngModelCtrl.$parsers.push(function(val) {
							if (angular.isUndefined(val)) return val;
							var clean = formatNumberDirective(val, decimal, negative, maxlength);
							val != clean && (ngModelCtrl.$setViewValue(clean), ngModelCtrl.$render());
							var valor = parseFloat(clean.replace(/[\.]/g, "").replace(",", ".")),
								flgVal = (angular.isUndefined(attrs.max) || maxValue >= valor) && (angular.isUndefined(attrs.min) || valor >= minValue);
							return ngModelCtrl.$setValidity("validNumber", flgVal), valor
						}), ngModelCtrl.$formatters.push(function(val) {
							if (angular.isUndefined(val)) return val;
							var clean = val.toString().replace(".", ",");
							clean = formatNumberDirective(clean, attrs.formatNumber, negative, maxlength), ngModelCtrl.$setViewValue(clean), ngModelCtrl.$render();
							var valor = parseFloat(val),
								flgVal = (angular.isUndefined(attrs.max) || maxValue >= valor) && (angular.isUndefined(attrs.min) || maxValue >= valor);
							return ngModelCtrl.$setValidity("validNumber", flgVal), clean
						}), element.bind("keydown", function(event) {
							return 32 === event.keyCode ? (event.preventDefault(), !1) : void 0
						}), element.bind("blur", function(event) {
							"" !== event.target.value && (2 != decimal || event.target.value.includes(",") || (event.target.value = event.target.value + ",00"))
						})
					}
				}
			}
		}

		function formatNumberDirective(val, decimales, negative, maxlength) {
			var clean = "";
			if (negative) {
				clean = val.replace(/[^-0-9\,]/g, "");
				var tieneSigno = !1;
				clean.match(/^-/) && (tieneSigno = !0), clean = clean.replace(/-/g, ""), clean = (tieneSigno ? "-" : "") + clean
			} else clean = val.replace(/[^0-9\,]/g, "");
			var negativeCheck = clean.split("-"),
				decimalCheck = clean.split(",");
			angular.isUndefined(negativeCheck[1]) || (negativeCheck[1] = negativeCheck[1].slice(0, negativeCheck[1].length), clean = negativeCheck[0] + "-" + negativeCheck[1], negativeCheck[0].length > 0 && (clean = negativeCheck[0]));
			for (var entero = decimalCheck[0], enteroForm = "", a = 0, i = entero.length - 1; i >= 0; i--) 3 == a && (enteroForm = "." + enteroForm, a = 0), a++, enteroForm = entero.charAt(i) + enteroForm;
			if (clean = enteroForm, angular.isUndefined(decimalCheck[1]) || (decimales >= 0 ? (decimalCheck[1] = decimalCheck[1].slice(0, decimales), clean = 0 === decimales ? enteroForm : enteroForm + "," + decimalCheck[1], maxlength == clean.length && (clean = "," === clean.slice(-1) ? clean.slice(0, -1) : clean)) : clean = enteroForm + "," + decimalCheck[1]), 0 === decimales && (clean.length > 0 && 0 === parseInt(clean.replace(".", ""), 10) && (clean = "0"), parseInt(clean.replace(".", ""), 10) > 0))
				for (var y = 0; y < clean.length - 1; y++) "0" === clean.charAt(0) && (clean = clean.substring(1));
			return clean
		}
		formatNumber.$inject = ["$filter"], angular.module("WebBancoChile.portabilidad-financiera-publico").directive("formatNumber", formatNumber)
	}(),
	function() {
		angular.module("herramientasLocales").directive("fileChange", ["archivosFactory", function(archivosFactory, $rootScope) {
			var archivo = "",
				nombre = "",
				tipo = "",
				extension = "",
				id_documento = "",
				id_es = "",
				archivoJson = {},
				valido = 1;
			return {
				restrict: "A",
				scope: !0,
				link: function($scope, element, attrs) {
					element.bind("change", function() {
						function toBase64(file) {
							var reader = new FileReader;
							reader.readAsDataURL(file), reader.onload = function() {
								archivo = reader.result.split("base64,")[1], archivoJson = {
									id: 0,
									id_documento: parseInt(id_documento, 10),
									id_es: parseInt(id_es, 10),
									archivo: archivo,
									nombre: nombre,
									mimeType: tipo,
									extension: extension,
									fecha_subida: null
								}, archivosFactory.guardarArchivo(archivoJson).then(function() {
									$scope.$emit("actualizarAdjuntos")
								})
							}
						}
						$scope.$emit("gifSubiendo", attrs.id), valido = 1, nombre = element[0].files[0].name, tipo = element[0].files[0].type, extension = element[0].files[0].type.split("/")[1], id_documento = attrs.id, id_es = attrs.idestado, element[0].files[0].size > 10485760 && (valido = 0, $scope.$emit("mensajeAdjuntos", id_documento, "El archivo no puede pesar mas de 10 Mb.")), "png" != extension && "jpeg" != extension && "pdf" != extension && (valido = 0, $scope.$emit("mensajeAdjuntos", id_documento, "Los archivos deben tener los formatos .png .jpg o .pdf .")), valido && toBase64(element[0].files[0]), element = ""
					})
				}
			}
		}])
	}(),
	function(angular, undefined) {
		"use strict";
		angular.module("nocaptcha.directive", []).provider("googleGrecaptcha", function() {
			var language;
			this.setLanguage = function(_language) {
				language = _language
			}, this.$get = ["$q", "$window", "$document", "$rootScope", function($q, $window, $document, $rootScope) {
				var deferred = $q.defer();
				$window.recaptchaOnloadCallback = function() {
					$rootScope.$apply(function() {
						deferred.resolve()
					})
				};
				var s = $document[0].createElement("script"),
					src = "https://www.google.com/recaptcha/api.js?onload=recaptchaOnloadCallback&render=explicit";
				return s.type = "application/javascript", language && (src += "&hl=" + language), s.src = src, $document[0].body.appendChild(s), deferred.promise
			}]
		}).provider("noCAPTCHA", ["googleGrecaptchaProvider", function(googleGrecaptchaProvider) {
			var siteKey, size, theme;
			this.setSiteKey = function(_siteKey) {
				siteKey = _siteKey
			}, this.setSize = function(_size) {
				size = _size
			}, this.setTheme = function(_theme) {
				theme = _theme
			}, this.setLanguage = function(language) {
				googleGrecaptchaProvider.setLanguage(language)
			}, this.$get = function() {
				return {
					theme: theme,
					siteKey: siteKey,
					size: size
				}
			}
		}]).directive("reCaptcha", ["noCAPTCHA", "googleGrecaptcha", "$document", "$window", function(noCaptcha, googleGrecaptcha, $document, $window) {
			var removePLSContainers = function() {
				for (var plsContainers = $document[0].getElementsByClassName("pls-container"), i = 0; i < plsContainers.length; i++)
					for (var parent = plsContainers[i].parentNode; parent.firstChild;) parent.removeChild(parent.firstChild)
			};
			return {
				restrict: "EA",
				scope: {
					gRecaptchaResponse: "=",
					siteKey: "@",
					stoken: "@",
					size: "@",
					theme: "@",
					control: "=?",
					expiredCallback: "=?"
				},
				replace: !0,
				link: function(scope, element) {
					scope.control = scope.control || {};
					var widgetId, grecaptchaCreateParameters, control = scope.control;
					if (grecaptchaCreateParameters = {
							sitekey: scope.siteKey || noCaptcha.siteKey,
							size: scope.size || noCaptcha.size,
							theme: scope.theme || noCaptcha.theme,
							callback: function(r) {
								scope.$apply(function() {
									scope.gRecaptchaResponse = r
								})
							},
							"expired-callback": function() {
								scope.expiredCallback && "function" == typeof scope.expiredCallback && scope.$apply(function() {
									scope.expiredCallback()
								})
							}
						}, scope.stoken && (grecaptchaCreateParameters.stoken = scope.stoken), !grecaptchaCreateParameters.sitekey) throw new Error("Site Key is required");
					googleGrecaptcha.then(function() {
						widgetId = $window.grecaptcha.render(element[0], grecaptchaCreateParameters), control.reset = function() {
							$window.grecaptcha.reset(widgetId), scope.gRecaptchaResponse = null
						}
					}), scope.$on("$destroy", function() {
						$window.grecaptcha && $window.grecaptcha.reset(widgetId), removePLSContainers()
					}), noCaptcha.reset = function() {
						$window.grecaptcha && $window.grecaptcha.reset(widgetId)
					}
				}
			}
		}])
	}(angular),
	function() {
		function cotizacionFactory($http, URL_API) {
			function comprarCotizaciones(data) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/cotizaciones/comprar",
					method: "POST",
					data: {
						cifrado: token
					},
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					return angular.isDefined(response.data) ? response.data : !1
				})
			}
			return {
				comprarCotizaciones: comprarCotizaciones
			}
		}
		angular.module("WebBancoChile.cotizacionFactory.factory", []).factory("cotizacionFactory", cotizacionFactory), cotizacionFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function portabilidadFinancieraPublicoPeopleFactory($http) {
			function getUsers(params) {
				var fakePeople = {
					data: [{
						name: "Juan",
						lastname: "Perez",
						birthdate: new Date(1995, 3, 24),
						amount: 3e3
					}, {
						name: "John",
						lastname: "Doe",
						birthdate: new Date(1994, 5, 4),
						amount: 3001
					}]
				};
				return fakePeople
			}
			var service = {
				getUsers: getUsers
			};
			return service
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").factory("portabilidadFinancieraPublicoPeopleFactory", portabilidadFinancieraPublicoPeopleFactory), portabilidadFinancieraPublicoPeopleFactory.$inject = ["$http"]
	}(),
	function() {
		function solicitudPortabilidadFactory($http, URL_API) {
			function ingresarSolicitud(solicitud) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/solicitud/ingresar",
					method: "POST",
					data: solicitud,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function ingresarArchivos(adjuntos) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/solicitud/ingresar-documentos",
					transformRequest: angular.identity,
					method: "POST",
					data: adjuntos,
					headers: {
						"Content-Type": void 0
					}
				}).then(function(response) {
					return response.data
				})
			}

			function validarProveedor(proveedor, token) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/validar-proveedor",
					method: "POST",
					data: {
						nombreProveedor: proveedor,
						cifrado: token
					},
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(error) {
					return !0
				})
			}

			function getProveedores() {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/proveedor",
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function getTipoProductoCerrar() {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/tipo-producto/cerrar",
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function getTipoProductoContratar() {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/tipo-producto/contratar",
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function getDescargaComprobante(data) {
				function resultDescarga(result) {
					return result.data
				}
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/descarga-pdf",
					dataType: "json",
					data: data,
					handleError: !1,
					method: "POST",
					responseType: "arraybuffer",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(resultDescarga)
			}

			function validarPreguntas(datos) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/auth/validar-preguntas",
					method: "POST",
					data: datos,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}
			return {
				ingresarSolicitud: ingresarSolicitud,
				ingresarArchivos: ingresarArchivos,
				validarProveedor: validarProveedor,
				getProveedores: getProveedores,
				getTipoProductoCerrar: getTipoProductoCerrar,
				getTipoProductoContratar: getTipoProductoContratar,
				getDescargaComprobante: getDescargaComprobante,
				validarPreguntas: validarPreguntas
			}
		}
		angular.module("WebBancoChile.solicitudPortabilidadFactory.factory", []).factory("solicitudPortabilidadFactory", solicitudPortabilidadFactory), solicitudPortabilidadFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function cutFilter() {
			return function(value, wordwise, max, tail) {
				if (!value) return "";
				if (max = parseInt(max, 10), !max) return value;
				if (value.length <= max) return value;
				if (value = value.substr(0, max), wordwise) {
					var lastspace = value.lastIndexOf(" "); - 1 != lastspace && (value = value.substr(0, lastspace))
				}
				return value + (tail || " â€¦")
			}
		}

		function cutFileName() {
			return function(input, size) {
				return angular.isUndefined(input) || null == input || "" === input ? "" : input.length <= size ? input : input.slice(0, size - 8) + "..." + input.slice(input.length - 6, input.length)
			}
		}

		function fileSizeN() {
			return function(size, round) {
				if (!angular.isUndefined(size)) {
					var result;
					if (1 > size / 1024 ? result = size + " bytes" : size / 1024 >= 1 && 1024 > size / 1024 ? result = size / 1024 + " Kb" : size / 1024 >= 1024 && (result = size / 1024 / 1024 + " Mb"), round) {
						var split = result.split(" ");
						return Math.round(split[0]) + " " + split[1]
					}
					return result
				}
			}
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").filter("PFcut", cutFilter).filter("PFcutFileName", cutFileName).filter("PFfileSizeN", fileSizeN)
	}(),
	function() {
		function archivoIngresoSolicitudPublicoService(dndFileUploadService, FileSaver, $filter, $q) {
			var vm = this;
			vm.$filter = $filter, vm.dndFileUploadService = dndFileUploadService, vm.fileSaver = FileSaver, vm.extencionPermitidas = [], vm.configContent = "", vm.$q = $q
		}
		angular.module("WebBancoChile.archivoIngresoSolicitudPublicoService.service", []).service("archivoIngresoSolicitudPublicoService", archivoIngresoSolicitudPublicoService), archivoIngresoSolicitudPublicoService.$inject = ["dndFileUploadService", "FileSaver", "$filter", "$q"], archivoIngresoSolicitudPublicoService.prototype.configUpload = function(mostrarErrorFiles) {
			var vm = this;
			vm.cargaFileMax = !1, vm.config = {
				dndFileUploadService: vm.dndFileUploadService,
				esExtencionPermitida: vm.esExtencionPermitida,
				extencionPermitidas: vm.extencionPermitidas,
				fileError: !1,
				errorFiles: "",
				mostrarErrorFiles: mostrarErrorFiles,
				mostrarContentFile: !1,
				dataUpload: {
					validMimeType: "",
					maxFileSize: 1,
					urlCompleta: !0,
					selectMultiple: !0,
					prefijo: "cer"
				},
				data: {
					permiteDescarga: !1,
					permisteEditarFormato: !0,
					selectMultiple: !0,
					uploadManual: !0,
					limitFiles: 25,
					queueLimit: 2
				}
			}
		}, archivoIngresoSolicitudPublicoService.prototype.configContentUpload = function() {
			var vm = this;
			vm.configContent = {
				emptyText: 'Para subir un archivo, arrÃ¡strelo al cuadro â€œArrastrar aquÃ­â€ o haga click en el botÃ³n â€œSubir Archivo".',
				headerText: "No posee archivo en proceso"
			}
		}, archivoIngresoSolicitudPublicoService.prototype.formatosArchivosPermitidos = function() {
			var vm = this;
			vm.cargaFileMax = !1, vm.config.dataUpload.maxFileSize = 2, vm.config.dataUpload.maxFileNameLength = 60, vm.config.extencionPermitidas = ["pdf", "PDF", "jpg", "JPG", "png", "PNG"], vm.cargaFileMax = !0
		}, archivoIngresoSolicitudPublicoService.prototype.validator = function(file) {
			var vm = this;
			if (vm.config.mostrarMensajeError = !1, vm.config.mensajeFileError = {
					title: "",
					message: "",
					tipo: "error"
				}, vm.config.esExtencionPermitida(file.name))
				if (file.name.length > vm.config.dataUpload.maxFileNameLength) vm.config.mensajeFileError.message = "El nombre del archivo excede el largo permitido.", vm.config.mostrarMensajeError = !0;
				else {
					if (0 === file.size) return vm.config.mensajeFileError.message = "El archivo no debe estar vacÃ­o.", vm.config.mostrarMensajeError = !0, !1;
					if (file.size <= 1024 * vm.config.dataUpload.maxFileSize * 1024) {
						if (!file.$error) return vm.config.mostrarMensajeError = !1, !0
					} else file.size > 1024 * vm.config.dataUpload.maxFileSize * 1024 && (vm.config.mensajeFileError.message = "El archivo ingresado supera el lÃ­mite", vm.config.mostrarMensajeError = !0)
				}
			else vm.config.mensajeFileError.message = "El formato del archivo no corresponde al definido. ", vm.config.mostrarMensajeError = !0
		}, archivoIngresoSolicitudPublicoService.prototype.esExtencionPermitida = function(fileName) {
			for (var vm = this, extencionPermitidas = vm.extencionPermitidas, extension = fileName.substring(fileName.lastIndexOf(".") + 1).toUpperCase(), i = 0; i <= extencionPermitidas.length - 1; i++)
				if (extension === extencionPermitidas[i].toUpperCase().trim()) return !0;
			return !1
		}, archivoIngresoSolicitudPublicoService.prototype.progress = function(evt) {
			var vm = this;
			vm.loaded = !0;
			var progressPercentage = parseInt(90 * evt.loaded / evt.total, 10);
			angular.element(".progress-bar-upload-file-directive").css("width", progressPercentage + "%")
		}, archivoIngresoSolicitudPublicoService.prototype.success = function() {
			var vm = this;
			vm.config.dndFileUploadService.setStatus("done"), angular.element(".progress-bar-upload-file-directive").css("width", "100%")
		}, archivoIngresoSolicitudPublicoService.prototype.clean = function() {
			var vm = this;
			vm.dndFileUploadService.setStatus("init"), vm.dndFileUploadService.setList(null), vm.dndFileUploadService.setSelected([]), vm.dndFileUploadService.setUseUpload(!1), vm.dndFileUploadService.setUseContent(!1), angular.element(".progress-bar-upload-file-directive").css("width", "0%")
		}, archivoIngresoSolicitudPublicoService.prototype.deleteElement = function() {
			var vm = this;
			vm.errores = []
		}
	}(),
	function() {
		function iteIngresoSolicitudPublicoService(dndFileUploadService, FileSaver, $filter, $q) {
			var vm = this;
			vm.$filter = $filter, vm.dndFileUploadService = dndFileUploadService, vm.fileSaver = FileSaver, vm.extencionPermitidas = [], vm.configContent = "", vm.$q = $q
		}
		angular.module("WebBancoChile.iteIngresoSolicitudPublicoService.service", []).service("iteIngresoSolicitudPublicoService", iteIngresoSolicitudPublicoService), iteIngresoSolicitudPublicoService.$inject = ["dndFileUploadService", "FileSaver", "$filter", "$q"], iteIngresoSolicitudPublicoService.prototype.configUpload = function(mostrarErrorFiles) {
			var vm = this;
			vm.cargaFileMax = !1, vm.config = {
				dndFileUploadService: vm.dndFileUploadService,
				esExtencionPermitida: vm.esExtencionPermitida,
				extencionPermitidas: vm.extencionPermitidas,
				fileError: !1,
				errorFiles: "",
				mostrarErrorFiles: mostrarErrorFiles,
				mostrarContentFile: !1,
				dataUpload: {
					validMimeType: "",
					maxFileSize: 1,
					urlCompleta: !0,
					selectMultiple: !0,
					prefijo: "ite"
				},
				data: {
					permiteDescarga: !1,
					permisteEditarFormato: !0,
					selectMultiple: !0,
					uploadManual: !0,
					limitFiles: 25,
					queueLimit: 2
				}
			}
		}, iteIngresoSolicitudPublicoService.prototype.configContentUpload = function() {
			var vm = this;
			vm.configContent = {
				emptyText: 'Para subir un archivo, arrÃ¡strelo al cuadro â€œArrastrar aquÃ­â€ o haga click en el botÃ³n â€œSubir Archivo".',
				headerText: "No posee archivo en proceso"
			}
		}, iteIngresoSolicitudPublicoService.prototype.formatosArchivosPermitidos = function() {
			var vm = this;
			vm.cargaFileMax = !1, vm.config.dataUpload.maxFileSize = 2, vm.config.dataUpload.maxFileNameLength = 60, vm.config.extencionPermitidas = ["pdf", "PDF", "jpg", "JPG", "png", "PNG"], vm.cargaFileMax = !0
		}, iteIngresoSolicitudPublicoService.prototype.validator = function(file) {
			var vm = this;
			if (vm.config.mostrarMensajeError = !1, vm.config.mensajeFileError = {
					title: "",
					message: "",
					tipo: "dcg1"
				}, vm.config.esExtencionPermitida(file.name))
				if (file.name.length > vm.config.dataUpload.maxFileNameLength) vm.config.mensajeFileError.message = "El nombre del archivo excede el largo permitido.", vm.config.mostrarMensajeError = !0;
				else {
					if (0 === file.size) return vm.config.mensajeFileError.message = "El archivo no debe estar vacÃ­o.", vm.config.mostrarMensajeError = !0, !1;
					if (file.size <= 1024 * vm.config.dataUpload.maxFileSize * 1024) {
						if (!file.$error) return vm.config.mostrarMensajeError = !1, !0
					} else file.size > 1024 * vm.config.dataUpload.maxFileSize * 1024 && (vm.config.mensajeFileError.message = "El archivo ingresado supera el lÃ­mite", vm.config.mostrarMensajeError = !0)
				}
			else vm.config.mensajeFileError.message = "El formato del archivo no corresponde al definido. ", vm.config.mostrarMensajeError = !0
		}, iteIngresoSolicitudPublicoService.prototype.esExtencionPermitida = function(fileName) {
			for (var vm = this, extencionPermitidas = vm.extencionPermitidas, extension = fileName.substring(fileName.lastIndexOf(".") + 1).toUpperCase(), i = 0; i <= extencionPermitidas.length - 1; i++)
				if (extension === extencionPermitidas[i].toUpperCase().trim()) return !0;
			return !1
		}, iteIngresoSolicitudPublicoService.prototype.progress = function(evt) {
			var vm = this;
			vm.loaded = !0;
			var progressPercentage = parseInt(90 * evt.loaded / evt.total, 10);
			angular.element(".progress-bar-upload-file-directive").css("width", progressPercentage + "%")
		}, iteIngresoSolicitudPublicoService.prototype.success = function() {
			var vm = this;
			vm.config.dndFileUploadService.setStatus("done"), angular.element(".progress-bar-upload-file-directive").css("width", "100%")
		}, iteIngresoSolicitudPublicoService.prototype.clean = function() {
			var vm = this;
			vm.dndFileUploadService.setStatus("init"), vm.dndFileUploadService.setList(null), vm.dndFileUploadService.setSelected([]), vm.dndFileUploadService.setUseUpload(!1), vm.dndFileUploadService.setUseContent(!1), angular.element(".progress-bar-upload-file-directive").css("width", "0%")
		}, iteIngresoSolicitudPublicoService.prototype.deleteElement = function() {
			var vm = this;
			vm.errores = []
		}
	}(),
	function() {
		function preguntasSeguridadService() {
			function setPreguntas(value) {
				preguntas = value
			}

			function getPreguntas() {
				return preguntas
			}

			function deletePreguntas() {
				preguntas = {}
			}
			var preguntas = {};
			return {
				setPreguntas: setPreguntas,
				getPreguntas: getPreguntas,
				deletePreguntas: deletePreguntas
			}
		}
		angular.module("WebBancoChile.preguntasSeguridadService.service", []).service("preguntasSeguridadService", preguntasSeguridadService)
	}(),
	function() {
		function redirigirSolicitudService() {
			function setDirige(value) {
				dirige = value
			}

			function getDirige() {
				return dirige
			}

			function setConsulta(value) {
				consulta = value
			}

			function getConsulta() {
				return consulta
			}

			function setNombres(value) {
				nombres = value
			}

			function getNombres() {
				return nombres
			}

			function setApellidoPaterno(value) {
				apellidoPaterno = value
			}

			function getApellidoPaterno() {
				return apellidoPaterno
			}

			function setApellidoMaterno(value) {
				apellidoMaterno = value
			}

			function getApellidoMaterno() {
				return apellidoMaterno
			}

			function setFechaNacimiento(value) {
				fechaNacimiento = value
			}

			function getFechaNacimiento() {
				return fechaNacimiento
			}

			function setCorreoElectronico(value) {
				correoElectronico = value
			}

			function getCorreoElectronico() {
				return correoElectronico
			}

			function setTelefonoCelular(value) {
				telefonoCelular = value
			}

			function getTelefonoCelular() {
				return telefonoCelular
			}

			function setRegionSel(value) {
				regionSel = value
			}

			function getRegionSel() {
				return regionSel
			}

			function setCiudadSel(value) {
				ciudadSel = value
			}

			function getCiudadSel() {
				return ciudadSel
			}

			function setComunaSel(value) {
				comunaSel = value
			}

			function getComunaSel() {
				return comunaSel
			}

			function setCalle(value) {
				calle = value
			}

			function getCalle() {
				return calle
			}

			function setNumeroCasa(value) {
				numeroCasa = value
			}

			function getNumeroCasa() {
				return numeroCasa
			}

			function setNumeroDepartamento(value) {
				numeroDepartamento = value
			}

			function getNumeroDepartamento() {
				return numeroDepartamento
			}

			function setEsCliente(value) {
				esCliente = value
			}

			function getEsCliente() {
				return esCliente
			}
			var dirige = !1,
				nombres = "",
				apellidoPaterno = "",
				apellidoMaterno = "",
				fechaNacimiento = "",
				correoElectronico = "",
				telefonoCelular = "",
				regionSel = "",
				ciudadSel = "",
				comunaSel = "",
				calle = "",
				numeroCasa = "",
				numeroDepartamento = "",
				consulta = "",
				esCliente = !1;
			return {
				setDirige: setDirige,
				getDirige: getDirige,
				setConsulta: setConsulta,
				getConsulta: getConsulta,
				setNombres: setNombres,
				getNombres: getNombres,
				setApellidoPaterno: setApellidoPaterno,
				getApellidoPaterno: getApellidoPaterno,
				setApellidoMaterno: setApellidoMaterno,
				getApellidoMaterno: getApellidoMaterno,
				setFechaNacimiento: setFechaNacimiento,
				getFechaNacimiento: getFechaNacimiento,
				setCorreoElectronico: setCorreoElectronico,
				getCorreoElectronico: getCorreoElectronico,
				setTelefonoCelular: setTelefonoCelular,
				getTelefonoCelular: getTelefonoCelular,
				setRegionSel: setRegionSel,
				getRegionSel: getRegionSel,
				setCiudadSel: setCiudadSel,
				getCiudadSel: getCiudadSel,
				setComunaSel: setComunaSel,
				getComunaSel: getComunaSel,
				setCalle: setCalle,
				getCalle: getCalle,
				setNumeroCasa: setNumeroCasa,
				getNumeroCasa: getNumeroCasa,
				setNumeroDepartamento: setNumeroDepartamento,
				getNumeroDepartamento: getNumeroDepartamento,
				setEsCliente: setEsCliente,
				getEsCliente: getEsCliente
			}
		}
		angular.module("WebBancoChile.redirigirSolicitudService.service", []).service("redirigirSolicitudService", redirigirSolicitudService)
	}(),
	function() {
		function storeComprobantePortabilidadService() {
			function setComprobante(value) {
				comprobante = value
			}

			function getComprobante() {
				return comprobante
			}

			function deleteComprobante() {
				comprobante = {}
			}
			var comprobante = {};
			return {
				setComprobante: setComprobante,
				getComprobante: getComprobante,
				deleteComprobante: deleteComprobante
			}
		}
		angular.module("WebBancoChile.storeComprobantePortabilidadService.service", []).service("storeComprobantePortabilidadService", storeComprobantePortabilidadService)
	}(),
	function() {
		function tasaIngresoSolicitudPublicoService(dndFileUploadService, FileSaver, $filter, $q) {
			var vm = this;
			vm.$filter = $filter, vm.dndFileUploadService = dndFileUploadService, vm.fileSaver = FileSaver, vm.extencionPermitidas = [], vm.configContent = "", vm.$q = $q
		}
		angular.module("WebBancoChile.tasaIngresoSolicitudPublicoService.service", []).service("tasaIngresoSolicitudPublicoService", tasaIngresoSolicitudPublicoService), tasaIngresoSolicitudPublicoService.$inject = ["dndFileUploadService", "FileSaver", "$filter", "$q"], tasaIngresoSolicitudPublicoService.prototype.configUpload = function(mostrarErrorFiles) {
			var vm = this;
			vm.cargaFileMax = !1, vm.config = {
				dndFileUploadService: vm.dndFileUploadService,
				esExtencionPermitida: vm.esExtencionPermitida,
				extencionPermitidas: vm.extencionPermitidas,
				fileError: !1,
				errorFiles: "",
				mostrarErrorFiles: mostrarErrorFiles,
				mostrarContentFile: !1,
				dataUpload: {
					validMimeType: "",
					maxFileSize: 1,
					urlCompleta: !0,
					selectMultiple: !0,
					prefijo: "tim"
				},
				data: {
					permiteDescarga: !1,
					permisteEditarFormato: !0,
					selectMultiple: !0,
					uploadManual: !0,
					limitFiles: 25,
					queueLimit: 2
				}
			}
		}, tasaIngresoSolicitudPublicoService.prototype.configContentUpload = function() {
			var vm = this;
			vm.configContent = {
				emptyText: 'Para subir un archivo, arrÃ¡strelo al cuadro â€œArrastrar aquÃ­â€ o haga click en el botÃ³n â€œSubir Archivo".',
				headerText: "No posee archivo en proceso"
			}
		}, tasaIngresoSolicitudPublicoService.prototype.formatosArchivosPermitidos = function() {
			var vm = this;
			vm.cargaFileMax = !1, vm.config.dataUpload.maxFileSize = 2, vm.config.dataUpload.maxFileNameLength = 60, vm.config.extencionPermitidas = ["pdf", "PDF", "jpg", "JPG", "png", "PNG"], vm.cargaFileMax = !0
		}, tasaIngresoSolicitudPublicoService.prototype.validator = function(file) {
			var vm = this;
			if (vm.config.mostrarMensajeError = !1, vm.config.mensajeFileError = {
					title: "",
					message: "",
					tipo: "dcg1"
				}, vm.config.esExtencionPermitida(file.name))
				if (file.name.length > vm.config.dataUpload.maxFileNameLength) vm.config.mensajeFileError.message = "El nombre del archivo excede el largo permitido.", vm.config.mostrarMensajeError = !0;
				else {
					if (0 === file.size) return vm.config.mensajeFileError.message = "El archivo no debe estar vacÃ­o.", vm.config.mostrarMensajeError = !0, !1;
					if (file.size <= 1024 * vm.config.dataUpload.maxFileSize * 1024) {
						if (!file.$error) return vm.config.mostrarMensajeError = !1, !0
					} else file.size > 1024 * vm.config.dataUpload.maxFileSize * 1024 && (vm.config.mensajeFileError.message = "El archivo ingresado supera el lÃ­mite", vm.config.mostrarMensajeError = !0)
				}
			else vm.config.mensajeFileError.message = "El formato del archivo no corresponde al definido. ", vm.config.mostrarMensajeError = !0
		}, tasaIngresoSolicitudPublicoService.prototype.esExtencionPermitida = function(fileName) {
			for (var vm = this, extencionPermitidas = vm.extencionPermitidas, extension = fileName.substring(fileName.lastIndexOf(".") + 1).toUpperCase(), i = 0; i <= extencionPermitidas.length - 1; i++)
				if (extension === extencionPermitidas[i].toUpperCase().trim()) return !0;
			return !1
		}, tasaIngresoSolicitudPublicoService.prototype.progress = function(evt) {
			var vm = this;
			vm.loaded = !0;
			var progressPercentage = parseInt(90 * evt.loaded / evt.total, 10);
			angular.element(".progress-bar-upload-file-directive").css("width", progressPercentage + "%")
		}, tasaIngresoSolicitudPublicoService.prototype.success = function() {
			var vm = this;
			vm.config.dndFileUploadService.setStatus("done"), angular.element(".progress-bar-upload-file-directive").css("width", "100%")
		}, tasaIngresoSolicitudPublicoService.prototype.clean = function() {
			var vm = this;
			vm.dndFileUploadService.setStatus("init"), vm.dndFileUploadService.setList(null), vm.dndFileUploadService.setSelected([]), vm.dndFileUploadService.setUseUpload(!1), vm.dndFileUploadService.setUseContent(!1), angular.element(".progress-bar-upload-file-directive").css("width", "0%")
		}, tasaIngresoSolicitudPublicoService.prototype.deleteElement = function() {
			var vm = this;
			vm.errores = []
		}
	}(),
	function() {
		function tokenPortabilidadService() {
			function setToken(value) {
				token = value
			}

			function getToken() {
				return token
			}

			function deleteToken() {
				token = {}
			}
			return {
				setToken: setToken,
				getToken: getToken,
				deleteToken: deleteToken
			}
		}
		angular.module("WebBancoChile.tokenPortabilidadService.service", []).service("tokenPortabilidadService", tokenPortabilidadService)
	}(),
	function() {
		function comprobanteSolicitudPortabilidadController($window, $scope, $state, $stateParams, $filter, catalogoMensajesFactory, storeComprobantePortabilidadService, FileSaver, solicitudPortabilidadFactory, TIPO_PRODUCTOS_CERRAR, URL_PRINCIPAL_BANCO, redirigirSolicitudService, tokenPortabilidadService, preguntasSeguridadService) {
			function init() {
				vm.datosComprobantePortabilidad = procesaDatosComprobantePortabilidad(vm.solicitud)
			}

			function descargaComprobanteSolicitudPortabilidad() {
				solicitudPortabilidadFactory.getDescargaComprobante(vm.datosComprobantePortabilidad).then(function(result) {
					var file = new Blob([result], {
						type: "application/pdf"
					});
					FileSaver.saveAs(file, "Copia digital de solicitud de portabilidad.pdf")
				})
			}

			function procesaDatosComprobantePortabilidad(datos) {
				var productosACerrarOrdenados = [],
					productosAContratar = [],
					certificadoLiquidacionDeuda = [],
					pagoImpuestoTimbresEstampillas = [],
					copiaTasacionEstudioTitulo = [];
				vm.tipoProductos.forEach(function(tipoProducto) {
					datos.productosCerrados.forEach(function(producto) {
						producto.producto === tipoProducto.codigoProducto && (producto.detalleProductoCerrar.detalle = tipoProducto.descripcion, productosACerrarOrdenados.push(producto))
					})
				}), datos.productosContratar.forEach(function(producto) {
					var tipo = vm.tipoProductos.find(function(tipoProducto) {
						return tipoProducto.codigoProducto === producto.producto
					});
					producto.detalle = tipo.descripcion, producto.producto = tipo.tipo, null !== producto.pagaDeuda && (producto.pagaDeuda = producto.pagaDeuda ? "Si" : "No"), productosAContratar.push(producto)
				}), datos.certificados.forEach(function(item) {
					certificadoLiquidacionDeuda.push(item.name)
				}), datos.ite.forEach(function(item) {
					pagoImpuestoTimbresEstampillas.push(item.name)
				}), datos.tasa.forEach(function(item) {
					copiaTasacionEstudioTitulo.push(item.name)
				});
				var marca = 1,
					datosCliente = {
						nombre: datos.nombreCompleto + " " + datos.apellidoPaterno + " " + datos.apellidoMaterno,
						domicilio: datos.contactabilidad.nombreDireccion + " " + datos.contactabilidad.numero + ", " + datos.contactabilidad.comuna + ", " + datos.contactabilidad.ciudad + ", " + datos.contactabilidad.region,
						celular: datos.contactabilidad.numeroTelefono,
						rut: formatRutCliente(datos.rut),
						correo: datos.contactabilidad.correo
					},
					datosNuevoProveedor = {
						rut: "97.004.000-5",
						nombreInstitucion: "Banco de Chile"
					},
					datosAntiguoProveedor = {
						razonSocial: datos.nombreProveedor,
						tipoProveedor: datos.tipoProveedor,
						sitioWeb: datos.sitioWeb
					};
				return {
					idSolicitud: datos.resultadoSolicitud.idSolicitud,
					marca: marca,
					datosCliente: datosCliente,
					datosNuevoProveedor: datosNuevoProveedor,
					datosAntiguoProveedor: datosAntiguoProveedor,
					resumenProductosCerrar: {
						productosACerrar: productosACerrarOrdenados
					},
					resumenProductosContratar: {
						productosAContratar: productosAContratar
					},
					certificadoLiquidacionDeuda: certificadoLiquidacionDeuda,
					pagoImpuestoTimbresEstampillas: pagoImpuestoTimbresEstampillas,
					copiaTasacionEstudioTitulo: copiaTasacionEstudioTitulo,
					portarTodoCreditoRotativos: datos.portarTodoCreditoRotativos,
					portarTodoCreditos: datos.portarTodoCreditos,
					portarTodoCuentas: datos.portarTodoCuentas,
					portarTodoProducto: datos.portarTodoProducto
				}
			}

			function redirigeBancoChile() {
				$window.location.href = URL_PRINCIPAL_BANCO
			}

			function redirigeOtraSolicitud() {
				tokenPortabilidadService.deleteToken(), tokenPortabilidadService.setToken(vm.token), preguntasSeguridadService.setPreguntas(vm.preguntas), "" !== redirigirSolicitudService.getNombres() && "" !== redirigirSolicitudService.getCorreoElectronico() && "" !== redirigirSolicitudService.getTelefonoCelular() && redirigirSolicitudService.setEsCliente(!0), $state.go("ingresar-solicitud-portabilidad-publico")
			}

			function formatRutCliente(rut) {
				if (null !== rut && void 0 !== rut && "" !== rut) {
					var sRut, sRutFormateado = "",
						strRut = rut.replace(/^0+/, "");
					strRut = strRut.replace(/[-|\.]/g, ""), sRut = strRut;
					var sDV = sRut.charAt(sRut.length - 1);
					for (sRut = sRut.substring(0, sRut.length - 1); sRut.length > 3;) sRutFormateado = "." + sRut.substr(sRut.length - 3) + sRutFormateado, sRut = sRut.substring(0, sRut.length - 3);
					return sRutFormateado = sRut + sRutFormateado, sRutFormateado += "-" + sDV
				}
			}

			function registrarAccion(id) {
				var evento = $filter("filter")(vm.dataLayerMensajes, {
					eventLabel: id
				})[0];
				vm.dataLayer.push(evento)
			}
			var vm = this;
			vm.solicitud = storeComprobantePortabilidadService.getComprobante(), vm.errorEnPreguntas = !1, vm.solicitudRechazada = !1, vm.datosComprobantePortabilidad = {}, vm.redirigeBancoChile = redirigeBancoChile, vm.redirigeOtraSolicitud = redirigeOtraSolicitud, vm.token = tokenPortabilidadService.getToken(), vm.preguntas = preguntasSeguridadService.getPreguntas(), vm.dataLayer = $window.dataLayer = $window.dataLayer || [], vm.dataLayerMensajes = [{
				event: "completar_informacion_portabilidad_prospecto_event",
				eventCategory: "prospecto sin renta acreditada",
				eventAction: "link descargar comprobante en comprobante de ingreso de solicitud",
				eventLabel: "p_btn_complet-info_comprob_pub_desc-compr_portab"
			}, {
				event: "completar_informacion_portabilidad_prospecto_event",
				eventCategory: "prospecto sin renta acreditada",
				eventAction: "boton terminar sin completar info en comprobante de ingreso de solicitud",
				eventLabel: "p_btn_complet-info_comprob_pub_fin-sin-info_portab"
			}, {
				event: "completar_informacion_portabilidad_prospecto_event",
				eventCategory: "prospecto sin renta acreditada",
				eventAction: "boton generar nueva solicitud en comprobante de ingreso de solicitud",
				eventLabel: "p_btn_complet-info_comprob_pub_nueva-sol_portab"
			}, {
				event: "completar_informacion_portabilidad_prospecto_event",
				eventCategory: "prospecto sin renta acreditada",
				eventAction: "boton completar informacion en comprobante de ingreso de solicitud",
				eventLabel: "p_btn_complet-info_comprob_pub_completar_portab"
			}], vm.registrarAccion = registrarAccion, vm.tipoProductos = TIPO_PRODUCTOS_CERRAR.tipoProductosCerrar, vm.descargaComprobanteSolicitudPortabilidad = descargaComprobanteSolicitudPortabilidad, init()
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").controller("comprobanteSolicitudPortabilidadController", comprobanteSolicitudPortabilidadController), comprobanteSolicitudPortabilidadController.$inject = ["$window", "$scope", "$state", "$stateParams", "$filter", "catalogoMensajesFactory", "storeComprobantePortabilidadService", "FileSaver", "solicitudPortabilidadFactory", "TIPO_PRODUCTOS_CERRAR", "URL_PRINCIPAL_BANCO", "redirigirSolicitudService", "tokenPortabilidadService", "preguntasSeguridadService"]
	}(),
	function() {
		function consultarSolicitudPortabilidadController($state, consultarSolicitudService, cotizacionFactory, tokenPortabilidadService, $filter, solicitudPortabilidadFactory, consultarSolicitudFactory, PF_FAMILIA_PRODUCTO, PF_CODIGO_FAMILIA, PF_CODIGO_PRODUCTO, FileSaver, preguntasSeguridadService, redirigirSolicitudService, $window, URL_PRINCIPAL_BANCO, $scope) {
			function continuar() {
				cotizacionFactory.comprarCotizaciones(vm.token).then(function(data) {
					vm.comprarCotizaciones = data, vm.comprarCotizaciones === !0 ? (vm.mostrarExito = !0, vm.mostrarError = vm.cajaActive = !1, vm.ocultarMensajeExitoCotizaciones = !0, vm.flagRentaAcreditada = !0) : (vm.flagRentaAcreditada = !1, vm.mostrarError = !0, vm.mostrarExito = vm.cajaActive = !1)
				})
			}

			function limpiarFormulario() {
				vm.autorizarCotizaciones = !0, vm.mostrarError = vm.mostrarExito = !1
			}

			function getDatosSolicitante() {
				vm.consultarSolicitudes.getDatosSolicitante(vm.token).then(function(response) {
					vm.datosSolicitante = response, vm.datosSolicitante.rentaAcreditada || (vm.flagRentaAcreditada = !1), vm.datosSolicitante.rutCliente = response.rut + response.dv, redirigirSolicitudService.setEsCliente(!0), redirigirSolicitudService.setNombres(vm.datosSolicitante.nombre), redirigirSolicitudService.setApellidoPaterno(vm.datosSolicitante.apellidoPaterno), redirigirSolicitudService.setApellidoMaterno(vm.datosSolicitante.apellidoMaterno), redirigirSolicitudService.setFechaNacimiento(vm.datosSolicitante.fchNacimiento), redirigirSolicitudService.setCorreoElectronico(vm.datosSolicitante.contactabilidad.correo), redirigirSolicitudService.setTelefonoCelular(vm.datosSolicitante.contactabilidad.numeroTelefono), redirigirSolicitudService.setRegionSel(vm.datosSolicitante.contactabilidad.region), redirigirSolicitudService.setCiudadSel(vm.datosSolicitante.contactabilidad.ciudad), redirigirSolicitudService.setComunaSel(vm.datosSolicitante.contactabilidad.comuna), redirigirSolicitudService.setCalle(vm.datosSolicitante.contactabilidad.nombreDireccion), redirigirSolicitudService.setNumeroCasa(vm.datosSolicitante.contactabilidad.numero), redirigirSolicitudService.setNumeroDepartamento(vm.datosSolicitante.contactabilidad.departamento)
				}, function(error) {
					vm.error = error
				})
			}

			function getSolicitudes() {
				vm.consultarSolicitudes.consultarSolicitudes(vm.token).then(function(response) {
					vm.solicitudes = response, vm.ofertaDisponible = $filter("filter")(vm.solicitudes, {
						estadoSolicitud: "Oferta Disponible"
					}), getEstadoSituacion()
				}, function(error) {
					vm.error = error, getEstadoSituacion()
				})
			}

			function reintentar() {
				vm.cajaActive = !0, vm.mostrarExito = vm.mostrarError = !1
			}

			function getEstadoDesdeCotizaciones() {
				consultarSolicitudFactory.obtenerEstadoSituacion(vm.token).then(function(data) {
					vm.mostrarEstadoSituacion = "Enviado" !== data.estado
				})
			}

			function init() {
				vm.token = tokenPortabilidadService.getToken(), getDatosSolicitante(), getSolicitudes()
			}

			function getEstadoSituacion() {
				consultarSolicitudFactory.obtenerEstadoSituacion(vm.token).then(function(data) {
					vm.mostrarEstadoSituacion = "Enviado" !== data.estado, mensajeria()
				})
			}

			function rechazarOferta() {
				vm.rechazaOferta = !0, vm.aceptaOferta = !1, vm.opcionSeleccionada = !1, cargarInformacionOferta()
			}

			function aceptarOferta() {
				vm.aceptaOferta = !0, vm.rechazaOferta = !1, vm.opcionSeleccionada = !0, vm.enviandoOferta = !0, cargarInformacionOferta()
			}

			function verOferta(index) {
				vm.solicitud = !1, vm.detalleOferta = !0, vm.ofertaSeleccionada = vm.solicitudes[index]
			}

			function finalizaAccionOferta() {
				vm.ofertaFinal.jsonRedbanc = vm.request, consultarSolicitudService.confirmaAccionOferta(vm.ofertaFinal).then(function(response) {
					vm.enviandoOferta = !1, response === !0 ? vm.opcionSeleccionada ? comprobante() : (vm.rechazaFinal = !0, vm.aceptaOferta = !1, vm.detalleOferta = !1) : (vm.cargando = !1, vm.error = error)
				}, function(error) {
					vm.cargando = !1, vm.error = error, vm.enviandoOferta = !1
				})
			}

			function armaRequestAccionOferta() {
				vm.request = {
					type: vm.aceptacionOferta.type,
					version: vm.aceptacionOferta.version,
					solicitud: {
						id_solicitud_portabilidad: getIdSolicitudPortabilidad(),
						id_operacion_portabilidad: parseInt(vm.ofertaSeleccionada.idOperacionRedbanc, 10)
					},
					solicita_actualizacion_deuda: !0
				}, finalizaAccionOferta()
			}

			function getIdSolicitudPortabilidad() {
				var idSolicitud = vm.ofertaSeleccionada.idSolicitudPortabilidad.split("-");
				return idSolicitud && idSolicitud.length > 2 ? parseInt(idSolicitud[1], 10) : vm.ofertaSeleccionada.idSolicitudPortabilidad
			}

			function descargarComprobante() {
				for (var detalleProductos = [], i = 0; i < vm.comprobanteProductos.length; i += 2) detalleProductos.push({
					producto1: {
						tipo: vm.comprobanteProductos[i].producto,
						identificador: retornaIdentificador(vm.comprobanteProductos[i].producto, vm.comprobanteProductos[i].detalleProductoCerrar.identificador),
						marca: " ",
						detalle: vm.comprobanteProductos[i].tipoProducto
					},
					producto2: {
						tipo: isNil(vm.comprobanteProductos[i + 1]) ? vm.comprobanteProductos[i + 1].producto : "",
						identificador: isNil(vm.comprobanteProductos[i + 1]) ? retornaIdentificador(vm.comprobanteProductos[i + 1].producto, vm.comprobanteProductos[i + 1].detalleProductoCerrar.identificador) : "",
						marca: " ",
						detalle: isNil(vm.comprobanteProductos[i + 1]) ? vm.comprobanteProductos[i + 1].tipoProducto : ""
					}
				});
				var dataComprobante = {
					nombreCompleto: vm.ofertaSeleccionada.nombresSolicitante + " " + vm.ofertaSeleccionada.apellidoPaternoSolicitante + " " + vm.ofertaSeleccionada.apellidoMaternoSolicitante,
					rut: vm.ofertaSeleccionada.rutSolicitante + "-" + vm.ofertaSeleccionada.dv,
					marca: 1,
					numeroComprobante: "000000"
				};
				dataComprobante.fechaHora = vm.fechaHora, dataComprobante.detalleOperacion = vm.detalleOperacion, dataComprobante.detalleProductos = detalleProductos, consultarSolicitudFactory.descargaComprobante(dataComprobante).then(function(result) {
					var file = new Blob([result], {
						type: "application/pdf"
					});
					FileSaver.saveAs(file, "Comprobante AceptaciÃ³n de Oferta.pdf")
				})
			}

			function retornaIdentificador(producto, identificador) {
				return "TARCRE" === producto ? identificador.substr(identificador.length - 4) : identificador
			}

			function redirigeOtraSolicitud() {
				tokenPortabilidadService.setToken(vm.token), preguntasSeguridadService.setPreguntas(vm.preguntas), $state.go("ingresar-solicitud-portabilidad-publico")
			}

			function desactivaES() {
				vm.cajaActive && (vm.cajaActiveES = !1)
			}

			function desactivaCotizaciones() {
				vm.ocultarMensajeExitoCotizaciones = !1, vm.mostrarError = !1, vm.mostrarEstadoSituacion = !1, vm.cajaActiveES && (vm.cajaActive = !1)
			}

			function registrarAccion(id) {
				var evento = $filter("filter")(vm.dataLayerMensajes, {
					eventLabel: id
				})[0];
				vm.dataLayer.push(evento)
			}

			function descargarOferta() {
				vm.cargando = !1, vm.descargarError = !1, vm.descargarOk = !1, vm.descargandoDocumento = !0, vm.descargar = !vm.descargandoDocumento, consultarSolicitudFactory.descargarOferta(vm.ofertaSeleccionada.idSolicitudPortabilidad, vm.token).then(function(result) {
					if (200 === result.status) {
						var file = new Blob([result.data], {
							type: "application/pdf"
						});
						FileSaver.saveAs(file, "Oferta Portabilidad Financiera.pdf"), vm.descargandoDocumento = !1, vm.descargarOk = !0
					} else vm.descargarError = !0
				})
			}

			function redirigirABancoChile() {
				$window.location.href = URL_PRINCIPAL_BANCO
			}

			function comprobante() {
				vm.detalleOferta = !1, vm.enviandoOferta = !1, vm.aceptaFinal = !0
			}

			function cargarInformacionOferta() {
				var comprobanteOferta = "";
				vm.productoInfo = [], vm.ofertaFinal.productosCerrar = [], vm.ofertaFinal.productosCerrar.detalleProductoCerrar = {}, vm.ofertaFinal.idSolicitud = vm.ofertaSeleccionada.idSolicitudPortabilidad, vm.ofertaFinal.estado = vm.opcionSeleccionada === !0 ? "Oferta Aceptada" : "Oferta Rechazada", vm.ofertaFinal.token = {
					cifrado: vm.token
				}, vm.ofertaFinal.fechaActualizacion = "", vm.ofertaFinal.apellidoMaternoCliente = vm.datosSolicitante.apellidoMaterno, vm.ofertaFinal.apellidoPaternoCliente = vm.datosSolicitante.apellidoPaterno, vm.ofertaFinal.nombresCliente = vm.datosSolicitante.nombre, vm.ofertaFinal.runcliente = vm.datosSolicitante.rutCliente, vm.ofertaFinal.estadoInterno = "", vm.ofertaFinal.fechaActualizacionUsuario = "", vm.ofertaFinal.comentario = "", vm.ofertaFinal.marca = "BCH", vm.ofertaFinal.correoCliente = vm.datosSolicitante.contactabilidad.correo, vm.ofertaFinal.proveedorInicial = vm.ofertaSeleccionada.nombreProveedorOrigen, vm.ofertaFinal.correoEjecutivo = vm.ofertaSeleccionada.aliasEjecutivo, vm.ofertaFinal.rutProveedor = vm.ofertaSeleccionada.rutProveedorOrigen, vm.ofertaFinal.correoEjecutivo.includes("@bancochile.cl") || (vm.ofertaFinal.correoEjecutivo += "@bancochile.cl"), consultarSolicitudService.comprobanteOferta(vm.ofertaSeleccionada.idSolicitudPortabilidad).then(function(response) {
					comprobanteOferta = response[0], vm.comprobanteProductos = comprobanteOferta.productosCerrar, vm.prodCerrarJson = comprobanteOferta.productosCerrar, vm.fechaHora = new Date, vm.detalleOperacion = {
						numeroSolicitud: vm.ofertaSeleccionada.idSolicitudPortabilidad,
						estadoSolicitud: "Aceptada",
						canal: "Web",
						proveedorInicial: vm.ofertaSeleccionada.nombreProveedorOrigen,
						fechaOperacion: vm.fechaHora
					}, vm.tieneRotativos = vm.comprobanteProductos.findIndex(function(item) {
						return "LINCRE" === item.producto || "TARCRE" === item.producto
					}) > -1, angular.forEach(vm.comprobanteProductos, function(valor) {
						vm.productosCerrar = {}, vm.productosCerrar.detalleProductoCerrar = {}, vm.productosCerrar.producto = valor.producto, vm.productosCerrar.tipoProducto = valor.producto, ("LINCRE" === valor.producto || "TARCRE" === valor.producto) && (vm.productosCerrar.detalleProductoCerrar.detalle = valor.detalleProductoCerrar.detalle, vm.productosCerrar.detalleProductoCerrar.identificador = valor.detalleProductoCerrar.identificador, vm.ofertaFinal.productosCerrar.push(vm.productosCerrar))
					}), vm.comprobanteProductos = angular.copy(vm.comprobanteProductos.filter(function(item) {
						return "LINCRE" === item.producto || "TARCRE" === item.producto
					})), vm.aceptaOferta ? armaRequestAccionOferta() : finalizaAccionOferta()
				}, function(error) {
					vm.error = error
				})
			}

			function isNil(item) {
				return void 0 !== item && null !== item
			}

			function mensajeria() {
				angular.forEach(vm.solicitudes, function(sol) {
					return "Ingresada" !== sol.estadoSolicitudRepositorio && "Pendiente" !== sol.estadoSolicitudRepositorio && "Visado Comercial" !== sol.estadoSolicitudRepositorio && "Falta InformaciÃ³n" !== sol.estadoSolicitudRepositorio ? (vm.previoVisadoCompleto = !0, 0) : void 0
				}), vm.solicitudes.length > 0 && !vm.datosSolicitante.rentaAcreditada && !vm.previoVisadoCompleto && vm.mostrarEstadoSituacion && (vm.mensajeCaso2 = !0), vm.solicitudes.forEach(function(v) {
					"Visado Comercial Completo" === v.estadoSolicitudRepositorio && (vm.visadoComercial = !0), ("Ingresada" === v.estadoSolicitudRepositorio || "Pendiente" === v.estadoSolicitudRepositorio || "Visado Comercial" === v.estadoSolicitudRepositorio || "Falta InformaciÃ³n" === v.estadoSolicitudRepositorio || "Visado Comercial Completo" === v.estadoSolicitudRepositorio || "EvaluaciÃ³n Aprobada" === v.estadoSolicitudRepositorio || "Evaluacion Rechazada" === v.estadoSolicitudRepositorio) && (vm.ofertaInformada = !0)
				}), vm.visadoComercial || vm.datosSolicitante.rentaAcreditada && vm.ofertaInformada || vm.ofertaInformada && vm.datosSolicitante.rentaAcreditada && vm.mostrarEstadoSituacion ? vm.mensajeCaso3 = !0 : vm.mensajeCaso3 = !1, angular.forEach(vm.solicitudes, function(sol) {
					return "Visado Ok y aviso de pago proveedor inicial" === sol.estadoSolicitudRepositorio || "Pago devuelto/rechazado" === sol.estadoSolicitudRepositorio || "Pago efectuado" === sol.estadoSolicitudRepositorio || "DocumentaciÃ³n Firmada" === sol.estadoSolicitudRepositorio || "Oferta Aceptada" === sol.estadoSolicitudRepositorio || "Oferta Rechazada" === sol.estadoSolicitudRepositorio || "Oferta Vencida" === sol.estadoSolicitudRepositorio || "Retracto Oferta Banco" === sol.estadoSolicitudRepositorio || "Arrepentimiento Oferta Cliente" === sol.estadoSolicitudRepositorio || "Oferta Informada" === sol.estadoSolicitudRepositorio ? (vm.mensajeCaso3 = !1, 0) : void 0
				})
			}

			function descargaDetalleSolicitud(idSolicitud) {
				function crearNotificacion(idSolicitud, type) {
					"primary" === type ? vm.notificacion.push({
						id: idSolicitud,
						type: type,
						text: "Estamos preparando tu descarga"
					}) : angular.forEach(vm.notificacion, function(item) {
						item.id === idSolicitud && (item.type = type, "warning" === type && (item.text = "Ha ocurrido un error, intÃ©ntalo nuevamente"), "error" === type && (item.text = "No hay archivos asociados a esta solicitud"), "success" === type && (item.text = "Descarga exitosa"))
					})
				}

				function eliminarNotificacion(idSolicitud) {
					var i;
					angular.forEach(vm.notificacion, function(item, index) {
						item.id === idSolicitud && (i = index)
					}), setTimeout(function() {
						$scope.$apply(function() {
							vm.notificacion.splice(i, 1), vm.descargaCompleta = !0
						})
					}, 3e3)
				}
				vm.descargaCompleta && (vm.descargaCompleta = !1, crearNotificacion(idSolicitud, "primary"), consultarSolicitudFactory.descargarSolicitud(idSolicitud, vm.token).then(function(result) {
					if (result.data.byteLength > 0) {
						var file = new Blob([result.data], {
							type: "application/pdf"
						});
						FileSaver.saveAs(file, "solicitud_portabilidad_financiera.pdf"), crearNotificacion(idSolicitud, "success")
					} else crearNotificacion(idSolicitud, "error")
				}, function(error) {
					crearNotificacion(idSolicitud, "warning")
				}), eliminarNotificacion(idSolicitud))
			}
			var vm = this;
			vm.loading = !1, vm.consultarSolicitudes = consultarSolicitudService, vm.solicitudes = {}, vm.error = {}, vm.solicitud = !0, vm.cajaActive = !1, vm.cajaActiveES = !1, vm.mostrarExito = !1, vm.autorizarCotizaciones = !1, vm.datosSolicitante = {}, vm.datosSolicitante.rentaAcreditada = !0, vm.mostrarCompletarInformacion = !1, vm.autorizarCotizaciones = !0, vm.descargarOferta = descargarOferta, vm.ofertaFinal = {}, vm.ofertaDisponible = 0, vm.detalleOferta = !1, vm.rechazaOferta = !1, vm.aceptaOferta = !1, vm.rechazaFinal = !1, vm.aceptaFinal = !1, vm.opcionSeleccionada = !1, vm.cargando = !0, vm.descargar = !0, vm.descargandoDocumento = !1, vm.descargarOk = !1, vm.descargarError = !1, vm.enviandoOferta = !1, vm.tieneRotativos = !1, vm.mostrarEstadoSituacion = !1, vm.mensajeCaso2 = !1, vm.mensajeCaso3 = !1, vm.continuar = continuar, vm.limpiarFormulario = limpiarFormulario, vm.getDatosSolicitante = getDatosSolicitante, vm.reintentar = reintentar, vm.getEstadoDesdeCotizaciones = getEstadoDesdeCotizaciones, vm.verOferta = verOferta, vm.rechazarOferta = rechazarOferta, vm.aceptarOferta = aceptarOferta, vm.desactivaES = desactivaES, vm.desactivaCotizaciones = desactivaCotizaciones, vm.detalleOperacion = {}, vm.comprobanteProductos = [], vm.descargarComprobante = descargarComprobante, vm.redirigeOtraSolicitud = redirigeOtraSolicitud, vm.preguntas = preguntasSeguridadService.getPreguntas(), vm.aceptacionOferta = {
				type: "ao",
				version: 1.168
			}, vm.ofertaSeleccionada = {}, vm.dataLayer = $window.dataLayer = $window.dataLayer || [], vm.dataLayerMensajes = [{
				event: "solicitud_portabilidad_prospecto_event",
				eventCategory: "presentacion oferta",
				eventAction: "boton rechazar en presentacion oferta",
				eventLabel: "p_btn_oferta_present-of_pub_rechaz_portab"
			}, {
				event: "solicitud_portabilidad_prospecto_event",
				eventCategory: "presentacion oferta",
				eventAction: "boton aceptar oferta en presentacion oferta",
				eventLabel: "p_btn_oferta_present-of_pub_aceptar_portab"
			}, {
				event: "solicitud_portabilidad_prospecto_event",
				eventCategory: "comprobante aceptacion",
				eventAction: "link descargar comprobante en comprobante exitoso",
				eventLabel: "p_btn_oferta_present-of_pub_comprob-acep_portab"
			}, {
				event: "solicitud_portabilidad_prospecto_event",
				eventCategory: "comprobante aceptacion",
				eventAction: "boton ir al inicio en comprobante exitoso",
				eventLabel: "p_btn_oferta_present-of_pub_acep-ir-inicio_portab"
			}, {
				event: "solicitud_portabilidad_prospecto_event",
				eventCategory: "comprobante rechazo",
				eventAction: "boton ir al inicio en comprobante de rechazo",
				eventLabel: "p_btn_oferta_present-of_pub_rechaz-ir-inicio_portab"
			}, {
				event: "solicitud_portabilidad_prospecto_event",
				eventCategory: "presentacion oferta",
				eventAction: "boton cerrar sesion",
				eventLabel: "p_btn_cerrar-sesion_pub_porta"
			}], vm.registrarAccion = registrarAccion, vm.FAMILIA_PRODUCTO = PF_FAMILIA_PRODUCTO, vm.CODIGO_FAMILIA = PF_CODIGO_FAMILIA, vm.CODIGO_PRODUCTO = PF_CODIGO_PRODUCTO, vm.redirigirABancoChile = redirigirABancoChile, vm.descargaDetalleSolicitud = descargaDetalleSolicitud, vm.notificacion = [], vm.descargaCompleta = !0, vm.ocultarMensajeExitoCotizaciones = !1, init()
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").controller("consultarSolicitudPortabilidadController", consultarSolicitudPortabilidadController), consultarSolicitudPortabilidadController.inject = ["$state", "consultarSolicitudService", "cotizacionFactory", "tokenPortabilidadService", "$filter", "solicitudPortabilidadFactory", "consultarSolicitudFactory", "PF_FAMILIA_PRODUCTO", "PF_CODIGO_FAMILIA", "PF_CODIGO_PRODUCTO", "FileSaver", "preguntasSeguridadService", "redirigirSolicitudService", "$window", "URL_PRINCIPAL_BANCO", "$scope"]
	}(),
	function() {
		function consultarSolicitudFactory($http, URL_API) {
			function consultarSolicitudes(token) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/solicitud/consultar",
					method: "POST",
					data: {
						cifrado: token
					},
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function getDatosSolicitante(token) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/solicitud/consulta-solicitante",
					method: "POST",
					data: {
						cifrado: token
					},
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function confirmaAccionOferta(ofertaFinal) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/oferta/actualizar-estado",
					method: "POST",
					data: ofertaFinal,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function comprobanteOferta(idOferta) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/oferta/oferta-por-solicitud/" + idOferta,
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function descargaComprobante(data) {
				function resultDescarga(result) {
					return result.data
				}
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/aceptacion-oferta",
					dataType: "json",
					data: data,
					handleError: !1,
					method: "POST",
					responseType: "arraybuffer",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(resultDescarga)
			}

			function ingresaJsonSolicitud(data) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/oferta/enviar-json",
					method: "POST",
					data: data,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function consultarInfoProductos(requestConsultar) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/solicitud/detalle",
					method: "POST",
					data: requestConsultar,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function descargarOferta(idSolicitud, token) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/oferta/descargar/" + idSolicitud,
					dataType: "json",
					handleError: !1,
					method: "POST",
					data: {
						cifrado: token
					},
					responseType: "arraybuffer",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response
				})
			}

			function obtenerEstadoSituacion(token) {
				return $http({
					url: URL_API + "/estado-situacion/obtenerEstado",
					data: {
						cifrado: token
					},
					method: "POST",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function descargarSolicitud(idSolicitud, token) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/descarga-pdf-redbank/" + idSolicitud,
					dataType: "json",
					handleError: !1,
					method: "POST",
					data: {
						cifrado: token
					},
					responseType: "arraybuffer",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response
				})
			}
			return {
				consultarSolicitudes: consultarSolicitudes,
				getDatosSolicitante: getDatosSolicitante,
				confirmaAccionOferta: confirmaAccionOferta,
				comprobanteOferta: comprobanteOferta,
				descargaComprobante: descargaComprobante,
				ingresaJsonSolicitud: ingresaJsonSolicitud,
				consultarInfoProductos: consultarInfoProductos,
				descargarOferta: descargarOferta,
				obtenerEstadoSituacion: obtenerEstadoSituacion,
				descargarSolicitud: descargarSolicitud
			}
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").factory("consultarSolicitudFactory", consultarSolicitudFactory), consultarSolicitudFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function consultarSolicitudService($q, consultarSolicitudFactory) {
			function consultarSolicitudes(token) {
				var deferred = vm.$q.defer();
				return vm.consultarSolicitudFactory.consultarSolicitudes(token).then(function(response) {
					deferred.resolve(response)
				}, function(error) {
					deferred.reject(error)
				}), deferred.promise
			}

			function getDatosSolicitante(token) {
				var deferred = vm.$q.defer();
				return vm.consultarSolicitudFactory.getDatosSolicitante(token).then(function(response) {
					deferred.resolve(response)
				}, function(error) {
					deferred.reject(error)
				}), deferred.promise
			}

			function confirmaAccionOferta(ofertaFinal) {
				var deferred = vm.$q.defer();
				return vm.consultarSolicitudFactory.confirmaAccionOferta(ofertaFinal).then(function(response) {
					deferred.resolve(response)
				}, function(error) {
					deferred.reject(error)
				}), deferred.promise
			}

			function comprobanteOferta(idOferta) {
				var deferred = vm.$q.defer();
				return vm.consultarSolicitudFactory.comprobanteOferta(idOferta).then(function(response) {
					deferred.resolve(response)
				}, function(error) {
					deferred.reject(error)
				}), deferred.promise
			}

			function consultarInfoProductos(requestConsultar) {
				var deferred = vm.$q.defer();
				return vm.consultarSolicitudFactory.consultarInfoProductos(requestConsultar).then(function(response) {
					deferred.resolve(response)
				}, function(error) {
					deferred.reject(error)
				}), deferred.promise
			}
			var vm = this;
			return vm.$q = $q, vm.consultarSolicitudFactory = consultarSolicitudFactory, {
				consultarSolicitudes: consultarSolicitudes,
				getDatosSolicitante: getDatosSolicitante,
				confirmaAccionOferta: confirmaAccionOferta,
				comprobanteOferta: comprobanteOferta,
				consultarInfoProductos: consultarInfoProductos
			}
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").factory("consultarSolicitudService", consultarSolicitudService), consultarSolicitudService.$inject = ["$q", "consultarSolicitudFactory"]
	}(),
	function() {
		function ingresoSolicitudPortabilidadController($state, $scope, $filter, catalogoMensajesFactory, solicitudPortabilidadFactory, tasaIngresoSolicitudPublicoService, iteIngresoSolicitudPublicoService, archivoIngresoSolicitudPublicoService, obtieneLocalidadesService, storeComprobantePortabilidadService, preguntasSeguridadService, tokenPortabilidadService, datepickerConfig, redirigirSolicitudService, consultarSolicitudService, $window) {
			function formatRUTCliente(rut) {
				if (null === rut || void 0 === rut || "" === rut);
				else {
					var sRut, sRutFormateado = "",
						strRut = rut.replace(/^0+/, "");
					strRut = strRut.replace(/[-|\.]/g, ""), sRut = strRut;
					var sDV = sRut.charAt(sRut.length - 1);
					for (sRut = sRut.substring(0, sRut.length - 1); sRut.length > 3;) sRutFormateado = "." + sRut.substr(sRut.length - 3) + sRutFormateado, sRut = sRut.substring(0, sRut.length - 3);
					sRutFormateado = sRut + sRutFormateado, sRutFormateado += "-" + sDV, vm.rutFormatoCliente = sRutFormateado
				}
			}

			function agregaPregunta(pregunta, index) {
				vm.respuestas[index].pregunta = pregunta
			}

			function datepicker($event) {
				$event.preventDefault(), $event.stopPropagation(), vm.mostrarDatepickerFechaNacimiento = !vm.mostrarDatepickerFechaNacimiento
			}

			function validaPreguntas() {
				vm.requestRespuestas.eqToken = vm.responsePreguntas.eqToken, vm.requestRespuestas.rut = vm.responsePreguntas.rut, vm.requestRespuestas.token = vm.responsePreguntas.token, vm.respuestasSeguridad = [], angular.forEach(vm.respuestas, function(respuesta, i) {
					vm.respuestasSeguridad.push({
						idPregunta: respuesta.pregunta.nroPregunta,
						idRespuesta: respuesta.opcion
					})
				}), vm.preguntasEnviadas = !0, vm.requestRespuestas.respuestasSeguridad = vm.respuestasSeguridad, solicitudPortabilidadFactory.validarPreguntas(vm.requestRespuestas).then(function(data) {
					vm.preguntasEnviadas = !1, data.exito && "ingresar-solicitud-portabilidad-publico" == vm.responsePreguntas.url ? getDatosSolicitante(vm.requestRespuestas.token) : data.exito && "consultar-solicitud-portabilidad-publico" == vm.responsePreguntas.url ? (tokenPortabilidadService.setToken(vm.responsePreguntas.token), vm.token = vm.responsePreguntas.token, getDatosSolicitanteConsultarSolicitud(vm.requestRespuestas.token)) : (vm.mostrarErrorPreguntas = !0, vm.mensajePreguntas = "Error al validar preguntas de seguridad")
				}, function(error) {
					vm.preguntasEnviadas = !1, vm.mostrarErrorPreguntas = !0, vm.mensajePreguntas = error.errorMessage
				})
			}

			function getDatosSolicitante(token) {
				consultarSolicitudService.getDatosSolicitante(token).then(function(response) {
					vm.datosSolicitante = response, null != vm.datosSolicitante && "" !== vm.datosSolicitante ? "" === vm.datosSolicitante.contactabilidad.region || null === vm.datosSolicitante.contactabilidad.region || void 0 === vm.datosSolicitante.contactabilidad.region ? continuarPasoUno() : (vm.nombres = vm.datosSolicitante.nombre, vm.apellidoPaterno = vm.datosSolicitante.apellidoPaterno, vm.apellidoMaterno = vm.datosSolicitante.apellidoMaterno, vm.fechaNacimiento = vm.datosSolicitante.fchNacimiento, vm.correoElectronico = vm.datosSolicitante.contactabilidad.correo, vm.telefonoCelular = vm.datosSolicitante.contactabilidad.numeroTelefono, vm.solicitud.regionSel = vm.datosSolicitante.contactabilidad.region ? vm.datosSolicitante.contactabilidad.region : "", vm.solicitud.ciudadSel = vm.datosSolicitante.contactabilidad.ciudad ? vm.datosSolicitante.contactabilidad.ciudad : "", vm.solicitud.comunaSel = vm.datosSolicitante.contactabilidad.comuna ? vm.datosSolicitante.contactabilidad.comuna : "", vm.calle = vm.datosSolicitante.contactabilidad.nombreDireccion, vm.homeNumber = vm.datosSolicitante.contactabilidad.numero, vm.numeroDepartamento = vm.datosSolicitante.contactabilidad.departamento, mapeaDatosSolicitante(), vm.direccionIngresadaPorUsuario = !0, vm.pasoUno = !1, vm.pasoDos = !1, vm.pasoTres = !0) : continuarPasoUno()
				}, function(error) {
					vm.error = error
				})
			}

			function getDatosSolicitanteConsultarSolicitud(token) {
				consultarSolicitudService.getDatosSolicitante(token).then(function(response) {
					vm.datosSolicitante = response, null != vm.datosSolicitante && "" !== vm.datosSolicitante && void 0 !== vm.datosSolicitante ? $state.go(vm.responsePreguntas.url) : continuarPasoUno()
				}, function(error) {
					vm.error = error
				})
			}

			function continuarPasoUno() {
				vm.pasoUno = !1, vm.pasoDos = !0, vm.pasoTres = !1, document.body.scrollTop = 0, document.documentElement.scrollTop = 0
			}

			function continuarPasoDos() {
				vm.direccionIngresadaPorUsuario = !1, mapeaDatosSolicitante(), "" === vm.numeroCasa || null == vm.numeroCasa || void 0 === vm.numeroCasa ? vm.homeNumber = vm.numeroDepartamento : vm.homeNumber = vm.numeroCasa, vm.dataCliente.$invalid ? angular.forEach(vm.dataCliente.$error, function(field) {
					angular.forEach(field, function(errorField) {
						errorField.$setTouched()
					})
				}) : (getAllProveedores(), vm.pasoUno = !1, vm.pasoDos = !1, vm.pasoTres = !0), document.body.scrollTop = 0, document.documentElement.scrollTop = 0
			}

			function mapeaDatosSolicitante() {
				redirigirSolicitudService.setNombres(vm.nombres), redirigirSolicitudService.setApellidoPaterno(vm.apellidoPaterno), redirigirSolicitudService.setApellidoMaterno(vm.apellidoMaterno), redirigirSolicitudService.setFechaNacimiento(vm.fechaNacimiento), redirigirSolicitudService.setCorreoElectronico(vm.correoElectronico), redirigirSolicitudService.setTelefonoCelular(vm.telefonoCelular), void 0 === vm.solicitud.regionSel.regionHomologada && void 0 === vm.solicitud.ciudadSel.descripcion && void 0 === vm.solicitud.comunaSel.descripcion ? (redirigirSolicitudService.setRegionSel(vm.solicitud.regionSel), redirigirSolicitudService.setCiudadSel(vm.solicitud.ciudadSel), redirigirSolicitudService.setComunaSel(vm.solicitud.comunaSel)) : (redirigirSolicitudService.setRegionSel(vm.solicitud.regionSel.regionHomologada), redirigirSolicitudService.setCiudadSel(vm.solicitud.ciudadSel.descripcion), redirigirSolicitudService.setComunaSel(vm.solicitud.comunaSel.descripcion)), redirigirSolicitudService.setCalle(vm.calle), redirigirSolicitudService.setNumeroCasa(vm.numeroCasa), redirigirSolicitudService.setNumeroDepartamento(vm.numeroDepartamento)
			}

			function getProveedores(tipoProveedor) {
				vm.deshabilitapasodos = !0, vm.portabilidadIngresadaConEseProveedor = !1, vm.solicitud.sitioWeb = "", vm.proveedor = "", vm.proveedores = nombreProveedorFilter(tipoProveedor)
			}

			function getAllProveedores() {
				solicitudPortabilidadFactory.getProveedores().then(function(data) {
					vm.tiposProveedor = tipoProveedorFilter(data), vm.listadoProveedores = data
				})
			}

			function nombreProveedorFilter(tipoProveedor) {
				var output = [];
				return angular.forEach(vm.listadoProveedores, function(e) {
					angular.lowercase(e.tipo) === angular.lowercase(tipoProveedor) && output.push(e)
				}), output.sort()
			}

			function tipoProveedorFilter(collection) {
				var output = [];
				return output.push("Banco"), angular.forEach(collection, function(e) {
					output.includes(e.tipo) || "banco" === e.tipo || output.push(e.tipo)
				}), output.sort()
			}

			function getMensajes() {
				catalogoMensajesFactory.obtener(501693).then(function(msj) {
					vm.rutInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501694).then(function(msj) {
					vm.fechaNacimientoInvalida = msj.texto
				}), catalogoMensajesFactory.obtener(501695, "campo").then(function(msj) {
					vm.direccionInvalida = msj.texto
				}), catalogoMensajesFactory.obtener(501696).then(function(msj) {
					vm.autorizacionBancoChile = msj.texto
				}), catalogoMensajesFactory.obtener(501697).then(function(msj) {
					vm.perfilIncompleto = msj.texto
				}), catalogoMensajesFactory.obtener(501698).then(function(msj) {
					vm.proveedorInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501699).then(function(msj) {
					vm.formatoInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501700).then(function(msj) {
					vm.productosInsuficientes = msj.texto
				}), catalogoMensajesFactory.obtener(501701).then(function(msj) {
					vm.sinRentaAcreditada = msj.texto
				}), catalogoMensajesFactory.obtener(501702).then(function(msj) {
					vm.autorizacionExitosa = msj.texto
				}), catalogoMensajesFactory.obtener(501703).then(function(msj) {
					vm.advertenciaUnProveedor = msj.texto
				}), catalogoMensajesFactory.obtener(501705).then(function(msj) {
					vm.mandatoSolicitudLiquidaciones = msj.texto
				}), catalogoMensajesFactory.obtener(501706).then(function(msj) {
					vm.compromisoNoEndeudamiento = msj.texto
				}), catalogoMensajesFactory.obtener(501707).then(function(msj) {
					vm.solicitudRechazada = msj.texto
				}), catalogoMensajesFactory.obtener(501708, "nÃºmero folio solicitud").then(function(msj) {
					vm.solicitudRecibidaSinRenta = msj.texto
				}), catalogoMensajesFactory.obtener(501709, "nÃºmero folio solicitud").then(function(msj) {
					vm.solicitudRecibidaConRenta = msj.texto
				})
			}

			function obtieneCiudades(id) {
				void 0 === id ? (vm.ciudades = [], vm.solicitud.ciudadSel = "", vm.comunas = []) : (vm.solicitud.ciudadSel = "", vm.solicitud.comunaSel = "", vm.dataCliente.ciudadF.$setUntouched(), vm.dataCliente.comunaF.$setUntouched(), vm.comunas = [], vm.obtieneLocalidades.obtieneCiudades(id).then(function(data) {
					vm.ciudades = data
				}, function(error) {
					vm.error = error
				}))
			}

			function obtieneComunas(id) {
				void 0 === id ? (vm.comunas = [], vm.solicitud.comunaSel = "") : (vm.solicitud.comunaSel = "", vm.dataCliente.comunaF.$setUntouched(), vm.obtieneLocalidades.obtieneComunas(id).then(function(data) {
					vm.comunas = data
				}, function(error) {
					vm.error = error
				}))
			}

			function formatosArchivosPermitidos() {
				vm.archivoIngresoSolicitudService.formatosArchivosPermitidos(), vm.tasaIngresoSolicitudService.formatosArchivosPermitidos(), vm.iteIngresoSolicitudService.formatosArchivosPermitidos()
			}

			function init() {
				getAllProveedores(), getMensajes(), redirigirSolicitudService.getEsCliente() && (vm.solicitud.regionSel = redirigirSolicitudService.getRegionSel(), "" === vm.solicitud.regionSel || void 0 === vm.solicitud.regionSel || null === vm.solicitud.regionSel ? continuarPasoUno() : (vm.direccionIngresadaPorUsuario = !0, vm.responsePreguntas = preguntasSeguridadService.getPreguntas(), vm.nombres = redirigirSolicitudService.getNombres(), vm.apellidoPaterno = redirigirSolicitudService.getApellidoPaterno(), vm.apellidoMaterno = redirigirSolicitudService.getApellidoMaterno(), vm.fechaNacimiento = redirigirSolicitudService.getFechaNacimiento(), vm.correoElectronico = redirigirSolicitudService.getCorreoElectronico(), vm.telefonoCelular = redirigirSolicitudService.getTelefonoCelular(), vm.solicitud.ciudadSel = redirigirSolicitudService.getCiudadSel(), vm.solicitud.comunaSel = redirigirSolicitudService.getComunaSel(), null === vm.solicitud.comunaSel && (vm.solicitud.comunaSel = ""), null === vm.solicitud.regionSel && (vm.solicitud.regionSel = ""), null === vm.solicitud.ciudadSel && (vm.solicitud.ciudadSel = ""), vm.calle = redirigirSolicitudService.getCalle(), vm.homeNumber = redirigirSolicitudService.getNumeroCasa(), vm.numeroDepartamento = redirigirSolicitudService.getNumeroDepartamento(), vm.pasoUno = !1, vm.pasoDos = !1, vm.pasoTres = !0)), formatRUTCliente(vm.responsePreguntas.rut), vm.archivoIngresoSolicitudService.clean(), vm.archivoIngresoSolicitudService.configUpload(!1), vm.archivoIngresoSolicitudService.configContentUpload(), vm.tasaIngresoSolicitudService.clean(), vm.tasaIngresoSolicitudService.configUpload(!1), vm.tasaIngresoSolicitudService.configContentUpload(), vm.iteIngresoSolicitudService.clean(), vm.iteIngresoSolicitudService.configUpload(!1), vm.iteIngresoSolicitudService.configContentUpload(), formatosArchivosPermitidos(), solicitudPortabilidadFactory.getTipoProductoCerrar().then(function(data) {
					data.forEach(function(v) {
						"Creditos" === v.familia && (v.descripcionFamilia = "CrÃ©ditos"), "Lineas" === v.familia && (v.descripcionFamilia = "LÃ­neas"), "Cuenta" === v.familia && (v.descripcionFamilia = "Cuentas"), "Tarjetas" === v.familia && (v.descripcionFamilia = "Tarjetas"), "Otros" === v.familia && (v.descripcionFamilia = "Otros"), "Tarjetas y LÃ­neas de CrÃ©dito" === v.familia && (v.descripcionFamilia = v.familia), "Todos los Productos" === v.familia && (v.descripcionFamilia = v.familia), v.descripcion = capitalizar(v.descripcion), v.descripcion.includes("Credito") && (v.descripcion = v.descripcion.replace("Credito", "CrÃ©dito")), "Automovil" == v.descripcion && (v.descripcion = "Automotriz"), v.descripcion.includes("Lineas") && (v.descripcion = "LÃ­nea de CrÃ©dito"), v.descripcion.includes("Tarjetas") && (v.descripcion = "Tarjeta de CrÃ©dito"), v.descripcion.includes("Cuenta") || v.descripcion.includes("LÃ­nea") || v.descripcion.includes("Todas") || v.descripcion.includes("Todos") || v.descripcion.includes("Tarjeta") || v.descripcion.includes("Otros Productos") || (v.descripcion = "CrÃ©dito " + v.descripcion, v.descripcion.includes("Consumo") && (v.descripcion = "CrÃ©dito de Consumo"), v.codigoFamilia.includes("otros_productos") && (v.descripcion = "Otros Productos"), v.descripcion.includes("CrÃ©dito Otros") && (v.descripcion = "Otros CrÃ©ditos"))
					}), vm.todosLosCreditos = data.pop(), vm.todosLosProductosData = data.pop(), data.push(vm.todosLosCreditos), data.push(vm.todosLosProductosData), data.sort(compare), data = eliminaryOrdenarData(data), vm.tipoProductosCerrar = data, vm.categoriaProductos = tipoProductoUnicoFilter(data, "familia")
				}), solicitudPortabilidadFactory.getTipoProductoContratar().then(function(data) {
					vm.productosContratarSeleccion = data, vm.productosContratar = new Array(vm.productosContratarSeleccion.length), vm.productosContratarSeleccion.forEach(function(v, i) {
						vm.productosContratar[i] = {
							moneda: "CLP"
						}, "CREHIP" === v.codigoProducto && (vm.productosContratar[i] = {
							moneda: "UF"
						}), v.codigoProducto.includes("CTA") ? vm.productosContratar[i].pagaDeuda = null : "CRE" == v.codigoProducto.substr(0, 3) ? vm.productosContratar[i].pagaDeuda = !0 : vm.productosContratar[i].pagaDeuda = !1
					})
				}), vm.obtieneLocalidades.obtieneRegiones().then(function(response) {
					vm.regiones = response
				}, function(error) {
					vm.error = error
				})
			}

			function validateStep1() {
				cleanForm(), vm.pForm.sitioWeb.$valid ? vm.deshabilitapasodos = !1 : vm.deshabilitapasodos = !0
			}

			function validateStep2(codigoProducto) {
				vm.productoSelected = !0, vm.productoCerrar.compromisoNoEndeudar = "No", vm.productoCerrar.numeroCuenta = "", vm.productoCerrar.digitoCuenta = "", vm.productoCerrar.marca = "", vm.productoCerrar.ultimosDigitos = "", vm.moneda = "CLP", vm.monedasV2 = ["CLP", "USD"], vm.productoCerrar.cupoAutorizado = "", vm.productoCerrar.compromisoCupoUtilizar = "", vm.productoCerrar.nombreProductoOtros = "", vm.pForm.$setPristine(), vm.pForm.$setUntouched(), null !== codigoProducto && "CREOTR" === codigoProducto && (vm.productoSelected = !1)
			}

			function productosPorTipo() {
				vm.errorMensajeRequiredUSD = !1, vm.errorMensajeRequiredCLP = !1, vm.productoSelected2 = !0, vm.productoSelected3 = !0, vm.productoSelected = !1, vm.productosCerrar = $filter("filter")(vm.tipoProductosCerrar, {
					familia: vm.tipoProductoCerrar.familia
				}), vm.productoCerrar = "";
				for (var i in vm.productosCerrar) "Tarjetas y LÃ­neas de CrÃ©dito" === vm.productosCerrar[i].familia && vm.productosCerrar.splice(1, 1);
				vm.productosCerrarTodos = vm.productosCerrar.pop(), vm.productosCerrar.unshift(vm.productosCerrarTodos)
			}

			function validarProveedor(proveedor) {
				vm.solicitud.sitioWeb = "", solicitudPortabilidadFactory.validarProveedor(proveedor.descripcion, vm.responsePreguntas.token).then(function(data) {
					data !== !0 ? (vm.showProveedorInvalido = !0, vm.mensajeError = vm.proveedorInvalido, vm.deshabilitapasodos = !0, vm.portabilidadIngresadaConEseProveedor = !0) : (vm.showProveedorInvalido = !1, vm.solicitud.nombreProveedor = proveedor.descripcion, vm.solicitud.sitioWeb = proveedor.urlBanco, vm.deshabilitapasodos = !1, vm.portabilidadIngresadaConEseProveedor = !1)
				})
			}

			function agregarProductoCerrar() {
				validarCupoAutorizado(), vm.pForm.$valid && !vm.errorCompromisoUtilizar ? (vm.productoSelected = !1, vm.productoCerrarSolicitud = {}, vm.productoCerrarSolicitud.producto = vm.productoCerrar.descripcion, vm.productoCerrarSolicitud.tipoProducto = vm.productoCerrar.codigoProducto, vm.productoCerrarSolicitud.familia = vm.tipoProductoCerrar.familia, vm.productoCerrarSolicitud.detalleProductoCerrar = {}, vm.productoCerrarSolicitud.detalleProductoCerrar.cupoAutorizado = vm.productoCerrar.cupoAutorizado, vm.productoCerrarSolicitud.detalleProductoCerrar.marca = vm.productoCerrar.marca, vm.productoCerrarSolicitud.detalleProductoCerrar.nombreProductoOtros = vm.productoCerrar.nombreProductoOtros, vm.productoCerrarSolicitud.detalleProductoCerrar.moneda = vm.moneda, vm.productoCerrarSolicitud.detalleProductoCerrar.cupoUtilizado = vm.productoCerrar.cupoUtilizado, vm.productoCerrarSolicitud.detalleProductoCerrar.numeroCuenta = vm.productoCerrar.numeroCuenta, vm.productoCerrarSolicitud.detalleProductoCerrar.digitoCuenta = vm.productoCerrar.digitoCuenta, vm.productoCerrarSolicitud.detalleProductoCerrar.ultimosDigitos = vm.productoCerrar.ultimosDigitos, vm.productoCerrarSolicitud.detalleProductoCerrar.compromisoCupoUtilizar = vm.productoCerrar.compromisoCupoUtilizar, vm.productoCerrarSolicitud.detalleProductoCerrar.compromisoNoEndeudar = vm.productoCerrar.compromisoNoEndeudar, vm.productoCerrarSolicitud.detalleProductoCerrar.identificador = obtenerIdentificador(vm.productoCerrarSolicitud.tipoProducto), vm.productosCerrarSolicitud.push(vm.productoCerrarSolicitud), validarTodosLosProductos(vm.productoCerrarSolicitud.producto, vm.productoCerrarSolicitud.familia), vm.cleanProducto()) : angular.forEach(vm.pForm.$error, function(field) {
					angular.forEach(field, function(errorField) {
						errorField.$setTouched()
					})
				})
			}

			function validarCupoAutorizado() {
				"Si" !== vm.productoCerrar.compromisoNoEndeudar || vm.productoCerrar.compromisoCupoUtilizar && "" !== vm.productoCerrar.compromisoCupoUtilizar ? (vm.errorCompromisoUtilizar = !1, void 0 !== vm.pForm.cupoUtilizar && (vm.pForm.cupoUtilizar.$error.required = !1), "LINCRE" === vm.productoCerrar.codigoProducto && (vm.pForm.numeroCuenta.$valid && vm.pForm.cupoAutorizado.$valid ? vm.productoSelected = !0 : vm.productoSelected = !1), "TARCRE" === vm.productoCerrar.codigoProducto && (vm.pForm.digitos.$valid && vm.pForm.marca.$valid && vm.pForm.cupoAutorizado.$valid ? vm.productoSelected = !0 : vm.productoSelected = !1)) : (vm.errorCompromisoUtilizar = !0, vm.pForm.cupoUtilizar.$error.required = !0, vm.productoSelected = !1)
			}

			function obtenerIdentificador(tipoProducto) {
				return "LINCRE" === tipoProducto || "OTRO" === tipoProducto ? vm.productoCerrar.numeroCuenta : "TARCRE" === tipoProducto ? vm.productoCerrar.ultimosDigitos : vm.productoCerrar.digitoCuenta;
			}

			function eliminarProducto(index, familia, producto) {
				vm.productosCerrarSolicitud.splice(index, 1), 0 === vm.productosCerrarSolicitud.length && (vm.deshabilitapasotres = !0, vm.deshabilitapasocuatro = !0, vm.deshabilitapasocinco = !0), "Todos" === producto && "Todos los Productos" === familia && (vm.productosTodos = !1), "Todas" === producto && "Cuenta" === familia && (vm.categoriaProductos.push(vm.lasCuentas), vm.lasCuentas = []), "Todos" === producto && "Creditos" === familia && (vm.categoriaProductos.push(vm.losCreditos), vm.losCreditos = []), "Todas" === producto && "Tarjetas y LÃ­neas de CrÃ©dito" === familia && (vm.categoriaProductos.push(vm.lincre), vm.categoriaProductos.push(vm.tarcre), vm.categoriaProductos.push(vm.linTarCre), vm.linTarCre = [], vm.lincre = [], vm.tarcre = []), vm.categoriaProductos.sort(compare), vm.categoriaProductos = eliminaryOrdenarData(vm.categoriaProductos)
			}

			function limpiaComboProdContratar(index) {
				vm.productosContratar[index].monto = ""
			}

			function limpiaComboProdContratarCreditos(index) {
				vm.productosContratar[index].monto = "", vm.productosContratar[index].meses = ""
			}

			function cleanForm() {
				vm.pForm.$setPristine(), vm.pForm.$setUntouched(), vm.productoCerrar = "", vm.tipoProductoCerrar = "", vm.productoSelected = !1
			}

			function agregaProductoContratar(i, producto, check) {
				vm.errorProductoContratar = !1, vm.productosContratar[i].producto = producto.codigoProducto, check === !1 && (("LINCRE" == producto.codigoProducto || "TARCRE" == producto.codigoProducto) && (vm.productosContratar[i].pagaDeuda = !1, vm.productosContratar[i].moneda = "CLP", vm.productosContratar[i].monto = ""), "CRE" == producto.codigoProducto.substr(0, 3) && (vm.productosContratar[i].pagaDeuda = !0, vm.productosContratar[i].moneda = "CLP", vm.productosContratar[i].monto = "", vm.productosContratar[i].meses = ""), "CREHIP" === producto.codigoProducto && (vm.productosContratar[i].pagaDeuda = !0, vm.productosContratar[i].moneda = "UF", vm.productosContratar[i].monto = "", vm.productosContratar[i].meses = ""), vm.botonCheckProductosContratar && checkProductosContratar())
			}

			function checkProductosContratar() {
				vm.botonCheckProductosContratar = !0;
				var productosContratarFilter = $filter("filter")(vm.productosContratar, {
					check: !0
				});
				0 === productosContratarFilter.length ? (vm.errorProductoContratar = !0, vm.mensajeError = vm.productosInsuficientes, vm.deshabilitapasocinco = !0, vm.deshabilitapasocuatro = !0, vm.firmarHabilitado = !1) : (vm.deshabilitapasocuatro = !1, vm.deshabilitapasocinco = !1, vm.firmarHabilitado = !0)
			}

			function checkProductosCerrar() {
				0 !== vm.productosCerrarSolicitud.length ? vm.deshabilitapasotres = !1 : vm.deshabilitapasotres = !0
			}

			function tipoProductoUnicoFilter(collection, keyname) {
				var output = [],
					keys = [];
				return angular.forEach(collection, function(item) {
					var key = item[keyname]; - 1 === keys.indexOf(key) && (keys.push(key), output.push(item))
				}), output
			}

			function deleteItem(file, index) {
				0 === vm.adjuntos.length && (vm.dndFileUploadService.setUseUpload(!1), vm.dndFileUploadService.setUseContent(!1)), vm.dndFileUploadService.deleteItem(file), vm.adjuntos = vm.dndFileUploadService.getSelected()
			}

			function construirSolicitud() {
				vm.ingresoSolicitud = {}, vm.ingresoSolicitud.portarTodoCuentas = !1, vm.ingresoSolicitud.portarTodoCreditoRotativos = !1, vm.ingresoSolicitud.portarTodoCreditos = !1, vm.ingresoSolicitud.portarTodoProducto = !1, vm.ingresoSolicitud.portarOtrosProductos = !1, vm.solicitud.productosCerrados = vm.productosCerrarSolicitud;
				var productosContratarFiltered = [];
				vm.productosContratar.forEach(function(item) {
					if (item.check) {
						var objectFiltered = {};
						Object.assign(objectFiltered, item), delete objectFiltered.check, objectFiltered.producto.includes("CTA") && (objectFiltered.pagaDeuda = null), productosContratarFiltered.push(objectFiltered)
					}
				}), vm.solicitud.productosContratar = productosContratarFiltered;
				for (var productosCerrados = [], y = 0; y < vm.solicitud.productosCerrados.length; y++)
					if ("Todas" !== vm.productosCerrarSolicitud[y].producto && "Todos" !== vm.productosCerrarSolicitud[y].producto) vm.prod = {}, vm.prod.producto = vm.solicitud.productosCerrados[y].tipoProducto, vm.prod.tipoProducto = vm.solicitud.productosCerrados[y].familia, vm.prod.detalleProductoCerrar = {}, vm.prod.detalleProductoCerrar.detalle = vm.solicitud.productosCerrados[y].producto, vm.prod.detalleProductoCerrar.cupoAutorizado = isNaN(vm.solicitud.productosCerrados[y].detalleProductoCerrar.cupoAutorizado) ? 0 : vm.solicitud.productosCerrados[y].detalleProductoCerrar.cupoAutorizado, vm.prod.detalleProductoCerrar.marca = vm.solicitud.productosCerrados[y].detalleProductoCerrar.marca, vm.prod.detalleProductoCerrar.moneda = vm.solicitud.productosCerrados[y].detalleProductoCerrar.moneda, vm.prod.detalleProductoCerrar.compromisoNoEndeudarse = "Si" === vm.productosCerrarSolicitud[y].detalleProductoCerrar.compromisoNoEndeudar ? !0 : !1, vm.prod.detalleProductoCerrar.identificador = vm.productosCerrarSolicitud[y].detalleProductoCerrar.identificador, vm.prod.detalleProductoCerrar.montoCompromisoUtilizar = isNaN(vm.productosCerrarSolicitud[y].detalleProductoCerrar.compromisoCupoUtilizar) ? 0 : vm.productosCerrarSolicitud[y].detalleProductoCerrar.compromisoCupoUtilizar, productosCerrados.push(vm.prod);
					else switch (vm.productosCerrarSolicitud[y].familia) {
						case "Cuenta":
							vm.ingresoSolicitud.portarTodoCuentas = !0;
							break;
						case "Tarjetas y LÃ­neas de CrÃ©dito":
							vm.ingresoSolicitud.portarTodoCreditoRotativos = !0;
							break;
						case "Creditos":
							vm.ingresoSolicitud.portarTodoCreditos = !0;
							break;
						case "Todos los Productos":
							vm.ingresoSolicitud.portarTodoProducto = !0
					}
					var contactabilidad = {};
				void 0 === vm.solicitud.ciudadSel.descripcion ? contactabilidad.ciudad = vm.solicitud.ciudadSel : contactabilidad.ciudad = vm.solicitud.ciudadSel.descripcion, contactabilidad.codigoArea = "9", contactabilidad.codigoPais = "56", void 0 === vm.solicitud.comunaSel.descripcion ? contactabilidad.comuna = vm.solicitud.comunaSel : contactabilidad.comuna = vm.solicitud.comunaSel.descripcion, contactabilidad.correo = vm.correoElectronico, contactabilidad.departamento = vm.numeroDepartamento, contactabilidad.nombreDireccion = vm.calle, null === vm.numeroCasa || void 0 === vm.numeroCasa || "" === vm.numeroCasa ? contactabilidad.numero = vm.homeNumber : contactabilidad.numero = vm.numeroCasa, contactabilidad.numeroTelefono = vm.telefonoCelular, void 0 === vm.solicitud.regionSel.descripcion ? contactabilidad.region = vm.solicitud.regionSel : contactabilidad.region = vm.solicitud.regionSel.descripcion, contactabilidad.tipoCorreo = "PARTICULAR", contactabilidad.tipoDireccion = "PARTICULAR", contactabilidad.tipoTelefono = "PARTICULAR", vm.ingresoSolicitud.estaPagoImpuestoEstampillas = !1, vm.ingresoSolicitud.estaCertificadoLiquidacion = !1;
				var files = vm.dndFileUploadService.allSelected,
					formdata = new FormData,
					fileDisposition = [];
				vm.detalleAdjuntos = {};
				for (var i = 0; i < files.length; i++) vm.fileprefix = files[i].id.split("-")[0], fileDisposition.push(vm.fileprefix), "cer" == vm.fileprefix ? vm.ingresoSolicitud.estaCertificadoLiquidacion = !0 : "ite" == vm.fileprefix && (vm.ingresoSolicitud.estaPagoImpuestoEstampillas = !0), formdata.append("files", files[i]);
				return vm.detalleAdjuntos.tipoDocumento = fileDisposition, vm.ingresoSolicitud.rut = vm.responsePreguntas.rut, vm.ingresoSolicitud.apellidoMaterno = vm.apellidoMaterno, vm.ingresoSolicitud.apellidoPaterno = vm.apellidoPaterno, vm.ingresoSolicitud.nombreCompleto = vm.nombres, angular.isString(vm.fechaNacimiento) ? vm.ingresoSolicitud.fechaNacimiento = vm.fechaNacimiento : vm.ingresoSolicitud.fechaNacimiento = vm.fechaNacimiento.getFullYear() + "-" + (vm.fechaNacimiento.getMonth() + 1) + "-" + vm.fechaNacimiento.getDate(), vm.ingresoSolicitud.contactabilidad = contactabilidad, vm.ingresoSolicitud.tipoProveedor = obtenerTipoProveedor(vm.solicitud.tipoProveedor), vm.ingresoSolicitud.nombreProveedor = vm.solicitud.nombreProveedor, vm.ingresoSolicitud.sitioWeb = vm.solicitud.sitioWeb.replace("https://", ""), vm.ingresoSolicitud.productosCerrados = productosCerrados, vm.ingresoSolicitud.productosContratar = vm.solicitud.productosContratar, vm.ingresoSolicitud.fileDisposition = fileDisposition, vm.ingresoSolicitud.rutProveedorOrigen = vm.rutBcoSinFormato, vm.ingresoSolicitud.token = {}, vm.ingresoSolicitud.token.cifrado = vm.responsePreguntas.token, vm.existeUnProducto = !0, formdata
			}

			function obtenerTipoProveedor(tipoProveedor) {
				return "Banco" === tipoProveedor ? "banco" : tipoProveedor
			}

			function ingresarSolicitud() {
				vm.loadingEnvio = !0;
				var formdata = construirSolicitud();
				if (vm.existeUnProducto) {
					var formtoken = {};
					solicitudPortabilidadFactory.ingresarSolicitud(vm.ingresoSolicitud).then(function(data) {
						vm.loadingEnvio = !1, vm.detalleAdjuntos.solicitud = data.solicitud, vm.detalleAdjuntos.idSolicitud = data.idSolicitud, vm.ingresoSolicitud.resultadoSolicitud = data, vm.ingresoSolicitud.certificados = vm.certificados, vm.ingresoSolicitud.ite = vm.ite, vm.ingresoSolicitud.tasa = vm.tasa, formtoken.cifrado = vm.solicitud.token, formdata.append("detalleArchivos", JSON.stringify(vm.detalleAdjuntos)), storeComprobantePortabilidadService.setComprobante(vm.ingresoSolicitud), solicitudPortabilidadFactory.ingresarArchivos(formdata), tokenPortabilidadService.setToken(vm.ingresoSolicitud.token.cifrado), $state.go("comprobante-solicitud-portabilidad-publico")
					}, function() {
						vm.loadingEnvio = !1
					})
				}
			}

			function validaFono(input) {
				8 === input.$viewValue.replace(/\D/g, "").length ? vm.telefonoCelular = "+569" + input.$viewValue : input.$viewValue.length > 8 && input.$viewValue.length < 12 && (vm.telefonoCelular = input.$viewValue.substr(4, 10))
			}

			function esNumeroValido(valor) {
				vm.telefonoCelular = valor.$viewValue.replace(/\D/g, "")
			}

			function capitalizar(input) {
				return input ? input.replace(/([^\W_]+[^\s-]*) */g, function(txt) {
					return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()
				}) : ""
			}

			function registrarAccion(id) {
				var evento = $filter("filter")(vm.dataLayerMensajes, {
					eventLabel: id
				})[0];
				vm.dataLayer.push(evento)
			}

			function validarTodosLosProductos(producto, familia) {
				"Todos" === producto && "Todos los Productos" === familia && (vm.productosTodos = !0, vm.productosCerrarSolicitud.forEach(function(v, i) {
					"Todas" === v.producto && "Cuenta" === v.familia && vm.categoriaProductos.push(vm.lasCuentas), "Todos" === v.producto && "Creditos" === v.familia && vm.categoriaProductos.push(vm.losCreditos), "Todas" === v.producto && "Tarjetas y LÃ­neas de CrÃ©dito" === v.familia && (vm.categoriaProductos.push(vm.lincre), vm.categoriaProductos.push(vm.tarcre), vm.categoriaProductos.push(vm.linTarCre))
				}), vm.categoriaProductos.sort(compare), vm.categoriaProductos = eliminaryOrdenarData(vm.categoriaProductos), vm.productosCerrarSolicitud = [], vm.productosCerrarSolicitud.push(vm.productoCerrarSolicitud)), "Todas" === producto && "Cuenta" === familia && (vm.categoriaProductos.forEach(function(v, i) {
					"CTACTE" === v.codigoProducto && (vm.lasCuentas = v, vm.categoriaProductos.splice(i, 1))
				}), vm.productosCerrarSolicitud = vm.productosCerrarSolicitud.filter(function(el) {
					return "CTACTE" !== el.tipoProducto && "CTAPRE" !== el.tipoProducto && "CTAVIS" !== el.tipoProducto
				})), "Todos" === producto && "Creditos" === familia && (vm.categoriaProductos.forEach(function(v, i) {
					"CREAUT" === v.codigoProducto && (vm.losCreditos = v, vm.categoriaProductos.splice(i, 1))
				}), vm.productosCerrarSolicitud = vm.productosCerrarSolicitud.filter(function(el) {
					return "CREAUT" !== el.tipoProducto && "CRECOM" !== el.tipoProducto && "CREHIP" !== el.tipoProducto && "CRECON" !== el.tipoProducto && "CREOTR" !== el.tipoProducto
				})), "Todas" === producto && "Tarjetas y LÃ­neas de CrÃ©dito" === familia && (vm.categoriaProductos.forEach(function(v, i) {
					"LINCRE" === v.codigoProducto && (vm.lincre = v, vm.categoriaProductos.splice(i, 1), i--)
				}), vm.categoriaProductos.forEach(function(v, i) {
					"TARCRE" === v.codigoProducto && (vm.tarcre = v, vm.categoriaProductos.splice(i, 1), i--)
				}), vm.categoriaProductos.forEach(function(v, i) {
					"Tarjetas y LÃ­neas de CrÃ©dito" === v.familia && (vm.linTarCre = v, vm.categoriaProductos.splice(i, 1), i--)
				}), vm.productosCerrarSolicitud = vm.productosCerrarSolicitud.filter(function(el) {
					return "LINCRE" !== el.tipoProducto && "TARCRE" !== el.tipoProducto
				}))
			}

			function compare(a, b) {
				return vm.descripcionA = a.descripcion, vm.descripcionB = b.descripcion, vm.comparison = 0, vm.descripcionA > vm.descripcionB ? vm.comparison = 1 : vm.descripcionA < vm.descripcionB && (vm.comparison = -1), vm.comparison
			}

			function eliminaryOrdenarData(data) {
				return data.forEach(function(v, i) {
					void 0 !== v.familia && "Otros" === v.familia && (data.splice(i, 1), i--)
				}), vm.todoLosProductos = data.pop(), data.unshift(vm.todoLosProductos), data
			}
			var vm = this;
			vm.loading = !1, vm.pasoUno = !0, vm.pasoDos = !1, vm.pasoTres = !1, vm.continuarPasoUno = continuarPasoUno, vm.continuarPasoDos = continuarPasoDos, vm.rutBancoChile = "97.004.000-5", vm.razonSocialBanco = "Banco de Chile", vm.tiposProveedor = ["Banco"], vm.monedas = ["CLP", "UF"], vm.moneda = vm.monedas[0], vm.monedaCLP = ["CLP"], vm.tipoProveedor = "", vm.proveedores = [], vm.productoCerrar = "", vm.tipoProductoCerrar = "", vm.datepicker = datepicker, datepickerConfig.showWeeks = !1, vm.token = "", vm.datosSolicitante = {}, vm.categoriaProductos = [], vm.productosContratarSeleccion = [], vm.productosCerrarSolicitud = [], vm.productosContratar = [], vm.adjuntos = [], vm.solicitud = {}, vm.firmarHabilitado = !1, vm.hoyDia = new Date, vm.fechaMinima = new Date("01/01/1900"), vm.obtieneLocalidades = obtieneLocalidadesService, vm.regiones = [], vm.ciudades = [], vm.comunas = [], vm.regionSel = "", vm.ciudadSel = "", vm.comunaSel = "", vm.obtieneCiudades = obtieneCiudades, vm.obtieneComunas = obtieneComunas, vm.nombres = "", vm.apellidoPaterno = "", vm.apellidoMaterno = "", vm.fechaNacimiento = "", vm.correoElectronico = "", vm.telefonoCelular = "", vm.calle = "", vm.numeroCasa = "", vm.numeroDepartamento = "", vm.fechaSolicitud = new Date, vm.messFechaSolicitud = vm.fechaSolicitud.getMonth() + 1, vm.responsePreguntas = preguntasSeguridadService.getPreguntas(), vm.requestRespuestas = {}, vm.respuestas = new Array(vm.responsePreguntas.preguntas.length), vm.validaPreguntas = validaPreguntas, vm.agregaPregunta = agregaPregunta, vm.mostrarErrorPreguntas = !1, vm.loadingCajaDesafio = !0, vm.errorCajaDesafio = !1, vm.showBoton = !0, vm.objetoMiPass = {}, vm.chequeado = !1, vm.disabled = !0, vm.loadingEnvio = !1, vm.stepCaja = {}, vm.check = function() {
				vm.chequeado = !0
			}, vm.autorizacionBancoChile = "", vm.perfilIncompleto = "", vm.proveedorInvalido = "", vm.formatoInvalido = "", vm.productosInsuficientes = "", vm.sinRentaAcreditada = "", vm.autorizacionExitosa = "", vm.advertenciaUnProveedor = "", vm.mandatoSolicitudLiquidaciones = "", vm.compromisoNoEndeudamiento = "", vm.solicitudRechazada = "", vm.solicitudRecibidaSinRenta = "", vm.solicitudRecibidaConRenta = "", vm.mensajeCaja = "", vm.direccionIngresadaPorUsuario = !1, vm.preguntasEnviadas = !1, vm.showErrorHandler = !1, vm.mensajeError = "", vm.solicitud = {}, vm.showCLP = !0, vm.showUSD = !1, vm.dataLayer = $window.dataLayer = $window.dataLayer || [], vm.dataLayerMensajes = [{
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "ingreso/reingreso minisitio portabilidad publico",
				eventAction: "boton continuar de preguntas de seguridad",
				eventLabel: "p_btn_solic_autentic-preg_pub_continuar_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "ingreso datos personales",
				eventAction: "boton continuar de ingreso de datos personales",
				eventLabel: "p_btn_solic_ingres-dat-per_pub_continuar_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "productos a cerrar proveedor incial cancelar/agregar",
				eventAction: "boton cancelar de productos a cerrar",
				eventLabel: "p_btn_solic_cierreprod_pub_cancel_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "productos a cerrar proveedor incial cancelar/agregar",
				eventAction: "boton agregar producto de productos a cerrar",
				eventLabel: "p_btn_solic_cierreprod_pub_agregar_porta"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "productos a cerrar proveedor incial compromiso/continuar",
				eventAction: "check de asumir compromiso en productos a cerrar",
				eventLabel: "p_check_solic_cierreprod_pub_compromiso_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "productos a cerrar proveedor incial compromiso/continuar",
				eventAction: "boton continuar de productos a cerrar",
				eventLabel: "p_btn_solic_cierreprod_pub_continuar_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "productos a contratar",
				eventAction: "boton continuar de productos a contratar",
				eventLabel: "p_btn_solic_prodcontratar_pub_continuar_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "subir certificados",
				eventAction: "boton subir certificado liquidacion",
				eventLabel: "p_btn_solic_certif_pub_subir-liq_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "subir certificados",
				eventAction: "boton subir certificado impuesto timbre y estampillas",
				eventLabel: "p_btn_solic_certif_pub_subir-timbre_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "subir certificados",
				eventAction: "boton subir copia tasacion y estudio titulo",
				eventLabel: "p_btn_solic_certif_pub_subir-tasac_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "firma de solicitud",
				eventAction: "boton Firmar en firma de solicitud",
				eventLabel: "p_btn_solic_firma_pub_firmar_portab"
			}], vm.registrarAccion = registrarAccion, vm.validarProveedor = validarProveedor, vm.getProveedores = getProveedores, vm.productosPorTipo = productosPorTipo, vm.agregarProductoCerrar = agregarProductoCerrar, vm.eliminarProducto = eliminarProducto, vm.agregaProductoContratar = agregaProductoContratar, vm.validateStep2 = validateStep2, vm.validaFono = validaFono, vm.esNumeroValido = esNumeroValido, vm.deshabilitapasodos = !0, vm.deshabilitapasotres = !0, vm.deshabilitapasocuatro = !0, vm.deshabilitapasocinco = !0, vm.validateStep1 = validateStep1, vm.validarCupoAutorizado = validarCupoAutorizado, vm.validarTodosLosProductos = validarTodosLosProductos, vm.checkProductosContratar = checkProductosContratar, vm.checkProductosCerrar = checkProductosCerrar, vm.deleteItem = deleteItem, vm.ingresarSolicitud = ingresarSolicitud, vm.archivoIngresoSolicitudService = archivoIngresoSolicitudPublicoService, vm.tasaIngresoSolicitudService = tasaIngresoSolicitudPublicoService, vm.iteIngresoSolicitudService = iteIngresoSolicitudPublicoService, vm.dndFileUploadService = archivoIngresoSolicitudPublicoService.dndFileUploadService, vm.FileSaver = archivoIngresoSolicitudPublicoService.fileSaver, vm.size = 50, vm.errorProductoContratar = !1, vm.botonCheckProductosContratar = !1, vm.limpiaComboProdContratar = limpiaComboProdContratar, vm.limpiaComboProdContratarCreditos = limpiaComboProdContratarCreditos, vm.productoCerrar.compromisoNoEndeudar = "No", vm.portabilidadIngresadaConEseProveedor = !1, vm.rutBcoSinFormato = "", vm.productosTodos = !1, vm.todos = [], vm.todoLosProductos = [], vm.todosLosProductos = !1, vm.lasCuentas = [], vm.losCreditos = [], vm.lincre = [], vm.tarcre = [], vm.linTarCre = [], vm.productoSelected2 = !0, vm.productoSelected3 = !0, vm.errorMensajeRequiredCLP = !1, vm.errorMensajeRequiredUSD = !1, init(), vm.cleanCompromisoUtilizar = function() {
				isNaN(vm.productoCerrar.cupoAutorizado) && (vm.productoCerrar.cupoAutorizado = ""), vm.productoSelected = !1, vm.errorCompromisoUtilizar = !0, void 0 !== vm.pForm.cupoUtilizar && (vm.pForm.cupoUtilizar.$error.required = !0), angular.forEach(vm.pForm.$error, function(field) {
					angular.forEach(field, function(errorField) {
						errorField.$setTouched()
					})
				}), "No" == vm.productoCerrar.compromisoNoEndeudar && (vm.productoCerrar.compromisoCupoUtilizar = "", vm.productoSelected = !0, vm.productoSelected2 = !0, vm.productoSelected3 = !0, vm.errorMensajeRequiredUSD = !1, vm.errorMensajeRequiredCLP = !1)
			}, vm.checkCompromisoIsValid = function(codigoProducto) {
				"Si" === vm.productoCerrar.compromisoNoEndeudar && ("LINCRE" === codigoProducto && (void 0 !== vm.pForm.cupoUtilizar && (vm.pForm.cupoUtilizar.$valid && vm.pForm.cupoAutorizado.$valid && vm.pForm.numeroCuenta.$valid ? vm.productoSelected = !0 : vm.productoSelected = !1), void 0 !== vm.productoCerrar.cupoAutorizado && (vm.errorMensajeRequiredUSD = !1, vm.errorMensajeRequiredCLP = !1)), "TARCRE" === codigoProducto && (void 0 !== vm.pForm.cupoUtilizar && (vm.pForm.cupoUtilizar.$valid && vm.pForm.cupoAutorizado.$valid && vm.pForm.marca.$valid && vm.pForm.digitos.$valid ? vm.productoSelected = !0 : vm.productoSelected = !1), void 0 !== vm.productoCerrar.cupoAutorizado && (vm.errorMensajeRequiredUSD = !1, vm.errorMensajeRequiredCLP = !1)))
			}, vm.cleanCompromisoCupo = function() {
				vm.productoCerrar.compromisoCupoUtilizar = ""
			}, vm.resetCupoAutorizado = function() {
				vm.showCLP = !1, vm.showUSD = !1, vm.productoCerrar.cupoAutorizado = "", vm.productoCerrar.compromisoCupoUtilizar = "", "CLP" === vm.moneda ? vm.showCLP = !0 : vm.showUSD = !0, "Si" === vm.productoCerrar.compromisoNoEndeudar && ("CLP" === vm.moneda ? "" === vm.productoCerrar.cupoAutorizado || void 0 === vm.productoCerrar.cupoAutorizado ? (vm.errorMensajeRequiredCLP = !0, vm.errorMensajeRequiredUSD = !1) : vm.errorMensajeRequiredCLP = !1 : "" === vm.productoCerrar.cupoAutorizado || void 0 === vm.productoCerrar.cupoAutorizado ? (vm.errorMensajeRequiredUSD = !0, vm.errorMensajeRequiredCLP = !1) : vm.errorMensajeRequiredUSD = !1)
			}, vm.cleanProducto = function() {
				vm.productoCerrar.numeroCuenta = "", vm.productoCerrar.marca = "", vm.productoCerrar.ultimosDigitos = "", vm.productoCerrar.cupoAutorizado = "", vm.productoCerrar.compromisoCupoUtilizar = "", vm.productoCerrar.nombreProductoOtros = "", vm.errorCompromisoUtilizar = !1, vm.productoCerrarOtros = "", vm.productoSelected = !1, vm.productoCerrar = "", vm.tipoProductoCerrar = "", void 0 !== vm.pForm.cupoUtilizar && (vm.pForm.cupoUtilizar.$error.required = !1), vm.moneda = "CLP", vm.pForm.$setPristine(), vm.pForm.$setUntouched()
			}, vm.cleanInputContratar = function(index, producto) {
				("LINCRE" == producto.codigoProducto || "TARCRE" == producto.codigoProducto) && (vm.productosContratar[index].moneda = "CLP", vm.productosContratar[index].cupoSolicitado = ""), "CRE" == producto.codigoProducto.substr(0, 3) && (vm.productosContratar[index].moneda = "CLP", vm.productosContratar[index].monto = "", vm.productosContratar[index].meses = ""), "CREHIP" === producto.codigoProducto && (vm.productosContratar[index].moneda = "UF", vm.productosContratar[index].monto = "", vm.productosContratar[index].meses = "")
			}, $scope.$watch(function() {
				var adjuntos = vm.dndFileUploadService.getSelected();
				return vm.certificados = [], vm.ite = [], vm.tasa = [], angular.forEach(adjuntos, function(file) {
					file.id.includes("cer-") ? vm.certificados.push(file) : file.id.includes("ite-") ? vm.ite.push(file) : vm.tasa.push(file)
				}), adjuntos
			}, function() {
				var files = vm.dndFileUploadService.getSelected();
				files && (vm.adjuntos = files)
			}), ingresoSolicitudPortabilidadController.prototype.toggleMostrarDatepickerFechaNacimiento = function() {
				var vm = this;
				vm.mostrarDatepickerFechaNacimiento = !vm.mostrarDatepickerFechaNacimiento
			}, vm.blocKeyboard = function(event) {
				return event.keyCode >= 48 && event.keyCode <= 57 || 8 === event.keyCode || event.keyCode >= 96 && event.keyCode <= 105 || 37 === event.keyCode || 39 === event.keyCode || 9 === event.keyCode || 75 === event.keyCode ? void 0 : (event.preventDefault(), !1)
			}, vm.validarDigitoCre = function(codigoProducto) {
				"CREOTR" === codigoProducto && (vm.pForm.digitoCuentaCre.$valid ? vm.productoSelected = !0 : vm.productoSelected = !1)
			}, vm.compromisoMenorAlCupo = function() {
				void 0 === vm.productoCerrar.cupoAutorizado || null === vm.productoCerrar.cupoAutorizado || "" === vm.productoCerrar.cupoAutorizado || isNaN(vm.productoCerrar.cupoAutorizado) || (vm.productoCerrar.compromisoCupoUtilizar <= vm.productoCerrar.cupoAutorizado ? (vm.productoSelected2 = !0, vm.productoSelected3 = !0) : (vm.productoSelected2 = !1, vm.productoSelected3 = !0))
			}, vm.cupoMayorCompromiso = function() {
				"Si" === vm.productoCerrar.compromisoNoEndeudar && (void 0 === vm.productoCerrar.compromisoCupoUtilizar || null === vm.productoCerrar.compromisoCupoUtilizar || "" === vm.productoCerrar.compromisoCupoUtilizar || isNaN(vm.productoCerrar.compromisoCupoUtilizar) || (vm.productoCerrar.cupoAutorizado >= vm.productoCerrar.compromisoCupoUtilizar ? (vm.productoSelected3 = !0, vm.productoSelected2 = !0) : (vm.productoSelected3 = !1, vm.productoSelected2 = !0)))
			}
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").controller("ingresoSolicitudPortabilidadController", ingresoSolicitudPortabilidadController), ingresoSolicitudPortabilidadController.inject = ["$state", "$scope", "$filter", "catalogoMensajesFactory", "solicitudPortabilidadFactory", "tasaIngresoSolicitudPublicoService", "iteIngresoSolicitudPublicoService", "archivoIngresoSolicitudPublicoService", "obtieneLocalidadesService", "storeComprobantePortabilidadService", "preguntasSeguridadService", "tokenPortabilidadService", "datepickerConfig", "redirigirSolicitudService", "consultarSolicitudService", "$window"]
	}(),
	function() {
		function loginPortabilidadFactory($http, URL_API) {
			function obtenerPreguntas(datos) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/auth/obtener-preguntas",
					method: "POST",
					data: datos,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(error) {
					return error
				})
			}

			function validarEsCliente(rut, captcha) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/validate/check-rut?rut=" + encodeURI(rut) + "&g-recaptcha-response=" + captcha,
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(error) {
					return !1
				})
			}
			return {
				obtenerPreguntas: obtenerPreguntas,
				validarEsCliente: validarEsCliente
			}
		}
		angular.module("WebBancoChile.loginPortabilidadFactory.factory", []).factory("loginPortabilidadFactory", loginPortabilidadFactory), loginPortabilidadFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function loginPortabilidadController($state, $scope, $window, $filter, $location, catalogoMensajesFactory, RutHelper, loginPortabilidadFactory, URL_PORTAL_LOGIN, preguntasSeguridadService, redirigirSolicitudService, noCAPTCHA) {
			function enterpress(e) {
				var code = e.keyCode ? e.keyCode : e.which;
				13 === code && (vm.validarRut(vm.rut), vm.irLogin())
			}

			function isRutVacio(rut) {
				return "" === rut || angular.isUndefined(rut)
			}

			function validarRut(rut) {
				var rutVacio = isRutVacio(rut);
				rutVacio && (vm.showRutNoValido = !1), vm.errorRutVacio = !0, vm.showRutNoValido = !1;
				var rutValido = !1;
				rutVacio || (vm.errorRutVacio = !1, rutValido = RutHelper.validate(rut), rutValido || (vm.showRutNoValido = !0));
				var rutMayor50MM = !1;
				vm.showRutMayor50MM = rutMayor50MM;
				var rutAux;
				return rutVacio || (rutAux = rut.replace("K", "0").replace("k", "0")), !rutVacio && rutValido && rutAux >= vm.rut50MM && (rutMayor50MM = !0, vm.showRutMayor50MM = rutMayor50MM), rutVacio || !rutValido || rutMayor50MM ? !1 : !0
			}

			function limpiarMensajes() {
				vm.showRutNoValido = !1, vm.showError = !1, vm.showRutMayor50MM = !1
			}

			function limpiarSerie() {
				vm.showError = !1
			}

			function irLogin() {
				vm.enCurso = !0, vm.showError = !1, validarCampos() && (vm.request = {
					rut: vm.rut,
					serie: vm.serie
				}, loginPortabilidadFactory.validarEsCliente(vm.rut, vm.captchaResponse).then(function(data) {
					data ? (redirigirSolicitudService.setEsCliente(!0), mostrarSeccionMensajeError(), vm.esCliente = !0, vm.enCurso = !1, vm.iniciarSolicitud = !1, vm.comprobarSolicitud = !1) : (redirigirSolicitudService.setEsCliente(!1), loginPortabilidadFactory.obtenerPreguntas(vm.request).then(function(data) {
						data.token ? (data.url = vm.url, vm.iniciarSolicitud = !1, vm.comprobarSolicitud = !1, preguntasSeguridadService.setPreguntas(data), $state.go("ingresar-solicitud-portabilidad-publico")) : (vm.showError = !0, vm.mensaje = "El servicio presenta intermitencias. Por favor, intenta nuevamente.", mostrarSeccionMensajeError(), vm.enCurso = !1, vm.iniciarSolicitud = !1, vm.comprobarSolicitud = !1)
					}))
				}, function(error) {
					vm.showError = !0, vm.mensaje = "El servicio presenta intermitencias. Por favor, intenta nuevamente.", mostrarSeccionMensajeError(), vm.enCurso = !1, vm.iniciarSolicitud = !1, vm.comprobarSolicitud = !1
				}))
			}

			function login() {
				$window.open(URL_PORTAL_LOGIN)
			}

			function validarCampos() {
				var errorForm = !0;
				return vm.loginForm.username2.$error.required && (vm.loginForm.username2.$dirty = !0, errorForm = !1), vm.loginForm.serie.$error.required && (vm.loginForm.serie.$dirty = !0, errorForm = !1), errorForm
			}

			function init() {
				catalogoMensajesFactory.obtener(501196).then(setMensajeErrorRutVacio), catalogoMensajesFactory.obtener(501197).then(setMensajeErrorRutNoValido), catalogoMensajesFactory.obtener(501673).then(setMensajeErrorPasswordVacio), catalogoMensajesFactory.obtener(501011).then(setMensajeErrorTeclaMayuscula), catalogoMensajesFactory.obtener(501203).then(setMensajeErrorTresIntentos), catalogoMensajesFactory.obtener(501541).then(setMensajeRUTMayor50MM), catalogoMensajesFactory.obtener(501197).then(setMensajeFormatoSerie), vm.mensajeErrorRutVacio = "", vm.mensajeErrorNoValido = "", vm.mensajeFolioIncorrecto = "", vm.mensajeRUTMayor50MM = "", vm.submitted = !1, vm.requestId = $location.search().req;
				var error = $location.search().error;
				error ? vm.showError = !0 : vm.showError = !1, vm.showRutNoValido = !1, vm.showRutMayor50MM = !1
			}

			function setMensajeErrorRutVacio(result) {
				vm.mensajeErrorRutVacio = result.texto
			}

			function setMensajeErrorRutNoValido(result) {
				vm.mensajeErrorNoValido = result.texto
			}

			function setMensajeErrorPasswordVacio(result) {
				vm.mensajeSerieVacio = result.texto
			}

			function setMensajeErrorTeclaMayuscula(result) {
				vm.mensajeTeclaMayuscula = result.texto
			}

			function setMensajeErrorTresIntentos(result) {
				vm.mensajeTresIntentos = result.texto
			}

			function setMensajeRUTMayor50MM(result) {
				vm.mensajeRUTMayor50MM = result.texto
			}

			function setMensajeFormatoSerie(result) {
				vm.mensajeFormatoSerie = result.texto
			}

			function registrarAccion(id) {
				var evento = $filter("filter")(vm.dataLayerMensajes, {
					eventLabel: id
				})[0];
				vm.dataLayer.push(evento)
			}

			function mostrarSeccionMensajeError() {
				jQuery("html, body").animate({
					scrollTop: jQuery("#idMensajeError").offset().top
				}, 2e3)
			}
			var vm = this;
			vm.validarRut = validarRut, vm.limpiarMensajes = limpiarMensajes, vm.limpiarSerie = limpiarSerie, vm.rut50MM = 5e8, vm.enterpress = enterpress, vm.request = {}, vm.irLogin = irLogin, vm.url = "", vm.captchaResponse = "", vm.captchaReload = {}, vm.captchaCallback = "", vm.enCurso = !1, vm.esCliente = !1, vm.iniciarSolicitud = !1, vm.comprobarSolicitud = !1, vm.login = login, vm.primeroElCaptcha = !1, vm.todoBueno = !1, vm.validacionCaptcha = !1, vm.dataLayer = $window.dataLayer = $window.dataLayer || [], vm.dataLayerMensajes = [{
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "ingreso/reingreso minisitio portabilidad publico",
				eventAction: "boton iniciar solicitud del minisitio",
				eventLabel: "p_btn_solic_autentic-rvss_pub_iniciar-sol_portab"
			}, {
				event: "solicitud_portabilidad_no_cliente_event",
				eventCategory: "ingreso/reingreso minisitio portabilidad publico",
				eventAction: "boton completar o consultar solicitud",
				eventLabel: "p_btn_solic_autentic-rvss_pub_completar_portab"
			}], vm.registrarAccion = registrarAccion, init(), $scope.$watch("vm.captchaResponse", function() {
				"" !== vm.captchaResponse && null !== vm.captchaResponse && void 0 !== vm.captchaResponse ? (vm.validacionCaptcha = !0, vm.loginForm.$valid ? vm.todoBueno = !0 : vm.primeroElCaptcha = !0) : vm.validacionCaptcha = !1
			}), $scope.$watch("vm.showError", function() {
				vm.showError && vm.captchaReload()
			}), vm.captchaReload = function($scope) {
				noCAPTCHA.reset(), vm.captchaResponse = ""
			}, vm.captchaCallback = function() {
				vm.captchaResponse = ""
			}, vm.resetCaptcha = function() {
				return vm.esCliente = !1, vm.validacionCaptcha && !vm.primeroElCaptcha && (noCAPTCHA.reset(), vm.validacionCaptcha = !1), vm.todoBueno && (noCAPTCHA.reset(), vm.validacionCaptcha = !1), vm.primeroElCaptcha && vm.loginForm.$valid ? void(vm.primeraVez = !0) : void(vm.primeraVez && (noCAPTCHA.reset(), vm.validacionCaptcha = !1))
			}
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").config(["noCAPTCHAProvider", function(noCaptchaProvider) {
			noCaptchaProvider.setSiteKey("6LfaC3oaAAAAAJLlEbuKoR3FpLss0GSq0oVucXH1"), noCaptchaProvider.setTheme("light"), noCaptchaProvider.setLanguage("es-419")
		}]).controller("loginPortabilidadController", loginPortabilidadController), loginPortabilidadController.inject = ["$state", "$scope", "$window", "$filter", "$location", "catalogoMensajesFactory", "RutHelper", "loginPortabilidadFactory", "URL_PORTAL_LOGIN", "preguntasSeguridadService", "redirigirSolicitudService", "noCAPTCHA"]
	}(),
	function() {
		function obtieneLocalidadesFactory($http, URL_API) {
			function obtieneRegiones() {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/geo/regiones",
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function obtieneCiudades(id) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/geo/ciudades/" + id,
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}

			function obtieneComunas(id) {
				return $http({
					url: URL_API + "/portabilidad-financiera-publico-rest/geo/comunas/" + id,
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}
			return {
				obtieneRegiones: obtieneRegiones,
				obtieneCiudades: obtieneCiudades,
				obtieneComunas: obtieneComunas
			}
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").factory("obtieneLocalidadesFactory", obtieneLocalidadesFactory), obtieneLocalidadesFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function obtieneLocalidadesService($q, obtieneLocalidadesFactory) {
			function obtieneRegiones() {
				var deferred = vm.$q.defer();
				return vm.obtieneLocalidadesFactory.obtieneRegiones().then(function(response) {
					deferred.resolve(response)
				}, function(error) {
					deferred.reject(error)
				}), deferred.promise
			}

			function obtieneCiudades(id) {
				var deferred = vm.$q.defer();
				return vm.obtieneLocalidadesFactory.obtieneCiudades(id).then(function(response) {
					deferred.resolve(response)
				}, function(error) {
					deferred.reject(error)
				}), deferred.promise
			}

			function obtieneComunas(id) {
				var deferred = vm.$q.defer();
				return vm.obtieneLocalidadesFactory.obtieneComunas(id).then(function(response) {
					deferred.resolve(response)
				}, function(error) {
					deferred.reject(error)
				}), deferred.promise
			}
			var vm = this;
			return vm.$q = $q, vm.obtieneLocalidadesFactory = obtieneLocalidadesFactory, {
				obtieneRegiones: obtieneRegiones,
				obtieneCiudades: obtieneCiudades,
				obtieneComunas: obtieneComunas
			}
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").factory("obtieneLocalidadesService", obtieneLocalidadesService), obtieneLocalidadesService.$inject = ["$q", "obtieneLocalidadesFactory"]
	}(),
	function() {
		function portabilidadFinancieraPublicoConfig($stateProvider, $urlRouterProvider) {
			var base_url = "portabilidad-financiera-publico/src/portabilidad-financiera-publico/",
				pageTitle = "Portabilidad Financiera";
			$stateProvider.state("portabilidad-financiera-publico", {
				parent: "root",
				url: "/portabilidad-financiera-publico",
				views: {
					"main@": {
						controller: "portabilidadFinancieraPublicoTabsCtrl",
						controllerAs: "tabs",
						templateUrl: base_url + "tabs/portabilidad-financiera-publico-tabs.tpl.html"
					}
				},
				data: {
					pageTitle: pageTitle
				}
			}).state("login-portabilidad-publico", {
				parent: "portabilidad-financiera-publico",
				url: "/login-portabilidad",
				controller: "loginPortabilidadController",
				controllerAs: "vm",
				templateUrl: base_url + "login/login.tpl.html",
				data: {
					pageTitle: pageTitle
				}
			}).state("ingresar-solicitud-portabilidad-publico", {
				parent: "portabilidad-financiera-publico",
				url: "/ingreso-solicitud",
				controller: "ingresoSolicitudPortabilidadController",
				controllerAs: "vm",
				templateUrl: base_url + "ingreso-solicitud/ingreso-solicitud.tpl.html",
				data: {
					pageTitle: pageTitle
				}
			}).state("consultar-solicitud-portabilidad-publico", {
				parent: "portabilidad-financiera-publico",
				url: "/consultar-solicitud",
				controller: "consultarSolicitudPortabilidadController",
				controllerAs: "vm",
				templateUrl: base_url + "consultar-solicitud/consultar-solicitud.tpl.html",
				data: {
					pageTitle: pageTitle
				}
			}).state("comprobante-solicitud-portabilidad-publico", {
				parent: "portabilidad-financiera-publico",
				url: "/comprobante-solicitud",
				controller: "comprobanteSolicitudPortabilidadController",
				controllerAs: "vm",
				templateUrl: base_url + "comprobante-solicitud/comprobante-solicitud.tpl.html",
				data: {
					pageTitle: pageTitle
				}
			}).state("consulta-oferta-portabilidad-publico", {
				parent: "portabilidad-financiera-publico",
				url: "/consulta-oferta",
				controller: "consultaOfertaController",
				controllerAs: "vm",
				templateUrl: base_url + "consulta-oferta/consulta-oferta.tpl.html",
				data: {
					pageTitle: pageTitle
				}
			}).state("consulta-oferta-detalle-portabilidad-publico", {
				parent: "portabilidad-financiera-publico",
				url: "/consulta-oferta-detalle",
				controller: "consultaOfertaDetalleController",
				controllerAs: "vm",
				templateUrl: base_url + "consulta-oferta/consulta-oferta-detalle/consulta-oferta-detalle.tpl.html",
				data: {
					pageTitle: pageTitle
				}
			}), $urlRouterProvider.otherwise("/portabilidad-financiera-publico/login-portabilidad")
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").config(portabilidadFinancieraPublicoConfig), portabilidadFinancieraPublicoConfig.$inject = ["$stateProvider", "$urlRouterProvider"]
	}(),
	function() {
		function portabilidadFinancieraPublicoTabsCtrl($rootScope, $state, $document, error500, catalogoMensajesFactory) {
			function getPermissions() {
				init()
			}

			function init() {
				evaluateTab(), vm.loading = !1
			}

			function evaluateStatus() {
				vm.state = {
					consultarSolicitud: $state.is("consultar-solicitud-portabilidad")
				}
			}

			function evaluateTab() {
				switch ($state.current.name) {
					case "consultar-solicitud-portabilidad":
						vm.activeTab = "consultar-solicitud-portabilidad";
						break;
					default:
						vm.activeTab = $state.current.name
				}
				evaluateStatus()
			}
			var vm = this;
			vm.permissions = {
				consultarSolicitud: !0
			}, vm.loading = !0, getPermissions();
			$rootScope.$on("$stateChangeSuccess", function() {
				$document[0].body.scrollTop = $document[0].documentElement.scrollTop = 0, evaluateTab()
			}), vm.stateReload = function() {
				$state.go("reloadPage", {
					state: vm.activeTab
				})
			}
		}
		angular.module("WebBancoChile.portabilidad-financiera-publico").controller("portabilidadFinancieraPublicoTabsCtrl", portabilidadFinancieraPublicoTabsCtrl), portabilidadFinancieraPublicoTabsCtrl.$inject = ["$rootScope", "$state", "$document", "error500", "catalogoMensajesFactory"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.ccpublico").constant("CREDITO_URLS", {
			CONSULTA_CLIENTE: "/simulacion-credito-consumo/simulacion-credito/validar-usuario",
			CONSULTA_PARAMETROS: "/simulacion-credito-consumo/simulacion-credito/parametros-iniciales",
			SIMULAR: "/simulacion-credito-consumo/simulacion-credito/simular-credito",
			SOLICITAR: "/simulacion-credito-consumo/simulacion-credito/aceptar",
			FECHA_HABIL: "/simulacion-credito-consumo/siguiente-fecha-habil",
			PROPUESTA_SEGURO: "/simulacion-credito-consumo/pdf-propuesta-seguro",
			COMPROBANTE: "/simulacion-credito-consumo/comprobante-pdf"
		}).constant("SITE_KEY_V3", "6Ld5EgEaAAAAALBa5OuqEp1pIyBpFM_z0Bc4VE0s").constant("URL_CONSUMO", "https://portalpersonas.bancochile.cl/menu/publico/SimCred").constant("DEF_MENSAJE_ERROR", "Este servicio estÃ¡ temporalmente no disponible, por favor intente mÃ¡s tarde.").constant("SRC_CONSTANTS_MENSAJE_ERROR", "Este servicio estÃ¡ temporalmente no disponible, por favor intente mÃ¡s tarde.").constant("RANGO_CUOTAS_1", [5, 12]).constant("RANGO_CUOTAS_2", [11, 24]).constant("RANGO_CUOTAS_3", [23, 48]).constant("RANGO_CUOTAS_4", [47, 61]).constant("RANGO_UF_SEGURO", [800, 1e3, 1500, 2e3, 2500, 3e3]).constant("DESCARGAR_FILES", ["/simulador-personas/adep/descargarTodos", "/simulador-personas/adep/descargarSeguroGenerico"]).constant("TRAMOS", [{
			idValidacion: 1,
			descValidacion: "Hasta $500.000"
		}, {
			idValidacion: 2,
			descValidacion: "$500.001 a $1.300.000"
		}, {
			idValidacion: 3,
			descValidacion: "$1.300.001 a $3.000.000"
		}, {
			idValidacion: 4,
			descValidacion: "$3.000.001 a $6.000.000"
		}, {
			idValidacion: 5,
			descValidacion: "MÃ¡s de $6.000.001"
		}])
	}(),
	function() {
		function sinEspacios() {
			return {
				require: "ngModel",
				link: function(scope, element, attrs, modelCtrl) {
					modelCtrl.$parsers.push(function(inputValue) {
						var transformedInput = inputValue.replace(/(\+569)?([0-9]){9}/g, "");
						return transformedInput !== inputValue && (modelCtrl.$setViewValue(transformedInput), modelCtrl.$render()), transformedInput
					})
				}
			}
		}
		angular.module("WebBancoChile.ccpublico").directive("sinEspacios", sinEspacios)
	}(),
	function() {
		function soloLetras() {
			return {
				require: "ngModel",
				link: function(scope, element, attrs, modelCtrl) {
					modelCtrl.$parsers.push(function(inputValue) {
						var transformedInput = inputValue.replace(/[^a-zA-ZÃ±Ã‘Ã¡ÃÃ©Ã‰Ã­ÃÃ³Ã“ÃºÃš ]/g, "");
						return transformedInput !== inputValue && (modelCtrl.$setViewValue(transformedInput), modelCtrl.$render()), transformedInput
					})
				}
			}
		}
		angular.module("WebBancoChile.ccpublico").directive("soloLetras", soloLetras)
	}(),
	function() {
		function simuladorPpCaptchaFactory($http, URL_API, SRC_CONSTANTS_MENSAJE_ERROR, error500) {
			function validarRutCaptcha(data) {
				return $http({
					url: URL_API + "/simulador-publico/cliente/validar?g-recaptcha-response=" + data.token,
					method: "POST",
					data: JSON.stringify({
						rut: data.rut
					}),
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					(angular.isDefined(response.data) && 302 === response.status || 200 !== response.status) && error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}
			var service = {
				validarRutCaptcha: validarRutCaptcha
			};
			return service
		}
		angular.module("WebBancoChile.ccpublico").factory("simuladorPpCaptchaFactory", simuladorPpCaptchaFactory), simuladorPpCaptchaFactory.$inject = ["$http", "URL_API", "SRC_CONSTANTS_MENSAJE_ERROR", "error500"]
	}(),
	function() {
		function simuladorPpClienteFactory($http, URL_API, SRC_CONSTANTS_MENSAJE_ERROR, error500) {
			function esFechaHabil() {
				return $http({
					url: URL_API + "/simulador-publico/simulador/proximaFechaHabil",
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}

			function tramoRenta() {
				return $http({
					url: URL_API + "/simulador-publico/simulador/obtieneTramosRenta",
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					!angular.isDefined(response.data) || 302 !== response.status && 200 === response.status || error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}
			var service = {
				esFechaHabil: esFechaHabil,
				tramoRenta: tramoRenta
			};
			return service
		}
		angular.module("WebBancoChile.ccpublico").factory("simuladorPpClienteFactory", simuladorPpClienteFactory), simuladorPpClienteFactory.$inject = ["$http", "URL_API", "SRC_CONSTANTS_MENSAJE_ERROR", "error500"]
	}(),
	function() {
		function simuladorPpFechaFactory($http, URL_API, SRC_CONSTANTS_MENSAJE_ERROR, error500) {
			function getDiasHabiles(params) {
				return $http({
					url: URL_API + "/simulador-publico/calendario/obtieneDiasHabiles",
					method: "POST",
					data: params,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}
			var service = {
				getDiasHabiles: getDiasHabiles
			};
			return service
		}
		angular.module("WebBancoChile.ccpublico").factory("simuladorPpFechaFactory", simuladorPpFechaFactory), simuladorPpFechaFactory.$inject = ["$http", "URL_API", "SRC_CONSTANTS_MENSAJE_ERROR", "error500"]
	}(),
	function() {
		function simuladorPpSimularConcretarFactory($http, URL_API, SRC_CONSTANTS_MENSAJE_ERROR, error500) {
			function simular(params) {
				return $http({
					url: URL_API + "/simulador-publico/simulador/simular",
					method: "POST",
					data: params,
					headers: {
						"Content-Type": "application/json"
					}
				})
			}

			function guardarContacto(params) {
				return $http({
					url: URL_API + "/simulador-publico/taller/obtieneProductoTaller",
					method: "POST",
					data: params,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}

			function guardarSimulacion(params) {
				return $http({
					url: URL_API + "/simulador-publico/simulador/guardarSimulacion",
					method: "POST",
					data: params,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}

			function enviaSolicitudContacto(params) {
				return $http({
					url: URL_API + "/simulador-publico/simulador/envioMailSimulacion",
					method: "POST",
					data: params,
					headers: {
						"Content-Type": "application/json"
					}
				})
			}
			var service = {
				simular: simular,
				guardarContacto: guardarContacto,
				guardarSimulacion: guardarSimulacion,
				enviaSolicitudContacto: enviaSolicitudContacto
			};
			return service
		}
		angular.module("WebBancoChile.ccpublico").factory("simuladorPpSimularConcretarFactory", simuladorPpSimularConcretarFactory), simuladorPpSimularConcretarFactory.$inject = ["$http", "URL_API", "SRC_CONSTANTS_MENSAJE_ERROR", "error500"]
	}(),
	function() {
		function simuladorPpTallerProductoFactory($http, URL_API, SRC_CONSTANTS_MENSAJE_ERROR, error500) {
			function obtieneDetalleProducto(params) {
				return $http({
					url: URL_API + "/simulador-publico/taller/obtieneProductoTaller",
					method: "POST",
					data: params,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}

			function obtieneListaDetalleProductos(params) {
				return $http({
					url: URL_API + "/simulador-publico/taller/obtieneDetalleProductos",
					method: "POST",
					data: params,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}

			function validarRegla(params) {
				return $http({
					url: URL_API + "/simulador-publico/taller/validarRegla",
					method: "POST",
					data: params,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}
			var service = {
				obtieneDetalleProducto: obtieneDetalleProducto,
				obtieneListaDetalleProductos: obtieneListaDetalleProductos,
				validarRegla: validarRegla
			};
			return service
		}
		angular.module("WebBancoChile.ccpublico").factory("simuladorPpTallerProductoFactory", simuladorPpTallerProductoFactory), simuladorPpTallerProductoFactory.$inject = ["$http", "URL_API", "SRC_CONSTANTS_MENSAJE_ERROR", "error500"]
	}(),
	function() {
		function simuladorPpUFFactory($http, URL_API, SRC_CONSTANTS_MENSAJE_ERROR, error500) {
			function getUF() {
				return $http({
					url: URL_API + "/simulador-publico/simulador/consultaValorUF",
					method: "GET",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				}, function(response) {
					error500.setErrorMsj(SRC_CONSTANTS_MENSAJE_ERROR, "", "", "", "error500")
				})
			}
			var service = {
				getUF: getUF
			};
			return service
		}
		angular.module("WebBancoChile.ccpublico").factory("simuladorPpUFFactory", simuladorPpUFFactory), simuladorPpUFFactory.$inject = ["$http", "URL_API", "SRC_CONSTANTS_MENSAJE_ERROR", "error500"]
	}(),
	function() {
		angular.module("WebBancoChile.filter", []).filter("CuentasFilter", function() {
			return function(input) {
				var salida = [];
				return angular.forEach(input, function(producto) {
					("CTD" === producto.codigo || "YTD" === producto.codigo || "JUV" === producto.codigo) && salida.push(producto)
				}), salida
			}
		}).filter("MontoFilter", function() {
			return function(input) {
				return void 0 !== input ? input.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.") : 0
			}
		}).filter("TotalSegurosFilter", function() {
			return function(input) {
				var salida = 0;
				return angular.forEach(input, function(seguro) {
					salida += seguro.prima
				}), salida.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.")
			}
		}).filter("TotalImpuestoNotariaFilter", function() {
			return function(input) {
				var salida = input.totalNotario + input.totalImpuestoTimbre;
				return salida.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.")
			}
		}).filter("MesesNoPago", function() {
			return function(input) {
				if (0 === input.length) return "No";
				var meses = input[0];
				return input.length > 1 && (meses += " y " + input[1]), meses.toLowerCase()
			}
		})
	}(),
	function() {
		function comprobanteData() {
			var data = null,
				dataError = null;
			this.setData = function(info) {
				angular.isDefined(info) && (data = info)
			}, this.setDataError = function(error) {
				dataError = JSON.parse(JSON.stringify(error))
			}, this.getData = function() {
				var copia = JSON.parse(JSON.stringify(data));
				return data = null, copia
			}, this.getDataError = function() {
				var copia = JSON.parse(JSON.stringify(dataError));
				return dataError = null, copia
			}
		}
		angular.module("WebBancoChile.comprobanteData.service", []).service("comprobanteData", comprobanteData)
	}(),
	function() {
		function perfilCliente() {
			var perfil, marca;
			this.setPerfil = function(data) {
				null !== data && (perfil = data)
			}, this.setMarcaPerfil = function(info) {
				null !== info && (marca = info)
			}, this.getPerfil = function() {
				return perfil
			}, this.getMarcaPerfil = function() {
				return marca
			}
		}
		angular.module("WebBancoChile.perfilCliente.service", []).service("perfilCliente", perfilCliente)
	}(),
	function() {
		function responseSimulacion() {
			var response, index, contratable, fechaPrimerPago, mesesNoPago, rut, negatividadCliente, valorUFDia, preAprobado, tramo;
			this.setSimulacion = function(data) {
				null !== data && (response = data)
			}, this.getSimulacion = function() {
				return response
			}, this.setFechaPrimerPago = function(data) {
				null !== data && (fechaPrimerPago = data)
			}, this.getFechaPrimerPago = function() {
				return fechaPrimerPago
			}, this.setMesesNoPago = function(data) {
				null !== data && (mesesNoPago = data)
			}, this.getMesesNoPago = function() {
				return mesesNoPago
			}, this.setIndexSimulacionSelect = function(data) {
				null !== data && (index = data)
			}, this.getIndexSimulacionSelect = function() {
				return index
			}, this.setContratable = function(data) {
				null !== data && (contratable = data)
			}, this.isContratable = function() {
				return contratable
			}, this.setRut = function(data) {
				null !== data && (rut = data)
			}, this.getRut = function() {
				return rut
			}, this.setNegatividadCliente = function(data) {
				null !== data && (negatividadCliente = data)
			}, this.isNegatividadCliente = function() {
				return negatividadCliente
			}, this.setValorUFDia = function(data) {
				null !== data && (valorUFDia = data)
			}, this.getValorUFDia = function() {
				return valorUFDia
			}, this.setPreAprobado = function(data) {
				null !== data && (preAprobado = data)
			}, this.isPreAprobado = function() {
				return preAprobado
			}, this.setTramos = function(data) {
				null !== data && (tramo = data)
			}, this.getTramos = function() {
				return tramo
			}
		}
		angular.module("WebBancoChile.responseSimulacion.service", []).service("responseSimulacion", responseSimulacion)
	}(),
	function() {
		function tallerProducto() {
			var dataTaller;
			this.setData = function(data) {
				null !== data && (dataTaller = data)
			}, this.getData = function() {
				return dataTaller
			}
		}
		angular.module("WebBancoChile.tallerProducto.service", []).service("tallerProducto", tallerProducto)
	}(),
	function() {
		function comprobanteCreditoController($state, comprobanteData) {
			function init() {
				vm.loading = !1, vm.step1 = !1, vm.step2 = !1, vm.step3 = !1, vm.step4 = !1
			}

			function stepCompleted(stepNumber) {
				switch (stepNumber) {
					case 1:
						return vm.step1;
					case 2:
					case 3:
					case 4:
						return vm["step" + stepNumber] && stepCompleted(stepNumber - 1);
					default:
						return !1
				}
			}

			function isEmpty() {
				vm.informacion ? generadorComprobante() : $state.go("publico-simulacion-credito-consumo")
			}

			function generadorComprobante() {
				var temp = {
					header: {
						title: "Solicitud CrÃ©dito de Consumo",
						fecha: vm.informacion.fecha,
						hora: vm.informacion.hora,
						codigoTransaccion: vm.informacion.numeroTransaccion,
						status: "success",
						monto: vm.informacion.montoSolicitado,
						montoTitle: "Monto Solicitado",
						msg: "Un ejecutivo se contactarÃ¡ contigo dentro de 72 horas.",
						boldMsg: "EnvÃ­o de solicitud exitosa"
					},
					rows: [{
						subRows: [{
							columns: [{
								title: "Datos de la simulaciÃ³n",
								content: [{
									title: "NÂº de cuotas:",
									value: vm.informacion.numCuotas
								}, {
									title: "Cuota Mensual:",
									value: vm.informacion.cuotaMensual
								}, {
									title: "Impuestos timbre y estampillas:",
									value: vm.informacion.impuestosEstampilla
								}, {
									title: "Seguro de desgravamen:",
									value: vm.informacion.seguroDesgravamen
								}, {
									title: "Seguro de Muerte accidental:",
									value: vm.informacion.seguroMuerteAccidental
								}, {
									title: "Seguro de desempleo involuntario e incapacidad temporal:",
									value: vm.informacion.seguroCesantia
								}, {
									title: "Tasa de interes mensual (anual) internet:",
									value: vm.informacion.tasaInteresMensualAnual
								}]
							}, {
								title: "",
								content: [{
									title: "Gastos Notariales:",
									value: vm.informacion.gastosNotariales
								}, {
									title: "Monto bruto del CrÃ©dito:",
									value: vm.informacion.montoBrutoCredito
								}, {
									title: "Fecha primer pago:",
									value: vm.informacion.fechaPrimerPago
								}, {
									title: "Carga anual del CAE:",
									value: vm.informacion.cae + "%"
								}, {
									title: "Costo total del CrÃ©dito:",
									value: vm.informacion.costoTotalCredito
								}, {
									title: "Meses de no pago:",
									value: vm.informacion.mesesNoPago
								}]
							}]
						}]
					}],
					dataDescarga: {
						url: "/simulador-publico/descargarComprobante",
						method: "POST",
						nombreArchivo: "Comprobante-CrÃ©dito de Consumo",
						data: vm.informacion.dataFull
					}
				};
				vm.data = temp
			}
			var vm = this;
			vm.title = "comprobanteCreditoController", vm.isCollapsed = !0, vm.loading = !0, vm.stepCompleted = stepCompleted, vm.informacion = comprobanteData.getData(), vm.configSingle = {
				singleDatePicker: !0
			}, init(), vm.volver = function() {
				$state.go("publico-simulacion-credito-consumo")
			}, generadorComprobante(), isEmpty()
		}
		angular.module("WebBancoChile.ccpublico").controller("comprobanteCreditoController", comprobanteCreditoController), comprobanteCreditoController.$inject = ["$state", "comprobanteData"]
	}(),
	function() {
		function formularioContactoController($state, comprobanteData, responseSimulacion, tallerProducto, simuladorPpSimularConcretarFactory, $filter, perfilCliente, simuladorPpTallerProductoFactory, $scope, $window) {
			function init() {
				return "undefined" == typeof vm.response ? ($state.go("publico-simulacion-credito-consumo"), !1) : (vm.loading = !1, vm.step1 = !1, vm.step2 = !1, vm.step3 = !1, vm.step4 = !1, vm.simulacionSelecionada = vm.response.simulaciones[responseSimulacion.getIndexSimulacionSelect()], vm.firma = vm.response["firma" + (parseInt(responseSimulacion.getIndexSimulacionSelect(), 10) + 1)], scrolling(), vm.perfil = perfilCliente.getPerfil(), void(vm.marca = evaluateBancaCod(vm.perfil.marca)))
			}

			function scrolling() {
				window.scrollTo(0, 0)
			}

			function setContactoInputFocus(event) {
				"" === vm.cliente.telefono && (vm.cliente.telefono = "+569 "), setContactoInputChange()
			}

			function setContactoInputBlur(event) {
				"+569 " === vm.cliente.telefono && (vm.cliente.telefono = "")
			}

			function setContactoInputKey(event) {
				return 8 === event.which && "+569 " === vm.cliente.telefono || !(event.which >= 48 && event.which <= 57 || 8 === event.which) ? (event.preventDefault(), !1) : void 0
			}

			function setContactoInputChange() {
				var form = $scope.contactForm;
				angular.isDefined(form) && (form.telefono.$setValidity("largoInvalido", !0), angular.isDefined(vm.cliente.telefono) && form.telefono.$setValidity("largoInvalido", 8 === vm.cliente.telefono.length))
			}

			function sinEspacios(e) {
				32 === e.keyCode && e.preventDefault(), console.log(e)
			}

			function setEmailValid() {
				var form = $scope.contactForm;
				vm.mal = $scope.email, angular.isDefined(form) && form.email.$setValidity("formatoIncorrecto", vm.emailReg.test(vm.cliente.email))
			}

			function tieneSeguros() {
				return 0 === vm.simulacionSelecionada.seguros.length ? "No" : "SÃ­"
			}

			function evaluateBancaCod(marca) {
				var valorMarca = angular.isDefined(marca) ? marca.toUpperCase() : "1";
				switch (valorMarca) {
					case "1":
						return "bch";
					case "2":
						return "bec";
					case "3":
						return "cch";
					default:
						return "bch"
				}
			}

			function stepCompleted(stepNumber) {
				switch (stepNumber) {
					case 1:
						return vm.step1;
					case 2:
					case 3:
					case 4:
						return vm["step" + stepNumber] && stepCompleted(stepNumber - 1);
					default:
						return !1
				}
			}

			function Cliente(rut, nombre, telefono, email) {
				this.rut = rut, this.nombre = nombre, this.telefono = telefono, this.email = email
			}
			var vm = this;
			vm.title = "formularioContactoController", vm.isCollapsed = !0, vm.flagLadda = !1, vm.emailReg = /^([\dA-Za-z_\.-]+)@([\dA-Za-z\.-]+)\.([A-Za-z\.]{2,3})$/, vm.loading = !0, vm.stepCompleted = stepCompleted, vm.response = responseSimulacion.getSimulacion(), vm.fechaPrimerPago = responseSimulacion.getFechaPrimerPago(), vm.mesesNoPago = responseSimulacion.getMesesNoPago(), vm.cliente = new Cliente("", "", "", ""), vm.tallerProducto = tallerProducto.getData(), vm.tramos = responseSimulacion.getTramos(), vm.tieneSeguros = tieneSeguros, vm.setContactoInputFocus = setContactoInputFocus, vm.setContactoInputBlur = setContactoInputBlur, vm.setContactoInputKey = setContactoInputKey, vm.setContactoInputChange = setContactoInputChange, vm.setEmailValid = setEmailValid, vm.mal = "", vm.sinEspacios = sinEspacios, vm.scrolling = scrolling, init(), vm.enviarSolicitud = function() {
				var r = {
					fechaPrimerVencimiento: vm.fechaPrimerPago,
					mesesNoPago: vm.mesesNoPago,
					simulacionSeleccionada: vm.simulacionSelecionada,
					persona: {
						rut: vm.perfil.rut,
						marca: vm.perfil.marca,
						segmento: vm.tramos.segmento,
						codigoSegmento: vm.tramos.codigoSegmento,
						nombreCompleto: vm.cliente.nombre,
						telefono: "",
						telefonoCelular: "+569 " + vm.cliente.telefono,
						email: vm.cliente.email,
						fechaNacimiento: "",
						rentaLiquida: ""
					},
					firma: vm.firma
				};
				vm.flagLadda = !0, vm.mostrarEnvioError = !1, vm.mostrarEnvioExitoso = !1, simuladorPpSimularConcretarFactory.enviaSolicitudContacto(r).then(function(response) {
					var data = response.data;
					angular.isDefined(data) && 200 === response.status ? vm.mostrarEnvioExitoso = !0 : vm.mostrarEnvioError = !0
				}, function(response) {
					vm.mostrarEnvioError = !0
				}).then(function() {
					vm.flagLadda = !1
				})
			}
		}
		angular.module("WebBancoChile.ccpublico").controller("formularioContactoController", formularioContactoController), formularioContactoController.$inject = ["$state", "comprobanteData", "responseSimulacion", "tallerProducto", "simuladorPpSimularConcretarFactory", "$filter", "perfilCliente", "simuladorPpTallerProductoFactory", "$scope", "$window"]
	}(),
	function() {
		function seleccionaCreditoController(responseSimulacion, $scope, perfilCliente, $state, $window) {
			function init() {
				vm.loading = !1, vm.step1 = !1, vm.step2 = !1, vm.step3 = !1, vm.step4 = !1, "undefined" != typeof vm.response ? (responseSimulacion.setSimulacion(vm.response), vm.marca = evaluateBancaCod(perfilCliente.getPerfil().marca), scrolling(), selectBoton(responseSimulacion.getIndexSimulacionSelect()), selectDefault(vm.simulacionIndex), renombrarSeguros(), segurosSelect(), reordenSimulaciones(), selectBotonMobile(vm.opcionesBtn)) : $state.go("publico-simulacion-credito-consumo", {
					banca: vm.marcaPerfil
				})
			}

			function scrolling() {
				window.scrollTo(0, 0)
			}

			function reordenSimulaciones() {
				for (var nuevoOrden = [], arraySimulaciones = vm.response.simulaciones, simulacionSeleccionada = responseSimulacion.getIndexSimulacionSelect(), i = 0; i < arraySimulaciones.length; i++) i === simulacionSeleccionada && nuevoOrden.push(arraySimulaciones[i]);
				vm.ordenMobile = nuevoOrden, ordenamiento()
			}

			function ordenamiento() {
				for (var simulaciones = vm.response.simulaciones, simulacionSeleccionada = responseSimulacion.getIndexSimulacionSelect(), i = 0; i < simulaciones.length; i++) i !== simulacionSeleccionada && vm.ordenMobile.push(simulaciones[i])
			}

			function evaluateBancaCod(marca) {
				var valorMarca = angular.isDefined(marca) ? marca.toUpperCase() : "1";
				switch (valorMarca) {
					case "1":
						return "bch";
					case "2":
						return "bec";
					case "3":
						return "cch";
					default:
						return "bch"
				}
			}

			function stepCompleted(stepNumber) {
				switch (stepNumber) {
					case 1:
						return vm.step1;
					case 2:
					case 3:
					case 4:
						return vm["step" + stepNumber] && stepCompleted(stepNumber - 1);
					default:
						return !1
				}
			}

			function test(indice) {
				0 === indice && (vm.isCollapsed0 = !vm.isCollapsed0), 1 === indice && (vm.isCollapsed1 = !vm.isCollapsed1), 2 === indice && (vm.isCollapsed2 = !vm.isCollapsed2)
			}

			function segurosSelect() {
				for (var isSeguros = [], tooltip = [], simulaciones = vm.response.simulaciones, i = 0; i < simulaciones.length; i++) simulaciones[i].seguros.length > 0 ? (isSeguros.push("SÃ­"), tooltip.push(!0)) : (isSeguros.push("No"), tooltip.push(!1));
				tooltip[0] === !0 && tooltip[1] === !0 && tooltip[2] === !0 && (tooltip[0] = !1, tooltip[1] = !1, tooltip[2] = !1), vm.tooltip = tooltip, vm.isSeguros = isSeguros
			}

			function selectDefault(opcion) {
				var cuotaAlter1 = 0,
					cuotaAlter2 = 0,
					cuotaSelecionada = 0;
				if (vm.response.simulaciones.sort(function(a, b) {
						return parseInt(a.numeroCuotas, 10) > parseInt(b.numeroCuotas, 10) ? 1 : parseInt(a.numeroCuotas, 10) < parseInt(b.numeroCuotas, 10) ? -1 : 0
					}), vm.response.simulaciones.length > 1) {
					for (var i = 0; i < vm.response.simulaciones.length; i++) parseInt(i, 10) === parseInt(opcion, 10) && (vm.response.simulaciones[i].totalPrimaSeguros = "Mi simulaciÃ³n", cuotaSelecionada = vm.response.simulaciones[i].numeroCuotas);
					for (var j = 0; j < vm.response.simulaciones.length; j++)
						if (parseInt(j, 10) !== parseInt(opcion, 10)) {
							var mensajeStr = "Alternativa de " + parseInt(vm.response.simulaciones[j].numeroCuotas, 10) + " cuotas";
							parseInt(cuotaAlter1, 10) > 0 && parseInt(vm.response.simulaciones[j].numeroCuotas, 10) < parseInt(cuotaSelecionada, 10) && (vm.response.simulaciones[j].totalPrimaSeguros = mensajeStr), parseInt(vm.response.simulaciones[j].numeroCuotas, 10) < parseInt(cuotaSelecionada, 10) && (vm.response.simulaciones[j].totalPrimaSeguros = mensajeStr, cuotaAlter1 = 1), parseInt(cuotaAlter2, 10) > 0 && parseInt(vm.response.simulaciones[j].numeroCuotas, 10) > parseInt(cuotaSelecionada, 10) && (vm.response.simulaciones[j].totalPrimaSeguros = mensajeStr), parseInt(vm.response.simulaciones[j].numeroCuotas, 10) > parseInt(cuotaSelecionada, 10) && (vm.response.simulaciones[j].totalPrimaSeguros = mensajeStr, cuotaAlter2 = 1)
						}
				} else vm.response.simulaciones[0].totalPrimaSeguros = "Mi simulaciÃ³n"
			}

			function renombrarSeguros() {
				for (var i = 1; i <= vm.response.simulaciones.length; i++)
					for (var j = 1; j <= vm.response.simulaciones[i - 1].seguros.length; j++) "SEG.DESGRAVAMEN" === vm.response.simulaciones[i - 1].seguros[j - 1].codigoReferencia && (vm.response.simulaciones[i - 1].seguros[j - 1].descripcion = "Seguro de Desgravamen"), "SEG.CESANTIA" === vm.response.simulaciones[i - 1].seguros[j - 1].codigoReferencia && (vm.response.simulaciones[i - 1].seguros[j - 1].descripcion = "Seguro de Desempleo Involuntario e Incapacidad Temporal"), "SEG.ACCIDENTE" === vm.response.simulaciones[i - 1].seguros[j - 1].codigoReferencia && (vm.response.simulaciones[i - 1].seguros[j - 1].descripcion = "Seguro de Accidentes Personales + Beneficio de Farmacia"), "SEG.ADULTO" === vm.response.simulaciones[i - 1].seguros[j - 1].codigoReferencia && (vm.response.simulaciones[i - 1].seguros[j - 1].descripcion = "Seguro de Adulto Mayor"), "SEG.ASALTO" === vm.response.simulaciones[i - 1].seguros[j - 1].codigoReferencia && (vm.response.simulaciones[i - 1].seguros[j - 1].descripcion = "Seguro de Robo"), "SEG.VIDA" === vm.response.simulaciones[i - 1].seguros[j - 1].codigoReferencia && (vm.response.simulaciones[i - 1].seguros[j - 1].descripcion = "Seguro de Vida"), "SEG.HOGAR" === vm.response.simulaciones[i - 1].seguros[j - 1].codigoReferencia && (vm.response.simulaciones[i - 1].seguros[j - 1].descripcion = "Seguro Hogar Contenido"), "SEG.DESEMPLEO" === vm.response.simulaciones[i - 1].seguros[j - 1].codigoReferencia && (vm.response.simulaciones[i - 1].seguros[j - 1].descripcion = "Seguro de Desempleo Involuntario e Incapacidad Temporal"), "SEG.SALUD" === vm.response.simulaciones[i - 1].seguros[j - 1].codigoReferencia && (vm.response.simulaciones[i - 1].seguros[j - 1].descripcion = "Seguro de Salud Protegida")
			}

			function selectBoton(opcion) {
				for (var cuotas = [], simulaciones = vm.response.simulaciones, i = 0; i < simulaciones.length; i++) cuotas.push(simulaciones[i].numeroCuotas);
				(0 === opcion || angular.isUndefined(opcion)) && (vm.opcion0 = "Seleccionado crÃ©dito en " + cuotas[0] + " cuotas", vm.opcion1 = "Seleccionar crÃ©dito en " + cuotas[1] + " cuotas", vm.opcion2 = "Seleccionar crÃ©dito en " + cuotas[2] + " cuotas", vm.check0 = "chekeado", vm.check1 = "noCheckeado", vm.check2 = "noCheckeado", $scope.btnOpcion0 = "success", $scope.btnOpcion1 = "info", $scope.btnOpcion2 = "info", $scope.activeOpcion0 = "active", $scope.activeOpcion1 = "", $scope.activeOpcion2 = "", responseSimulacion.setIndexSimulacionSelect(opcion)), 1 === opcion && (vm.opcion0 = "Seleccionar crÃ©dito en " + cuotas[0] + " cuotas", vm.opcion1 = "Seleccionado crÃ©dito en " + cuotas[1] + " cuotas", vm.opcion2 = "Seleccionar crÃ©dito en " + cuotas[2] + " cuotas", vm.check0 = "noCheckeado", vm.check1 = "chekeado", vm.check2 = "noCheckeado", $scope.btnOpcion0 = "info", $scope.btnOpcion1 = "success", $scope.btnOpcion2 = "info", $scope.activeOpcion0 = "", $scope.activeOpcion1 = "active", $scope.activeOpcion2 = "", responseSimulacion.setIndexSimulacionSelect(opcion)), 2 === opcion && (vm.opcion0 = "Seleccionar crÃ©dito en " + cuotas[0] + " cuotas", vm.opcion1 = "Seleccionar crÃ©dito en " + cuotas[1] + " cuotas", vm.opcion2 = "Seleccionado crÃ©dito en " + cuotas[2] + " cuotas", vm.check0 = "noCheckeado", vm.check1 = "noCheckeado", vm.check2 = "chekeado", $scope.btnOpcion0 = "info", $scope.btnOpcion1 = "info", $scope.btnOpcion2 = "success", $scope.activeOpcion0 = "", $scope.activeOpcion1 = "", $scope.activeOpcion2 = "active", responseSimulacion.setIndexSimulacionSelect(opcion))
			}

			function selectBotonMobile(opcion) {
				for (var cuotas = [], simulaciones = vm.ordenMobile, simulacionDesk = vm.response.simulaciones, i = 0; i < simulaciones.length; i++) cuotas.push(simulaciones[i].numeroCuotas);
				if (0 === opcion || angular.isUndefined(opcion)) {
					vm.opcionM0 = "Seleccionado crÃ©dito en " + cuotas[0] + " cuotas", vm.opcionM1 = "Seleccionar crÃ©dito en " + cuotas[1] + " cuotas", vm.opcionM2 = "Seleccionar crÃ©dito en " + cuotas[2] + " cuotas", vm.checkM0 = "chekeado", vm.checkM1 = "noCheckeado", vm.checkM2 = "noCheckeado", $scope.btnOpcionM0 = "success", $scope.btnOpcionM1 = "info", $scope.btnOpcionM2 = "info", $scope.activeOpcionM0 = "active", $scope.activeOpcionM1 = "", $scope.activeOpcionM2 = "";
					for (var j = 0; j < simulacionDesk.length; j++) simulaciones[opcion].numeroCuotas === simulacionDesk[j].numeroCuotas && responseSimulacion.setIndexSimulacionSelect(j)
				}
				if (1 === opcion) {
					vm.opcionM0 = "Seleccionar crÃ©dito en " + cuotas[0] + " cuotas", vm.opcionM1 = "Seleccionado crÃ©dito en " + cuotas[1] + " cuotas", vm.opcionM2 = "Seleccionar crÃ©dito en " + cuotas[2] + " cuotas", vm.checkM0 = "noCheckeado", vm.checkM1 = "chekeado", vm.checkM2 = "noCheckeado", $scope.btnOpcionM0 = "info", $scope.btnOpcionM1 = "success ", $scope.btnOpcionM2 = "info", $scope.activeOpcionM0 = "", $scope.activeOpcionM1 = "active", $scope.activeOpcionM2 = "";
					for (var q = 0; q < simulacionDesk.length; q++) simulaciones[opcion].numeroCuotas === simulacionDesk[q].numeroCuotas && responseSimulacion.setIndexSimulacionSelect(q)
				}
				if (2 === opcion) {
					vm.opcionM0 = "Seleccionar crÃ©dito en " + cuotas[0] + " cuotas", vm.opcionM1 = "Seleccionar crÃ©dito en " + cuotas[1] + " cuotas", vm.opcionM2 = "Seleccionado crÃ©dito en " + cuotas[2] + " cuotas", vm.checkM0 = "noCheckeado", vm.checkM1 = "noCheckeado", vm.checkM2 = "chekeado", $scope.btnOpcionM0 = "info", $scope.btnOpcionM1 = "info", $scope.btnOpcionM2 = "success", $scope.activeOpcionM0 = "", $scope.activeOpcionM1 = "", $scope.activeOpcionM2 = "active";
					for (var d = 0; d < simulacionDesk.length; d++) simulaciones[opcion].numeroCuotas === simulacionDesk[d].numeroCuotas && responseSimulacion.setIndexSimulacionSelect(d)
				}
			}
			var vm = this;
			vm.title = "seleccionaCreditoController", vm.loading = !0, vm.stepCompleted = stepCompleted, vm.isCollapsed0 = !0, vm.isCollapsed1 = !0, vm.isCollapsed2 = !0, vm.marcaPerfil = perfilCliente.getMarcaPerfil(),
				vm.selectBoton = selectBoton, vm.response = responseSimulacion.getSimulacion(), vm.fechaPrimerPago = responseSimulacion.getFechaPrimerPago(), vm.mesesNoPago = responseSimulacion.getMesesNoPago(), vm.contratable = responseSimulacion.isContratable(), vm.test = test, vm.simulacionIndex = responseSimulacion.getIndexSimulacionSelect(), vm.reordenSimulaciones = reordenSimulaciones, vm.ordenamiento = ordenamiento, vm.selectBotonMobile = selectBotonMobile, vm.opcionesBtn = 0, vm.scrolling = scrolling, init(), vm.siguiente = function() {
					$state.go("simulador-publico-formulario-contacto")
				}
		}
		angular.module("WebBancoChile.ccpublico").controller("seleccionaCreditoController", seleccionaCreditoController), seleccionaCreditoController.$inject = ["responseSimulacion", "$scope", "perfilCliente", "$state", "$window"]
	}(),
	function() {
		function simulaCreditoController($state, $scope, simuladorPpClienteFactory, simuladorPpTallerProductoFactory, simuladorPpFechaFactory, simuladorPpUFFactory, simuladorPpCaptchaFactory, $filter, gRecaptcha, responseSimulacion, simuladorPpSimularConcretarFactory, tallerProducto, RANGO_CUOTAS_1, RANGO_CUOTAS_2, RANGO_CUOTAS_3, RANGO_CUOTAS_4, TRAMOS, $stateParams, perfilCliente, SITE_KEY_V3, datepickerConfig, comprobanteData, RANGO_UF_SEGURO, $timeout) {
			function init() {
				vm.loading = !1, vm.step1 = !1, vm.step2 = !1, vm.step3 = !1, vm.step4 = !1;
				var dateNow = new Date,
					date = dateNow.getDate() + "/" + (dateNow.getMonth() + 1) + "/" + dateNow.getFullYear();
				vm.fechaActual = date.toString(), gRecaptcha.initialize({
					key: SITE_KEY_V3
				}), scrolling(), vm.simularDisabled = !1, validarMesesNoPago()
			}

			function scrolling() {
				window.scrollTo(0, 0)
			}

			function validMontoAs() {
				"selecciona" === vm.montoAsegurado ? vm.simularDisabled = !0 : (vm.simularDisabled = !1, validarMesesNoPago())
			}

			function stepCompleted(stepNumber) {
				switch (stepNumber) {
					case 1:
						return vm.step1;
					case 2:
					case 3:
					case 4:
						return vm["step" + stepNumber] && stepCompleted(stepNumber - 1);
					default:
						return !1
				}
			}

			function redirectSimulacionPrivado() {
				var urlSimulador = "https://portalpersonas.bancochile.cl/mibancochile-web/front/persona/index.html#/credito-consumo/oportunidad/simulacion-curse";
				vm.tienePreaprobado && (urlSimulador = "https://portalpersonas.bancochile.cl/mibancochile-web/front/persona/index.html#/simulador-consumo/simula-credito"), window.open(urlSimulador)
			}

			function openDP($event) {
				$event.preventDefault(), $event.stopPropagation(), vm.dpIsOpened = !0
			}

			function disabledDPDays(date, mode) {
				return "day" === mode && (0 === formatoFechaInverso(date).getDay() || 6 === formatoFechaInverso(date).getDay())
			}

			function formatoFechaInverso(date) {
				if ("[object String]" === Object.prototype.toString.call(date)) {
					var aux = date.split("/");
					return new Date(aux[2], aux[1] - 1, aux[0])
				}
				return date
			}

			function esFechaHabil() {
				simuladorPpClienteFactory.esFechaHabil().then(function(data) {
					vm.simulador.fechaPrimerPago = data.fecha, vm.fechaPrimerPago = moment(data.fecha, "DD/MM/YYYY"), vm.fechaPrimerPagoOriginal = moment(data.fecha, "DD/MM/YYYY"), vm.dt = moment(data.fecha, "DD/MM/YYYY").format("DD/MM/YYYY"), vm.date = {
						startDate: moment(data.fecha, "DD/MM/YYYY"),
						endDate: moment(data.fecha, "DD/MM/YYYY").add(60, "days")
					}, vm.mostrarFechaPrimerPago = !0, validaDiaPagos()
				})
			}

			function valorUf() {
				simuladorPpUFFactory.getUF().then(function(data) {
					data && (vm.valorUFDia = data)
				})
			}

			function obtieneTallerProductos() {
				vm.simularDisabled = !0, vm.tallerProductoLoading = !0, vm.listaProductos = {}, vm.mostrarEnvioError = !1;
				var request = {
					fechaNacimiento: "29/07/1983",
					marca: vm.banca.siglas.toUpperCase(),
					rut: vm.rut.substring(0, vm.rut.length - 1) + "-" + vm.rut.charAt(vm.rut.length - 1),
					codigoSegmento: vm.tramo.segmento,
					segmento: vm.tramo.segmento
				};
				simuladorPpTallerProductoFactory.obtieneDetalleProducto(request).then(function(data) {
					if (data) {
						vm.simularDisabled = !1, vm.tallerProductoLoading = !1, vm.listaProductos = data;
						var seguros = [];
						angular.forEach(vm.listaProductos.categorias, function(categoria, index) {
							"SIMULACION" == categoria.nombreCategoria ? simulacionPosicion = index : categoria.nombreCategoria.indexOf("SEGURO") > -1 && (seguros.push(categoria), "SEGURO_ACCIDENTE" == categoria.nombreCategoria ? seguroAccidenteCategoriaPosicion = index : "SEGURO_CESANTIA" == categoria.nombreCategoria ? seguroCesantiaCategoriaPosicion = index : "SEGURO_DESGRAVAMEN" == categoria.nombreCategoria ? seguroDesgravamenCategoriaPosicion = index : "SEGURO_VIDA" == categoria.nombreCategoria ? seguroVidaCategoriaPosicion = index : "SEGURO_SALUD" == categoria.nombreCategoria ? seguroSaludCategoriaPosicion = index : "SEGURO_HOGAR" == categoria.nombreCategoria ? seguroHogarCategoriaPosicion = index : "SEGURO_ROBO" == categoria.nombreCategoria && (seguroRoboCategoriaPosicion = index))
						}), angular.forEach(vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto, function(atributo, index) {
							switch (atributo.codigoReferencia) {
								case "CRED.MONTOASOLICITAR":
									vm.simulador.monto = null != atributo.valor ? atributo.valor : "3000000";
									var valoresMinMax = atributo.valorValidacion.split("|");
									vm.montoMinimoValor = parseInt(valoresMinMax[0], 10), vm.montoMaximoValor = parseInt(valoresMinMax[1], 10), montoSolicitarPosicion = index;
									break;
								case "CRED.NUMEROCUOTAS":
									vm.listaCuotas = atributo.validaciones, vm.defaultCuota = atributo.valor, numeroCuotaPosicion = index;
									break;
								case "CRED.1MESNOPAGO":
									vm.listaPrimerMesNoPago = atributo.validaciones, primerMesNoPagoPosicion = index;
									break;
								case "CRED.2MESNOPAGO":
									vm.listaSegundoMesNoPago = atributo.validaciones, segundoMesNoPagoPosicion = index;
									break;
								case "CRED.UFDELDIA":
									vm.simulador.valorUF = atributo.valor;
									break;
								case "CRED.TO":
									vm.tipoOperacion = atributo.valor, toPosicion = index;
									break;
								case "CRED.CODIGOUNICO":
									vm.codigoUnico = atributo.valor, codigoUnicoPosicion = index;
									break;
								case "CRED.NOTARIO":
									notarioPosicion = index;
									break;
								case "CRED.PERIODICIDPAGO":
									periodicidadPagoPosicion = index;
									break;
								case "CRED.DIAS1ERVENCIMIE":
									angular.forEach(atributo.validaciones, function(validacion) {
										"Valor Min" == validacion.descValidacion ? vm.minDay = parseInt(validacion.valor, 10) : "Valor Max" == validacion.descValidacion && (vm.maxDay = parseInt(validacion.valor, 10))
									}), dias1erVencimientoPosicion = index
							}
						}), angular.forEach(seguros, function(seguro) {
							angular.forEach(seguro.listAtributosProducto, function(atributo, index) {
								switch (atributo.codigoReferencia) {
									case "SEG.ACCIDENTE":
										vm.seguros[0] = atributo, seguroAccidenteAtributoPosicion = index, atributo.valor = JSON.parse(atributo.valor);
										break;
									case "SEG.ACCIDENTECORE":
										seguroAccidenteCoreAtributoPosicion = index;
										break;
									case "SEG.ACCIDENTEMONEDA":
										seguroAccidenteMonedaAtributoPosicion = index;
										break;
									case "SEG.COBERTACCIDENTE":
										seguroAccidenteCobertaAtributoPosicion = index;
										break;
									case "SEG.CESANTIA":
										vm.seguros[1] = atributo, seguroCesantiaAtributoPosicion = index, atributo.valor = JSON.parse(atributo.valor);
										break;
									case "SEG.CESANTIACORE":
										seguroCesantiaCoreAtributoPosicion = index;
										break;
									case "SEG.CESANTIAMONEDA":
										seguroCesantiaMonedaAtributoPosicion = index;
										break;
									case "SEG.DESGRAVAMEN":
										vm.seguros[2] = atributo, seguroDesgravamenAtributoPosicion = index, atributo.valor = JSON.parse(atributo.valor);
										break;
									case "SEG.DESGRMONEDA":
										seguroDesgrMonedaAtributoPosicion = index;
										break;
									case "SEG.DESGRCORE":
										seguroDesgrCoreAtributoPosicion = index;
										break;
									case "SEG.VIDA":
										vm.seguros[3] = atributo, seguroVidaAtributoPosicion = index, atributo.valor = JSON.parse(atributo.valor);
										break;
									case "SEG.VIDAMONEDA":
										seguroVidaMonedaAtributoPosicion = index;
										break;
									case "SEG.VIDACORE":
										seguroVidaCoreAtributoPosicion = index;
										break;
									case "SEG.SALUD":
										vm.seguros[4] = atributo, seguroSaludAtributoPosicion = index, atributo.valor = JSON.parse(atributo.valor);
										break;
									case "SEG.SALUDMONEDA":
										seguroSaludMonedaAtributoPosicion = index;
										break;
									case "SEG.SALUDCORE":
										seguroSaludCoreAtributoPosicion = index;
										break;
									case "SEG.HOGAR":
										vm.seguros[5] = atributo, seguroHogarAtributoPosicion = index, atributo.valor = JSON.parse(atributo.valor);
										break;
									case "SEG.HOGARMONEDA":
										seguroHogarMonedaAtributoPosicion = index;
										break;
									case "SEG.HOGARCORE":
										seguroHogarCoreAtributoPosicion = index;
										break;
									case "SEG.ASALTO":
										vm.seguros[6] = atributo, seguroAsaltoAtributoPosicion = index, atributo.valor = JSON.parse(atributo.valor);
										break;
									case "SEG.ASALTOMONEDA":
										seguroAsaltoMonedaAtributoPosicion = index;
										break;
									case "SEG.ASALTOCORE":
										seguroAsaltoCoreAtributoPosicion = index
								}
							})
						});
						for (var s = 0; 3 > s; s++) angular.isDefined(vm.seguros[s]) || (vm.seguros[s] = {
							visible: 0,
							valor: !1
						});
						({
							rut: vm.rut.substring(0, vm.rut.length - 1) + "-" + vm.rut.charAt(vm.rut.length - 1),
							minDay: vm.minDay,
							maxDay: vm.maxDay
						});
						angular.forEach(vm.listaCuotas, function(cuota) {
							cuota.descValidacion = parseInt(cuota.descValidacion, 10), cuota.idValidacion == vm.defaultCuota && (vm.simulador.cuota = cuota, vm.cuotaOriginal = vm.simulador.cuota)
						}), vm.listaCuotas = $filter("orderBy")(vm.listaCuotas, "descValidacion"), angular.forEach(vm.listaPrimerMesNoPago, function(primerMesNoPago) {
							primerMesNoPago.codigoReferencia = parseInt(primerMesNoPago.codigoReferencia, 10)
						}), vm.listaPrimerMesNoPago = $filter("orderBy")(vm.listaPrimerMesNoPago, "codigoReferencia"), vm.listaPrimerMesNoPago_ORIGINAL = clone(vm.listaPrimerMesNoPago), angular.forEach(vm.listaSegundoMesNoPago, function(segundoMesNoPago) {
							segundoMesNoPago.codigoReferencia = parseInt(segundoMesNoPago.codigoReferencia, 10)
						}), vm.listaSegundoMesNoPago = $filter("orderBy")(vm.listaSegundoMesNoPago, "codigoReferencia"), vm.listaSegundoMesNoPago_ORIGINAL = clone(vm.listaSegundoMesNoPago), vm.isActivoSeguroDesgravamen(), $timeout(function() {
							validarMonto()
						}, 50)
					}
				})
			}

			function validarMonto() {
				var monto = vm.simulador.monto;
				"" === monto || isNaN(monto) ? mensajeValidacionMonto(!0, !1, !1, !0, !1, !1) : monto < vm.montoMinimoValor ? (mensajeValidacionMonto(!0, !0, !1, !1, !1, !1), vm.simularDisabled = !0) : monto > vm.montoMaximoValor ? (mensajeValidacionMonto(!0, !1, !0, !1, !1, !1), vm.simularDisabled = !0) : monto / vm.valorUFDia > 3e3 ? (mensajeValidacionMonto(!1, !1, !1, !1, !0, !1), vm.simularDisabled = !0) : (mensajeValidacionMonto(!1, !1, !1, !1, !1, !1), vm.simularDisabled = !1), vm.isActivoSeguroDesgravamen()
			}

			function validaFechaPrimerPago() {
				var fechaTemp = angular.element("#dt").val(),
					dia = void 0 !== fechaTemp ? parseInt(fechaTemp.toString().substring(0, 2), 10) : 1;
				vm.simulador.fechaPrimerPago != moment(fechaTemp, "DD/MM/YYYY").toString() && (vm.isFechaPrimerPagoValida = dia > 0 && 26 > dia, parseInt(vm.simulador.fechaPrimerPago.toString().substring(4, 6), 10) == parseInt(fechaTemp.toString().substring(4, 6), 10) && vm.isFechaPrimerPagoValida || (vm.simulador.primerMesNoPago = {
					valor: "0",
					codigoReferencia: 0,
					idValidacion: 0,
					descValidacion: "Selecciona..."
				}, vm.simulador.segundoMesNoPago = {
					valor: "0",
					codigoReferencia: 0,
					idValidacion: 0,
					descValidacion: "Selecciona..."
				}), vm.simulador.fechaPrimerPago = fechaTemp, vm.fechaPrimerPago = moment(fechaTemp, "DD/MM/YYYY"), setMesesNoPago())
			}

			function reiniciarPimerMesNoPagoLista() {
				vm.simulador.primerMesNoPago = {
					valor: "0",
					codigoReferencia: 0,
					idValidacion: 0,
					descValidacion: "Selecciona..."
				}, vm.listaPrimerMesNoPago = clone(vm.listaPrimerMesNoPago_ORIGINAL)
			}

			function reiniciarSegundoMesNoPagoLista() {
				vm.simulador.segundoMesNoPago = {
					valor: "0",
					codigoReferencia: 0,
					idValidacion: 0,
					descValidacion: "Selecciona..."
				}, vm.listaSegundoMesNoPago = clone(vm.listaSegundoMesNoPago_ORIGINAL), vm.isSegundoMesNoPagoSDisabled = !0
			}

			function reiniciarMesesNoPagoLista() {
				reiniciarPimerMesNoPagoLista(), reiniciarSegundoMesNoPagoLista()
			}

			function changeFechas() {
				reiniciarMesesNoPagoLista(), validarMesesNoPago()
			}

			function validarMesesNoPago() {
				vm.simularDisabled = vm.isFechaPrimerPagoValida && !vm.isActivadoMesesNoPago ? !0 : !1, vm.isActivadoMesesNoPago ? "Selecciona..." != vm.simulador.primerMesNoPago.descValidacion ? (vm.simularDisabled = !1, vm.isSegundoMesNoPagoSDisabled = !1, vm.simulador.segundoMesNoPago = {
					valor: "0",
					codigoReferencia: 0,
					idValidacion: 0,
					descValidacion: "Selecciona..."
				}) : "Selecciona..." == vm.simulador.primerMesNoPago.descValidacion && (vm.simularDisabled = !0) : (vm.simularDisabled = !1, vm.simulador.primerMesNoPago = {
					valor: "0",
					codigoReferencia: 0,
					idValidacion: 0,
					descValidacion: "Selecciona..."
				}, vm.simulador.segundoMesNoPago = {
					valor: "0",
					codigoReferencia: 0,
					idValidacion: 0,
					descValidacion: "Selecciona..."
				}, vm.isSegundoMesNoPagoSDisabled = !0), setMesesNoPago(), "Selecciona..." != vm.simulador.primerMesNoPago.descValidacion && validarReglaMesesNoPago()
			}

			function setMesesNoPago() {
				vm.listaPrimerMesNoPago = clone(vm.listaPrimerMesNoPago_ORIGINAL), vm.listaSegundoMesNoPago = clone(vm.listaSegundoMesNoPago_ORIGINAL), setMesNoPago(vm.listaPrimerMesNoPago, "mes_no_pago_1"), setMesNoPago(vm.listaSegundoMesNoPago, "mes_no_pago_2"), validarPrimerPagoYMesesNoPagoMensaje()
			}

			function setMesNoPago(n, mesNoPago) {
				if (vm.isActivadoMesesNoPago) {
					var cuota = vm.numeroCuotas,
						dt = getFechaPrimerPagoMoment().format("DD/MM/YYYY");
					if (selectedMes = parseInt(dt.toString().substring(3, 5), 10), 12 >= cuota)
						if (("mes_no_pago_1" == mesNoPago || "mes_no_pago_2" == mesNoPago && 12 > cuota) && (n = n.filter(quitarMes)), 11 == cuota) n = n.filter(quitarMes);
						else
							for (var i = 0; CANTIDAD_A_QUITAR - cuota > i; i++) n = evaluarPrincipioMeses(n);
					if ("mes_no_pago_1" == mesNoPago)
						if (12 == cuota) vm.listaPrimerMesNoPago = n.slice();
						else if (12 > cuota) n = evaluarPrincipioMeses(n), vm.listaPrimerMesNoPago = n.slice();
					else if (cuota > 12)
						for (var j = 0; j < vm.listaPrimerMesNoPago.length; j++) vm.listaPrimerMesNoPago[j].descValidacion = "Todos los " + vm.listaPrimerMesNoPago[j].descValidacion;
					"mes_no_pago_2" == mesNoPago && (vm.listaSegundoMesNoPago = n.slice(), selectedMes = vm.simulador.primerMesNoPago.codigoReferencia, vm.listaSegundoMesNoPago = vm.listaSegundoMesNoPago.filter(quitarMes), selectedMes = selectedMes - 1 === 0 ? 12 : vm.simulador.primerMesNoPago.codigoReferencia - 1, vm.listaSegundoMesNoPago = vm.listaSegundoMesNoPago.filter(quitarMes), selectedMes = parseInt(vm.simulador.primerMesNoPago.codigoReferencia, 10) + 1 == 13 ? 1 : parseInt(vm.simulador.primerMesNoPago.codigoReferencia, 10) + 1, vm.listaSegundoMesNoPago = vm.listaSegundoMesNoPago.filter(quitarMes), cuota > 12 && angular.forEach(vm.listaSegundoMesNoPago, function(segundoMesNoPago) {
						segundoMesNoPago.descValidacion = "Todos los " + segundoMesNoPago.descValidacion
					}))
				}
			}

			function quitarMes(mes) {
				return mes.codigoReferencia != selectedMes
			}

			function evaluarPrincipioMeses(meses) {
				return selectedMes - 1 === 0 ? selectedMes = 12 : --selectedMes, meses.filter(quitarMes)
			}

			function clone(obj) {
				if (null === obj || "object" != typeof obj) return obj;
				var temp = obj.constructor();
				for (var key in obj) temp[key] = clone(obj[key]);
				return temp
			}

			function validaDiaPagos() {
				var dt = getFechaPrimerPagoMoment().format("DD/MM/YYYY"),
					diaPrimerPago = parseInt(dt.substring(0, 3), 10);
				0 > diaPrimerPago || diaPrimerPago > 26 ? vm.isFechaPrimerPagoValida = !1 : vm.isFechaPrimerPagoValida = !0, setMesesNoPago()
			}

			function validarPrimerPagoYMesesNoPagoMensaje() {
				vm.isMensajeProximoAnhoMes = !1;
				var dt = getFechaPrimerPagoMoment().format("DD/MM/YYYY"),
					mesPrimerPago = parseInt(dt.substring(3, 6), 10);
				!vm.isActivadoMesesNoPago || vm.simulador.primerMesNoPago.codigoReferencia != mesPrimerPago && vm.simulador.segundoMesNoPago.codigoReferencia != mesPrimerPago ? vm.isMensajeProximoAnhoMes = !1 : (vm.isMensajeProximoAnhoMes = !0, vm.mensajeMesProximoAnho = vm.listaPrimerMesNoPago_ORIGINAL[mesPrimerPago - 1].descValidacion.replace("Todos los ", ""), vm.primerOSegundoMes = vm.simulador.primerMesNoPago.codigoReferencia == mesPrimerPago ? "primer" : "segundo")
			}

			function mensajeValidacionMonto(isInValido, isMontoMenorQueMinimo, isMontoMayorQueMaximo, isMontoVacio, isMontoMayor3000UF) {
				vm.isInValido = isInValido, vm.isMontoMenorQueMinimo = isMontoMenorQueMinimo, vm.isMontoMayorQueMaximo = isMontoMayorQueMaximo, vm.isMontoVacio = isMontoVacio, vm.isMontoMayor3000UF = isMontoMayor3000UF
			}

			function isActivoSeguroDesgravamen() {
				var mon = (void 0 !== angular.element("#monto").val() && angular.element("#monto").val().length > 0 ? parseInt(angular.element("#monto").val().replace(/[.]/g, ""), 10) : "", vm.simulador.monto),
					montoUF = "" !== mon ? mon / vm.valorUFDia : null;
				null != montoUF && montoUF > 500 || parseInt(vm.simulador.cuota.descValidacion, 10) >= vm.cuotaSeguroDesgravamenObligatorio ? (vm.isSeguroDesgravamen = !0, vm.isSeguroDesgravamenDisabled = !0, vm.textSeguro = "El seguro de Desgravamen es obligatorio si el monto supera las 500 UF y/o se solicita con un nÃºmero mayor a 48 cuotas.") : vm.numeroCuotas >= vm.cuotaSeguroDesgravamenObligatorio ? (vm.isSeguroDesgravamen = !0, vm.isSeguroDesgravamenDisabled = !0, vm.textSeguro = "El seguro de Desgravamen es obligatorio si el monto supera las 500 UF y/o se solicita con un nÃºmero mayor a 48 cuotas.") : vm.isSeguroDesgravamenDisabled = !1
			}

			function DatosSeguro(codigoReferencia, codigoSCS, descripcion, moneda, prima, tipoSeguro) {
				this.codigoReferencia = codigoReferencia, this.codigoSCS = codigoSCS, this.descripcion = descripcion, this.moneda = moneda, this.prima = prima, this.tipoSeguro = tipoSeguro
			}

			function DatosSeguroAccidente(codigoReferencia, codigoSCS, descripcion, moneda, prima, tipoSeguro, montoCoberturaUF, plazoMeses) {
				this.codigoReferencia = codigoReferencia, this.codigoSCS = codigoSCS, this.descripcion = descripcion, this.moneda = moneda, this.prima = prima, this.tipoSeguro = tipoSeguro, this.montoCoberturaUF = montoCoberturaUF, this.plazoMeses = plazoMeses
			}

			function simular() {
				return vm.isMontoVacio || vm.isMontoMenorQueMinimo || vm.isMontoMayorQueMaximo ? !1 : (vm.loadingSimulacion = !0, vm.mostrarEnvioError = !1, responseSimulacion.setContratable(!vm.isMontoMayor3000UF), responseSimulacion.setTramos(vm.tramo), setTallerProductosConValoresSeleccionados(), validarReglasEjecutarSimulacion(), void 0)
			}

			function setTallerProductosConValoresSeleccionados() {
				vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[numeroCuotaPosicion].valor = vm.simulador.cuota.idValidacion, vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[montoSolicitarPosicion].valor = vm.simulador.monto, tallerProducto.setData(vm.listaProductos)
			}

			function validarReglasEjecutarSimulacion() {
				var validas = !0,
					atributoPrimerMesNoPago = {},
					atributoSegundoMesNoPago = {},
					mesesNoPago = [],
					atributoMontoSolicitar = {},
					montoSolicitar = [],
					atributoNumeroCuotas = {},
					numeroCuotas = [],
					atributoDiaPrimerVencimiento = {},
					diaPrimerVencimiento = [];
				return "Selecciona..." != vm.simulador.primerMesNoPago.descValidacion && (atributoPrimerMesNoPago = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[primerMesNoPagoPosicion], atributoPrimerMesNoPago.valor = vm.simulador.primerMesNoPago.idValidacion, mesesNoPago.push(atributoPrimerMesNoPago), "Selecciona..." != vm.simulador.segundoMesNoPago.descValidacion ? (atributoSegundoMesNoPago = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[segundoMesNoPagoPosicion], atributoSegundoMesNoPago.valor = vm.simulador.segundoMesNoPago.idValidacion, mesesNoPago.push(atributoSegundoMesNoPago)) : (atributoSegundoMesNoPago = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[segundoMesNoPagoPosicion], atributoSegundoMesNoPago.valor = null, mesesNoPago.push(atributoSegundoMesNoPago))), atributoMontoSolicitar = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[montoSolicitarPosicion], atributoMontoSolicitar.valor = vm.simulador.monto, montoSolicitar.push(atributoMontoSolicitar), atributoNumeroCuotas = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[numeroCuotaPosicion], atributoNumeroCuotas.valor = vm.simulador.cuota.idValidacion, numeroCuotas.push(atributoNumeroCuotas), atributoDiaPrimerVencimiento = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[dias1erVencimientoPosicion], atributoDiaPrimerVencimiento.valor = getFechaPrimerPagoMoment().format("DD/MM/YYYY"), diaPrimerVencimiento.push(atributoDiaPrimerVencimiento), 0 === mesesNoPago.length ? Promise.all([validarReglaPromise(montoSolicitar), validarReglaPromise(numeroCuotas), validarReglaPromise(diaPrimerVencimiento)]).then(function(values) {
					onValidarReglaResponse(values)
				}) : Promise.all([validarReglaPromise(mesesNoPago), validarReglaPromise(montoSolicitar), validarReglaPromise(numeroCuotas), validarReglaPromise(diaPrimerVencimiento)]).then(function(values) {
					onValidarReglaResponse(values)
				}), validas
			}

			function onValidarReglaResponse(results) {
				for (var isValid = !0, i = 0; i < results.length; i++)
					if ("undefined" == typeof results[i] || 0 !== results[i].header.code) {
						isValid = !1;
						break
					}
				isValid ? ejecutarSimulacion() : (vm.loadingSimulacion = !1, vm.mostrarEnvioError = !0, $scope.$apply())
			}

			function validarReglaPromise(atributos) {
				var request = {
					idProducto: 0,
					nombre: atributos[0].codigoReferencia,
					atributosConsulta: atributos
				};
				return simuladorPpTallerProductoFactory.validarRegla(request)
			}

			function validarReglaMesesNoPago() {
				var atributoPrimerMesNoPago = {},
					atributoSegundoMesNoPago = {},
					mesesNoPago = [];
				return "Selecciona..." != vm.simulador.primerMesNoPago.descValidacion && (atributoPrimerMesNoPago = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[primerMesNoPagoPosicion], atributoPrimerMesNoPago.valor = vm.simulador.primerMesNoPago.idValidacion, mesesNoPago.push(atributoPrimerMesNoPago), "Selecciona..." != vm.simulador.segundoMesNoPago.descValidacion ? (atributoSegundoMesNoPago = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[segundoMesNoPagoPosicion], atributoSegundoMesNoPago.valor = vm.simulador.segundoMesNoPago.idValidacion, mesesNoPago.push(atributoSegundoMesNoPago)) : (atributoSegundoMesNoPago = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[segundoMesNoPagoPosicion], atributoSegundoMesNoPago.valor = null, mesesNoPago.push(atributoSegundoMesNoPago))), validarRegla(mesesNoPago)
			}

			function validarRegla(atributos) {
				var valida = !0,
					request = {
						idProducto: 0,
						nombre: atributos[0].codigoReferencia,
						atributosConsulta: atributos
					};
				return simuladorPpTallerProductoFactory.validarRegla(request).then(function(data) {
					valida = void 0 !== data && data.body.length < 1 ? !0 : !1
				}), valida
			}

			function calcularCuotasAlternativas(cuota) {
				var cuotas = [];
				return parseInt(cuota, 10) < parseInt(RANGO_CUOTAS_1[0], 10) + 1 && (cuotas.push(12), cuotas.push(24), responseSimulacion.setIndexSimulacionSelect(0)), parseInt(cuota, 10) > RANGO_CUOTAS_1[0] && parseInt(cuota, 10) < RANGO_CUOTAS_1[1] && (cuotas.push(12), cuotas.push(24), responseSimulacion.setIndexSimulacionSelect(0)), parseInt(cuota, 10) > RANGO_CUOTAS_2[0] && parseInt(cuota, 10) < RANGO_CUOTAS_2[1] && (cuotas.push(6), cuotas.push(48), responseSimulacion.setIndexSimulacionSelect(1)), parseInt(cuota, 10) > RANGO_CUOTAS_3[0] && parseInt(cuota, 10) < RANGO_CUOTAS_3[1] && (cuotas.push(12), cuotas.push(60), responseSimulacion.setIndexSimulacionSelect(1)), parseInt(cuota, 10) > RANGO_CUOTAS_4[0] && parseInt(cuota, 10) < RANGO_CUOTAS_4[1] && (cuotas.push(12), cuotas.push(24), responseSimulacion.setIndexSimulacionSelect(2)), cuotas
			}

			function ejecutarSimulacion() {
				var valorNotario = 0,
					tipoOperacion = 0,
					frecuenciaDePago = 0,
					tipoCredito = "",
					mesesNoPago = [],
					seguroDesgravamen = new DatosSeguro("", "", "", "", "", ""),
					seguroDesempleo = (new DatosSeguroAccidente("", "", "", "", "", "", "", ""), new DatosSeguro("", "", "", "", "", "")),
					seguroVida = new DatosSeguro("", "", "", "", "", ""),
					seguroSalud = new DatosSeguro("", "", "", "", "", ""),
					seguroHogar = new DatosSeguro("", "", "", "", "", ""),
					seguroAsalto = new DatosSeguro("", "", "", "", "", ""),
					segurosActivos = [];
				"Selecciona..." != vm.simulador.primerMesNoPago.descValidacion && mesesNoPago.push(vm.simulador.primerMesNoPago.descValidacion.replace("Todos los ", "")), "Selecciona..." != vm.simulador.segundoMesNoPago.descValidacion && mesesNoPago.push(vm.simulador.segundoMesNoPago.descValidacion.replace("Todos los ", "")), valorNotario = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[notarioPosicion].valor, tipoOperacion = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[toPosicion].valor;
				for (var j = 0; j < vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[periodicidadPagoPosicion].validaciones.length; j++)
					if (vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[periodicidadPagoPosicion].valor == vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[periodicidadPagoPosicion].validaciones[j].idValidacion) {
						frecuenciaDePago = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[periodicidadPagoPosicion].validaciones[j].codigoReferencia;
						break
					}
				tipoCredito = vm.listaProductos.categorias[simulacionPosicion].listAtributosProducto[codigoUnicoPosicion].valor, vm.isSeguroDesempleo === !0 && (seguroDesempleo.codigoSCS = vm.listaProductos.categorias[seguroCesantiaCategoriaPosicion].listAtributosProducto[seguroCesantiaCoreAtributoPosicion].valor, seguroDesempleo.prima = "", seguroDesempleo.tipoSeguro = "CRED", seguroDesempleo.moneda = vm.listaProductos.categorias[seguroCesantiaCategoriaPosicion].listAtributosProducto[seguroCesantiaMonedaAtributoPosicion].valor, seguroDesempleo.codigoReferencia = vm.listaProductos.categorias[seguroCesantiaCategoriaPosicion].listAtributosProducto[seguroCesantiaAtributoPosicion].codigoReferencia, seguroDesempleo.descripcion = vm.listaProductos.categorias[seguroCesantiaCategoriaPosicion].listAtributosProducto[seguroCesantiaAtributoPosicion].descripcion, segurosActivos.push(seguroDesempleo)), vm.isSeguroDesgravamen === !0 && (seguroDesgravamen.codigoSCS = vm.listaProductos.categorias[seguroDesgravamenCategoriaPosicion].listAtributosProducto[seguroDesgrCoreAtributoPosicion].valor, seguroDesgravamen.prima = "", seguroDesgravamen.tipoSeguro = "CRED", seguroDesgravamen.moneda = vm.listaProductos.categorias[seguroDesgravamenCategoriaPosicion].listAtributosProducto[seguroDesgrMonedaAtributoPosicion].valor, seguroDesgravamen.codigoReferencia = vm.listaProductos.categorias[seguroDesgravamenCategoriaPosicion].listAtributosProducto[seguroDesgravamenAtributoPosicion].codigoReferencia, seguroDesgravamen.descripcion = vm.listaProductos.categorias[seguroDesgravamenCategoriaPosicion].listAtributosProducto[seguroDesgravamenAtributoPosicion].descripcion, segurosActivos.push(seguroDesgravamen)), vm.seguros[3].valor && 3 == vm.banca.codMarca && (seguroVida.codigoSCS = vm.listaProductos.categorias[seguroVidaCategoriaPosicion].listAtributosProducto[seguroVidaCoreAtributoPosicion].valor, seguroVida.prima = "", seguroVida.tipoSeguro = "CRED", seguroVida.moneda = vm.listaProductos.categorias[seguroVidaCategoriaPosicion].listAtributosProducto[seguroVidaMonedaAtributoPosicion].valor, seguroVida.codigoReferencia = vm.listaProductos.categorias[seguroVidaCategoriaPosicion].listAtributosProducto[seguroVidaAtributoPosicion].codigoReferencia, seguroVida.descripcion = vm.listaProductos.categorias[seguroVidaCategoriaPosicion].listAtributosProducto[seguroVidaAtributoPosicion].descripcion, segurosActivos.push(seguroVida)), vm.seguros[4].valor && 3 == vm.banca.codMarca && (seguroSalud.codigoSCS = vm.listaProductos.categorias[seguroSaludCategoriaPosicion].listAtributosProducto[seguroSaludCoreAtributoPosicion].valor, seguroSalud.prima = "", seguroSalud.tipoSeguro = "CRED", seguroSalud.moneda = vm.listaProductos.categorias[seguroSaludCategoriaPosicion].listAtributosProducto[seguroSaludMonedaAtributoPosicion].valor, seguroSalud.codigoReferencia = vm.listaProductos.categorias[seguroSaludCategoriaPosicion].listAtributosProducto[seguroSaludAtributoPosicion].codigoReferencia, seguroSalud.descripcion = vm.listaProductos.categorias[seguroSaludCategoriaPosicion].listAtributosProducto[seguroSaludAtributoPosicion].descripcion, segurosActivos.push(seguroSalud)), vm.seguros[5].valor && 3 == vm.banca.codMarca && (seguroHogar.codigoSCS = vm.listaProductos.categorias[seguroHogarCategoriaPosicion].listAtributosProducto[seguroHogarCoreAtributoPosicion].valor, seguroHogar.prima = "", seguroHogar.tipoSeguro = "CRED", seguroHogar.moneda = vm.listaProductos.categorias[seguroHogarCategoriaPosicion].listAtributosProducto[seguroHogarMonedaAtributoPosicion].valor, seguroHogar.codigoReferencia = vm.listaProductos.categorias[seguroHogarCategoriaPosicion].listAtributosProducto[seguroHogarAtributoPosicion].codigoReferencia, seguroHogar.descripcion = vm.listaProductos.categorias[seguroHogarCategoriaPosicion].listAtributosProducto[seguroHogarAtributoPosicion].descripcion, segurosActivos.push(seguroHogar)), vm.seguros[6].valor && 3 == vm.banca.codMarca && (seguroAsalto.codigoSCS = vm.listaProductos.categorias[seguroRoboCategoriaPosicion].listAtributosProducto[seguroAsaltoCoreAtributoPosicion].valor, seguroAsalto.prima = "", seguroAsalto.tipoSeguro = "CRED", seguroAsalto.moneda = vm.listaProductos.categorias[seguroRoboCategoriaPosicion].listAtributosProducto[seguroAsaltoMonedaAtributoPosicion].valor, seguroAsalto.codigoReferencia = vm.listaProductos.categorias[seguroRoboCategoriaPosicion].listAtributosProducto[seguroAsaltoAtributoPosicion].codigoReferencia, seguroAsalto.descripcion = vm.listaProductos.categorias[seguroRoboCategoriaPosicion].listAtributosProducto[seguroAsaltoAtributoPosicion].descripcion, segurosActivos.push(seguroAsalto));
				var request = {
					clienteSimulador: {
						rut: vm.rut.slice(0, vm.rut.length - 1) + "-" + vm.rut.slice(vm.rut.length - 1),
						marca: vm.banca.nombre,
						codMarca: vm.banca.codMarca,
						segmento: "Persona",
						marcaFuncionario: null,
						fechaNacimiento: "",
						sexo: "",
						tipoCliente: "P",
						codigoOficina: "994",
						idTramo: vm.tramo.codigoSegmento,
						banca: "Personas"
					},
					formularioDatosCredito: {
						tipoCredito: tipoCredito,
						primerVencimiento: getFechaPrimerPagoMoment().format("DD/MM/YYYY"),
						nroCuotas: vm.numeroCuotas,
						cuotasAlter: calcularCuotasAlternativas(vm.numeroCuotas),
						montoSolicitado: vm.simulador.monto,
						montoBruto: vm.simulador.monto,
						tipoOperacion: tipoOperacion,
						valorNotario: valorNotario,
						frecuenciaDePago: frecuenciaDePago,
						mesesNoPago: mesesNoPago,
						fechaSimulacion: vm.fechaActual,
						seguros: segurosActivos,
						tipoMoneda: "CLP",
						valorUf: vm.valorUFDia,
						preAprobado: !1,
						tasaImpuesto: null
					},
					canal: "INTERNET_P"
				};
				simuladorPpSimularConcretarFactory.simular(request).then(function(response) {
					var data = response.data;
					if (angular.isDefined(data) && 200 === response.status) {
						responseSimulacion.setSimulacion(data), responseSimulacion.setFechaPrimerPago(getFechaPrimerPagoMoment().format("DD/MM/YYYY")), responseSimulacion.setMesesNoPago(mesesNoPago), responseSimulacion.setRut(vm.rut.substring(0, vm.rut.length - 1) + "-" + vm.rut.charAt(vm.rut.length - 1)), responseSimulacion.setValorUFDia(vm.valorUFDia);
						var perfil = {
							rut: vm.rut.substring(0, vm.rut.length - 1) + "-" + vm.rut.charAt(vm.rut.length - 1),
							fechaNacimiento: "22/01/2019",
							marca: vm.banca.codMarca,
							nombreCompleto: "",
							email: ""
						};
						perfilCliente.setPerfil(perfil), $state.go("simulador-publico-selecciona-credito")
					} else vm.mostrarEnvioError = !0
				}, function(response) {
					vm.mostrarEnvioError = !0
				}).then(function() {
					vm.loadingSimulacion = !1
				})
			}

			function validarRut() {
				vm.loadingRutCaptcha = !0, captcha(), obtencionTramos()
			}

			function obtencionTramos() {
				vm.tramo = {
					codigoSegmento: "Masivo_Digital",
					descripcion: "Selecciona...",
					segmento: "Masivo_Digital",
					tramoMaximo: 0,
					tramoMinimo: 0
				}, vm.listaProductos = {}, vm.numeroCuotas = 24, vm.isActivadoMesesNoPago = !1, vm.validarMesesNoPago(), simuladorPpClienteFactory.tramoRenta().then(function(data) {
					vm.tramos = data
				})
			}

			function evaluateCuota() {
				$timeout(function() {
					vm.cuotaVacia = 0 === Number(vm.numeroCuotas), vm.iscuotaMinima = Number(vm.numeroCuotas) < vm.cuotaMinima, vm.iscuotaMaxima = Number(vm.numeroCuotas) > vm.cuotaMaxima, vm.cuotaVacia && vm.iscuotaMinima && (vm.iscuotaMinima = !1), vm.cuotaVacia || vm.iscuotaMinima || vm.iscuotaMaxima ? (vm.isInvalid = !0, vm.simularDisabled = !0) : (vm.isInvalid = !1, vm.simularDisabled = !1), isActivoSeguroDesgravamen()
				}, 50)
			}

			function mensajesCuotas() {
				vm.msj_cuota_min = "Debe ser mÃ­nimo " + vm.cuotaMinima + "cuotas", vm.msj_cuota_max = "Debe ser mÃ¡ximo " + vm.cuotaMaxima + "cuotas", vm.msj_cuota_vacia = "Debes ingresar un nÃºmero de cuotas"
			}

			function reset() {
				vm.isErrorMsgActive = !1, vm.captchaInvalido = !1, "function" == typeof vm.resetCaptchaReset.reset ? (vm.resetCaptchaReset.reset(), vm.isCaptchaProblem = !1) : vm.isCaptchaProblem = !0, vm.isCliente = !1, vm.step1 = !1, vm.isActivadoMesesNoPago = !1, mensajeValidacionMonto(!1, !1, !1, !1, !1), isActivoSeguroDesgravamen(), reiniciarMesesNoPagoLista()
			}

			function validarCaptchaService(data) {
				vm.loadingRutCaptcha = !0;
				var token = data,
					rut = vm.rut.substring(0, vm.rut.length - 1) + "-" + vm.rut.charAt(vm.rut.length - 1),
					requestCaptcha = {
						rut: rut,
						token: token
					};
				simuladorPpCaptchaFactory.validarRutCaptcha(requestCaptcha).then(function(data) {
					var result = "string" == typeof data ? data : data.esCliente.toString();
					switch (vm.loadingRutCaptcha = !1, vm.captchaInvalido = result, vm.isCliente = JSON.parse(result), vm.tienePreaprobado = data.tienePreaprobado, result) {
						case "true":
							break;
						case "false":
							esFechaHabil(), valorUf(), vm.step1 = !vm.isCliente;
							break;
						case "failed":
							vm.resetCaptchaReset.reset()
					}
				})
			}

			function captcha() {
				gRecaptcha.execute({
					action: "simuladorPublico"
				}).then(function(token) {
					validarCaptchaService(token)
				}, function(response) {
					console.log(response)
				})
			}

			function evaluateBanca(marca) {
				var valorMarca = angular.isDefined(marca) ? marca.toUpperCase() : "BCH",
					banca = {
						siglas: "",
						codMarca: "",
						nombre: ""
					};
				return "BCH" == valorMarca ? (banca.siglas = "bch", banca.codMarca = "1", banca.nombre = "Banco de Chile") : "BEC" == valorMarca ? (banca.siglas = "bec", banca.codMarca = "2", banca.nombre = "Banco Edwards") : "CCH" == valorMarca ? (banca.siglas = "cch", banca.codMarca = "3", banca.nombre = "Banco CrediChile") : (banca.siglas = "bch", banca.codMarca = "1", banca.nombre = "Banco de Chile"), banca
			}

			function getFechaPrimerPagoMoment() {
				return angular.isString(vm.dt) ? moment(vm.dt, "DD/MM/YYYY") : moment(vm.dt)
			}

			function getSimulacionFormIsValid() {
				return !(vm.isInValido || vm.isInvalid || vm.isActivadoMesesNoPago && 0 === vm.simulador.primerMesNoPago.codigoReferencia)
			}
			var vm = this;
			vm.title = "simulaCreditoController", vm.loading = !0, vm.loadingSimulacion = !1, vm.loadingRutCaptcha = !1, vm.stepCompleted = stepCompleted, vm.banca = evaluateBanca($stateParams.banca), perfilCliente.setMarcaPerfil($stateParams.banca), vm.simulador = {
				monto: "0",
				cuota: {},
				valorUF: 0,
				fechaPrimerPago: "",
				primerMesNoPago: {
					valor: "0",
					codigoReferencia: 0,
					idValidacion: 0,
					descValidacion: "Selecciona..."
				},
				segundoMesNoPago: {
					valor: "0",
					codigoReferencia: 0,
					idValidacion: 0,
					descValidacion: "Selecciona..."
				}
			}, vm.cuotaOriginal = {}, vm.validarRut = validarRut, vm.reset = reset, vm.rut = "", vm.isRutInValido = !1, vm.isRutVacio = !1, vm.isCliente = !1, vm.scrolling = scrolling, vm.tramo = {
				codigoSegmento: 10,
				descripcion: "Selecciona...",
				segmento: "Masivo_Digital",
				tramoMaximo: 0,
				tramoMinimo: 0
			}, vm.rangoAsegurado = RANGO_UF_SEGURO, vm.montoAsegurado = "selecciona", vm.validMontoAs = validMontoAs, vm.montoMinimoValor = 0, vm.montoMaximoValor = 0, vm.validarMonto = validarMonto, vm.isMontoMenorQueMinimo = !1, vm.isMontoMayorQueMaximo = !1, vm.isMontoVacio = !1, vm.isMontoMayor3000UF = !1, vm.isInValido = !1, vm.simulador.monto = 3e6, vm.captcha = captcha, vm.numeroCuotas = 24, vm.cuotaMinima = 6, vm.cuotaMaxima = 60, vm.evaluateCuota = evaluateCuota, vm.mensajesCuotas = mensajesCuotas, vm.cuotaVacia = !1, vm.iscuotaMinima = !1, vm.iscuotaMaxima = !1, vm.isInvalid = !1, vm.fechaPrimerPago = {}, vm.fechaPrimerPagoOriginal = {}, vm.mostrarFechaPrimerPago = !1, vm.validaFechaPrimerPago = validaFechaPrimerPago, vm.isFechaPrimerPagoValida = !0, vm.changeFechas = changeFechas, vm.fechaActual = "", vm.dpIsOpened = !1, vm.minDay = 0, vm.maxDay = 0, datepickerConfig.showWeeks = !1, datepickerConfig.startingDay = 1, vm.date = {}, vm.validarMesesNoPago = validarMesesNoPago, vm.validarReglaMesesNoPago = validarReglaMesesNoPago, vm.reiniciarPimerMesNoPagoLista = reiniciarPimerMesNoPagoLista, vm.reiniciarSegundoMesNoPagoLista = reiniciarSegundoMesNoPagoLista, vm.reiniciarMesesNoPagoLista = reiniciarMesesNoPagoLista, vm.isActivadoMesesNoPago = !1, vm.isSegundoMesNoPagoSDisabled = !0, vm.getSimulacionFormIsValid = getSimulacionFormIsValid, vm.seguros = [], vm.isActivoSeguroDesgravamen = isActivoSeguroDesgravamen, vm.isSeguroDesgravamenDisabled = !1, vm.isSeguroDesempleoDisabled = !1, vm.isASeguroMuerteAccidentalDisabled = !1, vm.isSeguroDesgravamen = !0, vm.isSeguroDesempleo = !1, vm.cuotaSeguroDesgravamenObligatorio = 49, vm.isMensajeProximoAnhoMes = !1, vm.mensajeMesProximoAnho = "", vm.primerOSegundoMes = "", vm.validarPrimerPagoYMesesNoPagoMensaje = validarPrimerPagoYMesesNoPagoMensaje, vm.validaDiaPagos = validaDiaPagos, vm.listaProductos = {}, vm.listaCuotas = [], vm.defaultCuota = 0, vm.listaPrimerMesNoPago = [], vm.listaSegundoMesNoPago = [], vm.listaPrimerMesNoPago_ORIGINAL = [], vm.listaSegundoMesNoPago_ORIGINAL = [], vm.tipoOperacion = "", vm.codigoUnico = "", vm.tallerProductoLoading = !1, vm.valorUFDia = 0, vm.simular = simular, vm.simularDisabled = !1, vm.redirectSimulacionPrivado = redirectSimulacionPrivado, vm.openDP = openDP, vm.disabledDPDays = disabledDPDays;
			var selectedMes = 0,
				CANTIDAD_A_QUITAR = 11,
				simulacionPosicion = 0,
				montoSolicitarPosicion = 0,
				numeroCuotaPosicion = 0,
				primerMesNoPagoPosicion = 0,
				segundoMesNoPagoPosicion = 0,
				dias1erVencimientoPosicion = 0,
				seguroAccidenteCategoriaPosicion = 0,
				seguroCesantiaCategoriaPosicion = 0,
				seguroDesgravamenCategoriaPosicion = 0,
				seguroVidaCategoriaPosicion = 0,
				seguroSaludCategoriaPosicion = 0,
				seguroHogarCategoriaPosicion = 0,
				seguroRoboCategoriaPosicion = 0,
				seguroAccidenteAtributoPosicion = 0,
				seguroAccidenteCoreAtributoPosicion = 0,
				seguroAccidenteMonedaAtributoPosicion = 0,
				seguroAccidenteCobertaAtributoPosicion = 0,
				seguroCesantiaAtributoPosicion = 0,
				seguroCesantiaCoreAtributoPosicion = 0,
				seguroCesantiaMonedaAtributoPosicion = 0,
				seguroDesgravamenAtributoPosicion = 0,
				seguroDesgrMonedaAtributoPosicion = 0,
				seguroDesgrCoreAtributoPosicion = 0,
				seguroVidaAtributoPosicion = 0,
				seguroVidaMonedaAtributoPosicion = 0,
				seguroVidaCoreAtributoPosicion = 0,
				seguroSaludAtributoPosicion = 0,
				seguroSaludMonedaAtributoPosicion = 0,
				seguroSaludCoreAtributoPosicion = 0,
				seguroHogarAtributoPosicion = 0,
				seguroHogarMonedaAtributoPosicion = 0,
				seguroHogarCoreAtributoPosicion = 0,
				seguroAsaltoAtributoPosicion = 0,
				seguroAsaltoMonedaAtributoPosicion = 0,
				seguroAsaltoCoreAtributoPosicion = 0,
				toPosicion = 0,
				codigoUnicoPosicion = 0,
				notarioPosicion = 0,
				periodicidadPagoPosicion = 0;
			vm.captchaResponse = "", vm.resetCaptchaReset = {}, vm.isErrorMsgActive = !1, vm.captchaInvalido = !1, vm.isCaptchaProblem = !1, init(), vm.completeTramo = function() {
				return "Selecciona..." === vm.tramo.descripcion ? !0 : !1
			}, vm.muestraErrors = function() {
				return !vm.stepCompleted(1) || vm.completeTramo() ? (vm.mostrarEnvioError = !1, !1) : (vm.mostrarEnvioError = !0, !0)
			}, vm.cambioTramoRenta = function() {
				obtieneTallerProductos()
			}, vm.objetoVacio = function(obj) {
				return 0 === Object.keys(obj).length
			}
		}
		angular.module("WebBancoChile.ccpublico").controller("simulaCreditoController", simulaCreditoController), simulaCreditoController.$inject = ["$state", "$scope", "simuladorPpClienteFactory", "simuladorPpTallerProductoFactory", "simuladorPpFechaFactory", "simuladorPpUFFactory", "simuladorPpCaptchaFactory", "$filter", "gRecaptcha", "responseSimulacion", "simuladorPpSimularConcretarFactory", "tallerProducto", "RANGO_CUOTAS_1", "RANGO_CUOTAS_2", "RANGO_CUOTAS_3", "RANGO_CUOTAS_4", "TRAMOS", "$stateParams", "perfilCliente", "SITE_KEY_V3", "datepickerConfig", "comprobanteData", "RANGO_UF_SEGURO", "$timeout"]
	}(),
	function() {
		function simuladorPPPublicoErrorController($state, comprobanteData) {
			function init() {
				return null === vm.informacion ? ($state.go("publico-simulacion-credito-consumo"), !1) : void(vm.marca = evaluateBancaCod(vm.informacion.marca))
			}

			function recargar() {
				return location.reload(), !1
			}

			function evaluateBancaCod(marca) {
				var valorMarca = angular.isDefined(marca) ? marca.toUpperCase() : "1";
				switch (valorMarca) {
					case "1":
						return "bch";
					case "2":
						return "bec";
					case "3":
						return "cch";
					default:
						return "bch"
				}
			}
			var vm = this;
			vm.informacion = comprobanteData.getDataError(), vm.recargar = recargar, init()
		}
		angular.module("WebBancoChile.ccpublico").controller("simuladorPPPublicoErrorController", simuladorPPPublicoErrorController), simuladorPPPublicoErrorController.$inject = ["$state", "comprobanteData"]
	}(),
	function() {
		function simulacionConfig($stateProvider) {
			$stateProvider.state("publico-simulacion-credito-consumo", {
				parent: "root",
				url: "/publico/simulacion-credito-consumo?banca",
				views: {
					"main@": {
						controller: "simulaCreditoController",
						controllerAs: "simulaCredito",
						templateUrl: "simulador-pp-publico/src/modules/simula-credito/simula-credito.tpl.html"
					}
				},
				data: {
					pageTitle: "SimulaciÃ³n CrÃ©dito Consumo"
				}
			}).state("simulador-publico-selecciona-credito", {
				parent: "root",
				url: "/publico/seleciona-credito-simulacion-credito-consumo",
				views: {
					"main@": {
						controller: "seleccionaCreditoController",
						controllerAs: "seleccionaCredito",
						templateUrl: "simulador-pp-publico/src/modules/selecciona-credito/selecciona-credito.tpl.html"
					}
				},
				data: {
					pageTitle: "SimulaciÃ³n CrÃ©dito Consumo"
				}
			}).state("simulador-publico-formulario-contacto", {
				parent: "root",
				url: "/publico/formulario-contacto-credito-consumo",
				views: {
					"main@": {
						controller: "formularioContactoController",
						controllerAs: "formularioContacto",
						templateUrl: "simulador-pp-publico/src/modules/formulario-contacto/formulario-contacto.tpl.html"
					}
				},
				data: {
					pageTitle: "SimulaciÃ³n CrÃ©dito Consumo"
				}
			}).state("simulador-publico-comprobante-credito", {
				parent: "root",
				url: "/publico/comprobante-simulacion-credito-consumo",
				views: {
					"main@": {
						controller: "comprobanteCreditoController",
						controllerAs: "comprobanteCredito",
						templateUrl: "simulador-pp-publico/src/modules/comprobante-credito/comprobante-credito.tpl.html"
					}
				},
				data: {
					pageTitle: "SimulaciÃ³n CrÃ©dito Consumo"
				}
			}).state("simulador-publico-credito-error", {
				parent: "root",
				url: "/publico/simulacion-error",
				views: {
					"main@": {
						controller: "simuladorPPPublicoErrorController",
						controllerAs: "simuladorPPPublicoError",
						templateUrl: "simulador-pp-publico/src/modules/simulador-pp-publico-error/simulador-pp-publico-error.tpl.html"
					}
				},
				data: {
					pageTitle: "SimulaciÃ³n CrÃ©dito Consumo"
				}
			})
		}
		angular.module("WebBancoChile.ccpublico").config(simulacionConfig)
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona.constants", []).constant("SRC_SOLICITUD_CLAVE_PERSONA", "solicitud-clave-persona/src/solicitud-clave-persona/").constant("SRC_SOLICITUD_CLAVE_PERSONA_SINACOFI", "solicitud-clave-persona/src/solicitud-clave-persona-sinacofi/").constant("API_URL2", "/personas/rest").constant("MENSAJES_CATALOGO", {
			DEBE_INGRESAR_RUT: "501196",
			RUT_INVALIDO: "501197",
			DEBE_INGRESAR_CLAVE: "501195",
			CLAVE_NO_CUMPLE_POLITICAS: "501201",
			CLAVES_NO_COINCIDEN: "501202",
			ERROR_SISTEMA: "501198",
			SIN_DISPOSITIVOS: "501199",
			SOLICITUD_OK: "501200",
			DEBE_INGRESAR_TARJETA_CREDITO: "501208",
			DEBE_INGRESAR_SERIE: "Debe ingresar NÂº de documento o NÂº de serie.",
			MSJ_VALIDACION_SINACOFI: "Los datos ingresados son incorrectos. Intenta nuevamente.",
			MSJ_CLIENTE_BCH_EDWARD: "501576"
		}).constant("PAGINAS", {
			PAGINA_ERROR: {
				TIPO: "ERROR",
				CONTENIDO: "Esta pÃ¡gina no se encuentra disponible en estos momentos. Lamentamos los inconvenientes que esto pueda ocasionarte. Por favor, intenta mas tarde o comunicate con nuestro Centro de Ayuda.",
				TITULO: "Ha ocurrido un problema"
			},
			PAGINA_SOLICITUD_OK: {
				TIPO: "SUCCESS",
				CONTENIDO: 'Tu clave ha sido activada exitosamente. Para ingresar a tu Banco en LÃ­nea, haz click en el botÃ³n "Continuar"',
				TITULO: "Solicitud de clave"
			},
			PAGINA_SIN_DISPOSITIVOS: {
				TIPO: "WARNING",
				CONTENIDO: "Estimado Cliente: SegÃºn nuestros registros, no dispones de un dispositivo de seguridad para realizar este proceso. Para obtener mÃ¡s informaciÃ³n comunÃ­cate con nuestro Servicio al Cliente.",
				TITULO: "Solicitud de clave"
			},
			USUARIO_BCH_EDWARD: {
				TIPO: "WARNING",
				CONTENIDO: "Estimado Cliente: Por favor dirijase a una sucursal para solicitar su clave de acceso al portal.",
				TITULO: "Solicitud de clave"
			},
			PAGINA_DIRIGIRSE_OLVIDO_CLAVE: {
				TIPO: "WARNING",
				CONTENIDO: "Estimado Cliente: Para obtener tu clave de internet ingresa a 'Olvido de Clave'.",
				TITULO: "Ya estas registrado"
			}
		}).constant("CONDICIONES_NEGOCIO", {
			TIENE_CLAVE_Y_FLAG_DEBE_CAMBIAR_VERDADERO: 0,
			TIENE_CLAVE_Y_FLAG_DEBE_CAMBIAR_FALSO: 1,
			NO_TIENE_CLAVE: 2
		})
	}(),
	function() {
		function NuevaClaveCtrl($location, $q, RutHelper, catalogoMensajesFactory, solicitudClavePersonaModelService, nuevaClaveService, $animate, $document, $scope, politicasSeguridadService_, MENSAJES_CATALOGO, solicitudClaveUtilService, solicitudClaveService, cajaDesafioService_) {
			function validarNuevaClave() {
				var retorno = !0;
				return nuevaClaveService.isNuevaClaveIngresada() || (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_CLAVE).then(escribirMensajeNuevaClave), retorno = !1), retorno ? (nuevaClaveService.isClaveCumplePoliticas() || (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.CLAVE_NO_CUMPLE_POLITICAS).then(escribirMensajeNuevaClave), retorno = !1), nuevaClaveService.isAmbasClavesIngresadas() && !nuevaClaveService.isClavesCoinciden() && (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.CLAVES_NO_COINCIDEN).then(escribirMensajeReingresoNuevaClave), retorno = !1), retorno ? (limpiarMensajeNuevaClave(), retorno) : retorno) : retorno
			}

			function validarReingresoNuevaClave() {
				return nuevaClaveService.isReingresoNuevaClaveIngresada() ? nuevaClaveService.isAmbasClavesIngresadas() && !nuevaClaveService.isClavesCoinciden() ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.CLAVES_NO_COINCIDEN).then(escribirMensajeReingresoNuevaClave), !1) : (limpiarMensajeReingresoNuevaClave(), !0) : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_CLAVE).then(escribirMensajeReingresoNuevaClave), !1)
			}

			function limpiarMensajeNuevaClave() {
				vm.solicitudClave.nuevaClave.mensajeNuevaClave = "", solicitudClaveUtilService.removerCampoInvalido(INPUT_NUEVA_CLAVE)
			}

			function limpiarMensajeReingresoNuevaClave() {
				vm.solicitudClave.nuevaClave.mensajeReingresoNuevaClave = "", solicitudClaveUtilService.removerCampoInvalido(INPUT_REINGRESO_NUEVA_CLAVE)
			}

			function escribirMensajeNuevaClave(resultCatalogo) {
				vm.solicitudClave.nuevaClave.mensajeNuevaClave = resultCatalogo.texto, solicitudClaveUtilService.agregarCampoInvalido(INPUT_NUEVA_CLAVE)
			}

			function escribirMensajeReingresoNuevaClave(resultCatalogo) {
				vm.solicitudClave.nuevaClave.mensajeReingresoNuevaClave = resultCatalogo.texto, solicitudClaveUtilService.agregarCampoInvalido(INPUT_REINGRESO_NUEVA_CLAVE)
			}

			function changeNuevaClave() {
				cajaDesafioService_.limpiarMensajesError(), limpiarMensajeNuevaClave(), limpiarMensajeUsuarioRegistrado(), nuevaClaveService.isAmbasClavesIngresadas && nuevaClaveService.isClavesCoinciden && limpiarMensajeReingresoNuevaClave(), solicitudClaveUtilService.confirmarPasoDos(nuevaClaveService.isPasoDosValido())
			}

			function changeReingresoNuevaClave() {
				cajaDesafioService_.limpiarMensajesError(), limpiarMensajeReingresoNuevaClave(), limpiarMensajeUsuarioRegistrado(), solicitudClaveUtilService.confirmarPasoDos(nuevaClaveService.isPasoDosValido())
			}

			function validarNuevaClaveYReingresoEnter() {
				limpiarMensajeNuevaClave(), limpiarMensajeReingresoNuevaClave();
				var nuevaClaveValida = validarNuevaClave(),
					reingresoNuevaClaveValida = validarReingresoNuevaClave();
				nuevaClaveValida && reingresoNuevaClaveValida && vm.solicitudClave.opcion === OPCION_BANCO_EN_LINEA && solicitudClaveService.solicitarClave()
			}

			function limpiarMensajeUsuarioRegistrado() {
				solicitudClaveUtilService.limpiaErrorUsuarioRegistrado()
			}
			var vm = this;
			vm.solicitudClave = solicitudClavePersonaModelService.getSolicitudClave(), vm.validarNuevaClave = validarNuevaClave, vm.validarReingresoNuevaClave = validarReingresoNuevaClave, vm.limpiarMensajeNuevaClave = limpiarMensajeNuevaClave, vm.limpiarMensajeReingresoNuevaClave = limpiarMensajeReingresoNuevaClave, vm.changeNuevaClave = changeNuevaClave, vm.changeReingresoNuevaClave = changeReingresoNuevaClave, vm.validarNuevaClaveYReingresoEnter = validarNuevaClaveYReingresoEnter;
			var INPUT_NUEVA_CLAVE = "inputNuevaClave",
				INPUT_REINGRESO_NUEVA_CLAVE = "inputReingresoNuevaClave",
				OPCION_BANCO_EN_LINEA = "BL";
			nuevaClaveService.inicializarNuevaClave()
		}
		angular.module("WebBancoChile.solicitudClavePersona").controller("NuevaClaveCtrl", NuevaClaveCtrl), NuevaClaveCtrl.$inject = ["$location", "$q", "RutHelper", "catalogoMensajesFactory", "solicitudClavePersonaModelService", "nuevaClaveService", "$animate", "$document", "$scope", "politicasSeguridadService_", "MENSAJES_CATALOGO", "solicitudClaveUtilService", "solicitudClaveService", "cajaDesafioService_"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").directive("nuevaClaveDirective", function() {
			return {
				restrict: "E",
				controller: "NuevaClaveCtrl",
				controllerAs: "nc",
				templateUrl: "solicitud-clave-persona/src/directives/nuevaClave/nuevaClave.tpl.html"
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").directive("presionaEnter", function() {
			return function(scope, element, attrs) {
				element.bind("keydown keypress", function(event) {
					13 === event.which && (scope.$apply(function() {
						scope.$eval(attrs.presionaEnter)
					}), event.preventDefault())
				})
			}
		})
	}(),
	function() {
		function ValidacionBancoEnLineaCtrl($location, $q, RutHelper, catalogoMensajesFactory, solicitudClavePersonaModelService, validacionBancoEnLineaService, $animate, $document, $scope, MENSAJES_CATALOGO, $filter, nuevaClaveService, solicitudClaveUtilService) {
			function validarUsuarioBancoEnLinea() {
				var campoRutValido = validaRutBancoEnLinea(),
					campoClaveValido = validaClaveBancoEnLinea();
				campoRutValido && campoClaveValido && validacionBancoEnLineaService.validarUsuarioBancoEnLinea()
			}

			function validaRutBancoEnLinea() {
				return validacionBancoEnLineaService.isRutBancoEnLineaIngresado() ? validacionBancoEnLineaService.validarRutBancoEnLinea() ? (limpiarMensajeRutBancoEnLinea(), !0) : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.RUT_INVALIDO).then(escribirMensajeRutBancoEnLinea), !1) : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_RUT).then(escribirMensajeRutBancoEnLinea), !1)
			}

			function validaClaveBancoEnLinea() {
				return validacionBancoEnLineaService.isClaveBancoEnLineaIngresada() ? !0 : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_CLAVE).then(escribirMensajeClaveBancoEnLinea), !1)
			}

			function limpiarMensajeRutBancoEnLinea() {
				vm.solicitudClave.bancoEnLinea.mensajeRut = "", solicitudClaveUtilService.removerCampoInvalido(INPUT_RUT_BANCO_EN_LINEA)
			}

			function limpiarMensajeClaveBancoEnLinea() {
				vm.solicitudClave.bancoEnLinea.mensajeClave = "", solicitudClaveUtilService.removerCampoInvalido(INPUT_CLAVE_BANCO_EN_LINEA)
			}

			function escribirMensajeRutBancoEnLinea(resultCatalogo) {
				vm.solicitudClave.bancoEnLinea.mensajeRut = resultCatalogo.texto, solicitudClaveUtilService.agregarCampoInvalido(INPUT_RUT_BANCO_EN_LINEA)
			}

			function escribirMensajeClaveBancoEnLinea(resultCatalogo) {
				vm.solicitudClave.bancoEnLinea.mensajeClave = resultCatalogo.texto, solicitudClaveUtilService.agregarCampoInvalido(INPUT_CLAVE_BANCO_EN_LINEA)
			}

			function changeRutBancoEnLinea() {
				validacionBancoEnLineaService.limpiarYFormatearRutBancoEnLinea(), limpiarMensajeRutBancoEnLinea(), limpiarMensajeUsuarioRegistrado(), solicitudClaveUtilService.confirmarPasoUno(!1), validacionBancoEnLineaService.mostrarBotonValidarOcultarOk(), nuevaClaveService.inicializarNuevaClave()
			}

			function changeClaveBancoEnLinea() {
				limpiarMensajeClaveBancoEnLinea(), limpiarMensajeUsuarioRegistrado(), solicitudClaveUtilService.confirmarPasoUno(!1), validacionBancoEnLineaService.mostrarBotonValidarOcultarOk(), nuevaClaveService.inicializarNuevaClave()
			}

			function validarUsuarioBancoEnLineaEnter() {
				vm.solicitudClave.bancoEnLinea.mostrarBotonValidar && (limpiarMensajeRutBancoEnLinea(), limpiarMensajeClaveBancoEnLinea(), limpiarMensajeUsuarioRegistrado(), validarUsuarioBancoEnLinea())
			}

			function limpiarMensajeUsuarioRegistrado() {
				solicitudClaveUtilService.limpiaErrorUsuarioRegistrado()
			}
			var vm = this;
			vm.solicitudClave = solicitudClavePersonaModelService.getSolicitudClave(), vm.validarUsuarioBancoEnLinea = validarUsuarioBancoEnLinea, vm.validaRutBancoEnLinea = validaRutBancoEnLinea, vm.validaClaveBancoEnLinea = validaClaveBancoEnLinea, vm.limpiarMensajeRutBancoEnLinea = limpiarMensajeRutBancoEnLinea, vm.limpiarMensajeClaveBancoEnLinea = limpiarMensajeClaveBancoEnLinea, vm.changeRutBancoEnLinea = changeRutBancoEnLinea, vm.changeClaveBancoEnLinea = changeClaveBancoEnLinea, vm.validarUsuarioBancoEnLineaEnter = validarUsuarioBancoEnLineaEnter;
			var INPUT_RUT_BANCO_EN_LINEA = "inputRutBancoEnLinea",
				INPUT_CLAVE_BANCO_EN_LINEA = "inputClaveBancoEnLinea";
			validacionBancoEnLineaService.inicializarValidarUsuarioBancoEnLinea()
		}
		angular.module("WebBancoChile.solicitudClavePersona").controller("ValidacionBancoEnLineaCtrl", ValidacionBancoEnLineaCtrl), ValidacionBancoEnLineaCtrl.$inject = ["$location", "$q", "RutHelper", "catalogoMensajesFactory", "solicitudClavePersonaModelService", "validacionBancoEnLineaService", "$animate", "$document", "$scope", "MENSAJES_CATALOGO", "$filter", "nuevaClaveService", "solicitudClaveUtilService"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").directive("validacionBancoEnLineaDirective", function() {
			return {
				restrict: "E",
				controller: "ValidacionBancoEnLineaCtrl",
				controllerAs: "vbl",
				templateUrl: "solicitud-clave-persona/src/directives/validacionBancoEnLinea/validacionBancoEnLinea.tpl.html"
			}
		})
	}(),
	function() {
		function ValidacionTarjetaCreditoCtrl(catalogoMensajesFactory, solicitudClavePersonaModelService, validacionTarjetaCreditoService, MENSAJES_CATALOGO, nuevaClaveService, solicitudClaveUtilService) {
			function validarUsuarioTarjetaCredito() {
				var campoRutValido = validaRutTarjetaCredito(),
					campoClaveValido = validaClaveTarjetaCredito(),
					campoNumeroValido = validaNumeroTarjetaCredito();
				campoRutValido && campoClaveValido && campoNumeroValido && validacionTarjetaCreditoService.validarUsuarioTarjetaCredito()
			}

			function validaRutTarjetaCredito() {
				return validacionTarjetaCreditoService.isRutTarjetaCreditoIngresado() ? validacionTarjetaCreditoService.validarRutTarjetaCredito() ? (limpiarMensajeRutTarjetaCredito(), !0) : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.RUT_INVALIDO).then(escribirMensajeRutTarjetaCredito), !1) : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_RUT).then(escribirMensajeRutTarjetaCredito), !1)
			}

			function validaClaveTarjetaCredito() {
				return validacionTarjetaCreditoService.isClaveTarjetaCreditoIngresada() ? !0 : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_CLAVE).then(escribirMensajeClaveTarjetaCredito), !1)
			}

			function validaNumeroTarjetaCredito() {
				return validacionTarjetaCreditoService.isNumeroTarjetaCreditoIngresada() ? !0 : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_TARJETA_CREDITO, "nÃºmero de Tarjeta de CrÃ©dito").then(escribirMensajeNumeroTarjetaCredito), !1)
			}

			function limpiarMensajeRutTarjetaCredito() {
				vm.solicitudClave.tarjetaCredito.mensajeRut = "", solicitudClaveUtilService.removerCampoInvalido(INPUT_RUT_TARJETA_CREDITO)
			}

			function limpiarMensajeClaveTarjetaCredito() {
				vm.solicitudClave.tarjetaCredito.mensajeClave = "", solicitudClaveUtilService.removerCampoInvalido(INPUT_CLAVE_TARJETA_CREDITO)
			}

			function limpiarMensajeNumeroTarjetaCredito() {
				vm.solicitudClave.tarjetaCredito.mensajeNumero = "", solicitudClaveUtilService.removerCampoInvalido(INPUT_NUMERO_TARJETA_CREDITO)
			}

			function escribirMensajeRutTarjetaCredito(resultCatalogo) {
				vm.solicitudClave.tarjetaCredito.mensajeRut = resultCatalogo.texto, solicitudClaveUtilService.agregarCampoInvalido(INPUT_RUT_TARJETA_CREDITO)
			}

			function escribirMensajeClaveTarjetaCredito(resultCatalogo) {
				vm.solicitudClave.tarjetaCredito.mensajeClave = resultCatalogo.texto, solicitudClaveUtilService.agregarCampoInvalido(INPUT_CLAVE_TARJETA_CREDITO)
			}

			function escribirMensajeNumeroTarjetaCredito(resultCatalogo) {
				vm.solicitudClave.tarjetaCredito.mensajeNumero = resultCatalogo.texto, solicitudClaveUtilService.agregarCampoInvalido(INPUT_NUMERO_TARJETA_CREDITO)
			}

			function changeRutTarjetaCredito() {
				validacionTarjetaCreditoService.limpiarYFormatearRutTarjetaCredito(), limpiarMensajeRutTarjetaCredito(), limpiarMensajeUsuarioRegistrado(), solicitudClaveUtilService.confirmarPasoUno(!1), validacionTarjetaCreditoService.mostrarBotonValidarOcultarOk(), nuevaClaveService.inicializarNuevaClave()
			}

			function changeClaveTarjetaCredito() {
				limpiarMensajeClaveTarjetaCredito(), limpiarMensajeUsuarioRegistrado(), solicitudClaveUtilService.confirmarPasoUno(!1), validacionTarjetaCreditoService.mostrarBotonValidarOcultarOk(), nuevaClaveService.inicializarNuevaClave()
			}

			function changeNumeroTarjetaCredito() {
				limpiarMensajeNumeroTarjetaCredito(), limpiarMensajeUsuarioRegistrado(), solicitudClaveUtilService.confirmarPasoUno(!1), validacionTarjetaCreditoService.mostrarBotonValidarOcultarOk(), nuevaClaveService.inicializarNuevaClave()
			}

			function validarUsuarioTarjetaCreditoEnter() {
				vm.solicitudClave.tarjetaCredito.mostrarBotonValidar && (limpiarMensajeRutTarjetaCredito(), limpiarMensajeClaveTarjetaCredito(), limpiarMensajeNumeroTarjetaCredito(), limpiarMensajeUsuarioRegistrado(), validarUsuarioTarjetaCredito())
			}

			function limpiarMensajeUsuarioRegistrado() {
				solicitudClaveUtilService.limpiaErrorUsuarioRegistrado()
			}
			var vm = this;
			vm.solicitudClave = solicitudClavePersonaModelService.getSolicitudClave(), vm.validarUsuarioTarjetaCredito = validarUsuarioTarjetaCredito, vm.validaRutTarjetaCredito = validaRutTarjetaCredito, vm.validaClaveTarjetaCredito = validaClaveTarjetaCredito, vm.validaNumeroTarjetaCredito = validaNumeroTarjetaCredito, vm.limpiarMensajeRutTarjetaCredito = limpiarMensajeRutTarjetaCredito, vm.limpiarMensajeClaveTarjetaCredito = limpiarMensajeClaveTarjetaCredito, vm.changeRutTarjetaCredito = changeRutTarjetaCredito, vm.changeClaveTarjetaCredito = changeClaveTarjetaCredito, vm.changeNumeroTarjetaCredito = changeNumeroTarjetaCredito, vm.validarUsuarioTarjetaCreditoEnter = validarUsuarioTarjetaCreditoEnter;
			var INPUT_RUT_TARJETA_CREDITO = "inputRutTarjetaCredito",
				INPUT_CLAVE_TARJETA_CREDITO = "inputClaveTarjetaCredito",
				INPUT_NUMERO_TARJETA_CREDITO = "inputNumeroTarjetaCredito";
			validacionTarjetaCreditoService.inicializarValidarUsuarioTarjetaCredito()
		}
		angular.module("WebBancoChile.solicitudClavePersona").controller("ValidacionTarjetaCreditoCtrl", ValidacionTarjetaCreditoCtrl), ValidacionTarjetaCreditoCtrl.$inject = ["catalogoMensajesFactory", "solicitudClavePersonaModelService", "validacionTarjetaCreditoService", "MENSAJES_CATALOGO", "nuevaClaveService", "solicitudClaveUtilService"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").directive("validacionTarjetaCreditoDirective", function() {
			return {
				restrict: "E",
				controller: "ValidacionTarjetaCreditoCtrl",
				controllerAs: "vtc",
				templateUrl: "solicitud-clave-persona/src/directives/validacionTarjetaCredito/validacionTarjetaCredito.tpl.html"
			}
		})
	}(),
	function() {
		function ValidacionTarjetaDebitoCtrl(catalogoMensajesFactory, solicitudClavePersonaModelService, validacionTarjetaDebitoService, MENSAJES_CATALOGO, nuevaClaveService, solicitudClaveUtilService) {
			function validarUsuarioTarjetaDebito() {
				var campoRutValido = validaRutTarjetaDebito(),
					campoClaveValido = validaClaveTarjetaDebito();
				campoRutValido && campoClaveValido && validacionTarjetaDebitoService.validarUsuarioTarjetaDebito()
			}

			function validaRutTarjetaDebito() {
				return validacionTarjetaDebitoService.isRutTarjetaDebitoIngresado() ? validacionTarjetaDebitoService.validarRutTarjetaDebito() ? (limpiarMensajeRutTarjetaDebito(), !0) : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.RUT_INVALIDO).then(escribirMensajeRutTarjetaDebito), !1) : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_RUT).then(escribirMensajeRutTarjetaDebito), !1)
			}

			function validaClaveTarjetaDebito() {
				return validacionTarjetaDebitoService.isClaveTarjetaDebitoIngresada() ? !0 : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_CLAVE).then(escribirMensajeClaveTarjetaDebito), !1)
			}

			function limpiarMensajeRutTarjetaDebito() {
				vm.solicitudClave.tarjetaDebito.mensajeRut = "", solicitudClaveUtilService.removerCampoInvalido(INPUT_RUT_TARJETA_DEBITO)
			}

			function limpiarMensajeClaveTarjetaDebito() {
				vm.solicitudClave.tarjetaDebito.mensajeClave = "", solicitudClaveUtilService.removerCampoInvalido(INPUT_CLAVE_TARJETA_DEBITO)
			}

			function escribirMensajeRutTarjetaDebito(resultCatalogo) {
				vm.solicitudClave.tarjetaDebito.mensajeRut = resultCatalogo.texto, solicitudClaveUtilService.agregarCampoInvalido(INPUT_RUT_TARJETA_DEBITO)
			}

			function escribirMensajeClaveTarjetaDebito(resultCatalogo) {
				vm.solicitudClave.tarjetaDebito.mensajeClave = resultCatalogo.texto, solicitudClaveUtilService.agregarCampoInvalido(INPUT_CLAVE_TARJETA_DEBITO)
			}

			function changeRutTarjetaDebito() {
				validacionTarjetaDebitoService.limpiarYFormatearRutTarjetaDebito(), limpiarMensajeRutTarjetaDebito(), limpiarMensajeUsuarioRegistrado(), solicitudClaveUtilService.confirmarPasoUno(!1), validacionTarjetaDebitoService.mostrarBotonValidarOcultarOk(), nuevaClaveService.inicializarNuevaClave()
			}

			function changeClaveTarjetaDebito() {
				limpiarMensajeClaveTarjetaDebito(), limpiarMensajeUsuarioRegistrado(), solicitudClaveUtilService.confirmarPasoUno(!1), validacionTarjetaDebitoService.mostrarBotonValidarOcultarOk(), nuevaClaveService.inicializarNuevaClave()
			}

			function validarUsuarioTarjetaDebitoEnter() {
				vm.solicitudClave.tarjetaDebito.mostrarBotonValidar && (limpiarMensajeRutTarjetaDebito(), limpiarMensajeClaveTarjetaDebito(), limpiarMensajeUsuarioRegistrado(), validarUsuarioTarjetaDebito())
			}

			function limpiarMensajeUsuarioRegistrado() {
				solicitudClaveUtilService.limpiaErrorUsuarioRegistrado()
			}
			var vm = this;
			vm.solicitudClave = solicitudClavePersonaModelService.getSolicitudClave(), vm.validarUsuarioTarjetaDebito = validarUsuarioTarjetaDebito, vm.validaRutTarjetaDebito = validaRutTarjetaDebito, vm.validaClaveTarjetaDebito = validaClaveTarjetaDebito, vm.limpiarMensajeRutTarjetaDebito = limpiarMensajeRutTarjetaDebito, vm.limpiarMensajeClaveTarjetaDebito = limpiarMensajeClaveTarjetaDebito, vm.changeRutTarjetaDebito = changeRutTarjetaDebito, vm.changeClaveTarjetaDebito = changeClaveTarjetaDebito, vm.validarUsuarioTarjetaDebitoEnter = validarUsuarioTarjetaDebitoEnter;
			var INPUT_RUT_TARJETA_DEBITO = "inputRutTarjetaDebito",
				INPUT_CLAVE_TARJETA_DEBITO = "inputClaveTarjetaDebito";
			validacionTarjetaDebitoService.inicializarValidarUsuarioTarjetaDebito()
		}
		angular.module("WebBancoChile.solicitudClavePersona").controller("ValidacionTarjetaDebitoCtrl", ValidacionTarjetaDebitoCtrl), ValidacionTarjetaDebitoCtrl.$inject = ["catalogoMensajesFactory", "solicitudClavePersonaModelService", "validacionTarjetaDebitoService", "MENSAJES_CATALOGO", "nuevaClaveService", "solicitudClaveUtilService"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").directive("validacionTarjetaDebitoDirective", function() {
			return {
				restrict: "E",
				controller: "ValidacionTarjetaDebitoCtrl",
				controllerAs: "vtd",
				templateUrl: "solicitud-clave-persona/src/directives/validacionTarjetaDebito/validacionTarjetaDebito.tpl.html"
			}
		})
	}(),
	function() {
		function cumpleCondicionNegocioSolicitarClave($http, API_URL2) {
			function post(jsonObject, captchaData) {
				return $http.post(API_URL2 + "/solicitud-clave-persona/cumple-condicion-negocio?g-recaptcha-response=" + captchaData, jsonObject).success(function(response) {
					var resp = {
						data: response
					};
					return resp
				}).error(function(response) {
					var resp = {
						data: response
					};
					return resp
				})
			}
			return {
				post: post
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").factory("cumpleCondicionNegocioSolicitarClave", cumpleCondicionNegocioSolicitarClave), cumpleCondicionNegocioSolicitarClave.$inject = ["$http", "API_URL2"]
	}(),
	function() {
		function datosFichaChica($http, API_URL2) {
			function obtener(json, captchaData) {
				return $http({
					url: API_URL2 + "/solicitud-clave-persona/datos-cliente/obtener?g-recaptcha-response=" + captchaData,
					dataType: "json",
					data: json,
					method: "POST",
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response
				}, function(error) {})
			}
			return {
				obtener: obtener
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").factory("datosFichaChica", datosFichaChica), datosFichaChica.$inject = ["$http", "API_URL2"]
	}(),
	function() {
		function dispositivosSeguridadSolClaveFac($http, API_URL2) {
			function obtener(rut, captchaData) {
				return $http({
					url: API_URL2 + "/solicitud-clave-persona/dispositivos/get?g-recaptcha-response=" + captchaData,
					dataType: "json",
					method: "GET",
					GET_CHALLENGE: !0,
					SOFTOKEN: !0,
					handleError: !1,
					headers: {
						"Content-Type": "application/json",
						CAJDEF_AUTH_USER: rut
					}
				}).then(function(response) {
					return response
				}, function(error) {
					return error
				})
			}
			return {
				obtener: obtener
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").factory("dispositivosSeguridadSolClaveFac", dispositivosSeguridadSolClaveFac), dispositivosSeguridadSolClaveFac.$inject = ["$http", "API_URL2"]
	}(),
	function() {
		function solicitarClave($http, API_URL2) {
			function resultFunction(response) {
				var resp = {
					data: response
				};
				return resp
			}

			function post(jsonObject, rut) {
				return $http({
					url: API_URL2 + "/solicitud-clave-persona/solicitar",
					dataType: "json",
					method: "POST",
					handleError: !1,
					data: jsonObject,
					headers: {
						CAJDEF_AUTH_USER: rut,
						"Content-Type": "application/json"
					},
					AUTH_CHALLENGE: !0
				}).then(resultFunction)
			}
			return {
				post: post
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").factory("solicitarClave", solicitarClave), solicitarClave.$inject = ["$http", "API_URL2"]
	}(),
	function() {
		function solicitarClaveSinDispositivo($http, API_URL2) {
			function post(jsonObject) {
				return $http.post(API_URL2 + "/solicitud-clave-persona/solicitar-sin-dispositivo", jsonObject).success(function(response) {
					var resp = {
						data: response
					};
					return resp
				}).error(function(response) {
					var resp = {
						data: response
					};
					return resp
				})
			}
			return {
				post: post
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").factory("solicitarClaveSinDispositivo", solicitarClaveSinDispositivo), solicitarClaveSinDispositivo.$inject = ["$http", "API_URL2"]
	}(),
	function() {
		function validacionBancoEnLinea($http, URL_API) {
			function post(jsonObject) {
				return $http.post(URL_API + "/solicitud-clave-persona/banco-en-linea/validar", jsonObject).success(function(response) {
					var resp = {
						data: response
					};
					return resp
				}).error(function(response) {
					var resp = {
						data: response
					};
					return resp
				})
			}
			return {
				post: post
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").factory("validacionBancoEnLinea", validacionBancoEnLinea), validacionBancoEnLinea.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function validacionCedulaSinacofi($http, API_URL2) {
			function validar(json) {
				return $http({
					url: API_URL2 + "/solicitud-clave-persona/validacion-cedula/validar",
					dataType: "json",
					data: json,
					method: "POST",
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					var resp = {
						data: response
					};
					return resp
				}, function(error) {})
			}
			return {
				validar: validar
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").factory("validacionCedulaSinacofi", validacionCedulaSinacofi),
			validacionCedulaSinacofi.$inject = ["$http", "API_URL2"]
	}(),
	function() {
		function validacionTarjetaCredito($http, API_URL2) {
			function post(jsonObject, captchaData) {
				return $http({
					url: API_URL2 + "/solicitud-clave-persona/tarjeta-credito/validar-tdc?g-recaptcha-response=" + captchaData,
					method: "POST",
					dataType: "json",
					data: jsonObject,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response
				}, function(response) {
					return response
				})
			}
			return {
				post: post
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").factory("validacionTarjetaCredito", validacionTarjetaCredito), validacionTarjetaCredito.$inject = ["$http", "API_URL2"]
	}(),
	function() {
		function validacionTarjetaDebito($http, API_URL2) {
			function post(jsonObject, captchaData) {
				return $http({
					url: API_URL2 + "/solicitud-clave-persona/tarjeta-debito/validar-tdd?g-recaptcha-response=" + captchaData,
					method: "POST",
					dataType: "json",
					data: jsonObject,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response
				}, function(response) {
					return response
				})
			}
			return {
				post: post
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").factory("validacionTarjetaDebito", validacionTarjetaDebito), validacionTarjetaDebito.$inject = ["$http", "API_URL2"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").service("claveSinacofiModel", function() {
			var solClaveData = {};
			solClaveData.data = {}, solClaveData.data.rut = "", solClaveData.data.clave = "", solClaveData.laddaSolicitudClave = !1, solClaveData.disabledBotonCrear = !0, solClaveData.laddaValidaDatos = !1, solClaveData.mostrarOk = !1, solClaveData.isClaveTD = !1, solClaveData.isClaveTC = !1, solClaveData.datosCliente = {}, solClaveData.datosCliente.claveNueva = "", solClaveData.datosCliente.repiteClaveNueva = "", solClaveData.datosCliente.serie = "", solClaveData.pasos = {}, solClaveData.pasos.pasoUnoOk = !1, solClaveData.pasos.pasoDosOk = !1, solClaveData.pasos.pasoTresOk = !1, solClaveData.datosValidos = !1, solClaveData.tieneDispositivos = !1, solClaveData.mostrarMsjRegistrado = !1, solClaveData.mostrarMsjNoRegistrado = !1, solClaveData.mostrarMsjFalloSinacofi = !1, solClaveData.msjValidacion = "", solClaveData.msjError = "", solClaveData.verMsjError = !1, this.getSolicitudClave = function() {
				return solClaveData
			}, this.limpiarVariables = function() {
				solClaveData.datosCliente.claveNueva = "", solClaveData.datosCliente.repiteClaveNueva = "", solClaveData.datosCliente.serie = ""
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").service("dispositivosSegSolClavePersona", function(RutHelper, dispositivosSeguridadSolClaveFac, claveSinacofiModel, gRecaptcha) {
			function obtener() {
				var data = claveSinacofiModel.getSolicitudClave().data;
				gRecaptcha.execute({
					action: "seguros"
				}).then(function(token) {
					dispositivosSeguridadSolClaveFac.obtener(RutHelper.clean(data.rut), token).then(function(response) {
						return !0
					}, function(error) {
						return !1
					})
				})
			}
			this.obtener = obtener
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").service("solicitudClaveServiceSinacofi", function(MENSAJES_CATALOGO, catalogoMensajesFactory, $state, MensajeStoreFactory, PAGINAS, cajaDesafioService_, RutHelper, $filter, solicitarClaveSinDispositivo, claveSinacofiModel, solicitarClave, validaDatosSolicitudClavePersona) {
			function getEntradaSolicitud(solClaveData) {
				var entradaSolicitud = {};
				return entradaSolicitud.nuevaClave = solClaveData.datosCliente.claveNueva, entradaSolicitud.claveProducto = {}, entradaSolicitud.token = validaDatosSolicitudClavePersona.condicionNegocioToken, solClaveData.isClaveTD ? entradaSolicitud.opcionValidacion = "TD" : entradaSolicitud.opcionValidacion = "TC", entradaSolicitud.claveProducto.rut = solClaveData.data.rut, entradaSolicitud.claveProducto.clave = solClaveData.data.clave, entradaSolicitud.claveProducto.numeroProducto = "", entradaSolicitud
			}
			this.solicitarClaveSinacofi = function() {
				var solClaveData = claveSinacofiModel.getSolicitudClave(),
					entradaSolicitud = getEntradaSolicitud(solClaveData);
				return entradaSolicitud.serie = solClaveData.datosCliente.serie, solClaveData.laddaSolicitudClave = !0, solClaveData.mostrarMsjFalloSinacofi = !1, solClaveData.mostrarMsjRegistrado = !1, solicitarClaveSinDispositivo.post(entradaSolicitud).then(function(response) {
					return MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_SOLICITUD_OK.TIPO, PAGINAS.PAGINA_SOLICITUD_OK.CONTENIDO, PAGINAS.PAGINA_SOLICITUD_OK.TITULO), solClaveData.laddaSolicitudClave = !1, solClaveData.disableCampos = !1, !0
				}, function(response) {
					if (500 !== response.status)
						if (400 === response.status && "SCP-000300" === response.data.codigo) solClaveData.mostrarMsjRegistrado = !0, solClaveData.laddaSolicitudClave = !1, solClaveData.disabledBotonCrear = !1, solClaveData.disableCampos = !1, solClaveData.mostrarMsjFalloSinacofi = !1;
						else {
							if (400 === response.status && ("SCP-000600" === response.data.codigo || "512011" === response.data.codigo || "512012" === response.data.codigo)) return solClaveData.mostrarMsjFalloSinacofi = !0, solClaveData.laddaSolicitudClave = !1, solClaveData.disabledBotonCrear = !1, solClaveData.disableCampos = !1, solClaveData.mostrarMsjRegistrado = !1, "SCP-000600" === response.data.codigo ? solClaveData.msjValidacion = MENSAJES_CATALOGO.MSJ_VALIDACION_SINACOFI : ("512011" === response.data.codigo || "512012" === response.data.codigo) && (solClaveData.msjValidacion = response.data.mensaje), !1;
							MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, PAGINAS.PAGINA_ERROR.CONTENIDO, PAGINAS.PAGINA_ERROR.TITULO)
						}
					else MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, PAGINAS.PAGINA_ERROR.CONTENIDO, PAGINAS.PAGINA_ERROR.TITULO)
				}), solClaveData.disableCampos = !1, !0
			}, this.solicitarClaveDispositivos = function() {
				var solClaveData = claveSinacofiModel.getSolicitudClave(),
					entradaSolicitud = getEntradaSolicitud(solClaveData);
				solClaveData.laddaSolicitudClave = !0, solicitarClave.post(entradaSolicitud, RutHelper.clean(solClaveData.data.rut)).then(function(response) {
					return MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_SOLICITUD_OK.TIPO, PAGINAS.PAGINA_SOLICITUD_OK.CONTENIDO, PAGINAS.PAGINA_SOLICITUD_OK.TITULO), solClaveData.laddaSolicitudClave = !1, solClaveData.disableCampos = !1, !0
				}, function(response) {
					return cajaDesafioService_.habilitaFormulario(), 500 !== response.status ? 401 !== response.status && (400 === response.status && "SCP-000300" === response.data.codigo ? (solClaveData.mostrarMsjRegistrado = !0, solClaveData.laddaSolicitudClave = !1, solClaveData.disabledBotonCrear = !1, solClaveData.disableCampos = !1) : MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, PAGINAS.PAGINA_ERROR.CONTENIDO, PAGINAS.PAGINA_ERROR.TITULO)) : MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, PAGINAS.PAGINA_ERROR.CONTENIDO, PAGINAS.PAGINA_ERROR.TITULO), solClaveData.laddaSolicitudClave = !1, solClaveData.disableCampos = !1, !1
				})
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").service("utilServiceSolicitudClaveSin", function() {})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").service("validaDatosSolicitudClavePersona", function(catalogoMensajesFactory, MENSAJES_CATALOGO, datosFichaChica, $state, validacionTarjetaCredito, RutHelper, validacionTarjetaDebito, claveSinacofiModel, validacionCedulaSinacofi, dispositivosSeguridadSolClaveFac, MensajeStoreFactory, cumpleCondicionNegocioSolicitarClave, PAGINAS, CONDICIONES_NEGOCIO, gRecaptcha) {
			function validaDatos() {
				var data = claveSinacofiModel.getSolicitudClave();
				data.msjError = "", data.verMsjError = !1, data.mostrarMsjRegistrado = !1, data.mostrarOk = !1, data.datosValidos = !1, data.laddaValidaDatos = !0;
				var json = {
						rut: data.data.rut,
						clave: data.data.clave
					},
					datosCli = {
						rut: data.data.rut.replace(/\./g, ""),
						marca: ""
					};
				gRecaptcha.execute({
					action: "seguros"
				}).then(function(token) {
					datosFichaChica.obtener(datosCli, token).then(function(respuesta) {
						(200 !== respuesta.status || null == respuesta.data || "" === respuesta.data.marca) && MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, PAGINAS.PAGINA_ERROR.CONTENIDO, PAGINAS.PAGINA_ERROR.TITULO), datosCli.marca = respuesta.data.marca, gRecaptcha.execute({
							action: "seguros"
						}).then(function(token) {
							cumpleCondicionNegocioSolicitarClave.post(datosCli, token).then(function(condicionNegocioResponse) {
								setCondicionNegocioToken(condicionNegocioResponse.data.token);
								var condicionNegocio = condicionNegocioResponse.data.businessStatus,
									puedeContinuarPorCondicionNegocio = CONDICIONES_NEGOCIO.TIENE_CLAVE_Y_FLAG_DEBE_CAMBIAR_VERDADERO === condicionNegocio || CONDICIONES_NEGOCIO.NO_TIENE_CLAVE === condicionNegocio;
								200 === respuesta.status && CONDICIONES_NEGOCIO.TIENE_CLAVE_Y_FLAG_DEBE_CAMBIAR_FALSO === condicionNegocio ? MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_DIRIGIRSE_OLVIDO_CLAVE.TIPO, PAGINAS.PAGINA_DIRIGIRSE_OLVIDO_CLAVE.CONTENIDO, PAGINAS.PAGINA_DIRIGIRSE_OLVIDO_CLAVE.TITULO) : 200 === respuesta.status && "3" === respuesta.data.marca && puedeContinuarPorCondicionNegocio ? gRecaptcha.execute({
									action: "seguros"
								}).then(function(token) {
									validacionTarjetaDebito.post(json, token).then(function(response) {
										500 === response.status || null == response.data ? MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, PAGINAS.PAGINA_ERROR.CONTENIDO, PAGINAS.PAGINA_ERROR.TITULO) : 200 === response.status ? (data.isClaveTD = !0, data.isClaveTC = !1, getDispositivos(data)) : "SCP-000200" === response.data.codigo || "SCP-000201" === response.data.codigo || "512011" === response.data.codigo || "512012" === response.data.codigo ? gRecaptcha.execute({
											action: "seguros"
										}).then(function(token) {
											validacionTarjetaCredito.post(json, token).then(function(response) {
												500 === response.status || null == response.data ? MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, PAGINAS.PAGINA_ERROR.CONTENIDO, PAGINAS.PAGINA_ERROR.TITULO) : 200 === response.status ? (data.isClaveTD = !1, data.isClaveTC = !0, getDispositivos(data)) : ("SCP-000200" === response.data.codigo ? (data.msjError = response.data.mensaje, data.verMsjError = !0, data.disableCampos = !1) : "SCP-000201" === response.data.codigo || "512011" === response.data.codigo || "512012" === response.data.codigo ? (data.msjError = response.data.mensaje, data.verMsjError = !0) : MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, PAGINAS.PAGINA_ERROR.CONTENIDO, PAGINAS.PAGINA_ERROR.TITULO), data.datosValidos = !1, data.laddaValidaDatos = !1, data.disableCampos = !1)
											})
										}) : catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.MSJ_CLIENTE_BCH_EDWARD).then(function(resultCatalogo) {
											MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, resultCatalogo.texto, PAGINAS.PAGINA_ERROR.TITULO)
										})
									})
								}) : catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.MSJ_CLIENTE_BCH_EDWARD).then(function(resultCatalogo) {
									MensajeStoreFactory.setMensaje(PAGINAS.USUARIO_BCH_EDWARD.TIPO, resultCatalogo.texto, PAGINAS.USUARIO_BCH_EDWARD.TITULO)
								})
							})
						})
					})
				})
			}

			function setCondicionNegocioToken(token) {
				vm.condicionNegocioToken = token
			}

			function datosOk(data) {
				data.disableCampos = !1, data.pasos.pasoUnoOk = !0, data.datosValidos = !0, data.mostrarOk = !1
			}

			function getDispositivos(data) {
				gRecaptcha.execute({
					action: "seguros"
				}).then(function(token) {
					dispositivosSeguridadSolClaveFac.obtener(RutHelper.clean(data.data.rut), token).then(function(response) {
						return data.laddaValidaDatos = !1, 200 === response.status ? (datosOk(data), !0) : "SCP-000500" === response.data.codigo ? (data.disableCampos = !1, data.datosValidos = !1, data.pasos.pasoUnoOk = !1, !1) : void(500 === response.status && MensajeStoreFactory.setMensaje(PAGINAS.PAGINA_ERROR.TIPO, PAGINAS.PAGINA_ERROR.CONTENIDO, PAGINAS.PAGINA_ERROR.TITULO))
					})
				})
			}
			var vm = this;
			vm.condicionNegocioToken = "", this.validaDatos = validaDatos
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.solicitudClavePersona").service("solicitudClaveService", function($filter, $state, solicitarClave, solicitarClaveSinDispositivo, solicitudClavePersonaModelService, cajaDesafioService_, solicitudClaveUtilService) {
			function inicioLaddaSolicitudClave() {
				solicitudClave.laddaSolicitudClave = !0
			}

			function finLaddaSolicitudClave() {
				solicitudClave.laddaSolicitudClave = !1
			}

			function getEntradaSolicitud() {
				var entradaSolicitud = {};
				return entradaSolicitud.nuevaClave = solicitudClave.nuevaClave.data.nuevaClave, entradaSolicitud.claveProducto = {}, solicitudClave.opcion === OPCION_BANCO_EN_LINEA && (entradaSolicitud.opcionValidacion = OPCION_BANCO_EN_LINEA, entradaSolicitud.claveProducto.rut = solicitudClave.bancoEnLinea.data.rut, entradaSolicitud.claveProducto.clave = solicitudClave.bancoEnLinea.data.clave, entradaSolicitud.claveProducto.numeroProducto = ""), solicitudClave.opcion === OPCION_TARJETA_DEBITO && (entradaSolicitud.opcionValidacion = OPCION_TARJETA_DEBITO, entradaSolicitud.claveProducto.rut = solicitudClave.tarjetaDebito.data.rut, entradaSolicitud.claveProducto.clave = solicitudClave.tarjetaDebito.data.clave, entradaSolicitud.claveProducto.numeroProducto = ""), solicitudClave.opcion === OPCION_TARJETA_CREDITO && (entradaSolicitud.opcionValidacion = OPCION_TARJETA_CREDITO, entradaSolicitud.claveProducto.rut = solicitudClave.tarjetaCredito.data.rut, entradaSolicitud.claveProducto.clave = solicitudClave.tarjetaCredito.data.clave, entradaSolicitud.claveProducto.numeroProducto = solicitudClave.tarjetaCredito.data.numeroProducto), entradaSolicitud
			}
			var solicitudClave = solicitudClavePersonaModelService.getSolicitudClave(),
				OPCION_BANCO_EN_LINEA = "BL",
				OPCION_TARJETA_DEBITO = "TD",
				OPCION_TARJETA_CREDITO = "TC";
			this.inicializarSolicitudClave = function() {
				solicitudClavePersonaModelService.limpiarVariables(), solicitudClave.opcion = OPCION_TARJETA_DEBITO
			}, this.solicitarClave = function() {
				inicioLaddaSolicitudClave();
				var entradaSolicitud = getEntradaSolicitud(),
					entradaSolicitudJson = $filter("json")(entradaSolicitud);
				if (solicitudClave.opcion === OPCION_BANCO_EN_LINEA) solicitarClaveSinDispositivo.post(entradaSolicitudJson).then(function(response) {
					solicitudClaveUtilService.irSolicitudOk(), finLaddaSolicitudClave()
				}, function(response) {
					500 !== response.status && 400 === response.status && "SCP-000300" === response.data.codigo ? solicitudClave.error.mensajeUsuarioRegistrado = response.data.mensaje : solicitudClaveUtilService.irErrorSistema(), finLaddaSolicitudClave()
				});
				else {
					solicitudClave.inputDisable = !0;
					var arregloData = [];
					arregloData.push({
						etiqueta: "Origen",
						valor: "Internet Personas"
					}), arregloData.push({
						etiqueta: "Operacion",
						valor: "Solicitud de Clave Internet"
					});
					var sucess = '{\\"home\\": {\\"title\\": \\"Nueva Clave Internet\\",\\"message\\":\\"Creaci&#243;n de nueva Clave Internet\\"},\\"success\\":{\\"title\\":\\"Autorizaci&#243;n Exitosa\\",\\"message\\":\\"Se ha Autorizado con &#233;xito su nueva clave\\"}}';
					if (arregloData.push({
							etiqueta: "ILCAT_DESCRIPTION",
							valor: sucess
						}), cajaDesafioService_.setDatosTxSoftToken(arregloData), !cajaDesafioService_.isCajaDesafioValida()) return finLaddaSolicitudClave(), !1;
					solicitudClaveUtilService.limpiarYFormatearRut(entradaSolicitud.claveProducto.rut), solicitarClave.post(entradaSolicitudJson, solicitudClaveUtilService.limpiarRut(entradaSolicitud.claveProducto.rut)).then(function(response) {
						return solicitudClaveUtilService.irSolicitudOk(), finLaddaSolicitudClave(), !0
					}, function(response) {
						return cajaDesafioService_.habilitaFormulario() && (solicitudClave.inputDisable = !1), 500 !== response.status ? 401 !== response.status && (400 === response.status && "SCP-000300" === response.data.codigo ? solicitudClave.error.mensajeUsuarioRegistrado = response.data.mensaje : solicitudClaveUtilService.irErrorSistema()) : solicitudClaveUtilService.irErrorSistema(), finLaddaSolicitudClave(), !1
					})
				}
				return !0
			}
		})
	}(),
	function() {
		function error500SolicitudSinacofiController($state) {
			function init() {}

			function volver() {
				$state.go("solicitud-clave-persona")
			}
			var vm = this;
			vm.volver = volver, init()
		}
		angular.module("WebBancoChile.solicitudClavePersona").controller("error500SolicitudSinacofiController", error500SolicitudSinacofiController), error500SolicitudSinacofiController.$inject = ["$state"]
	}(),
	function() {
		function solicitudClavePersonaSinacofiConfig($stateProvider, SRC_SOLICITUD_CLAVE_PERSONA_SINACOFI, $httpProvider) {
			$httpProvider.interceptors.push("cajaDesafioInterceptor_"), $stateProvider.state("clave-persona", {
				parent: "root",
				url: "/clave-persona",
				views: {
					"main@": {
						controller: "SolicitudClavePersonaSinacofiCtrl",
						controllerAs: "cps",
						templateUrl: SRC_SOLICITUD_CLAVE_PERSONA_SINACOFI + "solicitud-clave-persona-sinacofi.tpl.html"
					}
				},
				data: {
					pageTitle: "Solicitud Clave Persona"
				}
			}).state("solicitud-clave-persona", {
				parent: "clave-persona",
				url: "/solicitud-clave-persona",
				views: {
					"main@": {
						controller: "SolicitudClavePersonaSinacofiCtrl",
						controllerAs: "scps",
						templateUrl: SRC_SOLICITUD_CLAVE_PERSONA_SINACOFI + "solicitud-clave-persona-sinacofi.tpl.html"
					}
				},
				data: {
					pageTitle: "Solicitud Clave Persona"
				}
			}).state("solicitud-clave-persona-sinacofi-error", {
				parent: "clave-persona",
				url: "/solicitud-clave-persona-sinacofi-error",
				views: {
					"main@": {
						controller: "error500SolicitudSinacofiController",
						controllerAs: "error",
						templateUrl: SRC_SOLICITUD_CLAVE_PERSONA_SINACOFI + "error-500.tpl.html"
					}
				},
				data: {
					pageTitle: "Solicitud Clave Persona"
				}
			})
		}
		angular.module("WebBancoChile.solicitudClavePersona").config(solicitudClavePersonaSinacofiConfig)
	}(),
	function() {
		function SolicitudClavePersonaSinacofiCtrl($window, $scope, dispositivosSegSolClavePersona, claveSinacofiModel, politicasSeguridadService_, catalogoMensajesFactory, MENSAJES_CATALOGO, RutHelper, validaDatosSolicitudClavePersona, cajaDesafioService_, solicitudClaveServiceSinacofi, gRecaptcha) {
			function init() {
				vm.datosCliente = {}, gRecaptcha.initialize({
					key: "6Ld5EgEaAAAAALBa5OuqEp1pIyBpFM_z0Bc4VE0s"
				})
			}

			function validaRut() {
				return null === vm.solClaveData.data.rut || void 0 === vm.solClaveData.data.rut || "" === vm.solClaveData.data.rut ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_RUT).then(function(resultCatalogo) {
					vm.datosCliente.msjErrorRut = resultCatalogo.texto, vm.solClaveData.pasos.pasoUnoOk = !1
				}), !1) : RutHelper.validate(vm.solClaveData.data.rut) ? (vm.datosCliente.msjErrorRut = "", !0) : (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.RUT_INVALIDO).then(function(resultCatalogo) {
					vm.datosCliente.msjErrorRut = resultCatalogo.texto, vm.solClaveData.pasos.pasoUnoOk = !1
				}), !1)
			}

			function changeRut() {
				var rut = RutHelper.clean(vm.solClaveData.data.rut);
				vm.solClaveData.data.rut = RutHelper.format(rut), vm.solClaveData.pasos.pasoUnoOk = !1, limpiarPasoTres(), claveSinacofiModel.limpiarVariables()
			}

			function changeClaveATM() {
				vm.solClaveData.pasos.pasoUnoOk = !1, limpiarPasoTres(), claveSinacofiModel.limpiarVariables()
			}

			function validaClaveATM() {
				return null === vm.solClaveData.data.clave || void 0 === vm.solClaveData.data.clave || "" === vm.solClaveData.data.clave ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_CLAVE).then(function(resultCatalogo) {
					vm.datosCliente.msjErrorATM = resultCatalogo.texto, vm.solClaveData.pasos.pasoUnoOk = !1
				}), !1) : (vm.datosCliente.msjErrorATM = "", !0)
			}

			function validaNuevaClave() {
				return null === vm.solClaveData.datosCliente.claveNueva || void 0 === vm.solClaveData.datosCliente.claveNueva || "" === vm.solClaveData.datosCliente.claveNueva ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_CLAVE).then(function(resultCatalogo) {
					vm.solicitudClave.nuevaClaveError = resultCatalogo.texto, limpiarPasoTres()
				}), vm.solicitudClave.msjErrorPoliticas = "", !1) : (vm.solicitudClave.nuevaClaveError = "", void validaClavesIngresadas())
			}

			function validaClaveReingreso() {
				return null === vm.solClaveData.datosCliente.repiteClaveNueva || void 0 === vm.solClaveData.datosCliente.repiteClaveNueva || "" === vm.solClaveData.datosCliente.repiteClaveNueva ? (catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.DEBE_INGRESAR_CLAVE).then(function(resultCatalogo) {
					vm.solicitudClave.nuevaClaveRepiteError = resultCatalogo.texto, limpiarPasoTres()
				}), vm.solicitudClave.msjErrorPoliticas = "", !1) : (vm.solicitudClave.nuevaClaveRepiteError = "", void validaClavesIngresadas())
			}

			function validaClavesIngresadas() {
				if ("" !== vm.solClaveData.datosCliente.claveNueva && "" !== vm.solClaveData.datosCliente.repiteClaveNueva) {
					if (!politicasSeguridadService_.isPasswordValido(vm.solClaveData.datosCliente.claveNueva)) return catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.CLAVE_NO_CUMPLE_POLITICAS).then(function(resultCatalogo) {
						vm.solicitudClave.msjErrorPoliticas = resultCatalogo.texto, limpiarPasoTres()
					}), !1;
					if (vm.solClaveData.datosCliente.claveNueva !== vm.solClaveData.datosCliente.repiteClaveNueva) return catalogoMensajesFactory.obtener(MENSAJES_CATALOGO.CLAVES_NO_COINCIDEN).then(function(resultCatalogo) {
						vm.solicitudClave.msjErrorPoliticas = resultCatalogo.texto, limpiarPasoTres()
					}), !1;
					vm.solicitudClave.msjErrorPoliticas = "", vm.tieneDispositivos = cajaDesafioService_.tieneDispositivosHabilitados(), vm.validCedula = !vm.tieneDispositivos, vm.tieneDispositivos ? vm.solClaveData.disabledBotonCrear = !1 : vm.solClaveData.disabledBotonCrear = !0
				}
			}

			function limpiarPasoTres() {
				vm.tieneDispositivos = !1, vm.validCedula = !1, vm.solClaveData.disabledBotonCrear = !0, vm.solClaveData.verMsjError = !1, vm.solClaveData.mostrarMsjFalloSinacofi = !1, vm.solClaveData.mostrarMsjRegistrado = !1
			}

			function validaSerie() {
				if (vm.solClaveData.mostrarMsjFalloSinacofi = !1, vm.solClaveData.disabledBotonCrear = !0, null === vm.solClaveData.datosCliente.serie || void 0 === vm.solClaveData.datosCliente.serie || "" === vm.solClaveData.datosCliente.serie) return vm.datosCliente.serieError = MENSAJES_CATALOGO.DEBE_INGRESAR_SERIE, !1;
				if (vm.solClaveData.datosCliente.serie.length < 9) return vm.datosCliente.serieError = "Ingresa Serie vÃ¡lida", !1;
				if (10 === vm.solClaveData.datosCliente.serie.length) {
					var pat = /^A[0-9]{9}$/i;
					if (!pat.test(vm.solClaveData.datosCliente.serie)) return vm.datosCliente.serieError = "Ingresa Serie vÃ¡lida", !1
				} else if (9 === vm.solClaveData.datosCliente.serie.length) {
					var patNum = /^[0-9]{9}$/i;
					if (!patNum.test(vm.solClaveData.datosCliente.serie)) return vm.datosCliente.serieError = "Ingresa Serie vÃ¡lida", !1
				}
				vm.datosCliente.serieError = "", vm.solClaveData.disabledBotonCrear = !1
			}

			function validarDatos() {
				var valRut = validaRut(),
					valClave = validaClaveATM();
				valRut && valClave && (vm.solClaveData.disableCampos = !0, validaDatosSolicitudClavePersona.validaDatos())
			}

			function solicitarClave() {
				var arregloData = [];
				arregloData.push({
					etiqueta: "Origen",
					valor: "Internet Personas"
				}), arregloData.push({
					etiqueta: "Operacion",
					valor: "Solicitud de Clave Internet"
				});
				var sucess = '{\\"home\\": {\\"title\\": \\"Nueva Clave Internet\\",\\"message\\":\\"Creaci&#243;n de nueva Clave Internet\\", \\"imageUrl\\": \\"http://login.bancochile.cl/bancochile-web/persona/login/assets/images/pantalla.png\\"},\\"success\\":{\\"title\\":\\"Autorizaci&#243;n Exitosa\\",\\"message\\":\\"Se ha Autorizado con &#233;xito su nueva clave\\"}}';
				arregloData.push({
					etiqueta: "ILCAT_DESCRIPTION",
					valor: sucess
				}), vm.tieneDispositivos ? cajaDesafioService_.isCajaDesafioValida() && (vm.solClaveData.disableCampos = !0, cajaDesafioService_.setDatosTxSoftToken(arregloData), vm.objetoMiPass.tituloMiPass = "Nueva Clave de Internet", vm.objetoMiPass.operacionMiPass = "Tienes una solicitud de creaci&#243;n de una nueva Clave Internet por aprobar.", solicitudClaveServiceSinacofi.solicitarClaveDispositivos()) : (vm.solClaveData.disableCampos = !0, solicitudClaveServiceSinacofi.solicitarClaveSinacofi())
			}
			var vm = this;
			vm.solClaveData = claveSinacofiModel.getSolicitudClave(), vm.datosCliente = {}, vm.datosCliente.disablerut = "", vm.datosCliente.disableclaveATM = "", vm.datosCliente.msjErrorRut = "", vm.datosCliente.msjErrorATM = "", vm.datosCliente.serieError = "", vm.solicitudClave = {}, vm.validaRut = validaRut, vm.changeRut = changeRut, vm.validaClaveATM = validaClaveATM, vm.validaNuevaClave = validaNuevaClave, vm.validaClaveReingreso = validaClaveReingreso, vm.validaSerie = validaSerie, vm.validarDatos = validarDatos, vm.solicitarClave = solicitarClave, vm.changeClaveATM = changeClaveATM, vm.solClaveData.mostrarMsjRegistrado = !1, vm.solClaveData.mostrarMsjNoRegistrado = !1, vm.laddaValidaDatos = !1, vm.mostrarOk = !1, vm.mostrarBotonValidar = !0, vm.solicitudClave.nuevaClaveError = "", vm.solicitudClave.nuevaClaveRepiteError = "", vm.solicitudClave.msjErrorPoliticas = "", vm.objetoMiPass = {}, vm.objetoMiPass.tituloMiPass = "", vm.objetoMiPass.operacionMiPass = "", vm.verBoton = !0, vm.solClaveData.pasos = {}, vm.solClaveData.pasos.pasoUnoOk = !1, vm.solClaveData.pasos.pasoDosOk = !1, vm.solClaveData.pasos.pasoTresOk = !1, vm.tieneDispositivos = !1, vm.validCedula = !1, vm.solClaveData.disableCampos = !1, vm.datosFichaChica = {}, init(), vm.cancelar = function() {
				$window.location.href = "/persona"
			}
		}
		angular.module("WebBancoChile.solicitudClavePersona").controller("SolicitudClavePersonaSinacofiCtrl", SolicitudClavePersonaSinacofiCtrl), SolicitudClavePersonaSinacofiCtrl.$inject = ["$window", "$scope", "dispositivosSegSolClavePersona", "claveSinacofiModel", "politicasSeguridadService_", "catalogoMensajesFactory", "MENSAJES_CATALOGO", "RutHelper", "validaDatosSolicitudClavePersona", "cajaDesafioService_", "solicitudClaveServiceSinacofi", "gRecaptcha"]
	}(),
	function() {
		angular.module("WebBancoChile.venta-seguros-viajes").constant("URL_BACK_WEBPAY", "https://ww3.bancochile.cl/wps/wcm/connect/personas/portal/productos-y-servicios/seguros/viaje/seguro-viaje-total").constant("CODIGO_TIPO_DPS_SALUD", -300).constant("CODIGO_TIPO_IMC_SALUD", -310).constant("CODIGO_TIPO_PREEXISTENCIA", -330).constant("CODIGO_TIPO_DPS_ONCOLOGICO", -350).constant("CODIGO_WORKFLOW_OFERTA", ["WSALUDFAM_OFE"]).constant("CODIGO_PARENTESCO_CONYUGE_ONCOLOGICO", "03").constant("CODIGO_PARENTESCO_HIJO_ONCOLOGICO", "02").constant("OFERTA_STATES", {
			WSALUDFAM_OFE: "venta-seguros-viajes-simulacion-salud-familiar"
		}).constant("CONTENIDO_STATES", {
			10005: "venta-seguros-viajes-simulacion-oncologico-sin-carga",
			10006: "venta-seguros-viajes-simulacion-oncologico-grupo-familiar",
			10007: "venta-seguros-viajes-simulacion-oncologico-padres-suegros",
			10015: "venta-seguros-viajes-simulacion-oncologico-sin-carga",
			10016: "venta-seguros-viajes-simulacion-oncologico-grupo-familiar",
			10017: "venta-seguros-viajes-simulacion-oncologico-padres-suegros"
		}).constant("CODIGOS_MIGRACION_FRAUDE", {
			codNegocio: 1e4,
			codTipo: 10002,
			codProducto: 10002,
			codWorkflow: "WFRAUDE_CAMPANA",
			plnCor: 0
		}).constant("APP_CONSTANTES", {
			TIPO_PAGO: {
				PAGO_FACTURADO: 1,
				PAGO_MINIMO: 2,
				PAGO_OTRO: 3
			},
			ERROR_PAGO: {
				GENERICO: "0",
				CIO: "1",
				PAGO_BCH: "2",
				PERSISTENCIA: "3",
				RECHAZADO: "4",
				PAGOCREDITO_BCH: "5",
				OTRO: "null"
			}
		})
	}(),
	function() {
		function parseFechaString(fechaString, separador) {
			var arregloFecha = fechaString.split(separador),
				dia = arregloFecha[0],
				mes = arregloFecha[1] - 1,
				agno = arregloFecha[2],
				fecha = new Date(agno, mes, dia);
			return fecha
		}
		angular.module("WebBancoChile.venta-seguros-viajes").constant("PARSE_STR_TO_DATE", parseFechaString)
	}(),
	function() {
		function carruselPlanesSegurosCtrl($state, $scope, $modal, flujoModelService, utilDataPorTipoSeguroService) {
			function init() {
				vm.flujoModel = flujoModelService.getFlujoModel(), vm.flujoModel.simulacion.seleccionadosComparacion = [], vm.datosPagina = vm.flujoModel.simulacion.datosPagina, vm.masDeUnPlan = !1, vm.maxComparar = 4, vm.flujoModel.simulacion.listaPlanes.length < 4 && (vm.maxComparar = vm.flujoModel.simulacion.listaPlanes.length), vm.flujoModel.simulacion.listaPlanes.length > 1 && (vm.masDeUnPlan = !0), obtieneDataPorTipoSeguro(), vm.seleccionado = !1
			}

			function obtieneDataPorTipoSeguro() {
				vm.datosSeguro = utilDataPorTipoSeguroService.getDataPorTipo(vm.flujoModel.seguroUrl.codWorkflow)
			}

			function seleccionaPlanComparar(plan) {
				var index;
				if (plan.isChecked) index = vm.flujoModel.simulacion.seleccionadosComparacion.indexOf(plan), -1 === index && vm.flujoModel.simulacion.seleccionadosComparacion.push(plan), vm.flujoModel.simulacion.seleccionadosComparacion.length >= 4 && deshabilitaCheckPlanes(!0);
				else {
					if (index = vm.flujoModel.simulacion.seleccionadosComparacion.indexOf(plan), -1 !== index) {
						vm.flujoModel.simulacion.seleccionadosComparacion.splice(index, 1)
					}
					vm.flujoModel.simulacion.seleccionadosComparacion.length < 4 && deshabilitaCheckPlanes(!1)
				}
			}

			function deshabilitaCheckPlanes(deshabilitar) {
				angular.forEach(vm.flujoModel.simulacion.listaPlanes, function(plan) {
					plan.isChecked || (plan.isDisabled = deshabilitar)
				})
			}

			function seleccionaPlan(plan) {
				angular.forEach(vm.flujoModel.simulacion.listaPlanes, function(planAux) {
					planAux.isSelected = !1
				}), plan.isSelected = !0, vm.flujoModel.simulacion.planSeleccionado = plan
			}

			function openComparadorPlanes(size) {
				$modal.open({
					templateUrl: "venta-seguros-viajes/src/directives/carrusel-planes-seguro/modalComparadorPlanes/comparadorPlanes.tpl.html",
					controller: "comparadorPlanesModalController",
					controllerAs: "comparador",
					backdrop: "static",
					windowClass: "modal-detalle con-scroll",
					size: size
				})
			}

			function openBeneficiosYCoberturas(size, plan) {
				vm.flujoModel.simulacion.planBeneficiosYCoberturas = plan;
				$modal.open({
					templateUrl: "venta-seguros-viajes/src/directives/carrusel-planes-seguro/modalBeneficiosCoberturas/beneficiosYCoberturas.tpl.html",
					controller: "beneficiosYCoberturasModalController",
					controllerAs: "benCob",
					backdrop: "static",
					windowClass: "modal-detalle con-scroll",
					size: size
				})
			}

			function monedaUF() {
				return "UF" === vm.datosSeguro.moneda
			}

			function igualaAlturaPlanes() {
				return vm.flujoModel.simulacion.mostrarCarrusel ? ($(".widget-seguros .body").length > 1 && setTimeout(function() {
					var altoNombre = 0,
						altoCaracteristicas = 0;
					$(".widget-seguros .body").each(function() {
						$(this).find(".nombre-seguro").innerHeight() > altoNombre && (altoNombre = $(this).find(".nombre-seguro").innerHeight()), $(this).find(".caracteristicas").innerHeight() > altoCaracteristicas && (altoCaracteristicas = $(this).find(".caracteristicas").innerHeight())
					}), $(".widget-seguros .body .nombre-seguro").innerHeight(altoNombre), $(".widget-seguros .body .caracteristicas").innerHeight(altoCaracteristicas)
				}, 100), !0) : !1
			}
			var vm = this;
			vm.init = init, vm.seleccionaPlanComparar = seleccionaPlanComparar, vm.seleccionaPlan = seleccionaPlan, vm.openComparadorPlanes = openComparadorPlanes, vm.openBeneficiosYCoberturas = openBeneficiosYCoberturas, vm.monedaUF = monedaUF, vm.igualaAlturaPlanes = igualaAlturaPlanes, vm.init()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("carruselPlanesSegurosCtrl", carruselPlanesSegurosCtrl), carruselPlanesSegurosCtrl.$inject = ["$state", "$scope", "$modal", "flujoModelService", "utilDataPorTipoSeguroService"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.venta-seguros-viajes").directive("carruselPlanesSeguros", function() {
			return {
				restrict: "AE",
				controller: "carruselPlanesSegurosCtrl",
				controllerAs: "cps",
				templateUrl: function(elem, attr) {
					return "venta-seguros-viajes/src/directives/carrusel-planes-seguro/carruselPlanesSeguros-Parametrizado.tpl.html"
				}
			}
		})
	}(),
	function() {
		function beneficiosYCoberturasModalController($state, $scope, $modalInstance, $modal, $window, catalogoMensajesFactory, carruselPlanesSegurosFactory, flujoModelService, $filter, utilDataPorTipoSeguroService) {
			function init() {
				vm.loading = !0, vm.error500 = !1, vm.flujoModel = flujoModelService.getFlujoModel(), catalogoMensajesFactory.obtener(501161).then(function(msj) {
					vm.mensajeError500 = msj.texto
				}), console.log("PLAN EN COBERTURAS"), console.log(vm.flujoModel.simulacion.planBeneficiosYCoberturas), vm.fechaHoy = $filter("date")(new Date, "dd/MM/yyyy"), consultaBeneficiosYCoberturas(vm.flujoModel.simulacion.planBeneficiosYCoberturas)
			}

			function consultaBeneficiosYCoberturas(plan) {
				var request = {};
				request.codNegocio = vm.flujoModel.seguroUrl.codNegocio, request.codTipo = vm.flujoModel.seguroUrl.codTipo, request.codProducto = vm.flujoModel.seguroUrl.codProducto, request.codWorkflow = vm.flujoModel.seguroUrl.codWorkflow, request.plnCor = plan.plnCor, carruselPlanesSegurosFactory.getBeneficiosYCoberturas(request).then(getBeneficiosYCoberturasSuccess, getBeneficiosYCoberturasError)
			}

			function getBeneficiosYCoberturasSuccess(response) {
				null === response.data || angular.isUndefined(response.data) || (vm.beneficiosCoberturas = response.data, obtieneDataPorTipoSeguro()), vm.loading = !1
			}

			function getBeneficiosYCoberturasError(responseError) {
				vm.error500 = !0, vm.loading = !1
			}

			function obtieneDataPorTipoSeguro() {
				vm.datosSeguro = utilDataPorTipoSeguroService.getDataPorTipo(vm.flujoModel.seguroUrl.codWorkflow)
			}

			function monedaUF() {
				return "UF" === vm.datosSeguro.moneda
			}

			function ok() {
				$modalInstance.close(!0)
			}

			function cancel() {
				$modalInstance.dismiss(!1)
			}
			var vm = this;
			$scope.ok = ok, $scope.cancel = cancel, vm.monedaUF = monedaUF, vm.init = init, init()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("beneficiosYCoberturasModalController", beneficiosYCoberturasModalController), beneficiosYCoberturasModalController.$inject = ["$state", "$scope", "$modalInstance", "$modal", "$window", "catalogoMensajesFactory", "carruselPlanesSegurosFactory", "flujoModelService", "$filter", "utilDataPorTipoSeguroService"]
	}(),
	function() {
		function comparadorPlanesModalController($state, $scope, $modalInstance, $modal, $window, catalogoMensajesFactory, carruselPlanesSegurosFactory, flujoModelService) {
			function init() {
				vm.error500 = !1, vm.loading = !0, inicializaArreglosComparador(), catalogoMensajesFactory.obtener(501161).then(function(msj) {
						vm.mensajeError500 = msj.texto
					}), vm.flujoModel = flujoModelService.getFlujoModel(),
					vm.datosPagina = vm.flujoModel.simulacion.datosPagina, getComparacionPlanes(vm.flujoModel.simulacion.seleccionadosComparacion)
			}

			function inicializaArreglosComparador() {
				vm.arregloCabeceras = [], vm.arregloCoberturasPlanes = []
			}

			function getComparacionPlanes(planesComparacion) {
				var request = {};
				request.codNegocio = vm.flujoModel.seguroUrl.codNegocio, request.codTipo = vm.flujoModel.seguroUrl.codTipo, request.codProducto = vm.flujoModel.seguroUrl.codProducto, request.codWorkflow = vm.flujoModel.seguroUrl.codWorkflow, request.listaPlanes = [], angular.forEach(planesComparacion, function(planAux) {
					var planCodigo = {};
					planCodigo.codigo = planAux.plnCor, request.listaPlanes.push(planCodigo)
				}), carruselPlanesSegurosFactory.getComparacionPlanes(request).then(getComparacionPlanesSuccess, getComparacionPlanesError)
			}

			function getComparacionPlanesSuccess(response) {
				angular.isUndefined(response.data) || null === response.data ? (vm.loading = !1, vm.error500 = !0) : (vm.arregloCabeceras = response.data.parametroCompanias, vm.arregloCoberturasPlanes = response.data.comparacionCoberturas, vm.loading = !1)
			}

			function pintaTicket(celda) {
				return !celda.plnCobDisponible || celda.plnCobDisponible && esVacio(celda.plnCobGlosa)
			}

			function esVacio(campo) {
				return !campo
			}

			function pintaGlosa(celda) {
				return celda.plnCobDisponible && !esVacio(celda.plnCobGlosa)
			}

			function getComparacionPlanesError(responseError) {
				vm.loading = !1, vm.error500 = !0
			}

			function ok() {
				$modalInstance.close(!0)
			}

			function cancel() {
				$modalInstance.dismiss(!1)
			}
			var vm = this;
			$scope.ok = ok, $scope.cancel = cancel, vm.pintaTicket = pintaTicket, vm.pintaGlosa = pintaGlosa, vm.esVacio = esVacio, vm.init = init, init()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("comparadorPlanesModalController", comparadorPlanesModalController), comparadorPlanesModalController.$inject = ["$state", "$scope", "$modalInstance", "$modal", "$window", "catalogoMensajesFactory", "carruselPlanesSegurosFactory", "flujoModelService"]
	}(),
	function() {
		function dateFormaterDraw($filter, MAX_DAYS_MONTH) {
			return {
				require: "?ngModel",
				link: function(scope, elem, attrs, ctrl) {
					function formatDate(value, decomposedDate, positionArray, sep, minYear, maxYear) {
						for (var formattedDate = "", lastIndex = 0, date = {}, i = 0; i < positionArray.length; i++) switch (positionArray[i]) {
							case "year":
								lastIndex = value.length >= decomposedDate.year.inicio + decomposedDate.year.largo ? decomposedDate.year.inicio + decomposedDate.year.largo : value.length;
								var yearString = value.substring(decomposedDate.year.inicio, lastIndex),
									yearAux = parseInt(yearString, 10);
								isNaN(yearAux) || (date.year = yearString, 4 === yearString.length && (minYear > yearAux ? date.year = minYear : yearAux > maxYear && (date.year = maxYear)));
								break;
							case "month":
								lastIndex = value.length >= decomposedDate.month.inicio + decomposedDate.month.largo ? decomposedDate.month.inicio + decomposedDate.month.largo : value.length;
								var monthString = value.substring(decomposedDate.month.inicio, lastIndex),
									monthAux = parseInt(monthString, 10);
								isNaN(monthAux) || (monthAux >= 0 && 12 >= monthAux ? monthAux > 1 && 9 >= monthAux ? date.month = "0" + monthAux : monthAux > 0 || 0 === monthAux && 1 === monthString.length ? date.month = monthString : 0 === monthAux && 2 === monthString.length && (date.month = "01") : date.month = "12", parseInt(date.month, 10) > 0 && date.day > MAX_DAYS_MONTH[parseInt(date.month, 10) - 1] && (date.day = MAX_DAYS_MONTH[parseInt(date.month, 10) - 1]));
								break;
							case "day":
								lastIndex = value.length >= decomposedDate.day.inicio + decomposedDate.day.largo ? decomposedDate.day.inicio + decomposedDate.day.largo : value.length;
								var dayString = value.substring(decomposedDate.day.inicio, lastIndex),
									dayAux = parseInt(dayString, 10);
								isNaN(dayAux) || (dayAux >= 0 && 31 >= dayAux ? dayAux >= 4 && 9 >= dayAux ? date.day = "0" + dayAux : dayAux > 0 || 0 === dayAux && 1 === dayString.length ? date.day = dayString : 0 === dayAux && 2 === dayString.length && (date.day = "01") : date.day = "31", !angular.isUndefined(date.month) && parseInt(date.month, 10) > 0 && date.day > MAX_DAYS_MONTH[parseInt(date.month, 10) - 1] && (date.day = MAX_DAYS_MONTH[parseInt(date.month, 10) - 1]))
						}
						for (i = 0; i < positionArray.length; i++) angular.isUndefined(date[positionArray[i]]) || (formattedDate += (formattedDate.length > 0 ? sep : "") + date[positionArray[i]]);
						return formattedDate
					}

					function decomposeFormat(plainFormat, position, decomposedDate, positionArray) {
						if (!(position >= plainFormat.length)) switch (plainFormat.charAt(position)) {
							case "d":
								decomposedDate.day.inicio = position, decomposedDate.day.largo = 2, positionArray.push("day"), decomposeFormat(plainFormat, position + 2, decomposedDate, positionArray);
								break;
							case "M":
								decomposedDate.month.inicio = position, decomposedDate.month.largo = 2, positionArray.push("month"), decomposeFormat(plainFormat, position + 2, decomposedDate, positionArray);
								break;
							case "y":
								decomposedDate.year.inicio = position, decomposedDate.year.largo = 4, positionArray.push("year"), decomposeFormat(plainFormat, position + 4, decomposedDate, positionArray);
								break;
							default:
								return
						}
					}

					function stringToDate(value, decomposedDate, positionArray, minYear, maxYear) {
						for (var year = 1900, month = 0, day = 1, lastIndex = 0, i = 0; i <= positionArray.length; i++) switch (positionArray[i]) {
							case "year":
								lastIndex = value.length >= decomposedDate.year.inicio + decomposedDate.year.largo ? decomposedDate.year.inicio + decomposedDate.year.largo : value.length;
								var yearAux = parseInt(value.substring(decomposedDate.year.inicio, lastIndex), 10);
								yearAux && (year = yearAux);
								break;
							case "month":
								lastIndex = value.length >= decomposedDate.month.inicio + decomposedDate.month.largo ? decomposedDate.month.inicio + decomposedDate.month.largo : value.length;
								var monthAux = parseInt(value.substring(decomposedDate.month.inicio, lastIndex), 10) - 1;
								monthAux >= 0 && 11 >= monthAux && (month = monthAux, day > MAX_DAYS_MONTH[month] && (day = MAX_DAYS_MONTH[month]));
								break;
							case "day":
								lastIndex = value.length >= decomposedDate.day.inicio + decomposedDate.day.largo ? decomposedDate.day.inicio + decomposedDate.day.largo : value.length;
								var dayAux = parseInt(value.substring(decomposedDate.day.inicio, lastIndex), 10);
								dayAux >= 1 && 31 >= dayAux && (day = dayAux, day > MAX_DAYS_MONTH[month] && (day = MAX_DAYS_MONTH[month]))
						}
						return new Date(year, month, day, "00", "00", "00")
					}

					function getSeparator(format) {
						var result = "-";
						return -1 !== format.indexOf("yyyy") && (result = format.indexOf("yyyy") > 0 ? format.charAt(format.indexOf("yyyy") - 1) : format.charAt(4)), result
					}
					if (ctrl) {
						var minDate = null,
							maxDate = null;
						ctrl.$formatters.unshift(function(a) {
							var format = angular.isUndefined(attrs.datepickerPopup) ? attrs.dateFormat : attrs.datepickerPopup;
							return format = 0 === format.trim().length ? "dd-MM-yyyy" : format, angular.isUndefined(ctrl.$modelValue) ? "" : $filter("date")(ctrl.$modelValue, format)
						}), ctrl.$parsers.unshift(function(viewValue) {
							minDate = angular.copy(attrs.minDate), minDate = null == minDate || angular.isUndefined(minDate) ? minDate : $filter("utcToDate")(minDate.replace(/\"/g, "")), maxDate = angular.copy(attrs.maxDate), maxDate = null == maxDate || angular.isUndefined(maxDate) ? maxDate : $filter("utcToDate")(maxDate.replace(/\"/g, ""));
							var minYear = null == minDate || angular.isUndefined(minDate) ? 1900 : minDate.getFullYear(),
								maxYear = null == maxDate || angular.isUndefined(maxDate) ? 9999 : maxDate.getFullYear(),
								format = angular.isUndefined(attrs.datepickerPopup) ? angular.isUndefined(attrs.dateFormat) ? "dd-MM-yyyy" : attrs.dateFormat : attrs.datepickerPopup,
								sep = getSeparator(format),
								decomposedDate = {
									day: {},
									month: {},
									year: {}
								},
								positionArray = [],
								plainFormat = format.replace(new RegExp(sep, "g"), "");
							decomposeFormat(plainFormat, 0, decomposedDate, positionArray);
							var plainNumber = viewValue instanceof Date ? $filter("date")(viewValue, plainFormat) : viewValue.replace(/[^\d]/g, ""),
								formattedInput = plainNumber.trim().length > 0 ? formatDate(plainNumber, decomposedDate, positionArray, sep, minYear, maxYear) : "";
							return elem.val(formattedInput), stringToDate(plainNumber, decomposedDate, positionArray, minYear, maxYear)
						})
					}
				}
			}
		}
		angular.module("WebBancoChile.directive.util.dateFormater").directive("dateFormater", dateFormaterDraw), dateFormaterDraw.$inject = ["$filter", "MAX_DAYS_MONTH"]
	}(),
	function() {
		function EnvioPolizaCtrl(envioPolizaFactory, envioPolizaPersonaModelService, $scope, mensajeCatalogoService, flujoModelService) {
			function init() {
				vm.flujoModel = flujoModelService.getFlujoModel(), envioPolizaPersonaModelService.limpiarPoliza(), vm.poliza = envioPolizaPersonaModelService.getPoliza(), vm.poliza.email.validar = validarEmail, vm.poliza.emailConfirmacion.validar = validarEmailConfirmacion, envioPolizaFactory.getRegiones().then(function(response) {
					vm.poliza.regiones = response
				}, function(response) {}), vm.poliza.region.change = changeRegion, vm.poliza.ciudad.change = changeCiudad, vm.poliza.comuna.change = changeComuna, vm.poliza.region.validar = validarRegion, vm.poliza.ciudad.validar = validarCiudad, vm.poliza.comuna.validar = validarComuna, vm.poliza.direccion.validar = validarDireccion, vm.poliza.numero.validar = validarNumero, vm.poliza.numero.obligatorio = null == $scope.numeroDireccionObligatorio ? !0 : $scope.numeroDireccionObligatorio, vm.poliza.envioPolizaValida = envioPolizaValida, vm.poliza.telefono.validar = validarNumeroTelefono, vm.poliza.telefono.obligatorio = null == $scope.numeroTelefonoObligatorio ? !0 : $scope.numeroTelefonoObligatorio, vm.mensajesCatalogo = mensajeCatalogoService.getMensajes(), vm.validaSinCaracteresEspeciales = validaSinCaracteresEspeciales, limpiarMensajeErrorServicio()
			}

			function envioPolizaValida() {
				if (!vm.poliza.direccionSoloLectura) {
					if (vm.poliza.direccion.mensaje != _EMPTY || vm.poliza.direccion.model == _EMPTY) return !1;
					if (vm.poliza.numero.mensaje != _EMPTY || vm.poliza.numero.model == _EMPTY && vm.poliza.numero.obligatorio) return !1;
					if (null == vm.poliza.region.regionSelected) return !1;
					if (null == vm.poliza.ciudad.ciudadSelected) return !1;
					if (null == vm.poliza.comuna.comunaSelected) return !1
				}
				return vm.poliza.email.mensaje != _EMPTY || vm.poliza.email.model == _EMPTY ? !1 : vm.poliza.emailConfirmacion.mensaje != _EMPTY || vm.poliza.emailConfirmacion.model == _EMPTY ? !1 : vm.poliza.telefono.mensaje != _EMPTY || vm.poliza.telefono.obligatorio && vm.poliza.telefono.model == _EMPTY ? !1 : !0
			}

			function validarEmail() {
				return limpiarMensajeErrorServicio(), emailRegex = /^[-\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\.){1,125}[A-Z]{2,63}$/i, emailRegex.test(vm.poliza.email.model) ? (vm.poliza.email.mensaje = _EMPTY, void vm.poliza.emailConfirmacion.validar()) : vm.poliza.email.model === _EMPTY ? void(vm.poliza.email.mensaje = "Ingresa Email") : void(vm.poliza.email.mensaje = vm.mensajesCatalogo.errorMailNoCorresponse)
			}

			function validarEmailConfirmacion() {
				return limpiarMensajeErrorServicio(), vm.poliza.emailConfirmacion.model === _EMPTY ? void(vm.poliza.emailConfirmacion.mensaje = "Confirma email") : void(vm.poliza.email.model != vm.poliza.emailConfirmacion.model ? vm.poliza.emailConfirmacion.mensaje = vm.mensajesCatalogo.errorMailNoCoincide : vm.poliza.emailConfirmacion.mensaje = _EMPTY)
			}

			function validarNumeroTelefono() {
				limpiarMensajeErrorServicio(), vm.poliza.telefono.obligatorio && vm.poliza.telefono.model === _EMPTY ? vm.poliza.telefono.mensaje = vm.mensajesCatalogo.errorTelefonoRequerida : validarFormatoTelefono()
			}

			function validarFormatoTelefono() {
				null != vm.poliza.telefono.model && vm.poliza.telefono.model != _EMPTY && vm.poliza.telefono.model.length < 8 ? vm.poliza.telefono.mensaje = vm.mensajesCatalogo.errorFormatoTelefonoIncorrecto : vm.poliza.telefono.mensaje = _EMPTY
			}

			function validarDireccion() {
				limpiarMensajeErrorServicio();
				var retorno = !0;
				return vm.poliza.direccion.model === _EMPTY ? (vm.poliza.direccion.mensaje = vm.mensajesCatalogo.errorDireccionRequerida, retorno = !1) : vm.poliza.direccion.mensaje = _EMPTY, retorno
			}

			function validarNumero() {
				limpiarMensajeErrorServicio();
				var retorno = !0;
				return vm.poliza.numero.obligatorio && (vm.poliza.numero.model === _EMPTY ? (vm.poliza.numero.mensaje = vm.mensajesCatalogo.errorNumeroRequerida, retorno = !1) : vm.poliza.numero.mensaje = _EMPTY), retorno
			}

			function validarRegion() {
				limpiarMensajeErrorServicio();
				var retorno = !0;
				return null == vm.poliza.region.regionSelected ? (vm.poliza.region.mensaje = vm.mensajesCatalogo.errorRegionRequerida, retorno = !1) : vm.poliza.region.mensaje = _EMPTY, retorno
			}

			function validarCiudad() {
				limpiarMensajeErrorServicio();
				var retorno = !0;
				return null == vm.poliza.ciudad.ciudadSelected ? (vm.poliza.ciudad.mensaje = vm.mensajesCatalogo.errorCiudadRequerida, retorno = !1) : vm.poliza.ciudad.mensaje = _EMPTY, retorno
			}

			function validarComuna() {
				limpiarMensajeErrorServicio();
				var retorno = !0;
				return null == vm.poliza.comuna.comunaSelected ? (vm.poliza.comuna.mensaje = vm.mensajesCatalogo.errorComunaRequerida, retorno = !1) : vm.poliza.comuna.mensaje = _EMPTY, retorno
			}

			function validaSinCaracteresEspeciales(event) {
				var c58_63 = event.charCode >= 58 && event.charCode <= 63,
					c123_127 = event.charCode >= 123 && event.charCode <= 127,
					c91_95 = event.charCode >= 91 && event.charCode <= 95,
					c36_43 = event.charCode >= 36 && event.charCode <= 43,
					isCaracterSpecial = c58_63 || c123_127 || c91_95 || c36_43 || 47 == event.charCode || 34 == event.charCode || 33 == event.charCode;
				isCaracterSpecial && event.preventDefault()
			}

			function changeRegion(region) {
				limpiarMensajeErrorServicio(), vm.poliza.region.regionSelected = region, vm.poliza.ciudades = vm.poliza.region.regionSelected.paramCiudadList, vm.poliza.comunas = [], vm.poliza.ciudad.ciudadSelected = null, vm.poliza.comuna.comunaSelected = null
			}

			function changeCiudad(ciudad) {
				limpiarMensajeErrorServicio(), vm.poliza.ciudad.ciudadSelected = ciudad, vm.poliza.comunas = vm.poliza.ciudad.ciudadSelected.comunaList, vm.poliza.comuna.comunaSelected = null
			}

			function changeComuna(comuna) {
				limpiarMensajeErrorServicio(), vm.poliza.comuna.comunaSelected = comuna
			}

			function limpiarMensajeErrorServicio() {
				vm.flujoModel.ingresoDatos.mostrarErrorValidacion = !1
			}
			var vm = this;
			init()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("EnvioPolizaCtrl", EnvioPolizaCtrl);
		var _EMPTY = "";
		EnvioPolizaCtrl.$inject = ["envioPolizaFactory", "envioPolizaPersonaModelService", "$scope", "mensajeCatalogoService", "flujoModelService"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.venta-seguros-viajes").directive("envioPolizaDirective", function() {
			return {
				scope: {
					numeroTelefonoObligatorio: "=",
					numeroDireccionObligatorio: "="
				},
				restrict: "E",
				controller: "EnvioPolizaCtrl",
				controllerAs: "epc",
				templateUrl: "venta-seguros-viajes/src/directives/envioPoliza/envio-poliza.tpl.html"
			}
		})
	}(),
	function() {
		function carruselPlanesSegurosFactory($q, $http, URL_API) {
			function getPlanes(request) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/simulacionIngreso/simulacion",
					dataType: "json",
					method: "POST",
					data: request,
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}

			function getPlanSalud(request) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/simulacionIngreso/simulacionSalud",
					dataType: "json",
					method: "POST",
					data: request,
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}

			function getComparacionPlanes(request) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/simulacionIngreso/compararPlanes",
					dataType: "json",
					method: "POST",
					data: request,
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}

			function getBeneficiosYCoberturas(plan) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/simulacionIngreso/cobertura",
					dataType: "json",
					method: "POST",
					handleError: !1,
					data: plan,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}
			return {
				getPlanes: getPlanes,
				getComparacionPlanes: getComparacionPlanes,
				getBeneficiosYCoberturas: getBeneficiosYCoberturas,
				getPlanSalud: getPlanSalud
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("carruselPlanesSegurosFactory", carruselPlanesSegurosFactory), carruselPlanesSegurosFactory.$inject = ["$q", "$http", "URL_API"]
	}(),
	function() {
		function envioPolizaFactory($http, URL_API, $state) {
			function getRegiones() {
				return $http({
					url: URL_API + "/venta-seguros-viajes/consulta/regiones-ciudad-comunas",
					method: "GET"
				}).then(function(response) {
					var resul = {};
					return resul = response.data
				}, function(response) {
					$state.go("venta-seguros-viajes-error500-venta-seguros")
				})
			}
			return {
				getRegiones: getRegiones
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("envioPolizaFactory", envioPolizaFactory), envioPolizaFactory.$inject = ["$http", "URL_API", "$state"]
	}(),
	function() {
		function fechaVigenciaFactory($http, URL_API) {
			function obtenerfechaVigencia(json) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/vigencia-fecha/fecha-vigencia",
					method: "POST",
					data: json,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}
			return {
				obtenerfechaVigencia: obtenerfechaVigencia
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("fechaVigenciaFactory", fechaVigenciaFactory), fechaVigenciaFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function homeSegurosFactory($q, $http, URL_API) {
			function getHome(cuenta) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/home/catalogoHomeVenta",
					dataType: "json",
					method: "GET",
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}
			return {
				getHome: getHome
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("homeSegurosFactory", homeSegurosFactory), homeSegurosFactory.$inject = ["$q", "$http", "URL_API"]
	}(),
	function() {
		function pagoFactory($http, URL_API) {
			function obtenerMedioPago(json) {
				return $http({
					url: URL_API + "/venta-seguros-viajes/medio-pago/data",
					method: "POST",
					GET_CHALLENGE: !0,
					data: json,
					SOFTOKEN: !0
				}).then(function(response) {
					return response
				}, function(response) {
					return response
				})
			}

			function pagar(json) {
				return $http({
					url: URL_API + "/venta-seguros-viajes/medio-pago/pagar",
					dataType: "json",
					method: "POST",
					handleError: !1,
					data: json,
					headers: {
						"Content-Type": "application/json"
					},
					AUTH_CHALLENGE: !0
				}).then(function(response) {
					return response
				}, function(error) {
					return error
				})
			}

			function pagarVarios(json) {
				return $http({
					url: URL_API + "/venta-seguros-viajes/medio-pago/pagar-onc",
					dataType: "json",
					method: "POST",
					handleError: !1,
					data: json,
					headers: {
						"Content-Type": "application/json"
					},
					AUTH_CHALLENGE: !0
				}).then(function(response) {
					return response
				}, function(error) {
					return error
				})
			}
			return {
				obtenerMedioPago: obtenerMedioPago,
				pagar: pagar,
				pagarVarios: pagarVarios
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("pagoFactory", pagoFactory), pagoFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function pagoMigracionFraudeFactory($http, URL_API) {
			function pagar(json) {
				return $http({
					url: URL_API + "/venta-seguros-viajes/medio-pago/pagar-nivel-cero",
					dataType: "json",
					method: "POST",
					handleError: !1,
					data: json,
					headers: {
						"Content-Type": "application/json"
					},
					AUTH_CHALLENGE: !0
				}).then(function(response) {
					return response
				}, function(error) {
					return error
				})
			}
			return {
				pagar: pagar
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("pagoMigracionFraudeFactory", pagoMigracionFraudeFactory), pagoMigracionFraudeFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function webpayFactory($http, URL_API) {
			function getToken(json) {
				return $http.post(URL_API + "/webpay/getToken", json, {
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}
			return {
				getToken: getToken
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("webpayFactory", webpayFactory), webpayFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function simulacionFactory($http, URL_API) {
			function consultaDatosSimulacion(request) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/simulacionIngreso/consultaDatosSimulacion",
					dataType: "json",
					method: "POST",
					data: request,
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}

			function consultaDatosCliente(rut) {
				var urlConsulta = URL_API + "/venta-seguros-viajes/consulta-datos/cliente?rutConsulta=";
				return null === rut || angular.isUndefined(rut) || (urlConsulta += rut), $http({
					url: urlConsulta,
					dataType: "json",
					method: "POST",
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				})
			}

			function consultaParentescos(request) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/consulta-datos/parentesco-por-producto",
					dataType: "json",
					method: "POST",
					data: request,
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}

			function consultaRangoAgnos(request) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/simulacionIngreso/rango-agnos",
					dataType: "json",
					method: "POST",
					data: request,
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}

			function validaImc(dataJson) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/imc/valida-imc",
					method: "POST",
					data: dataJson,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}

			function consultaInfoCliente() {
				var urlConsulta = URL_API + "/venta-seguros-viajes/consulta-datos/cliente-fecha";
				return $http({
					url: urlConsulta,
					dataType: "json",
					method: "GET",
					handleError: !1,
					headers: {
						"Content-Type": "application/json"
					}
				})
			}
			return {
				consultaDatosSimulacion: consultaDatosSimulacion,
				consultaDatosCliente: consultaDatosCliente,
				consultaParentescos: consultaParentescos,
				consultaRangoAgnos: consultaRangoAgnos,
				validaImc: validaImc,
				consultaInfoCliente: consultaInfoCliente
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("simulacionFactory", simulacionFactory), simulacionFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function validaDatosPropuestaFactory($http, URL_API) {
			function validaDatosPropuesta(dataJson) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/simulacionIngreso/validaDatosPropuesta",
					method: "POST",
					data: dataJson,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}

			function validaDatosPropuestaSalud(dataJson) {
				function getParametrosResult(result) {
					return result
				}
				return $http({
					url: URL_API + "/venta-seguros-viajes/simulacionIngreso/validaDatosPropuestaSalud",
					method: "POST",
					data: dataJson,
					headers: {
						"Content-Type": "application/json"
					}
				}).then(getParametrosResult)
			}
			return {
				validaDatosPropuesta: validaDatosPropuesta,
				validaDatosPropuestaSalud: validaDatosPropuestaSalud
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("validaDatosPropuestaFactory", validaDatosPropuestaFactory), validaDatosPropuestaFactory.$inject = ["$http", "URL_API", "validaDatosSalirProtegidoService"]
	}(),
	function() {
		function webpaySegurosViajesFactory($http, URL_API) {
			function getVoucher(token) {
				return json = {
					token: token
				}, $http({
					url: URL_API + "/wpay-vsv/api/v1/webpayws/voucher",
					dataType: "json",
					method: "POST",
					handleError: !1,
					data: json,
					headers: {
						"Content-Type": "application/json"
					},
					AUTH_CHALLENGE: !0
				}).then(function(response) {
					return response.data
				}, function(error) {
					return error
				})
			}

			function initTransaccion(json) {
				return $http({
					url: URL_API + "/wpay-vsv/api/v1/webpayws/initTransaccion",
					dataType: "json",
					method: "POST",
					handleError: !1,
					data: json,
					headers: {
						"Content-Type": "application/json"
					},
					AUTH_CHALLENGE: !0
				}).then(function(response) {
					return response.data
				}, function(error) {
					return error
				})
			}

			function initTransaccionTest(json) {
				return $http({
					url: URL_API + "/wpay-vsv/api/v1/webpayws/initTransaccionTest",
					dataType: "json",
					method: "POST",
					handleError: !1,
					data: json,
					headers: {
						"Content-Type": "application/json"
					},
					AUTH_CHALLENGE: !0
				}).then(function(response) {
					return response.data
				}, function(error) {
					return error
				})
			}
			return {
				initTransaccion: initTransaccion,
				getVoucher: getVoucher,
				initTransaccionTest: initTransaccionTest
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").factory("webpaySegurosViajesFactory", webpaySegurosViajesFactory), webpaySegurosViajesFactory.$inject = ["$http", "URL_API"]
	}(),
	function() {
		function crearFecha(fecha) {
			var model = fecha,
				isDate = model instanceof Date;
			return isDate ? model = new Date(fecha.getUTCFullYear(), fecha.getUTCMonth(), fecha.getUTCDate(), fecha.getUTCHours(), fecha.getUTCMinutes(), fecha.getUTCSeconds()) : crearFecha(new Date(model))
		}

		function fechaSeguro() {
			return function(input) {
				return crearFecha(input)
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").filter("fechaSeguro", fechaSeguro)
	}(),
	function() {
		function sexoDesc() {
			return function(input) {
				return input ? 1 == input ? "Masculino" : "Femenino" : ""
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").filter("sexoDesc", sexoDesc)
	}(),
	function() {
		function errorSinDispositivoVentaSegurosCtrl(catalogoMensajesFactory, $state, CODIGO_PORTAL) {
			function mensajesError() {
				"BCH" === CODIGO_PORTAL ? vm.telefonoError = "600 637 3737" : "BEC" === CODIGO_PORTAL ? vm.telefonoError = "600 231 9999" : "CCH" === CODIGO_PORTAL ? vm.telefonoError = "800 123 777" : vm.telefonoError = "600 637 3737"
			}
			var vm = this;
			vm.telefonoError = "600 637 3737", catalogoMensajesFactory.obtener(501157).then(function(msj) {
				vm.mensaje = msj.texto
			}), mensajesError()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("errorSinDispositivoVentaSegurosCtrl", errorSinDispositivoVentaSegurosCtrl), errorSinDispositivoVentaSegurosCtrl.$inject = ["catalogoMensajesFactory", "$state", "CODIGO_PORTAL"]
	}(),
	function() {
		function medioPagoController(URL_BACK_WEBPAY, $window, $location, APP_CONSTANTES, webpaySegurosViajesFactory, pagoServiceSeguros, flujoModelService, $state, $filter, utilDataPorTipoSeguroService) {
			function init() {
				console.log("INI PAGO ..."), vm.flujoModel = flujoModelService.getFlujoModel();
				var flujoModelSession = JSON.parse($window.sessionStorage.flujoModel);
				vm.flujoModel.home = flujoModelSession.home, vm.flujoModel.simulacion = flujoModelSession.simulacion, vm.flujoModel.ingresoDatos = flujoModelSession.ingresoDatos, vm.flujoModel.resumen = flujoModelSession.resumen, vm.flujoModel.medioPago = flujoModelSession.medioPago, vm.flujoModel.comprobante = flujoModelSession.comprobante, vm.flujoModel.seguroUrl = flujoModelSession.seguroUrl, vm.flujoModel.token = flujoModelSession.token, vm.medioPago = vm.flujoModel.medioPago, vm.medioPago.okPagoAseguradora = !1;
				var error = $location.search().errorPago || "no-error";
				if ("no-error" === error) {
					var token = $location.search()["final"] || "no-token";
					"no-token" === token ? (vm.paymentExit = 0, vm.cargandoDatos = !1) : (vm.paymentExit = 1, webpaySegurosViajesFactory.getVoucher(token).then(function(data) {
						angular.isDefined(flujoModelSession) && flujoModelService.isFlujoModelValido() ? ($window.sessionStorage.removeItem("flujoModel"), vm.dataVoucher = data, flujoModelService.isFlujoModelValido() ? (registrarVentaSeguro(), vm.cargandoDatos = !1) : $state.go("venta-seguros-viajes-error500-venta-seguros")) : $state.go("venta-seguros-viajes-error500-venta-seguros")
					})["catch"](function(exception) {
						$state.go("venta-seguros-viajes-error500-venta-seguros")
					}))
				} else APP_CONSTANTES.ERROR_PAGO.GENERICO === error ? (console.log("Ha ocurrido un problema realizando el pago (GENERICO)"), $window.location.href = URL_BACK_WEBPAY) : APP_CONSTANTES.ERROR_PAGO.CIO === error ? (console.log("Ha ocurrido un problema realizando el pago (CIO)"), $state.go("venta-seguros-viajes-error500-venta-seguros")) : APP_CONSTANTES.ERROR_PAGO.PAGO_BCH === error || APP_CONSTANTES.ERROR_PAGO.PAGOCREDITO_BCH === error ? (console.log("Ha ocurrido un problema realizando el pago (PAGO_BCH)"), $state.go("venta-seguros-viajes-error500-venta-seguros")) : APP_CONSTANTES.ERROR_PAGO.PERSISTENCIA === error ? (console.log("Ha ocurrido un problema realizando el pago (PERSISTENCIA)"), $state.go("venta-seguros-viajes-error500-venta-seguros")) : APP_CONSTANTES.ERROR_PAGO.OTRO === error ? (console.log("Ha ocurrido un problema realizando el pago (OTRO)"), $state.go("venta-seguros-viajes-error500-venta-seguros")) : (console.log("Ha ocurrido un problema realizando el pago"), $state.go("venta-seguros-viajes-error500-venta-seguros"))
			}

			function registrarVentaSeguro() {
				var jsonPago = vm.medioPago.pago;
				jsonPago.formaPago = {};
				var datosSeguro = utilDataPorTipoSeguroService.getDataPorTipo(vm.flujoModel.seguroUrl.codWorkflow);
				return vm.medioPago.pago.formaPago.fppCodProducto = "WPY", vm.medioPago.pago.formaPago.fppNumProducto = vm.dataVoucher.tbkCodigoAutorizacion, vm.medioPago.pago.formaPago.fppFchPago = $filter("date")(new Date(vm.dataVoucher.tbkFechaTransaccion), "ddMMyyyy"), vm.medioPago.pago.formaPago.fppMonto = vm.medioPago.monto, jsonPago.formaPago.fppCodProducto = vm.medioPago.pago.formaPago.fppCodProducto, jsonPago.formaPago.fppNumProducto = vm.medioPago.pago.formaPago.fppNumProducto, jsonPago.formaPago.fppFchPago = vm.medioPago.pago.formaPago.fppFchPago, jsonPago.formaPago.fppMonto = $filter("number")(vm.medioPago.monto, 2), jsonPago.infoAdicional = {}, jsonPago.infoAdicional.tipoPrima = vm.flujoModel.resumen.textoPrimaCoberturas, jsonPago.infoAdicional.planSeleccionado = vm.flujoModel.simulacion.planSeleccionado.plnGlosaLarga, jsonPago.infoAdicional.compania = vm.flujoModel.simulacion.planSeleccionado.nombreCia, jsonPago.infoAdicional.moneda = datosSeguro.moneda, jsonPago.nombreSeguro = vm.medioPago.pago.nombreSeguro, jsonPago.codSesion = vm.flujoModel.token, jsonPago.tokenRespWP = vm.dataVoucher.tokenRespWP, console.log("jsonPago=================>"), console.log(JSON.stringify(jsonPago)), pagoServiceSeguros.realizarPago(jsonPago)
			}

			function reloadInit() {
				$location.search("errorPago", null), $location.search("final", null)
			}
			var vm = this;
			vm.flujoModel = {}, vm.medioPago = {}, vm.init = init, vm.reloadInit = reloadInit, vm.cargandoDatos = !0, vm.habilitaCampo = !1, init()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("medioPagoController", medioPagoController), medioPagoController.$inject = ["URL_BACK_WEBPAY", "$window", "$location", "APP_CONSTANTES", "webpaySegurosViajesFactory", "pagoServiceSeguros", "flujoModelService", "$state", "$filter", "utilDataPorTipoSeguroService"]
	}(),
	function() {
		function ingViajeTotalController($window, $scope, $state, $filter, envioPolizaPersonaModelService, flujoModelService, comprobanteService, URL_API, validaDatosViajeTotalService, validaDatosPropuestaFactory, simulacionFactory, datepickerConfig, mensajeCatalogoService, fechaVigenciaFactory) {
			function init() {
				return vm.esTitular = "2", vm.flujoModel = flujoModelService.getFlujoModel(), vm.flujoModel && vm.flujoModel.simulacion && vm.flujoModel.simulacion.planSeleccionado ? (vm.mensajes = mensajeCatalogoService.getMensajes(), vm.numeroPersonas = vm.flujoModel.simulacion.datosViajero.numeroPersonas, vm.datosTitular = vm.flujoModel.simulacion.datosTitular, vm.ingreso = vm.flujoModel.ingresoDatos, vm.step1ok = !1, vm.step2ok = !1, vm.step3ok = 1 === vm.numeroPersonas ? !0 : !1, vm.maxFechaNacimiento = "", vm.maxFechaViajero = "", inicializaParentescos(), inicializaContratante(), iniciarContratanteFechaNacimiento(), vm.viajeroTitular = {}, vm.datepickerViajeroTitularNacimiento = {}, inicializaDatosViajeroTitular(), vm.datepickerContratanteNacimiento.fechaNacimiento = "", iniciarViajeroTitularFechaNacimiento(), inicializaArregloViajeros(vm.numeroPersonas), recuperaVigenciaSeguro(), datepickerConfig.showWeeks = !1, datepickerConfig.startingDay = 1, vm.mostrarRequeridosTitular = !0, vm.mostrarErrorFechaContratante = !0, validaPaso1(), void setTimeout(function() {
					$window.scrollTo(0, 0)
				}, 500)) : void $state.go("venta-seguros-viaje-total-simulacion")
			}

			function recuperaVigenciaSeguro() {
				var jsonFechaVig = {
					codNegocio: vm.flujoModel.seguroUrl.codNegocio,
					codWorkflow: vm.flujoModel.seguroUrl.codWorkflow,
					plnCor: vm.flujoModel.simulacion.planSeleccionado.plnCor,
					codProducto: vm.flujoModel.seguroUrl.codProducto,
					fechaInicio: vm.flujoModel.simulacion.datosViajero.fechaInicio.format,
					fechaTermino: vm.flujoModel.simulacion.datosViajero.fechaTermino.format
				};
				fechaVigenciaFactory.obtenerfechaVigencia(jsonFechaVig).then(obtenerfechaVigenciaOK, obtenerfechaVigenciaError)
			}

			function obtenerfechaVigenciaOK(response) {
				vm.ingreso.seguro = {}, vm.ingreso.seguro.fechaVigenciaIniciodate = "", vm.ingreso.seguro.fechaVigenciaDesdeformat = "", vm.ingreso.seguro.fechaVigenciaIniciodate = "", vm.ingreso.seguro.fechaVigenciaHastaformat = "", vm.ingreso.seguro.fechaMinNacimientodate = "", vm.ingreso.seguro.fechaMinNacimientoformat = "", vm.ingreso.seguro.fechaVigenciaDesdedate = response.data.fechaInicioVigencia, vm.ingreso.seguro.fechaVigenciaDesdeformat = response.data.fechaIniVigFormat, vm.ingreso.seguro.fechaVigenciaHastadate = response.data.fechaIniVigFormat, vm.ingreso.seguro.fechaVigenciaHastaformat = response.data.fechaFinVigFormat, vm.maxFechaNacimiento = response.data.fechaMinNacimiento, vm.maxFechaViajero = response.data.fechaMinNacimiento, vm.ingreso.seguro.fechaMinNacimientodate = response.data.fechaMinNacimiento, vm.ingreso.seguro.fechaMinNacimientoformat = response.data.fechaMinNacimientoFormat
			}

			function obtenerfechaVigenciaError(response) {
				$state.go("venta-seguros-viajes-error500-venta-seguros")
			}

			function inicializaContratante() {
				vm.datosContratante = {}, vm.datosContratante.rut = {}, vm.datosContratante.rut.valor = "", vm.datosContratante.rut.error = !1, vm.datosContratante.nombre = {}, vm.datosContratante.nombre.error = !1, vm.datosContratante.apellidoPaterno = {},
					vm.datosContratante.apellidoPaterno.error = !1, vm.datosContratante.apellidoMaterno = {}, vm.datosContratante.apellidoMaterno.error = !1, vm.datosContratante.sexo = "1", vm.datosContratante.parentesco = {}, vm.datosContratante.parentesco.selectedParentesco = {}, vm.datosContratante.parentesco.error = !1, vm.datepickerContratanteNacimiento = {}, vm.datepickerContratanteNacimiento.fechaNacimiento = "", vm.datosContratante.fechaNacimiento = {}, vm.datosContratante.fechaNacimiento.date = null, vm.datosContratante.fechaNacimiento.errorInvalida = !1, vm.datosContratante.fechaNacimiento.errorVacia = !0, vm.datosContratante.fechaNacimiento.errorMje = "", vm.datosContratante.listaParentescos = {}
			}

			function inicializaDatosViajeroTitular() {
				vm.viajeroTitular.rut = {}, vm.viajeroTitular.rut.valor = "", vm.viajeroTitular.rut.error = !1, vm.viajeroTitular.nombre = {}, vm.viajeroTitular.nombre.error = !1, vm.viajeroTitular.apellidoPaterno = {}, vm.viajeroTitular.apellidoPaterno.error = !1, vm.viajeroTitular.apellidoMaterno = {}, vm.viajeroTitular.apellidoMaterno.error = !1, vm.viajeroTitular.sexo = "1", vm.viajeroTitular.parentesco = {}, vm.viajeroTitular.parentesco.selectedParentesco = {}, vm.viajeroTitular.parentesco.error = !1, vm.datepickerViajeroTitularNacimiento.fechaNacimiento = "", vm.viajeroTitular.fechaNacimiento = {}, vm.viajeroTitular.fechaNacimiento.errorInvalida = !1, vm.viajeroTitular.fechaNacimiento.errorVacia = !0, vm.viajeroTitular.fechaNacimiento.errorMje = "", vm.viajeroTitular.listaParentescos = {}
			}

			function inicializaArregloViajeros(numeroPersonas) {
				vm.arrViajeros = [];
				var viajero = {};
				viajero.rut = {}, viajero.rut.valor = "", viajero.rut.error = !1, viajero.rut.errorInvalido = !1, viajero.rut.errorRepetido = !1, viajero.nombre = {}, viajero.nombre.error = !1, viajero.apellidoPaterno = {}, viajero.apellidoPaterno.error = !1, viajero.apellidoMaterno = {}, viajero.apellidoMaterno.error = !1, viajero.sexo = "1", viajero.parentesco = {}, viajero.parentesco.selectedParentesco = {}, viajero.parentesco.errorRequerido = !1, viajero.parentesco.errorConyuge = !1, viajero.fechaNacimiento = {}, viajero.fechaNacimiento.errorInvalida = !1, viajero.fechaNacimiento.errorVacia = !0, viajero.fechaNacimiento.errorMje = "", viajero.fechaMaxNacimiento = vm.maxFechaNacimiento, viajero.listaParentescos = {}, viajero.completo = !1, viajero.datePicker = {
					opened: !1,
					options: {
						startingDay: 1,
						formatYear: "yyyy",
						showWeeks: !1
					},
					format: "dd/MM/yyyy",
					fechaNacimiento: "",
					indice: null,
					change: function() {
						var viaj = vm.arrViajeros[this.indice];
						viaj.fechaNacimiento.date = this.fechaNacimiento, viaj.fechaNacimiento.format = $filter("date")(this.fechaNacimiento, "dd/MM/yyyy")
					},
					openDatePicker: function($event) {
						$event.preventDefault(), $event.stopPropagation(), this.opened = !0
					}
				};
				for (var i = 1; numeroPersonas > i; i++) viajero.datePicker.indice = vm.arrViajeros.length, viajero.mostrarRequeridos = !1, vm.arrViajeros.push(angular.copy(viajero))
			}

			function obtieneNumeroViajerosIncompletos() {
				for (var totalViajeros = vm.arrViajeros.length, cantidadViajerosIncompletos = 0, i = 0; totalViajeros > i; i++) cantidadViajerosIncompletos += vm.arrViajeros[i].completo ? 0 : 1;
				return cantidadViajerosIncompletos
			}

			function prellenaViajeroTitular() {
				$scope.ingvtForm.viajeroTitularRut.$setValidity("rut", !0), vm.viajeroTitular.rut.valor = $filter("rut")(vm.datosContratante.rut.valor), vm.viajeroTitular.nombre.valor = vm.datosContratante.nombre.valor, vm.viajeroTitular.nombre.error = !1, vm.viajeroTitular.apellidoPaterno.valor = vm.datosContratante.apellidoPaterno.valor, vm.viajeroTitular.apellidoPaterno.error = !1, vm.viajeroTitular.apellidoMaterno.valor = vm.datosContratante.apellidoMaterno.valor, vm.viajeroTitular.apellidoMaterno.error = !1, vm.viajeroTitular.fechaNacimiento = angular.copy(vm.datosContratante.fechaNacimiento), vm.viajeroTitular.fechaNacimiento.errorInvalida = !1, vm.viajeroTitular.fechaNacimiento.errorVacia = !0, vm.viajeroTitular.fechaNacimiento.errorMje = "", vm.datepickerViajeroTitularNacimiento.fechaNacimiento = $filter("date")($filter("fechaSeguro")(vm.datosContratante.fechaNacimiento.date), "dd/MM/yyyy"), vm.viajeroTitular.listaParentescos.titular = vm.datosContratante.listaParentescos.titular, vm.viajeroTitular.parentesco.selectedParentesco = {}, vm.viajeroTitular.sexo = vm.datosContratante.sexo
			}

			function inicializaParentescos() {
				vm.listaParentescos = {}, vm.listaParentescos.combo = [], vm.listaParentescos.titular = [], vm.listaParentescos.noTitular = [], consultaDatosParentesco()
			}

			function sacaPuntosYGuionRut(rut) {
				return rut ? (rut = rut.split(".").join(""), rut = rut.split("-").join("")) : ""
			}

			function consultaDatosParentesco() {
				var request = {};
				request.codNegocio = vm.flujoModel.seguroUrl.codNegocio, request.codTipo = vm.flujoModel.seguroUrl.codTipo, request.codProducto = vm.flujoModel.seguroUrl.codProducto, request.codWorkflow = vm.flujoModel.seguroUrl.codWorkflow, request.plnCor = vm.flujoModel.simulacion.planSeleccionado.plnCor, simulacionFactory.consultaParentescos(request).then(consultaParentescosSuccess, consultaParentescosError)
			}

			function consultaParentescosSuccess(response) {
				angular.isUndefined(response.data) || null === response.data || angular.forEach(response.data, function(parentesco) {
					var parentescoNoTitular = {};
					if (parentescoNoTitular.parentesco = parentesco.parentescos.valor, parentescoNoTitular.fechaMin = parseFechaString(parentesco.fechaInicio), parentescoNoTitular.fechaMax = parseFechaString(parentesco.fechaTermino), parentescoNoTitular.errorMje = "Edad mÃ­nima de ingreso " + parentesco.parentescos.parEdadMin + " aÃ±os.", parentesco.parentescos.parEdadMin < 0) {
						var edadMin = -1 * parentesco.parentescos.parEdadMin;
						parentescoNoTitular.errorMjeEdadMin = "La edad de ingreso mÃ­nima es de " + edadMin + " dÃ­as."
					} else parentescoNoTitular.errorMjeEdadMin = "La edad de ingreso mÃ­nima es de " + parentesco.parentescos.parEdadMin + " aÃ±os.";
					parentescoNoTitular.errorMjeEdadMax = "La edad de ingreso mÃ¡xima es de " + (parentesco.parentescos.parEdadMax - 1) + " aÃ±os.";
					var CODIGO_HIJO = "03";
					parentesco.parentescos.nombre === CODIGO_HIJO && (parentescoNoTitular.errorMjeEdadMax = "Fecha de nacimiento de hijo supera la edad permitida de contrataciÃ³n. Debes contratar otro seguro incorporandolo como asegurado viajero titular."), parentescoNoTitular.parentescoCod = parentesco.parentescos.nombre, vm.listaParentescos.noTitular.push(parentescoNoTitular)
				})
			}

			function consultaParentescosError(response) {
				$state.go("venta-seguros-viajes-error500-venta-seguros")
			}

			function parseFechaString(fechaString) {
				var arregloFecha = fechaString.split("/"),
					dia = arregloFecha[0],
					mes = arregloFecha[1] - 1,
					agno = arregloFecha[2],
					fecha = new Date(agno, mes, dia);
				return fecha
			}

			function validarParentescoViajeros() {
				contadorConyuge = 0, CODIGO_CONYUGE = "02";
				for (var i = 0; i < vm.arrViajeros.length; i++) vm.arrViajeros[i].parentesco.errorConyuge = !1, vm.arrViajeros[i].parentesco.selectedParentesco.parentescoCod === CODIGO_CONYUGE && (contadorConyuge += 1, vm.arrViajeros[i].parentesco.errorConyuge = contadorConyuge > 1);
				return contadorConyuge < 2
			}

			function creaFecha(fecha) {
				return fecha instanceof Date ? new Date(fecha.getUTCFullYear(), fecha.getUTCMonth(), fecha.getUTCDate(), fecha.getUTCHours(), fecha.getUTCMinutes(), fecha.getUTCSeconds()) : "string" == typeof fecha && -1 != fecha.indexOf("/") ? parseFechaString(fecha) : creaFecha(new Date(fecha))
			}

			function isMinMaxFechaNacimientoValida(fechaNacimiento, selectedParentesco) {
				var fechaInicioValida = selectedParentesco.fechaMin,
					fechaTerminoValida = selectedParentesco.fechaMax,
					fechaNacimientoValidar = creaFecha(fechaNacimiento.date);
				return !isNaN(fechaNacimientoValidar.getDate()) && (null === fechaNacimientoValidar || angular.isUndefined(fechaNacimientoValidar) || $filter("date")(fechaNacimientoValidar, "yyyyMMdd") <= $filter("date")(fechaInicioValida, "yyyyMMdd")) ? (fechaNacimiento.errorMje = selectedParentesco.errorMjeEdadMax, fechaNacimiento.errorInvalida = !0, !1) : !isNaN(fechaNacimientoValidar.getDate()) && (null === fechaNacimientoValidar || angular.isUndefined(fechaNacimientoValidar) || $filter("date")(fechaNacimientoValidar, "yyyyMMdd") > $filter("date")(fechaTerminoValida, "yyyyMMdd")) ? (fechaNacimiento.errorMje = selectedParentesco.errorMjeEdadMin, fechaNacimiento.errorInvalida = !0, !1) : (fechaNacimiento.errorMje = "", fechaNacimiento.errorInvalida = !1, !0)
			}

			function iniciarContratanteFechaNacimiento() {
				vm.datepickerContratanteNacimiento = {
					opened: !1,
					options: {
						startingDay: 1,
						formatYear: "yyyy",
						showWeeks: !1
					},
					format: "dd/MM/yyyy",
					"init-date": vm.maxFechaNacimiento,
					fechaNacimiento: "",
					change: function() {
						vm.datosContratante.fechaNacimiento.date = vm.datepickerContratanteNacimiento.fechaNacimiento.getTime(), vm.datosContratante.fechaNacimiento.format = $filter("date")($filter("fechaSeguro")(vm.datosContratante.fechaNacimiento.date), "dd/MM/yyyy")
					},
					openDatePicker: function($event) {
						$event.preventDefault(), $event.stopPropagation(), this.opened = !0
					}
				}
			}

			function iniciarViajeroTitularFechaNacimiento() {
				vm.datepickerViajeroTitularNacimiento = {
					opened: !1,
					options: {
						startingDay: 1,
						formatYear: "yyyy",
						showWeeks: !1
					},
					format: "dd/MM/yyyy",
					"init-date": vm.maxFechaNacimiento,
					fechaNacimiento: "",
					change: function() {
						vm.viajeroTitular.fechaNacimiento.date = vm.datepickerViajeroTitularNacimiento.fechaNacimiento, vm.viajeroTitular.fechaNacimiento.format = $filter("date")(vm.viajeroTitular.fechaNacimiento.date, "dd/MM/yyyy")
					},
					openDatePicker: function($event) {
						$event.preventDefault(), $event.stopPropagation(), this.opened = !0
					}
				}
			}

			function changeEsTitular(esTitular) {
				vm.esTitular = esTitular ? "1" : "2", vm.viajeroTitular.esTitular !== esTitular && (vm.viajeroTitular.esTitular = esTitular, esTitular ? prellenaViajeroTitular() : inicializaDatosViajeroTitular())
			}

			function getDatosPersonalesContratante(rut) {
				var rutOk = $scope.ingvtForm.contratanteRut.$valid;
				rut && rutOk && vm.rutContratanteCambio && (vm.datosContratante.nombre = {
					error: !1,
					valor: "",
					mostrarError: !1
				}, vm.datosContratante.apellidoPaterno = {
					error: !1,
					valor: "",
					mostrarError: !1
				}, vm.datosContratante.apellidoMaterno.valor = "", vm.datepickerContratanteNacimiento.fechaNacimiento = "", vm.rutContratanteCambio = !1, vm.mostrarErrorFechaContratante = !0, validaPaso1())
			}

			function getDatosPersonalesViajeroTitular(rut) {
				var rutOk = $scope.ingvtForm.viajeroTitularRut.$valid;
				rut && rutOk && vm.rutCambio && (vm.viajeroTitular.nombre = {
					error: !1,
					valor: "",
					mostrarError: !1
				}, vm.viajeroTitular.apellidoPaterno = {
					error: !1,
					valor: "",
					mostrarError: !1
				}, vm.viajeroTitular.apellidoMaterno.valor = "", vm.datepickerViajeroTitularNacimiento.fechaNacimiento = "", vm.rutCambio = !1, vm.mostrarRequeridosTitular = !0, validaPaso2())
			}

			function getDatosPersonalesViajero(rut, viajero, index) {
				var rutOk = $scope.ingvtForm["viajeroRut_" + index].$valid;
				rut && rutOk && viajero.rut.rutCambio && (viajero.nombre = {
					error: !1,
					valor: "",
					mostrarError: !1
				}, viajero.apellidoPaterno = {
					error: !1,
					valor: "",
					mostrarError: !1
				}, viajero.apellidoMaterno.valor = "", viajero.datePicker.fechaNacimiento = "", viajero.rut.rutCambio = !1, viajero.mostrarRequeridos = !0, validaPaso3())
			}

			function validaPaso1() {
				return vm.step1ok = !0, vm.datosContratante.rut.error = !vm.datosContratante.rut.valor, vm.datosContratante.nombre.error = !vm.datosContratante.nombre.valor || vm.datosContratante.nombre.valor.length < 2, vm.datosContratante.apellidoPaterno.error = !vm.datosContratante.apellidoPaterno.valor || vm.datosContratante.apellidoPaterno.valor.length < 2, vm.datosContratante.fechaNacimiento.errorVacia = !vm.datepickerContratanteNacimiento.fechaNacimiento, vm.datosContratante.fechaNacimiento.errorInvalida = !isMinMaxFechaNacimientoValida(vm.datosContratante.fechaNacimiento, vm.viajeroTitular.parentesco.selectedParentesco), vm.step1ok = !(vm.datosContratante.rut.error || vm.datosContratante.nombre.error || vm.datosContratante.apellidoPaterno.error || vm.datosContratante.fechaNacimiento.errorVacia || vm.datosContratante.fechaNacimiento.errorInvalida), vm.step1ok
			}

			function validaPaso2() {
				return vm.step2ok = !0, vm.viajeroTitular.rut.error = !vm.viajeroTitular.rut.valor, vm.viajeroTitular.nombre.error = !vm.viajeroTitular.nombre.valor || vm.viajeroTitular.nombre.valor.length < 2, vm.viajeroTitular.apellidoPaterno.error = !vm.viajeroTitular.apellidoPaterno.valor || vm.viajeroTitular.apellidoPaterno.valor.length < 2, vm.viajeroTitular.fechaNacimiento.errorVacia = !vm.datepickerViajeroTitularNacimiento.fechaNacimiento, vm.viajeroTitular.fechaNacimiento.errorInvalida = !isMinMaxFechaNacimientoValida(vm.viajeroTitular.fechaNacimiento, vm.datosTitular.listaParentescos.titular[0]), vm.step2ok = !(vm.viajeroTitular.rut.error || vm.viajeroTitular.nombre.error || vm.viajeroTitular.apellidoPaterno.error || vm.viajeroTitular.fechaNacimiento.errorVacia || vm.viajeroTitular.fechaNacimiento.errorInvalida), vm.step2ok
			}

			function validaPaso3() {
				vm.step3ok = !0, vm.step3ok = validarParentescoViajeros();
				for (var i = 0; i < vm.arrViajeros.length; i++) vm.step3ok = validaViajero(vm.arrViajeros[i], i) && vm.step3ok;
				return vm.step3ok
			}

			function validaViajero(viajero, i) {
				viajero.rut.error = !viajero.rut.valor, viajero.rut.errorInvalido = $scope.ingvtForm["viajeroRut_" + i].$invalid;
				var mismoRutViajeroTitular = sacaPuntosYGuionRut(vm.viajeroTitular.rut.valor) === sacaPuntosYGuionRut(viajero.rut.valor),
					rutRepetidoOtroViajero = rutRepetido(viajero, vm.arrViajeros, i);
				viajero.rut.errorRepetido = mismoRutViajeroTitular || rutRepetidoOtroViajero, viajero.parentesco.errorRequerido = !viajero.parentesco.selectedParentesco.parentescoCod, viajero.nombre.error = !viajero.nombre.valor || viajero.nombre.valor.length < 2, viajero.apellidoPaterno.error = !viajero.apellidoPaterno.valor || viajero.apellidoPaterno.valor.length < 2, viajero.fechaNacimiento.errorVacia = !viajero.datePicker.fechaNacimiento, viajero.fechaNacimiento.errorInvalida = !isMinMaxFechaNacimientoValida(viajero.fechaNacimiento, viajero.parentesco.selectedParentesco);
				var viajeroOk = !(viajero.rut.error || viajero.rut.errorInvalido || viajero.parentesco.errorRequerido || viajero.parentesco.errorConyuge || viajero.nombre.error || viajero.apellidoPaterno.error || viajero.fechaNacimiento.errorVacia || viajero.fechaNacimiento.errorInvalida);
				return viajero.completo = viajeroOk, viajeroOk
			}

			function rutRepetido(viajero, arrViajeros, indice) {
				var rut = sacaPuntosYGuionRut(viajero.rut.valor);
				if (!rut) return !1;
				for (var i = 0; i < arrViajeros.length; i++)
					if (rut === sacaPuntosYGuionRut(arrViajeros[i].rut.valor) && indice !== i) return !0;
				return !1
			}

			function modificaFormulario() {}

			function changeParentesco(viajero, perentesco) {
				console.log("CAMBIO PARENTESCO"), console.log(viajero), console.log(perentesco), console.log(this)
			}

			function guardarContinuar() {
				if (vm.dataEnvioPoliza.envioPolizaValida()) {
					vm.viajeroTitular.telefono = vm.dataEnvioPoliza.telefono.model, vm.viajeroTitular.mail = vm.dataEnvioPoliza.email.model, vm.viajeroTitular.region = vm.dataEnvioPoliza.region.regionSelected, vm.viajeroTitular.ciudad = vm.dataEnvioPoliza.ciudad.ciudadSelected, vm.viajeroTitular.comuna = vm.dataEnvioPoliza.comuna.comunaSelected, vm.viajeroTitular.direccion = vm.dataEnvioPoliza.direccion.model, vm.viajeroTitular.numero = vm.dataEnvioPoliza.numero.model, vm.viajeroTitular.bloque = vm.dataEnvioPoliza.bloque, vm.ingreso.viajeroTitular = vm.viajeroTitular, vm.ingreso.viajeros = creaListaViajeros(), vm.ingreso.datosContratante = vm.datosContratante;
					var dataJson = validaDatosViajeTotalService.validarDatosViajeTotal();
					console.log("dataJson=>", JSON.stringify(dataJson)), validaDatosPropuestaFactory.validaDatosPropuesta(dataJson).then(validaDatosPropuestaOK, validaDatosPropuestaError)
				}
			}

			function creaListaViajeros() {
				for (var viajeros = [], i = 0; i < vm.arrViajeros.length; i++) {
					var rut = vm.arrViajeros[i].rut.valor.replace("-", ""),
						numRut = rut.substring(0, rut.length - 1),
						dvRut = rut.substring(rut.length - 1),
						v = {};
					v.rut = numRut, v.dv = dvRut, v.nombre = vm.arrViajeros[i].nombre.valor, v.apepata = vm.arrViajeros[i].apellidoPaterno.valor, v.pemat = vm.arrViajeros[i].apellidoMaterno.valor, v.fecNac = creaFecha(vm.arrViajeros[i].fechaNacimiento.format), v.fecNacFormat = vm.arrViajeros[i].fechaNacimiento.format, v.parentesco = vm.arrViajeros[i].parentesco.selectedParentesco.parentescoCod, v.parentescoGlosa = vm.arrViajeros[i].parentesco.selectedParentesco.parentesco, viajeros.push(v)
				}
				return viajeros
			}

			function validaDatosPropuestaOK(response) {
				vm.flujoModel.tokenPlanSimulado = response.data.token, 200 === response.status && $state.go("venta-seguros-viaje-total-resumen")
			}

			function validaDatosPropuestaError(response) {
				$state.go("venta-seguros-viajes-error500-venta-seguros")
			}
			var vm = this;
			vm.guardarContinuar = guardarContinuar, vm.dataEnvioPoliza = envioPolizaPersonaModelService.getPoliza(), vm.changeEsTitular = changeEsTitular, vm.modificaFormulario = modificaFormulario, vm.changeParentesco = changeParentesco, vm.obtieneNumeroViajerosIncompletos = obtieneNumeroViajerosIncompletos, vm.getDatosPersonalesViajero = getDatosPersonalesViajero, vm.getDatosPersonalesViajeroTitular = getDatosPersonalesViajeroTitular, vm.getDatosPersonalesContratante = getDatosPersonalesContratante, vm.validaPaso1 = validaPaso1, vm.validaPaso2 = validaPaso2, vm.validaPaso3 = validaPaso3, init()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("ingViajeTotalController", ingViajeTotalController), ingViajeTotalController.$inject = ["$window", "$scope", "$state", "$filter", "envioPolizaPersonaModelService", "flujoModelService", "comprobanteService", "URL_API", "validaDatosViajeTotalService", "validaDatosPropuestaFactory", "simulacionFactory", "datepickerConfig", "mensajeCatalogoService", "fechaVigenciaFactory"]
	}(),
	function() {
		function resumenViajeTotalController(URL_BACK_WEBPAY, CODIGO_PORTAL, utilDataPorTipoSeguroService, pagoServiceSeguros, $location, APP_CONSTANTES, webpaySegurosViajesFactory, URL_API, $state, flujoModelService, $window, $filter) {
			function cancelar() {
				$window.location.href = URL_BACK_WEBPAY
			}

			function init() {
				vm.flujoModel = flujoModelService.getFlujoModel(), vm.urlCondiciones = URL_API + "/venta-seguros-viajes/documentos/descargaCondicionesPlan?codNegocio=" + vm.flujoModel.seguroUrl.codNegocio + "&codTipo=" + vm.flujoModel.seguroUrl.codTipo + "&codProducto=" + vm.flujoModel.seguroUrl.codProducto + "&codWorkflow=" + vm.flujoModel.seguroUrl.codWorkflow + "&codPlan=" + vm.flujoModel.simulacion.planSeleccionado.plnCor + "&codSesion=123", vm.paisesDestinos = "", angular.forEach(vm.flujoModel.simulacion.paisesDestinos, function(pais) {
					vm.paisesDestinos = vm.paisesDestinos + pais.nombre + ", "
				}), vm.paisesDestinos.length > 2 && (vm.paisesDestinos = vm.paisesDestinos.substring(0, vm.paisesDestinos.length - 2)), setTimeout(function() {
					$window.scrollTo(0, 0)
				}, 500)
			}

			function getJsonPago() {
				vm.flujoModel.medioPago.codNegocio = vm.flujoModel.seguroUrl.codNegocio, vm.flujoModel.medioPago.codTipo = vm.flujoModel.seguroUrl.codTipo, vm.flujoModel.medioPago.codProducto = vm.flujoModel.seguroUrl.codProducto, vm.flujoModel.medioPago.codWorkflow = vm.flujoModel.seguroUrl.codWorkflow, vm.flujoModel.medioPago.plnCor = vm.flujoModel.simulacion.planSeleccionado.plnCor, vm.flujoModel.medioPago.monto = vm.flujoModel.simulacion.planSeleccionado.plnMontoMO;
				var viajeroTitular = vm.flujoModel.ingresoDatos.viajeroTitular,
					datosContratante = vm.flujoModel.ingresoDatos.datosContratante,
					rut = $filter("rutSinFormato")(viajeroTitular.rut.valor),
					numRut = rut.substring(0, rut.length - 1),
					dvRut = rut.substring(rut.length - 1),
					rutContratante = $filter("rutSinFormato")(datosContratante.rut.valor),
					numRutCon = rutContratante.substring(0, rutContratante.length - 1),
					dvRutCon = rutContratante.substring(rutContratante.length - 1),
					jsonPago = {
						codNegocio: vm.flujoModel.seguroUrl.codNegocio,
						codTipo: vm.flujoModel.seguroUrl.codTipo,
						codProducto: vm.flujoModel.seguroUrl.codProducto,
						codWorkflow: vm.flujoModel.seguroUrl.codWorkflow,
						plnCor: vm.flujoModel.simulacion.planSeleccionado.plnCor,
						numeroPersonas: {
							parNombre: "numeroPersona",
							parValor: vm.flujoModel.simulacion.datosViajero.numeroPersonas
						},
						rangoFecha: {
							entidadParametroSimulacion: [{
								parNombre: "fechaInicio",
								parValor: vm.flujoModel.simulacion.datosViajero.fechaInicio.format
							}, {
								parNombre: "fechaTermino",
								parValor: vm.flujoModel.simulacion.datosViajero.fechaTermino.format
							}]
						},
						clienteContratante: {
							cliRut: numRutCon,
							cliDv: dvRutCon,
							cliNombre: datosContratante.nombre.valor,
							cliApepat: datosContratante.apellidoPaterno.valor,
							cliApemat: datosContratante.apellidoMaterno.valor,
							cliFecNac: datosContratante.fechaNacimiento.format,
							cliCelCodArea: " ",
							cliCel: " ",
							cliFonoCodArea: " ",
							cliFono: viajeroTitular.telefono,
							cliFax: " ",
							cliEmail: viajeroTitular.mail,
							cliSexo: "1" == viajeroTitular.sexo ? "M" : "F",
							cliCodMarca: " ",
							cliDirCalle: viajeroTitular.direccion,
							cliDirComGls: viajeroTitular.comuna.nombre,
							cliDirCiuGls: viajeroTitular.ciudad.nombre,
							cliDirRegGls: viajeroTitular.region.nombre,
							cliCodCom: viajeroTitular.comuna.valor,
							cliCodCiu: viajeroTitular.ciudad.valor,
							cliEsTitular: viajeroTitular.esTitular ? 1 : 0,
							cliEsAsegurado: viajeroTitular.esTitular ? 1 : 0
						},
						clienteTitular: {
							cliRut: numRut,
							cliDv: dvRut,
							cliNombre: vm.flujoModel.ingresoDatos.viajeroTitular.nombre.valor,
							cliApepat: vm.flujoModel.ingresoDatos.viajeroTitular.apellidoPaterno.valor,
							cliApemat: vm.flujoModel.ingresoDatos.viajeroTitular.apellidoMaterno.valor,
							cliFecNac: vm.flujoModel.ingresoDatos.viajeroTitular.fechaNacimiento.format,
							cliCelCodArea: " ",
							cliCel: " ",
							cliFonoCodArea: " ",
							cliFono: viajeroTitular.telefono,
							cliFax: " ",
							cliEmail: viajeroTitular.mail,
							cliSexo: "1" == viajeroTitular.sexo ? "M" : "F",
							cliCodMarca: " ",
							cliDirCalle: viajeroTitular.direccion,
							cliDirComGls: viajeroTitular.comuna.nombre,
							cliDirCiuGls: viajeroTitular.ciudad.nombre,
							cliDirRegGls: viajeroTitular.region.nombre,
							cliCodCom: viajeroTitular.comuna.valor,
							cliCodCiu: viajeroTitular.ciudad.valor,
							cliEsTitular: viajeroTitular.esTitular ? 1 : 0,
							cliEsAsegurado: viajeroTitular.esTitular ? 1 : 0
						},
						clienteAsegurado: {
							cliRut: numRut,
							cliDv: dvRut,
							cliNombre: vm.flujoModel.ingresoDatos.viajeroTitular.nombre.valor,
							cliApepat: vm.flujoModel.ingresoDatos.viajeroTitular.apellidoPaterno.valor,
							cliApemat: vm.flujoModel.ingresoDatos.viajeroTitular.apellidoMaterno.valor,
							cliFecNac: vm.flujoModel.ingresoDatos.viajeroTitular.fechaNacimiento.format,
							cliCelCodArea: " ",
							cliCel: " ",
							cliFonoCodArea: " ",
							cliFono: viajeroTitular.telefono,
							cliFax: " ",
							cliEmail: viajeroTitular.mail,
							cliSexo: "1" == viajeroTitular.sexo ? "M" : "F",
							cliCodMarca: " ",
							cliDirCalle: viajeroTitular.direccion,
							cliDirComGls: viajeroTitular.comuna.nombre,
							cliDirCiuGls: viajeroTitular.ciudad.nombre,
							cliDirRegGls: viajeroTitular.region.nombre,
							cliCodCom: viajeroTitular.comuna.valor,
							cliCodCiu: viajeroTitular.ciudad.valor,
							cliEsTitular: viajeroTitular.esTitular ? 1 : 0,
							cliEsAsegurado: viajeroTitular.esTitular ? 1 : 0
						},
						direccionDespacho: {
							dirCalle: viajeroTitular.direccion,
							dirNumCalle: viajeroTitular.numero,
							dirNumDepto: viajeroTitular.bloque,
							dirVilla: " ",
							dirCodComuna: viajeroTitular.comuna.valor,
							dirCodCiudad: viajeroTitular.ciudad.valor,
							dirCodRegion: viajeroTitular.region.valor,
							dirCodZona: " ",
							dirEmail: viajeroTitular.mail,
							dirFonoCelCodArea: " ",
							dirFonoCel: " ",
							dirFonoComCodArea: " ",
							dirFonoCom: " ",
							dirFonoParCodArea: " ",
							dirFonoPar: " "
						},
						detalleCargas: {
							entidadMateriaVida: creaDetalleCargas(vm.flujoModel.ingresoDatos.viajeros)
						},
						formaPago: {
							fppCodProducto: " ",
							fppNumProducto: " ",
							fppFchPago: " ",
							fppMonto: " "
						},
						infoAdicional: {
							tipoPrima: vm.flujoModel.resumen.textoPrimaCoberturas,
							planSeleccionado: vm.flujoModel.simulacion.planSeleccionado.plnGlosaLarga,
							compania: vm.flujoModel.simulacion.planSeleccionado.nombreCia,
							moneda: "CLP"
						},
						nombreSeguro: vm.flujoModel.simulacion.datosPagina.nombreSeguro
					};
				return jsonPago
			}

			function creaDetalleCargas(viajeros) {
				for (var entidadMateriaVida = [], i = 0; i < viajeros.length; i++) {
					var v = {
						cliRut: viajeros[i].rut,
						cliDv: viajeros[i].dv,
						cliNombre: viajeros[i].nombre,
						cliApepat: viajeros[i].apepata,
						cliApemat: viajeros[i].pemat,
						cliFecNac: viajeros[i].fecNacFormat,
						cliCelCodArea: " ",
						cliCel: " ",
						cliFonoCodArea: " ",
						cliFono: " ",
						cliFax: " ",
						cliEmail: " ",
						cliParentesco: viajeros[i].parentesco,
						cliParentescoGlosa: viajeros[i].parentescoGlosa,
						cliPorcentaje: " "
					};
					entidadMateriaVida.push(v)
				}
				return entidadMateriaVida
			}

			function pagarSeguroWebpay() {
				vm.flujoModel.resumen.textoPrimaCoberturas = "Prima Ãšnica", vm.flujoModel.medioPago.tipoCargo = "2", vm.flujoModel.medioPago.pago = getJsonPago(), vm.flujoModel.medioPago.activarComprobante = !1, vm.procesandoPago = !0, vm.botonPagarDeshabilitado = !0;
				var datosContratante = vm.flujoModel.ingresoDatos.datosContratante,
					rutContratante = $filter("rutSinFormato")(datosContratante.rut.valor),
					params = {
						correlativoPlan: vm.flujoModel.simulacion.planSeleccionado.plnCor,
						rutTitular: rutContratante,
						nombreTitular: datosContratante.nombre.valor,
						apellidoTitular: datosContratante.apellidoPaterno.valor,
						token: vm.flujoModel.tokenPlanSimulado,
						banca: CODIGO_PORTAL
					};
				webpaySegurosViajesFactory.initTransaccion(params).then(function(data) {
					data.url && data.token ? irAWebpay(data.url, data.token) : vm.mensajeErrorEnvioDocumentacion = "Problema de conexiÃ³n a WebPay por favor compruebe su conexiÃ³n a Internet y reintente"
				})["catch"](function(exception) {
					vm.errorIniciandoPago = !0, "501152" == exception.data && ($window.location.href = "rutaredir"), "501203" == exception.data ? vm.errorIniciandoPagoMsg = vm.msgIntento : vm.errorIniciandoPagoMsg = exception.data, vm.procesandoPago = !1, vm.botonPagarDeshabilitado = !1
				})
			}

			function irAWebpay(url, token) {
				$window.sessionStorage.flujoModel = JSON.stringify(vm.flujoModel), document.forms["banco.webpayForm"].action = url, document.getElementById("tokenWebpay").value = token, document.forms["banco.webpayForm"].submit()
			}
			var vm = this;
			vm.procesandoPago = !1, vm.pagarSeguroWebpay = pagarSeguroWebpay, vm.init = init, vm.acetarCondiciones = !1, vm.cancelar = cancelar, vm.init()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("resumenViajeTotalController", resumenViajeTotalController), resumenViajeTotalController.$inject = ["URL_BACK_WEBPAY", "CODIGO_PORTAL", "utilDataPorTipoSeguroService", "pagoServiceSeguros", "$location", "APP_CONSTANTES", "webpaySegurosViajesFactory", "URL_API", "$state", "flujoModelService", "$window", "$filter"]
	}(),
	function() {
		function simViajeTotalController($state, $scope, carruselPlanesSegurosService, datepickerConfig, $filter, flujoModelService, simulacionFactory, mensajeCatalogoService, $stateParams) {
			function close() {
				angular.element(".selectToClose").scope().$select.open = !1, angular.element(".drop-multiselect")[0].classList.remove("open"), angular.element(".drop-multiselect__choises")[0].classList.remove("open"), angular.element(".footer-choises")[0].classList.remove("open")
			}

			function cancelar() {
				$state.reload()
			}

			function init() {
				return vm.loaderDatosSimulacion = !0, vm.ladda = !1, vm.simularContratar = !0, vm.mensajes = mensajeCatalogoService.getMensajes(), datepickerConfig.showWeeks = !1, datepickerConfig.startingDay = 1, vm.duracionMaximaViaje = 90, vm.flujoModel = flujoModelService.getFlujoModel(), flujoModelService.limpiarFlujoCarrusel(), vm.paisesDestinos = [], vm.selectPaisesDestinos = {
					opciones: vm.paisesDestinos,
					selecciones: [],
					placeholder: "Selecciona el o los paÃ­ses de destino",
					placeholderDisabled: "Bloqueado por condiciÃ³n",
					placeholderVacio: "Sin paÃ­ses intente mas tarde",
					msjSeleccionados: "NÂ° de paÃ­ses seleccionados:",
					buscador: !0,
					botones: !0,
					textoAceptar: "Seleccionar",
					disabled: !1
				}, vm.flujoModel && vm.flujoModel.seguroUrl && vm.flujoModel.seguroUrl.codNegocio && vm.flujoModel.seguroUrl.codTipo && vm.flujoModel.seguroUrl.codProducto && vm.flujoModel.seguroUrl.codWorkflow ? (vm.mostrarCarrusel = !1, inicializaObjetosDatosViajero(), inicializaObjetosDatosTitular(), consultaDatosSimulacion(), iniciarFechaInicio(), void iniciarFechaTermino()) : void $state.go("venta-seguros-viajes-error500-venta-seguros")
			}

			function inicializaObjetosDatosViajero() {
				vm.datosViajero = {}, vm.datosViajero.fechaInicio = {}, vm.datosViajero.fechaTermino = {}, vm.datosViajero.numeroPersonas = 1, vm.datosViajero.destinos = []
			}

			function inicializaObjetosDatosTitular() {
				vm.datosTitular = {}, vm.datosTitular.rut = "", vm.datosTitular.nombre = "", vm.datosTitular.apellidoPaterno = "", vm.datosTitular.apellidoMaterno = "", vm.datosTitular.fechaNacimiento = {}, vm.datosTitular.listaParentescos = {
					titular: []
				}
			}

			function consultaDatosSimulacion() {
				var request = {
					codNegocio: vm.flujoModel.seguroUrl.codNegocio,
					codTipo: vm.flujoModel.seguroUrl.codTipo,
					codProducto: vm.flujoModel.seguroUrl.codProducto,
					codWorkflow: vm.flujoModel.seguroUrl.codWorkflow
				};
				simulacionFactory.consultaDatosSimulacion(request).then(consultaDatosSimulacionSuccess, consultaDatosSimulacionError)
			}

			function consultaDatosSimulacionSuccess(response) {
				vm.paisesDestinosOrigen = response.data.tipoZonas, vm.flujoModel.titulo = response.data.pagina.titulo, vm.personasMinima = response.data.numeroPersonas.personasMinima, vm.personasMaxima = response.data.numeroPersonas.personasMaxima, vm.arrNumeroPersonas = [];
				for (var i = vm.personasMinima; i <= vm.personasMaxima; i++) vm.arrNumeroPersonas[i - vm.personasMinima] = i;
				angular.forEach(vm.paisesDestinosOrigen, function(pais) {
					vm.paisesDestinos.push(pais.nombre)
				});
				var parentescoTitular = {};
				parentescoTitular.parentesco = "Titular", parentescoTitular.fechaMin = parseFechaString(response.data.rangoAgnos.fechaInicio), parentescoTitular.fechaMax = parseFechaString(response.data.rangoAgnos.fechaTermino), parentescoTitular.errorMjeEdadMin = "La edad de ingreso mÃ­nima es de " + response.data.rangoAgnos.agnoInicio + " aÃ±os.", parentescoTitular.errorMjeEdadMax = "La edad de ingreso mÃ¡xima es de " + (response.data.rangoAgnos.agnoTermino - 1) + " aÃ±os.", vm.datosTitular.listaParentescos.titular.push(parentescoTitular), vm.flujoModel.simulacion.datosPagina = {}, vm.flujoModel.simulacion.datosPagina.parrafo1 = response.data.pagina.piePagina.parrafo1, vm.flujoModel.simulacion.datosPagina.parrafo2 = response.data.pagina.piePagina.parrafo2, vm.aviso = {}, vm.aviso.parrafo1 = response.data.pagina.aviso.parrafo1, vm.aviso.parrafo2 = response.data.pagina.aviso.parrafo2, vm.duracionMaximaViaje = response.data.rangoFechas.duracionMinima, vm.fechaInicioMinDate = parseFechaString(response.data.rangoFechas.fechaInicio.minimaString), vm.fechaInicioMaxDate = parseFechaString(response.data.rangoFechas.fechaInicio.maximaString), vm.fechaInicioMaxDate.setHours(23, 59, 59, 0), vm.fechaTerminoMinDate = parseFechaString(response.data.rangoFechas.fechaTermino.minimaString), vm.fechaTerminoMaxDate = parseFechaString(response.data.rangoFechas.fechaTermino.maximaString), vm.fechaTerminoMaxDate.setHours(23, 59, 59, 0), vm.loaderDatosSimulacion = !1
			}

			function parseFechaString(fechaString) {
				var arregloFecha = fechaString.split("/"),
					dia = arregloFecha[0],
					mes = arregloFecha[1] - 1,
					agno = arregloFecha[2],
					fecha = new Date(agno, mes, dia);
				return fecha
			}

			function consultaDatosSimulacionError(responseError) {
				$state.go("venta-seguros-viajes-error500-venta-seguros")
			}

			function iniciarFechaInicio() {
				vm.datepickerInicio = {
					opened: !1,
					options: {
						startingDay: 1,
						formatYear: "yyyy",
						showWeeks: !1
					},
					format: "dd/MM/yyyy",
					"init-date": new Date,
					fechaInicio: $filter("date")(vm.datosViajero.fechaInicio.date, "dd/MM/yyyy"),
					error1: !1,
					error2: !1,
					error3: !1,
					change: function() {
						var fechaInicio = vm.datepickerInicio.fechaInicio,
							fechaTermino = vm.datepickerTermino.fechaTermino;
						fechaInicio && fechaTermino ? (vm.datepickerTermino.error1 = !isFechaTerminoMayorInicio(fechaInicio, fechaTermino), vm.datepickerTermino.error2 = !isFechaTerminoValida(fechaInicio, fechaTermino)) : (vm.datepickerTermino.error1 = !1, vm.datepickerTermino.error2 = !1), vm.datepickerInicio.error3 = !fechaInicio, fechaInicio && (vm.datepickerInicio.error1 = !isFechaInicioMayorHoy(fechaInicio), vm.datepickerInicio.error2 = !isFechaInicioMenorRangoMax(fechaInicio), vm.fechaTerminoMinDate = angular.copy(fechaInicio), vm.fechaTerminoMinDate.setDate(vm.fechaTerminoMinDate.getDate() + 1), vm.fechaTerminoMaxDate = angular.copy(fechaInicio), vm.fechaTerminoMaxDate.setDate(vm.fechaTerminoMaxDate.getDate() + vm.duracionMaximaViaje)), vm.datosViajero.fechaInicio.date = vm.datepickerInicio.fechaInicio, vm.datosViajero.fechaInicio.format = $filter("date")(vm.datosViajero.fechaInicio.date, "dd/MM/yyyy")
					},
					openDatePicker: function($event) {
						$event.preventDefault(), $event.stopPropagation(), this.opened = !this.opened, vm.datepickerTermino.opened = !1
					}
				}
			}

			function isFechaTerminoValida(fechaInicio, fechaTermino) {
				return fechaInicioMasDuracionViaje = angular.copy(fechaInicio), fechaInicioMasDuracionViaje.setDate(fechaInicioMasDuracionViaje.getDate() + vm.duracionMaximaViaje), fechaTermino <= fechaInicioMasDuracionViaje
			}

			function isFechaTerminoMayorInicio(fechaInicio, fechaTermino) {
				return fechaTermino > fechaInicio
			}

			function isFechaInicioMayorHoy(fechaInicio) {
				return fechaInicio >= vm.fechaInicioMinDate
			}

			function isFechaInicioMenorRangoMax(fechaInicio) {
				return fechaInicio < vm.fechaInicioMaxDate
			}

			function iniciarFechaTermino() {
				vm.datepickerTermino = {
					opened: !1,
					options: {
						startingDay: 1,
						formatYear: "yyyy",
						showWeeks: !1
					},
					format: "dd/MM/yyyy",
					"init-date": new Date,
					fechaTermino: $filter("date")(vm.datosViajero.fechaTermino.date, "dd/MM/yyyy"),
					error1: !1,
					error2: !1,
					error3: !1,
					change: function() {
						var fechaInicio = vm.datepickerInicio.fechaInicio,
							fechaTermino = vm.datepickerTermino.fechaTermino;
						fechaInicio && fechaTermino ? (vm.datepickerTermino.error1 = !isFechaTerminoMayorInicio(fechaInicio, fechaTermino), vm.datepickerTermino.error2 = !isFechaTerminoValida(fechaInicio, fechaTermino)) : (vm.datepickerTermino.error1 = !1, vm.datepickerTermino.error2 = !1),
							vm.datepickerTermino.error3 = !fechaTermino, vm.datosViajero.fechaTermino.date = vm.datepickerTermino.fechaTermino, vm.datosViajero.fechaTermino.format = $filter("date")(vm.datosViajero.fechaTermino.date, "dd/MM/yyyy")
					},
					openDatePicker: function($event) {
						$event.preventDefault(), $event.stopPropagation(), this.opened = !this.opened, vm.datepickerInicio.opened = !1
					}
				}
			}

			function buscarPlan() {
				vm.modificaFormulario(), vm.mostrarCarrusel = !1;
				var request = {},
					paisesSeleccionados = [];
				angular.forEach(vm.selectPaisesDestinos.selecciones, function(nombrePaisSeleccionado) {
					angular.forEach(vm.paisesDestinosOrigen, function(objetoPaisOrigen) {
						objetoPaisOrigen.nombre == nombrePaisSeleccionado && paisesSeleccionados.push(objetoPaisOrigen)
					})
				}), vm.flujoModel.simulacion.paisesDestinos = paisesSeleccionados, request.codNegocio = vm.flujoModel.seguroUrl.codNegocio, request.codTipo = vm.flujoModel.seguroUrl.codTipo, request.codProducto = vm.flujoModel.seguroUrl.codProducto, request.codWorkflow = vm.flujoModel.seguroUrl.codWorkflow, request.rangoFechas = [{
					nombre: "fechaInicio",
					valor: vm.datosViajero.fechaInicio.format
				}, {
					nombre: "fechaTermino",
					valor: vm.datosViajero.fechaTermino.format
				}], request.numeroPersona = vm.datosViajero.numeroPersonas, request.medidasSeguridad = vm.flujoModel.simulacion.paisesDestinos, console.log(JSON.stringify(vm.flujoModel.simulacion.paisesDestinos)), carruselPlanesSegurosService.consultaPlanes(request)
			}

			function guardarContinuar() {
				vm.flujoModel.simulacion.datosViajero = vm.datosViajero, vm.flujoModel.simulacion.datosTitular = vm.datosTitular, $state.go("venta-seguros-viaje-total-ingreso")
			}

			function validaFormulario() {
				return validaPaso1() && validaPaso2()
			}

			function validaPaso1() {
				var paso1Valido = !0;
				return vm.datepickerInicio.fechaInicio && vm.datepickerTermino.fechaTermino && isFechaTerminoMayorInicio(vm.datepickerInicio.fechaInicio, vm.datepickerTermino.fechaTermino) && isFechaTerminoValida(vm.datepickerInicio.fechaInicio, vm.datepickerTermino.fechaTermino) && isFechaInicioMayorHoy(vm.datepickerInicio.fechaInicio) && isFechaInicioMenorRangoMax(vm.datepickerInicio.fechaInicio) ? !vm.selectPaisesDestinos || !vm.selectPaisesDestinos.selecciones || vm.selectPaisesDestinos.selecciones.length <= 0 || vm.selectPaisesDestinos.selecciones.length > 10 ? !1 : paso1Valido : !1
			}

			function validaPaso2() {
				return null === vm.flujoModel.simulacion.planSeleccionado || angular.isUndefined(vm.flujoModel.simulacion.planSeleccionado) ? !1 : !0
			}

			function modificaFormulario() {
				vm.flujoModel.simulacion.mostrarCarrusel = !1, flujoModelService.limpiarFlujoCarrusel()
			}
			var vm = this;
			vm.init = init, vm.buscarPlan = buscarPlan, vm.guardarContinuar = guardarContinuar, vm.validaFormulario = validaFormulario, vm.validaPaso1 = validaPaso1, vm.validaPaso2 = validaPaso2, vm.modificaFormulario = modificaFormulario, vm.cancelar = cancelar, vm.close = close, vm.init()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("simViajeTotalController", simViajeTotalController), simViajeTotalController.$inject = ["$state", "$scope", "carruselPlanesSegurosService", "datepickerConfig", "$filter", "flujoModelService", "simulacionFactory", "mensajeCatalogoService", "$stateParams"]
	}(),
	function() {
		"use strict";

		function carruselPlanesSegurosService($http, URL_API, APP_TIPO_PORTAL, carruselPlanesSegurosFactory, flujoModelService, $state, iconoAseguradorasService, nombreAseguradorasService) {
			function consultaPlanes(request) {
				var flujoModel = flujoModelService.getFlujoModel();
				flujoModel.simulacion.isDisableForm = !0, flujoModel.simulacion.ladda = !0, flujoModelService.limpiarFlujoCarrusel(), carruselPlanesSegurosFactory.getPlanes(request).then(getPlanesSuccess, getPlanesError)
			}

			function getPlanesSuccess(response) {
				if (null !== response.data && response.data) {
					var flujoModel = flujoModelService.getFlujoModel(),
						listaPlanes = [];
					response.data.estadoWorkflow.estadoOperacion ? (angular.forEach(response.data.planesSimulados, function(plan) {
						var planConIcono = plan;
						planConIcono.iconoCia = iconoAseguradorasService.getIconoCategoria(plan.plnCodCia), planConIcono.nombreCia = nombreAseguradorasService.getNombreAseguradora(plan.plnCodCia), planConIcono.isSelected = !1, planConIcono.isDisabled = !1, planConIcono.isChecked = !1, listaPlanes.push(planConIcono)
					}), flujoModel.simulacion.datosPagina.nombreSeguro = response.data.tituloPagina, flujoModel.simulacion.listaPlanes = listaPlanes, flujoModel.simulacion.errorSinPlanes = !1, flujoModel.simulacion.errorSinPlanesMje = "") : (flujoModel.simulacion.errorSinPlanes = !0, flujoModel.simulacion.errorSinPlanesMje = response.data.estadoWorkflow.avisoCliente), flujoModel.simulacion.mostrarCarrusel = !0, flujoModel.simulacion.isDisableForm = !1, flujoModel.simulacion.ladda = !1, flujoModel.token = response.data.token
				} else $state.go("venta-seguros-viajes-error500-venta-seguros")
			}

			function getPlanesError(responseError) {
				$state.go("venta-seguros-viajes-error500-venta-seguros")
			}
			return {
				consultaPlanes: consultaPlanes
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("carruselPlanesSegurosService", carruselPlanesSegurosService), carruselPlanesSegurosService.$inject = ["$http", "URL_API", "APP_TIPO_PORTAL", "carruselPlanesSegurosFactory", "flujoModelService", "$state", "iconoAseguradorasService", "nombreAseguradorasService"]
	}(), angular.module("WebBancoChile.venta-seguros-viajes").service("comprobanteService", comprobanteService), comprobanteService.$inject = [],
	function() {
		"use strict";
		angular.module("WebBancoChile.venta-seguros-viajes").service("encodeService", function() {
			function _utf8_encode(string) {
				string = string.replace(/\r\n/g, "\n");
				for (var utftext = "", n = 0; n < string.length; n++) {
					var c = string.charCodeAt(n);
					128 > c ? utftext += String.fromCharCode(c) : c > 127 && 2048 > c ? (utftext += String.fromCharCode(c >> 6 | 192), utftext += String.fromCharCode(63 & c | 128)) : (utftext += String.fromCharCode(c >> 12 | 224), utftext += String.fromCharCode(c >> 6 & 63 | 128), utftext += String.fromCharCode(63 & c | 128))
				}
				return utftext
			}

			function _utf8_decode(utftext) {
				for (var string = "", i = 0, c = 0, c2 = 0, c3 = 0; i < utftext.length;) c = utftext.charCodeAt(i), 128 > c ? (string += String.fromCharCode(c), i++) : c > 191 && 224 > c ? (c2 = utftext.charCodeAt(i + 1), string += String.fromCharCode((31 & c) << 6 | 63 & c2), i += 2) : (c2 = utftext.charCodeAt(i + 1), c3 = utftext.charCodeAt(i + 2), string += String.fromCharCode((15 & c) << 12 | (63 & c2) << 6 | 63 & c3), i += 3);
				return string
			}
			this.encode64 = function(input) {
				var chr1, chr2, chr3, enc1, enc2, enc3, enc4, _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
					output = "",
					i = 0;
				for (input = _utf8_encode(input); i < input.length;) chr1 = input.charCodeAt(i++), chr2 = input.charCodeAt(i++), chr3 = input.charCodeAt(i++), enc1 = chr1 >> 2, enc2 = (3 & chr1) << 4 | chr2 >> 4, enc3 = (15 & chr2) << 2 | chr3 >> 6, enc4 = 63 & chr3, isNaN(chr2) ? enc3 = enc4 = 64 : isNaN(chr3) && (enc4 = 64), output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
				return output
			}, this.decode = function(input) {
				var chr1, chr2, chr3, enc1, enc2, enc3, enc4, _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
					output = "",
					i = 0;
				for (input = input.replace(/[^A-Za-z0-9\+\/\=]/g, ""); i < input.length;) enc1 = _keyStr.indexOf(input.charAt(i++)), enc2 = _keyStr.indexOf(input.charAt(i++)), enc3 = _keyStr.indexOf(input.charAt(i++)), enc4 = _keyStr.indexOf(input.charAt(i++)), chr1 = enc1 << 2 | enc2 >> 4, chr2 = (15 & enc2) << 4 | enc3 >> 2, chr3 = (3 & enc3) << 6 | enc4, output += String.fromCharCode(chr1), 64 != enc3 && (output += String.fromCharCode(chr2)), 64 != enc4 && (output += String.fromCharCode(chr3));
				return output = _utf8_decode(output)
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.venta-seguros-viajes").service("envioPolizaPersonaModelService", function() {
			function init() {
				poliza.telefono = {}, poliza.telefono.model = _EMPTY, poliza.telefono.mensaje = _EMPTY, poliza.telefono.validar = {}, poliza.checkAutorizo = !0, poliza.email = {}, poliza.email.model = _EMPTY, poliza.email.mensaje = _EMPTY, poliza.email.validar = {}, poliza.emailConfirmacion = {}, poliza.emailConfirmacion.model = _EMPTY, poliza.emailConfirmacion.mensaje = _EMPTY, poliza.emailConfirmacion.validar = {}, poliza.regiones = [], poliza.region = {}, poliza.region.regionSelected = null, poliza.region.change = {}, poliza.region.mensaje = _EMPTY, poliza.ciudades = [], poliza.ciudad = {}, poliza.ciudad.ciudadSelected = null, poliza.ciudad.change = {}, poliza.ciudad.mensaje = _EMPTY, poliza.comunas = [], poliza.comuna = {}, poliza.comuna.comunaSelected = null, poliza.comuna.change = {}, poliza.comuna.mensaje = _EMPTY, poliza.direccion = {}, poliza.direccion.model = _EMPTY, poliza.direccion.mensaje = _EMPTY, poliza.direccion.validar = {}, poliza.numero = {}, poliza.numero.model = _EMPTY, poliza.numero.mensaje = _EMPTY, poliza.numero.validar = {}, poliza.bloque = _EMPTY, poliza.envioPolizaValida = {}, poliza.direccionSoloLectura = !1, poliza.bloquear = !1
			}
			var _EMPTY = "",
				poliza = {};
			init(), this.getPoliza = function() {
				return poliza
			}, this.limpiarPoliza = function() {
				poliza.telefono.model = _EMPTY, poliza.telefono.mensaje = _EMPTY, poliza.checkAutorizo = !0, poliza.email.model = _EMPTY, poliza.email.mensaje = _EMPTY, poliza.emailConfirmacion.model = _EMPTY, poliza.emailConfirmacion.mensaje = _EMPTY, poliza.region.regionSelected = null, poliza.region.mensaje = _EMPTY, poliza.ciudad.ciudadSelected = null, poliza.ciudad.mensaje = _EMPTY, poliza.comuna.comunaSelected = null, poliza.comuna.mensaje = _EMPTY, poliza.direccion.model = _EMPTY, poliza.direccion.mensaje = _EMPTY, poliza.numero.model = _EMPTY, poliza.numero.mensaje = _EMPTY, poliza.bloque = _EMPTY, poliza.direccionSoloLectura = !1, poliza.ciudades = [], poliza.comunas = []
			}, this.bloquearPoliza = function(bloquear) {
				poliza.bloquear = bloquear
			}, this.direccionSoloLecturaChange = function(soloLectura) {
				poliza.direccionSoloLectura = soloLectura, soloLectura && (poliza.region.mensaje = _EMPTY, poliza.ciudad.mensaje = _EMPTY, poliza.comuna.mensaje = _EMPTY, poliza.direccion.mensaje = _EMPTY, poliza.numero.mensaje = _EMPTY)
			}
		})
	}(),
	function() {
		"use strict";

		function fechaVigenciaServiceSeguros(fechaVigenciaFactory) {
			function obtenerfechaVigencia(json) {
				fechaVigenciaFactory.obtenerfechaVigencia(json).then(function(response) {})
			}
			return {
				obtenerfechaVigencia: obtenerfechaVigencia
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("fechaVigenciaServiceSeguros", fechaVigenciaServiceSeguros), fechaVigenciaServiceSeguros.$inject = ["fechaVigenciaFactory"]
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.venta-seguros-viajes").service("flujoModelService", function($state) {
			var flujoModel = {};
			flujoModel.home = {}, flujoModel.simulacion = {}, flujoModel.simulacion.planSeleccionado = null, flujoModel.simulacion.listaPlanes = [], flujoModel.simulacion.seleccionadosComparacion = [], flujoModel.simulacion.datosPagina = {}, flujoModel.ingresoDatos = {}, flujoModel.ingresoDatos.mostrarErrorValidacion = !1, flujoModel.resumen = {}, flujoModel.medioPago = {}, flujoModel.comprobante = {}, flujoModel.declaracionSalud = {}, flujoModel.tieneMigracion = !1, flujoModel.token = "", flujoModel.tokenPlanSimulado = "", this.getFlujoModel = function() {
				return flujoModel
			}, this.limpiarFlujoModel = function() {
				flujoModel = {}, flujoModel.medioPago = {}, flujoModel.ingresoDatos = {}, flujoModel.ingresoDatos.mostrarErrorValidacion = !1, flujoModel.resumen = {}, flujoModel.comprobante = {}, flujoModel.simulacion = {}, flujoModel.simulacion.planSeleccionado = null, flujoModel.simulacion.listaPlanes = [], flujoModel.simulacion.seleccionadosComparacion = [], flujoModel.simulacion.datosPagina = {}, flujoModel.declaracionSalud = {}, flujoModel.home = {}, flujoModel.token = ""
			}, this.limpiarFlujoCarrusel = function() {
				flujoModel.simulacion.planSeleccionado = null, flujoModel.simulacion.listaPlanes = [], flujoModel.simulacion.seleccionadosComparacion = []
			}, this.isFlujoModelValido = function() {
				for (var i in flujoModel.simulacion) return !0;
				return !1
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.venta-seguros-viajes").service("flujoModelServiceSegPendientes", function($state) {
			var flujoModel = {};
			flujoModel.inicio = {}, flujoModel.inicio.tieneSegPendientes = !1, flujoModel.inicio.mensajePag = "", this.getFlujoModel = function() {
				return flujoModel
			}, this.limpiarFlujoModel = function() {
				flujoModel = {}
			}
		})
	}(),
	function() {
		"use strict";
		angular.module("WebBancoChile.venta-seguros-viajes").service("pagoServiceSeguros", function($window, URL_API, APP_CONSTANTES, pagoFactory, flujoModelService, $state, utilDataPorTipoSeguroService) {
			this.realizarPago = function(json) {
				var medioPago = flujoModelService.getFlujoModel().medioPago,
					workFlow = flujoModelService.getFlujoModel().seguroUrl.codWorkflow,
					dataPorSeguro = utilDataPorTipoSeguroService.getDataPorTipo(workFlow);
				medioPago.habilitaCampo = !0, console.log("Realizando pago:"), pagoFactory.pagar(json).then(function(response) {
					if (console.log("Respuesta servicio pago status:" + JSON.stringify(response.status)), console.log("Respuesta servicio pago data:" + JSON.stringify(response.data)), 200 !== response.status || null == response.data) return 401 === response.status ? (medioPago.habilitaCampo = !1, !1) : ($state.go("venta-seguros-viajes-error500-venta-seguros"), !1);
					if (console.log("Respuesta OK:"), $window.scrollTo(0, 0), response.data.estadoOperacion) {
						response.data.header.descargas = [];
						var descargaComprobante = {
							etiqueta: "Descargar Comprobante",
							urlDescarga: URL_API + "/venta-seguros-viajes/comprobante/pago?data=" + response.data.base64Descarga
						};
						return response.data.header.descargas.push(descargaComprobante), response.data.descargarPoliza && response.data.header.descargas.push({
							etiqueta: dataPorSeguro.etiquetaDescargaPoliza,
							urlDescarga: URL_API + "/venta-seguros-viajes/documentos/poliza?data=" + response.data.base64Poliza
						}), medioPago.comprobantes = [], medioPago.comprobantes.push(response.data), medioPago.activarComprobante = !0, medioPago.habilitaCampo = !1, !0
					}
					medioPago.okPagoAseguradora = !0, medioPago.mensajeAvisoCliente = response.data.mensajeAvisoCliente
				})
			}
		})
	}(),
	function() {
		"use strict";

		function validaDatosSalirProtegidoService(flujoModelService, envioPolizaPersonaModelService) {
			function validarDatosSalirProtegido() {
				var flujoModel = flujoModelService.getFlujoModel(),
					numRut = (envioPolizaPersonaModelService.getPoliza(), flujoModel.ingresoDatos.rutAsegurado.split("-")[0]),
					dvRut = flujoModel.ingresoDatos.rutAsegurado.split("-")[1],
					fichaClienteAsegurado = {
						codNegocio: flujoModel.seguroUrl.codNegocio,
						codSesion: "",
						codTipo: flujoModel.seguroUrl.codTipo,
						codProducto: flujoModel.seguroUrl.codProducto,
						codWorkflow: flujoModel.seguroUrl.codWorkflow,
						clienteAsegurado: {
							dv: dvRut,
							nombre: flujoModel.ingresoDatos.nombreAsegurado,
							apepat: flujoModel.ingresoDatos.apellidoPaternoAsegurado,
							apemat: flujoModel.ingresoDatos.apellidoMaternoAsegurado,
							fecNac: flujoModel.ingresoDatos.fechaNacimiento,
							fecNacDate: flujoModel.ingresoDatos.fechaNacimientoDate,
							esTitular: flujoModel.ingresoDatos.esTitular,
							rut: numRut
						},
						rangoAgnos: {
							nombre: "FechaNacimiento",
							valor: flujoModel.ingresoDatos.fechaNacimiento
						},
						direccionDespacho: {
							calle: flujoModel.ingresoDatos.direccion,
							numCalle: flujoModel.ingresoDatos.numero,
							numDepto: flujoModel.ingresoDatos.bloque,
							villa: flujoModel.ingresoDatos.direccion,
							codComuna: flujoModel.ingresoDatos.comuna.valor,
							codCiudad: flujoModel.ingresoDatos.ciudad.valor,
							codRegion: flujoModel.ingresoDatos.region.valor,
							email: flujoModel.ingresoDatos.mail,
							fonoComCodArea: "56",
							fonoCom: flujoModel.ingresoDatos.telefono
						}
					};
				return fichaClienteAsegurado
			}
			return {
				validarDatosSalirProtegido: validarDatosSalirProtegido
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("validaDatosSalirProtegidoService", validaDatosSalirProtegidoService), validaDatosSalirProtegidoService.$inject = ["flujoModelService", "envioPolizaPersonaModelService"]
	}(),
	function() {
		"use strict";

		function iconoAseguradorasService($http, URL_API) {
			function getIconoCategoria(codigoCategoria) {
				return listaIcono[codigoCategoria]
			}

			function loadIconosCategoria() {
				listaIcono.AME = "", listaIcono.AMG = "", listaIcono.BSV = "assets/BanChileVida.png", listaIcono.CHC = "assets/chilenaConsolidada.png", listaIcono.CRS = "", listaIcono.MAG = "", listaIcono.CNS = "assets/consorcio.png", listaIcono.CAR = "assets/BNP.png", listaIcono.RYA = "assets/Sura.png", listaIcono.ACE = "assets/ACE-Seguros_Logo.png", listaIcono.LIB = "assets/Liberty.png", listaIcono.ZNT = "assets/Zenit.png", listaIcono.MAP = "assets/Mapfre.png", listaIcono.ORI = "assets/Orion.png", listaIcono.CES = "assets/cesce.png", listaIcono.MET = "assets/Metlife.png", listaIcono.HDI = "assets/hdi-seguros.png"
			}
			var listaIcono = [];
			return loadIconosCategoria(), {
				getIconoCategoria: getIconoCategoria
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("iconoAseguradorasService", iconoAseguradorasService), iconoAseguradorasService.$inject = ["$http", "URL_API"]
	}(),
	function() {
		"use strict";

		function iconoSegurosService($http, URL_API) {
			function getIconoCategoria(codigoCategoria) {
				return listaIcono[codigoCategoria]
			}

			function loadIconosCategoria() {
				listaIcono.Auto = "bch-ms-seguro-auto", listaIcono.Vida = "bch-ms-seguro-vida", listaIcono.Hogar = "bch-ms-seguro-hogar", listaIcono.Robo = "bch-ms-seguro-robo", listaIcono.Salud = "bch-ms-seguro-salud", listaIcono.Proteccion = "bch-ms-seguro-proteccion", listaIcono.Accidentes = "bch-ms-seguro-accidentes", listaIcono.Estudios = "bch-ms-seguro-educacion", listaIcono.Viajes = "bch-ms-seguro-viaje", listaIcono["Proteccion Personal"] = "bch-ms-seguro-proteccion-persona", listaIcono.Fraude = "bch-ms-seguro-fraude"
			}
			var listaIcono = [];
			return loadIconosCategoria(), {
				getIconoCategoria: getIconoCategoria
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("iconoSegurosService", iconoSegurosService), iconoSegurosService.$inject = ["$http", "URL_API"]
	}(),
	function() {
		"use strict";

		function mensajeCatalogoService(catalogoMensajesFactory, $http, URL_API) {
			function getMensajes() {
				return mensajes
			}

			function loadMensajesCatalogo() {
				catalogoMensajesFactory.obtener(501050).then(function(msj) {
					mensajes.errorRutObligatorio = msj.texto
				}), catalogoMensajesFactory.obtener(501007).then(function(msj) {
					mensajes.errorRutInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "Nombre").then(function(msj) {
					mensajes.errorIngresarNombre = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "Sexo").then(function(msj) {
					mensajes.errorIngresarSexo = msj.texto
				}), catalogoMensajesFactory.obtener(501336, "Nombre").then(function(msj) {
					mensajes.errorNombreInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "Apellido Paterno").then(function(msj) {
					mensajes.errorIngresarApellidoPaterno = msj.texto
				}), catalogoMensajesFactory.obtener(501336, "Apellido Paterno").then(function(msj) {
					mensajes.errorApellidoPaternoInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "Apellido Materno").then(function(msj) {
					mensajes.errorIngresarApellidoMaterno = msj.texto
				}), catalogoMensajesFactory.obtener(501336, "Apellido Materno").then(function(msj) {
					mensajes.errorApellidoMaternoInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501343).then(function(msj) {
					mensajes.errorFechaInicioMayorHoy = msj.texto
				}), catalogoMensajesFactory.obtener(501344).then(function(msj) {
					mensajes.errorFechaInicioMenorRangoMax = msj.texto
				}), catalogoMensajesFactory.obtener(501345).then(function(msj) {
					mensajes.errorFechaTerminoMayorInicio = msj.texto
				}), catalogoMensajesFactory.obtener(501346).then(function(msj) {
					mensajes.errorFechaTerminoValida = msj.texto
				}), catalogoMensajesFactory.obtener(501347).then(function(msj) {
					mensajes.errorYatienesConyugue = msj.texto
				}), catalogoMensajesFactory.obtener(501348).then(function(msj) {
					mensajes.errorFechaNacimientoHijoSupera = msj.texto
				}), catalogoMensajesFactory.obtener(501004).then(function(msj) {
					mensajes.errorEmailsNocoinciden = msj.texto
				}), catalogoMensajesFactory.obtener(501349, "84").then(function(msj) {
					mensajes.errorEdadIngresoMaxima = msj.texto
				}), catalogoMensajesFactory.obtener(501350).then(function(msj) {
					mensajes.errorFaltanViajeros1 = msj.texto
				}), catalogoMensajesFactory.obtener(501351).then(function(msj) {
					mensajes.errorFaltanViajeros2 = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "la fecha de inicio").then(function(msj) {
					mensajes.errorFechaInicioRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "la fecha de tÃ©rmino").then(function(msj) {
					mensajes.errorFechaTerminoRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "la fecha de nacimiento").then(function(msj) {
					mensajes.errorFechaNacimientoRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "la fecha de emisiÃ³n").then(function(msj) {
					mensajes.errorFechaEmisionRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "parentesco").then(function(msj) {
					mensajes.errorParentescoRequerido = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "rut").then(function(msj) {
					mensajes.errorRutRequerido = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "peso").then(function(msj) {
					mensajes.errorPesoRequerido = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "estatura").then(function(msj) {
					mensajes.errorEstaturaRequerido = msj.texto
				}), catalogoMensajesFactory.obtener(501139).then(function(msj) {
					mensajes.errorRegionRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501140).then(function(msj) {
					mensajes.errorCiudadRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501141).then(function(msj) {
					mensajes.errorComunaRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501138).then(function(msj) {
					mensajes.errorTelefonoRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501005).then(function(msj) {
					mensajes.errorIngresaMail = msj.texto
				}), catalogoMensajesFactory.obtener(501003).then(function(msj) {
					mensajes.errorMailNoCorresponse = msj.texto
				}), catalogoMensajesFactory.obtener(501004).then(function(msj) {
					mensajes.errorMailNoCoincide = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "la direcciÃ³n").then(function(msj) {
					mensajes.errorDireccionRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "nÃºmero").then(function(msj) {
					mensajes.errorNumeroRequerida = msj.texto
				}), catalogoMensajesFactory.obtener(501211, "telÃ©fono").then(function(msj) {
					mensajes.errorFormatoTelefonoIncorrecto = msj.texto
				}), catalogoMensajesFactory.obtener(501336, "Fecha de nacimiento").then(function(msj) {
					mensajes.errorFechaNacimientoInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501208, "una Patente vÃ¡lida").then(function(msj) {
					mensajes.errorPatenteInvalida = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "la Patente").then(function(msj) {
					mensajes.errorPatenteObligatoria = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "Tipo de vehÃ­culo").then(function(msj) {
					mensajes.errorTipoVehiculoObligatorio = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "la Marca").then(function(msj) {
					mensajes.errorMarcaObligatoria = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "AÃ±o").then(function(msj) {
					mensajes.errorAnoObligatorio = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "Modelo").then(function(msj) {
					mensajes.errorModeloObligatorio = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "NÂ° Motor").then(function(msj) {
					mensajes.errorMotorObligatorio = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "NÂ° Chasis").then(function(msj) {
					mensajes.errorChasisObligatorio = msj.texto
				}), catalogoMensajesFactory.obtener(501337, "Color").then(function(msj) {
					mensajes.errorColorObligatorio = msj.texto
				}), catalogoMensajesFactory.obtener(501218, "un Plan").then(function(msj) {
					mensajes.errorPlanObligatorio = msj.texto
				}), catalogoMensajesFactory.obtener(501349, "80").then(function(msj) {
					mensajes.errorEdadIngresoMaximaFullAuto = msj.texto
				}), catalogoMensajesFactory.obtener(501354, "18").then(function(msj) {
					mensajes.errorEdadIngresoMinimaFullAuto = msj.texto
				}), catalogoMensajesFactory.obtener(501354, "3").then(function(msj) {
					mensajes.errorFechaDocumentoMinimaFullAuto = msj.texto
				}), catalogoMensajesFactory.obtener(501208, "al menos un telÃ©fono vÃ¡lido.").then(function(msj) {
					mensajes.errorAlMenosUnTelefonoValido = msj.texto
				}), catalogoMensajesFactory.obtener(501358).then(function(msj) {
					mensajes.errorTipoVehiculoNoAsegurable = msj.texto
				}), catalogoMensajesFactory.obtener(501177, "jpg, gif, tif, pdf, doc o doxc").then(function(msj) {
					mensajes.errorFormatoArchivo = msj.texto
				}), catalogoMensajesFactory.obtener(501178, "1 Mb").then(function(msj) {
					mensajes.errorTamanoArchivo = msj.texto
				}), catalogoMensajesFactory.obtener(501065).then(function(msj) {
					mensajes.errorSubirArchivo = msj.texto
				}), catalogoMensajesFactory.obtener(501060).then(function(msj) {
					mensajes.errorSubirArchivoInvalido = msj.texto
				}), catalogoMensajesFactory.obtener(501370).then(function(msj) {
					mensajes.errorRutRepetido = msj.texto
				}), catalogoMensajesFactory.obtener(501353).then(function(msj) {
					mensajes.errorEdadIngresoMaximaMenor = msj.texto
				}), catalogoMensajesFactory.obtener(501354).then(function(msj) {
					mensajes.errorEdadIngresoMinima = msj.texto
				}), catalogoMensajesFactory.obtener(501381).then(function(msj) {
					mensajes.errorAsegurarHijo = msj.texto
				}), catalogoMensajesFactory.obtener(501371).then(function(msj) {
					mensajes.errorConyugeNoPuede = msj.texto
				})
			}
			var mensajes = {};
			return loadMensajesCatalogo(), {
				getMensajes: getMensajes
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("mensajeCatalogoService", mensajeCatalogoService), mensajeCatalogoService.$inject = ["catalogoMensajesFactory", "$http", "URL_API"]
	}(),
	function() {
		"use strict";

		function nombreAseguradorasService($http, URL_API) {
			function getNombreAseguradora(codigoAseguradora) {
				return listaNombre[codigoAseguradora]
			}

			function loadNombreAseguradora() {
				listaNombre.AME = "ISE LAS AMERICAS CIA DE SEGURO", listaNombre.AMG = "CIA DE SEGUROS GENERALES LAS AMERICAS S.A.", listaNombre.BSV = "BANCHILE SEGUROS DE VIDA S.A.", listaNombre.CHC = "CHILENA CONSOLIDADA GENERALES", listaNombre.CRS = "COMPAÃ‘IA DE SEGUROS GENERALES CRUZ DEL SUR S.A.", listaNombre.MAG = "Magallanes", listaNombre.CNS = "CONSORCIO NACIONAL DE SEGUROS S.A.", listaNombre.CAR = "BNP Paribas Cardif Seguros Generales S.A.", listaNombre.RYA = "SEGUROS GENERALES SURAMERICANA S.A.", listaNombre.ACE = "CHUBB SEGUROS CHILE S.A.", listaNombre.LIB = "LIBERTY COMPAÃ‘IA DE SEGUROS G.", listaNombre.ZNT = "ZENIT SEGUROS GENERALES S.A.", listaNombre.MAP = "MAPFRE CIA DE SEGUROS DE CHILE S.A.", listaNombre.ORI = "Orion Seguros Generales S.A.", listaNombre.CES = "Cesce Chile Aseguradora S.A.", listaNombre.MET = "METLIFE CHILE SEGUROS GENERALES S.A."
			}
			var listaNombre = [];
			return loadNombreAseguradora(), {
				getNombreAseguradora: getNombreAseguradora
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("nombreAseguradorasService", nombreAseguradorasService), nombreAseguradorasService.$inject = ["$http", "URL_API"]
	}(),
	function() {
		"use strict";

		function stateSimulacionSegurosService($http, URL_API) {
			function getStateSimulacionCategoria(codigoSeguro) {
				return listaState[codigoSeguro]
			}

			function loadStateCategoria() {
				listaState.WAUTOFULL = "venta-seguros-viajes-simulacion-full-auto", listaState.WVIAJERCI = "venta-seguros-viajes-simulacion-obligatorio-argentina", listaState.WVIAJETOTALEU = "venta-seguros-viaje-total", listaState.WVIAJETOTALRM = "venta-seguros-viaje-total", listaState.WVIDACONDEV = "venta-seguros-viajes-simulacion-vida-devolucion", listaState.WFRAUDE = "venta-seguros-viajes-simulacion-total-fraude", listaState.WPRTCESDEV = "venta-seguros-viajes-simulacion-cesantia-devolucion", listaState.WPRTDESPRO = "venta-seguros-viajes-simulacion-desempleo-protegido", listaState.WSALUDONCO = "venta-seguros-viajes-inicio-oncologico", listaState.WSALUDLIBE = "venta-seguros-viajes-inicio-oncologico", listaState.WSALUDFAM = "venta-seguros-viajes-simulacion-salud-familiar", listaState.WESTUDIOCDEV = "venta-seguros-viajes-simulacion-estudio-devolucion", listaState.WACCCICLISTA = "venta-seguros-viajes-simulacion-ciclista-protegido", listaState.WHOGARTOTAL = "venta-seguros-viajes-simulacion-hogar-total", listaState.WHOGARCONDEV = "venta-seguros-viajes-simulacion-hogar-devolucion", listaState.WROBOSALIRPRO = "venta-seguros-viajes-simulacion-salir-protegido"
			}
			var listaState = [];
			return loadStateCategoria(), {
				getStateSimulacionCategoria: getStateSimulacionCategoria
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("stateSimulacionSegurosService", stateSimulacionSegurosService), stateSimulacionSegurosService.$inject = ["$http", "URL_API"]
	}(),
	function() {
		"use strict";

		function utilDataPorTipoSeguroService($http, URL_API) {
			function getDataPorTipo(codigoSeguro) {
				return dataPorTipo[codigoSeguro]
			}

			function loadDataPorTipo() {
				dataPorTipo.WAUTOFULL = {}, dataPorTipo.WAUTOFULL.moneda = "UF", dataPorTipo.WAUTOFULL.tipoPrima = "Mensual", dataPorTipo.WAUTOFULL.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WAUTOFULL.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WAUTOFULL.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WAUTOFULL.tieneUFAnual = !0, dataPorTipo.WAUTOFULL.tieneSubtituloBeneficios = !0, dataPorTipo.WAUTOFULL.tieneGlosaOferta = !0, dataPorTipo.WAUTOFULL.renovacionAutomatica = !0, dataPorTipo.WAUTOFULL.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WVIAJERCI = {}, dataPorTipo.WVIAJERCI.moneda = "USD", dataPorTipo.WVIAJERCI.tipoPrima = "Prima Ãºnica", dataPorTipo.WVIAJERCI.textoPrimaCoberturas = "Prima Ãºnica", dataPorTipo.WVIAJERCI.tituloTipoPrecioInternetUOfertaInternet = "Oferta Internet", dataPorTipo.WVIAJERCI.subTituloTipoPrecioNormalUOfertaInternet = "Precio Normal", dataPorTipo.WVIAJERCI.tieneUFAnual = !1, dataPorTipo.WVIAJERCI.tieneSubtituloBeneficios = !0, dataPorTipo.WVIAJERCI.tieneGlosaOferta = !1, dataPorTipo.WVIAJERCI.renovacionAutomatica = !1, dataPorTipo.WVIAJERCI.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WVIAJETOTALEU = {}, dataPorTipo.WVIAJETOTALEU.moneda = "UF", dataPorTipo.WVIAJETOTALEU.tipoPrima = "Prima Ãºnica", dataPorTipo.WVIAJETOTALEU.textoPrimaCoberturas = "Prima Ãºnica", dataPorTipo.WVIAJETOTALEU.tituloTipoPrecioInternetUOfertaInternet = "Oferta Internet", dataPorTipo.WVIAJETOTALEU.subTituloTipoPrecioNormalUOfertaInternet = "Precio Normal", dataPorTipo.WVIAJETOTALEU.tieneUFAnual = !1, dataPorTipo.WVIAJETOTALEU.tieneSubtituloBeneficios = !1, dataPorTipo.WVIAJETOTALEU.tieneGlosaOferta = !1, dataPorTipo.WVIAJETOTALEU.renovacionAutomatica = !1, dataPorTipo.WVIAJETOTALEU.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WVIAJETOTALRM = {}, dataPorTipo.WVIAJETOTALRM.moneda = "UF", dataPorTipo.WVIAJETOTALRM.tipoPrima = "Prima Ãºnica", dataPorTipo.WVIAJETOTALRM.textoPrimaCoberturas = "Prima Ãºnica", dataPorTipo.WVIAJETOTALRM.tituloTipoPrecioInternetUOfertaInternet = "Oferta Internet", dataPorTipo.WVIAJETOTALRM.subTituloTipoPrecioNormalUOfertaInternet = "Precio Normal", dataPorTipo.WVIAJETOTALRM.tieneUFAnual = !1, dataPorTipo.WVIAJETOTALRM.tieneSubtituloBeneficios = !1, dataPorTipo.WVIAJETOTALRM.tieneGlosaOferta = !1, dataPorTipo.WVIAJETOTALRM.renovacionAutomatica = !1, dataPorTipo.WVIAJETOTALRM.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WVIDACONDEV = {}, dataPorTipo.WVIDACONDEV.moneda = "UF", dataPorTipo.WVIDACONDEV.tipoPrima = "Mensual", dataPorTipo.WVIDACONDEV.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WVIDACONDEV.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WVIDACONDEV.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WVIDACONDEV.tieneUFAnual = !0, dataPorTipo.WVIDACONDEV.tieneSubtituloBeneficios = !1, dataPorTipo.WVIDACONDEV.tieneGlosaOferta = !0, dataPorTipo.WVIDACONDEV.renovacionAutomatica = !0, dataPorTipo.WVIDACONDEV.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WFRAUDE = {}, dataPorTipo.WFRAUDE.moneda = "UF", dataPorTipo.WFRAUDE.tipoPrima = "Mensual", dataPorTipo.WFRAUDE.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WFRAUDE.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WFRAUDE.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WFRAUDE.tieneUFAnual = !0, dataPorTipo.WFRAUDE.tieneSubtituloBeneficios = !0, dataPorTipo.WFRAUDE.tieneGlosaOferta = !0, dataPorTipo.WFRAUDE.renovacionAutomatica = !0, dataPorTipo.WFRAUDE.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WPRTCESDEV = {}, dataPorTipo.WPRTCESDEV.moneda = "UF", dataPorTipo.WPRTCESDEV.tipoPrima = "Mensual", dataPorTipo.WPRTCESDEV.textoPrimaCoberturas = " Prima Mensual", dataPorTipo.WPRTCESDEV.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WPRTCESDEV.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WPRTCESDEV.tieneUFAnual = !0, dataPorTipo.WPRTCESDEV.tieneSubtituloBeneficios = !0, dataPorTipo.WPRTCESDEV.tieneGlosaOferta = !0, dataPorTipo.WPRTCESDEV.renovacionAutomatica = !0, dataPorTipo.WPRTCESDEV.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WPRTDESPRO = {}, dataPorTipo.WPRTDESPRO.moneda = "UF", dataPorTipo.WPRTDESPRO.tipoPrima = "Mensual", dataPorTipo.WPRTDESPRO.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WPRTDESPRO.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WPRTDESPRO.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WPRTDESPRO.tieneUFAnual = !0, dataPorTipo.WPRTDESPRO.tieneSubtituloBeneficios = !0, dataPorTipo.WPRTDESPRO.tieneGlosaOferta = !0, dataPorTipo.WPRTDESPRO.renovacionAutomatica = !0, dataPorTipo.WPRTDESPRO.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDONCO = {}, dataPorTipo.WSALUDONCO.moneda = "UF", dataPorTipo.WSALUDONCO.tipoPrima = "Mensual", dataPorTipo.WSALUDONCO.textoPrimaCoberturas = "Prima Mensual",
					dataPorTipo.WSALUDONCO.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDONCO.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDONCO.tieneUFAnual = !0, dataPorTipo.WSALUDONCO.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDONCO.tieneGlosaOferta = !0, dataPorTipo.WSALUDONCO.renovacionAutomatica = !0, dataPorTipo.WSALUDONCO.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDONCO_CONCARGA1 = {}, dataPorTipo.WSALUDONCO_CONCARGA1.moneda = "UF", dataPorTipo.WSALUDONCO_CONCARGA1.tipoPrima = "Mensual", dataPorTipo.WSALUDONCO_CONCARGA1.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDONCO_CONCARGA1.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDONCO_CONCARGA1.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDONCO_CONCARGA1.tieneUFAnual = !0, dataPorTipo.WSALUDONCO_CONCARGA1.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDONCO_CONCARGA1.tieneGlosaOferta = !0, dataPorTipo.WSALUDONCO_CONCARGA1.renovacionAutomatica = !0, dataPorTipo.WSALUDONCO_CONCARGA1.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDONCO_CONCARGA2 = {}, dataPorTipo.WSALUDONCO_CONCARGA2.moneda = "UF", dataPorTipo.WSALUDONCO_CONCARGA2.tipoPrima = "Mensual", dataPorTipo.WSALUDONCO_CONCARGA2.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDONCO_CONCARGA2.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDONCO_CONCARGA2.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDONCO_CONCARGA2.tieneUFAnual = !0, dataPorTipo.WSALUDONCO_CONCARGA2.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDONCO_CONCARGA2.tieneGlosaOferta = !0, dataPorTipo.WSALUDONCO_CONCARGA2.renovacionAutomatica = !0, dataPorTipo.WSALUDONCO_CONCARGA2.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDONCO_CONCARGA3 = {}, dataPorTipo.WSALUDONCO_CONCARGA3.moneda = "UF", dataPorTipo.WSALUDONCO_CONCARGA3.tipoPrima = "Mensual", dataPorTipo.WSALUDONCO_CONCARGA3.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDONCO_CONCARGA3.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDONCO_CONCARGA3.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDONCO_CONCARGA3.tieneUFAnual = !0, dataPorTipo.WSALUDONCO_CONCARGA3.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDONCO_CONCARGA3.tieneGlosaOferta = !0, dataPorTipo.WSALUDONCO_CONCARGA3.renovacionAutomatica = !0, dataPorTipo.WSALUDONCO_CONCARGA3.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDLIBE = {}, dataPorTipo.WSALUDLIBE.moneda = "UF", dataPorTipo.WSALUDLIBE.tipoPrima = "Mensual", dataPorTipo.WSALUDLIBE.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDLIBE.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDLIBE.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDLIBE.tieneUFAnual = !0, dataPorTipo.WSALUDLIBE.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDLIBE.tieneGlosaOferta = !0, dataPorTipo.WSALUDLIBE.renovacionAutomatica = !0, dataPorTipo.WSALUDLIBE.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDLIBE_CONCARGA1 = {}, dataPorTipo.WSALUDLIBE_CONCARGA1.moneda = "UF", dataPorTipo.WSALUDLIBE_CONCARGA1.tipoPrima = "Mensual", dataPorTipo.WSALUDLIBE_CONCARGA1.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDLIBE_CONCARGA1.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDLIBE_CONCARGA1.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDLIBE_CONCARGA1.tieneUFAnual = !0, dataPorTipo.WSALUDLIBE_CONCARGA1.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDLIBE_CONCARGA1.tieneGlosaOferta = !0, dataPorTipo.WSALUDLIBE_CONCARGA1.renovacionAutomatica = !0, dataPorTipo.WSALUDLIBE_CONCARGA1.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDLIBE_CONCARGA2 = {}, dataPorTipo.WSALUDLIBE_CONCARGA2.moneda = "UF", dataPorTipo.WSALUDLIBE_CONCARGA2.tipoPrima = "Mensual", dataPorTipo.WSALUDLIBE_CONCARGA2.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDLIBE_CONCARGA2.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDLIBE_CONCARGA2.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDLIBE_CONCARGA2.tieneUFAnual = !0, dataPorTipo.WSALUDLIBE_CONCARGA2.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDLIBE_CONCARGA2.tieneGlosaOferta = !0, dataPorTipo.WSALUDLIBE_CONCARGA2.renovacionAutomatica = !0, dataPorTipo.WSALUDLIBE_CONCARGA2.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDLIBE_CONCARGA3 = {}, dataPorTipo.WSALUDLIBE_CONCARGA3.moneda = "UF", dataPorTipo.WSALUDLIBE_CONCARGA3.tipoPrima = "Mensual", dataPorTipo.WSALUDLIBE_CONCARGA3.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDLIBE_CONCARGA3.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDLIBE_CONCARGA3.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDLIBE_CONCARGA3.tieneUFAnual = !0, dataPorTipo.WSALUDLIBE_CONCARGA3.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDLIBE_CONCARGA3.tieneGlosaOferta = !0, dataPorTipo.WSALUDLIBE_CONCARGA3.renovacionAutomatica = !0, dataPorTipo.WSALUDLIBE_CONCARGA3.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDFAM = {}, dataPorTipo.WSALUDFAM.moneda = "UF", dataPorTipo.WSALUDFAM.tipoPrima = "Mensual", dataPorTipo.WSALUDFAM.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDFAM.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDFAM.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDFAM.tieneUFAnual = !0, dataPorTipo.WSALUDFAM.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDFAM.tieneGlosaOferta = !0, dataPorTipo.WSALUDFAM.renovacionAutomatica = !0, dataPorTipo.WSALUDFAM.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDFAM_OFE = {}, dataPorTipo.WSALUDFAM_OFE.moneda = "UF", dataPorTipo.WSALUDFAM_OFE.tipoPrima = "Mensual", dataPorTipo.WSALUDFAM_OFE.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDFAM_OFE.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDFAM_OFE.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDFAM_OFE.tieneUFAnual = !0, dataPorTipo.WSALUDFAM_OFE.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDFAM_OFE.tieneGlosaOferta = !0, dataPorTipo.WSALUDFAM_OFE.renovacionAutomatica = !0, dataPorTipo.WSALUDFAM_OFE.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDFAM_SINCARGA = {}, dataPorTipo.WSALUDFAM_SINCARGA.moneda = "UF", dataPorTipo.WSALUDFAM_SINCARGA.tipoPrima = "Mensual", dataPorTipo.WSALUDFAM_SINCARGA.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDFAM_SINCARGA.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDFAM_SINCARGA.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDFAM_SINCARGA.tieneUFAnual = !0, dataPorTipo.WSALUDFAM_SINCARGA.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDFAM_SINCARGA.tieneGlosaOferta = !0, dataPorTipo.WSALUDFAM_SINCARGA.renovacionAutomatica = !0, dataPorTipo.WSALUDFAM_SINCARGA.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDFAM_CONCARGA1 = {}, dataPorTipo.WSALUDFAM_CONCARGA1.moneda = "UF", dataPorTipo.WSALUDFAM_CONCARGA1.tipoPrima = "Mensual", dataPorTipo.WSALUDFAM_CONCARGA1.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDFAM_CONCARGA1.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDFAM_CONCARGA1.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDFAM_CONCARGA1.tieneUFAnual = !0, dataPorTipo.WSALUDFAM_CONCARGA1.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDFAM_CONCARGA1.tieneGlosaOferta = !0, dataPorTipo.WSALUDFAM_CONCARGA1.renovacionAutomatica = !0, dataPorTipo.WSALUDFAM_CONCARGA1.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDFAM_CONCARGA2 = {}, dataPorTipo.WSALUDFAM_CONCARGA2.moneda = "UF", dataPorTipo.WSALUDFAM_CONCARGA2.tipoPrima = "Mensual", dataPorTipo.WSALUDFAM_CONCARGA2.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDFAM_CONCARGA2.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDFAM_CONCARGA2.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDFAM_CONCARGA2.tieneUFAnual = !0, dataPorTipo.WSALUDFAM_CONCARGA2.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDFAM_CONCARGA2.tieneGlosaOferta = !0, dataPorTipo.WSALUDFAM_CONCARGA2.renovacionAutomatica = !0, dataPorTipo.WSALUDFAM_CONCARGA2.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDFAM_CONCARGA3 = {}, dataPorTipo.WSALUDFAM_CONCARGA3.moneda = "UF", dataPorTipo.WSALUDFAM_CONCARGA3.tipoPrima = "Mensual", dataPorTipo.WSALUDFAM_CONCARGA3.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDFAM_CONCARGA3.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDFAM_CONCARGA3.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDFAM_CONCARGA3.tieneUFAnual = !0, dataPorTipo.WSALUDFAM_CONCARGA3.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDFAM_CONCARGA3.tieneGlosaOferta = !0, dataPorTipo.WSALUDFAM_CONCARGA3.renovacionAutomatica = !0, dataPorTipo.WSALUDFAM_CONCARGA3.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WESTUDIOCDEV = {}, dataPorTipo.WESTUDIOCDEV.moneda = "UF", dataPorTipo.WESTUDIOCDEV.tipoPrima = "Mensual", dataPorTipo.WESTUDIOCDEV.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WESTUDIOCDEV.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WESTUDIOCDEV.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WESTUDIOCDEV.tieneUFAnual = !0, dataPorTipo.WESTUDIOCDEV.tieneSubtituloBeneficios = !0, dataPorTipo.WESTUDIOCDEV.tieneGlosaOferta = !0, dataPorTipo.WESTUDIOCDEV.renovacionAutomatica = !0, dataPorTipo.WESTUDIOCDEV.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WACCCICLISTA = {}, dataPorTipo.WACCCICLISTA.moneda = "UF", dataPorTipo.WACCCICLISTA.tipoPrima = "Mensual", dataPorTipo.WACCCICLISTA.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WACCCICLISTA.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WACCCICLISTA.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WACCCICLISTA.tieneUFAnual = !0, dataPorTipo.WACCCICLISTA.tieneSubtituloBeneficios = !0, dataPorTipo.WACCCICLISTA.tieneGlosaOferta = !0, dataPorTipo.WACCCICLISTA.renovacionAutomatica = !0, dataPorTipo.WACCCICLISTA.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WHOGARTOTAL = {}, dataPorTipo.WHOGARTOTAL.moneda = "UF", dataPorTipo.WHOGARTOTAL.tipoPrima = "Mensual", dataPorTipo.WHOGARTOTAL.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WHOGARTOTAL.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WHOGARTOTAL.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WHOGARTOTAL.tieneUFAnual = !0, dataPorTipo.WHOGARTOTAL.tieneSubtituloBeneficios = !1, dataPorTipo.WHOGARTOTAL.tieneGlosaOferta = !0, dataPorTipo.WHOGARTOTAL.renovacionAutomatica = !0, dataPorTipo.WHOGARTOTAL.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WROBOSALIRPRO = {}, dataPorTipo.WROBOSALIRPRO.moneda = "UF", dataPorTipo.WROBOSALIRPRO.tipoPrima = "Mensual", dataPorTipo.WROBOSALIRPRO.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WROBOSALIRPRO.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WROBOSALIRPRO.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WROBOSALIRPRO.tieneUFAnual = !0, dataPorTipo.WROBOSALIRPRO.tieneSubtituloBeneficios = !0, dataPorTipo.WROBOSALIRPRO.tieneGlosaOferta = !0, dataPorTipo.WROBOSALIRPRO.renovacionAutomatica = !0, dataPorTipo.WROBOSALIRPRO.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WHOGARCONDEV = {}, dataPorTipo.WHOGARCONDEV.moneda = "UF", dataPorTipo.WHOGARCONDEV.tipoPrima = "Mensual", dataPorTipo.WHOGARCONDEV.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WHOGARCONDEV.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WHOGARCONDEV.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WHOGARCONDEV.tieneUFAnual = !0, dataPorTipo.WHOGARCONDEV.tieneSubtituloBeneficios = !0, dataPorTipo.WHOGARCONDEV.tieneGlosaOferta = !0, dataPorTipo.WHOGARCONDEV.renovacionAutomatica = !0, dataPorTipo.WHOGARCONDEV.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDONCO_SINCARGA = {}, dataPorTipo.WSALUDONCO_SINCARGA.moneda = "UF", dataPorTipo.WSALUDONCO_SINCARGA.tipoPrima = "Mensual", dataPorTipo.WSALUDONCO_SINCARGA.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDONCO_SINCARGA.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDONCO_SINCARGA.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDONCO_SINCARGA.tieneUFAnual = !0, dataPorTipo.WSALUDONCO_SINCARGA.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDONCO_SINCARGA.tieneGlosaOferta = !0, dataPorTipo.WSALUDONCO_SINCARGA.renovacionAutomatica = !0, dataPorTipo.WSALUDONCO_SINCARGA.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDLIBE_SINCARGA = {}, dataPorTipo.WSALUDLIBE_SINCARGA.moneda = "UF", dataPorTipo.WSALUDLIBE_SINCARGA.tipoPrima = "Mensual", dataPorTipo.WSALUDLIBE_SINCARGA.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDLIBE_SINCARGA.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDLIBE_SINCARGA.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDLIBE_SINCARGA.tieneUFAnual = !0, dataPorTipo.WSALUDLIBE_SINCARGA.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDLIBE_SINCARGA.tieneGlosaOferta = !0, dataPorTipo.WSALUDLIBE_SINCARGA.renovacionAutomatica = !0, dataPorTipo.WSALUDLIBE_SINCARGA.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDONCO_PADRESUEGRO = {}, dataPorTipo.WSALUDONCO_PADRESUEGRO.moneda = "UF", dataPorTipo.WSALUDONCO_PADRESUEGRO.tipoPrima = "Mensual", dataPorTipo.WSALUDONCO_PADRESUEGRO.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDONCO_PADRESUEGRO.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDONCO_PADRESUEGRO.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDONCO_PADRESUEGRO.tieneUFAnual = !0, dataPorTipo.WSALUDONCO_PADRESUEGRO.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDONCO_PADRESUEGRO.tieneGlosaOferta = !0, dataPorTipo.WSALUDONCO_PADRESUEGRO.renovacionAutomatica = !0, dataPorTipo.WSALUDONCO_PADRESUEGRO.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WSALUDLIBE_PADRESUEGRO = {}, dataPorTipo.WSALUDLIBE_PADRESUEGRO.moneda = "UF", dataPorTipo.WSALUDLIBE_PADRESUEGRO.tipoPrima = "Mensual", dataPorTipo.WSALUDLIBE_PADRESUEGRO.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WSALUDLIBE_PADRESUEGRO.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WSALUDLIBE_PADRESUEGRO.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WSALUDLIBE_PADRESUEGRO.tieneUFAnual = !0, dataPorTipo.WSALUDLIBE_PADRESUEGRO.tieneSubtituloBeneficios = !0, dataPorTipo.WSALUDLIBE_PADRESUEGRO.tieneGlosaOferta = !0, dataPorTipo.WSALUDLIBE_PADRESUEGRO.renovacionAutomatica = !0, dataPorTipo.WSALUDLIBE_PADRESUEGRO.etiquetaDescargaPoliza = "Descargar Seguro", dataPorTipo.WFRAUDE_CAMPANA = {}, dataPorTipo.WFRAUDE_CAMPANA.moneda = "UF", dataPorTipo.WFRAUDE_CAMPANA.tipoPrima = "Mensual", dataPorTipo.WFRAUDE_CAMPANA.textoPrimaCoberturas = "Prima Mensual", dataPorTipo.WFRAUDE_CAMPANA.tituloTipoPrecioInternetUOfertaInternet = "Precio Internet", dataPorTipo.WFRAUDE_CAMPANA.subTituloTipoPrecioNormalUOfertaInternet = "Oferta Internet", dataPorTipo.WFRAUDE_CAMPANA.tieneUFAnual = !0, dataPorTipo.WFRAUDE_CAMPANA.tieneSubtituloBeneficios = !0, dataPorTipo.WFRAUDE_CAMPANA.tieneGlosaOferta = !0, dataPorTipo.WFRAUDE_CAMPANA.renovacionAutomatica = !0, dataPorTipo.WFRAUDE_CAMPANA.etiquetaDescargaPoliza = "Descargar Seguro"
			}
			var dataPorTipo = [];
			return loadDataPorTipo(), {
				getDataPorTipo: getDataPorTipo
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("utilDataPorTipoSeguroService", utilDataPorTipoSeguroService), utilDataPorTipoSeguroService.$inject = ["$http", "URL_API"]
	}(),
	function() {
		"use strict";

		function utilMigracionFraudeServices(storeUserService, validaDatosPropuestaFactory, flujoModelService, $q, $filter) {
			function validarMigracion() {
				var defered = $q.defer(),
					promise = defered.promise,
					flujoModel = flujoModelService.getFlujoModel();
				return storeUserService.getStatusPromise().then(function() {
					function getParametrosResult(result) {
						defered.resolve(result)
					}

					function getParametrosError(err) {
						defered.reject(err)
					}
					setClienteContratante();
					var dataJson = {
						codNegocio: flujoModel.seguroUrl.codNegocio,
						codTipo: flujoModel.seguroUrl.codTipo,
						codProducto: flujoModel.seguroUrl.codProducto,
						codWorkflow: flujoModel.seguroUrl.codWorkflow,
						plnCor: flujoModel.simulacion.plan.plnCor,
						clienteContratante: {
							dv: flujoModel.migracionFraude.clienteContratante.dv,
							nombre: flujoModel.migracionFraude.clienteContratante.nombre,
							apepat: flujoModel.migracionFraude.clienteContratante.apepat,
							apemat: flujoModel.migracionFraude.clienteContratante.apemat,
							fecNac: flujoModel.migracionFraude.clienteContratante.fecNac,
							fecNacDate: flujoModel.migracionFraude.clienteContratante.fecNacDate,
							codMarca: flujoModel.migracionFraude.clienteContratante.codMarca,
							esTitular: 1,
							esAsegurado: 1,
							rut: flujoModel.migracionFraude.clienteContratante.rut
						},
						clienteAsegurado: {
							dv: flujoModel.migracionFraude.clienteContratante.dv,
							nombre: flujoModel.migracionFraude.clienteContratante.nombre,
							apepat: flujoModel.migracionFraude.clienteContratante.apepat,
							apemat: flujoModel.migracionFraude.clienteContratante.apemat,
							fecNac: flujoModel.migracionFraude.clienteContratante.fecNac,
							fecNacDate: flujoModel.migracionFraude.clienteContratante.fecNacDate,
							codMarca: flujoModel.migracionFraude.clienteContratante.codMarca,
							esTitular: 1,
							esAsegurado: 1,
							rut: flujoModel.migracionFraude.clienteContratante.rut
						},
						rangoAgnos: {
							nombre: "fechaNacimiento",
							valor: flujoModel.migracionFraude.clienteContratante.fecNac
						}
					};
					validaDatosPropuestaFactory.validaDatosPropuesta(dataJson).then(getParametrosResult, getParametrosError)
				}), promise
			}

			function validarMigracionLocal() {
				function getParametrosResult2(result) {
					defered.resolve(result)
				}

				function getParametrosError2(err) {
					defered.reject(err)
				}
				var defered = $q.defer(),
					promise = defered.promise;
				flujoModelService.getFlujoModel();
				setClienteContratanteLocal();
				var dataJson = {
					codNegocio: 1e4,
					codTipo: 10002,
					codProducto: 10002,
					codWorkflow: "WFRAUDE_CAMPANA",
					plnCor: 0,
					clienteAsegurado: {
						dv: "2",
						nombre: "Francesca Orielle",
						apepat: "Guerra",
						apemat: "Henriquez",
						fecNacDate: "1995-02-01T00:00:00.000-03:00",
						rut: "18973239"
					},
					rangoAgnos: {
						nombre: "fechaNacimiento",
						valor: "01/02/1995"
					},
					clienteContratante: {
						dv: "2",
						nombre: "Francesca Orielle",
						apepat: "Guerra",
						apemat: "Henriquez",
						fecNac: "01/02/1995",
						fecNacDate: "1995-02-01T00:00:00.000-03:00",
						codMarca: "0",
						esTitular: 1,
						esAsegurado: 1,
						rut: "18973239"
					}
				};
				return validaDatosPropuestaFactory.validaDatosPropuesta(dataJson).then(getParametrosResult2, getParametrosError2), promise
			}

			function setClienteContratante() {
				var flujoModel = flujoModelService.getFlujoModel(),
					numRut = storeUserService.getUser().datosCliente.rut.substring(0, storeUserService.getUser().datosCliente.rut.length - 1),
					dv = storeUserService.getUser().datosCliente.rut.substring(storeUserService.getUser().datosCliente.rut.length - 1);
				flujoModel.migracionFraude.clienteContratante = {}, flujoModel.migracionFraude.clienteContratante.dv = dv, flujoModel.migracionFraude.clienteContratante.nombre = storeUserService.getUser().datosCliente.nombres, flujoModel.migracionFraude.clienteContratante.apepat = storeUserService.getUser().datosCliente.apellidoPaterno, flujoModel.migracionFraude.clienteContratante.apemat = storeUserService.getUser().datosCliente.apellidoMaterno, flujoModel.migracionFraude.clienteContratante.fecNac = $filter("date")(new Date(creaFecha(storeUserService.getUser().datosCliente.fechaNacimiento)), "dd/MM/yyyy"), flujoModel.migracionFraude.clienteContratante.fecNacDate = new Date(storeUserService.getUser().datosCliente.fechaNacimiento), flujoModel.migracionFraude.clienteContratante.codMarca = storeUserService.getUser().datosCliente.marca.codigo, flujoModel.migracionFraude.clienteContratante.esTitular = 1, flujoModel.migracionFraude.clienteContratante.esAsegurado = 1, flujoModel.migracionFraude.clienteContratante.rut = numRut, flujoModel.migracionFraude.clienteContratante.sexo = storeUserService.getUser().datosCliente.genero, flujoModel.migracionFraude.clienteContratante.email = storeUserService.getUser().datosContacto.emailParticular, flujoModel.migracionFraude.clienteContratante.telefono = storeUserService.getUser().datosContacto.telefonoFijo.numero
			}

			function setClienteContratanteLocal() {
				var flujoModel = flujoModelService.getFlujoModel();
				flujoModel.migracionFraude.clienteContratante = {}, flujoModel.migracionFraude.clienteContratante.dv = "5", flujoModel.migracionFraude.clienteContratante.nombre = "XXXx", flujoModel.migracionFraude.clienteContratante.apepat = "XXXx", flujoModel.migracionFraude.clienteContratante.apemat = "XXXx", flujoModel.migracionFraude.clienteContratante.fecNac = "12/11/1980", flujoModel.migracionFraude.clienteContratante.fecNacDate = void 0, flujoModel.migracionFraude.clienteContratante.codMarca = 1, flujoModel.migracionFraude.clienteContratante.esTitular = 1, flujoModel.migracionFraude.clienteContratante.esAsegurado = 1, flujoModel.migracionFraude.clienteContratante.rut = "138832775", flujoModel.migracionFraude.clienteContratante.sexo = 1, flujoModel.migracionFraude.clienteContratante.email = "l@d.cl", flujoModel.migracionFraude.clienteContratante.telefono = "88775624"
			}

			function creaFecha(fecha) {
				var model = fecha,
					isDate = model instanceof Date;
				return isDate ? model = new Date(fecha.getUTCFullYear(), fecha.getUTCMonth(), fecha.getUTCDate(), fecha.getUTCHours(), fecha.getUTCMinutes(), fecha.getUTCSeconds()) : creaFecha(new Date(model))
			}
			return {
				validarMigracion: validarMigracion,
				validarMigracionLocal: validarMigracionLocal
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("utilMigracionFraudeServices", utilMigracionFraudeServices), utilMigracionFraudeServices.$inject = ["storeUserService", "validaDatosPropuestaFactory", "flujoModelService", "$q", "$filter"]
	}(),
	function() {
		"use strict";

		function utilServiceSeguros($http, URL_API, error500, APP_TIPO_PORTAL) {
			function isCampoVacio(campo) {
				return null === campo || angular.isUndefined(campo) || 0 === campo.length ? !0 : !1
			}

			function getSexo(sexo) {
				return "1" === sexo || 1 === sexo ? "Masculino" : "Femenino"
			}
			return {
				isCampoVacio: isCampoVacio,
				getSexo: getSexo
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("utilServiceSeguros", utilServiceSeguros), utilServiceSeguros.$inject = ["$http", "URL_API", "error500", "APP_TIPO_PORTAL"]
	}(),
	function() {
		"use strict";

		function utilValidacionesSegurosServices($http, URL_API) {
			function isMinMaxFechaNacimientoValida(fecNac, datosAsegurado) {
				if (angular.isUndefined(vm.datosAsegurado.fechaNacimiento.fechaMin) || angular.isUndefined(vm.datosAsegurado.fechaNacimiento.fechaMax)) return vm.datosAsegurado.fechaNacimiento.errorMje = "", vm.datosAsegurado.fechaNacimiento.error = !1, !1;
				if (null === vm.datosAsegurado.fechaNacimiento.date || angular.isUndefined(vm.datosAsegurado.fechaNacimiento.date)) return vm.datosAsegurado.fechaNacimiento.errorMje = "", vm.datosAsegurado.fechaNacimiento.error = !1, !1;
				var fechaInicioValida = vm.datosAsegurado.fechaNacimiento.fechaMin,
					fechaTerminoValida = vm.datosAsegurado.fechaNacimiento.fechaMax,
					fechaNacimientoValidar = creaFecha(vm.datosAsegurado.fechaNacimiento.date);
				return null === fechaNacimientoValidar || angular.isUndefined(fechaNacimientoValidar) || fechaInicioValida > fechaNacimientoValidar ? (vm.datosAsegurado.fechaNacimiento.errorMje = vm.datosAsegurado.fechaNacimiento.errorMjeEdadMax, vm.datosAsegurado.fechaNacimiento.error = !0, !1) : null === fechaNacimientoValidar || angular.isUndefined(fechaNacimientoValidar) || fechaNacimientoValidar > fechaTerminoValida ? (vm.datosAsegurado.fechaNacimiento.errorMje = vm.datosAsegurado.fechaNacimiento.errorMjeEdadMin, vm.datosAsegurado.fechaNacimiento.error = !0, !1) : (vm.datosAsegurado.fechaNacimiento.errorMje = "", vm.datosAsegurado.fechaNacimiento.error = !1, !0)
			}
			return {
				isMinMaxFechaNacimientoValida: isMinMaxFechaNacimientoValida
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("utilValidacionesSegurosServices", utilValidacionesSegurosServices), utilValidacionesSegurosServices.$inject = ["$http", "URL_API"]
	}(),
	function() {
		"use strict";

		function validaDatosViajeTotalService(flujoModelService, envioPolizaPersonaModelService, $filter) {
			function validarDatosViajeTotal() {
				for (var flujoModel = flujoModelService.getFlujoModel(), viajeroTitular = flujoModel.ingresoDatos.viajeroTitular, datosContratante = flujoModel.ingresoDatos.datosContratante, viajeros = flujoModel.ingresoDatos.viajeros, datosViajero = flujoModel.simulacion.datosViajero, rut = $filter("rutSinFormato")(viajeroTitular.rut.valor), numRut = rut.substring(0, rut.length - 1), dvRut = rut.substring(rut.length - 1), rutCon = $filter("rutSinFormato")(datosContratante.rut.valor), numRutCon = rutCon.substring(0, rutCon.length - 1), dvRutCon = rutCon.substring(rutCon.length - 1), detalleCarga = angular.copy(viajeros), i = 0; i < detalleCarga.length; i++) delete detalleCarga[i].parentescoGlosa, delete detalleCarga[i].fecNacFormat;
				var fichaClienteAsegurado = {
					codSesion: flujoModel.token,
					plnCor: flujoModel.simulacion.planSeleccionado.plnCor + "-" + flujoModel.simulacion.planSeleccionado.plnMontoCLP,
					codNegocio: flujoModel.seguroUrl.codNegocio,
					codTipo: flujoModel.seguroUrl.codTipo,
					codProducto: flujoModel.seguroUrl.codProducto,
					codWorkflow: flujoModel.seguroUrl.codWorkflow,
					clienteAsegurado: {
						dv: dvRut,
						nombre: viajeroTitular.nombre.valor,
						apepat: viajeroTitular.apellidoPaterno.valor,
						apemat: viajeroTitular.apellidoMaterno.valor,
						fecNac: viajeroTitular.fechaNacimiento.format,
						fecNacDate: viajeroTitular.fechaNacimiento.date,
						rut: numRut
					},
					clienteContratante: {
						dv: dvRutCon,
						nombre: datosContratante.nombre.valor,
						apepat: datosContratante.apellidoPaterno.valor,
						apemat: datosContratante.apellidoMaterno.valor,
						fecNac: datosContratante.fechaNacimiento.format,
						fecNacDate: datosContratante.fechaNacimiento.date,
						rut: numRutCon
					},
					rangoAgnos: {
						nombre: "FechaNacimiento",
						valor: viajeroTitular.fechaNacimiento.format
					},
					direccionDespacho: {
						calle: viajeroTitular.direccion,
						numCalle: viajeroTitular.numero,
						numDepto: viajeroTitular.bloque,
						villa: viajeroTitular.direccion,
						codComuna: viajeroTitular.comuna.valor,
						codCiudad: viajeroTitular.ciudad.valor,
						codRegion: viajeroTitular.region.valor,
						email: viajeroTitular.mail,
						fonoComCodArea: "56",
						fonoCom: viajeroTitular.telefono
					},
					rangoFechas: [{
						nombre: "fechaInicio",
						valor: datosViajero.fechaInicio.format
					}, {
						nombre: "fechaTermino",
						valor: datosViajero.fechaTermino.format
					}],
					numeroPersona: datosViajero.numeroPersonas,
					detalleCarga: detalleCarga
				};
				return fichaClienteAsegurado
			}
			return {
				validarDatosViajeTotal: validarDatosViajeTotal
			}
		}
		angular.module("WebBancoChile.venta-seguros-viajes").service("validaDatosViajeTotalService", validaDatosViajeTotalService), validaDatosViajeTotalService.$inject = ["flujoModelService", "envioPolizaPersonaModelService", "$filter"]
	}(),
	function() {
		function bancoChileConfig($stateProvider, $httpProvider) {
			$stateProvider.state("venta-seguros-viajes", {
				parent: "root",
				url: "/venta-seguros-viajes/:codNegocio/:codTipo/:codProducto/:codWorkflow",
				views: {
					"main@": {
						controller: "segurosPersona",
						controllerAs: "segurosCtrl",
						templateUrl: "venta-seguros-viajes/src/venta-seguros-viajes.tpl.html"
					}
				},
				data: {
					pageTitle: "Seguros"
				}
			}).state("venta-seguros-viaje-total-simulacion", {
				parent: "root",
				url: "/venta-seguros-viaje-total-simulacion",
				views: {
					"main@": {
						controller: "simViajeTotalController",
						controllerAs: "simvtCtrl",
						templateUrl: "venta-seguros-viajes/src/seguros/viaje-total/simulacion/simulacion-viaje-total.tpl.html"
					}
				},
				data: {
					pageTitle: "Seguros"
				}
			}).state("venta-seguros-viaje-total-ingreso", {
				parent: "root",
				url: "/viaje-total/ingreso",
				views: {
					"main@": {
						controller: "ingViajeTotalController",
						controllerAs: "ingvtc",
						templateUrl: "venta-seguros-viajes/src/seguros/viaje-total/ingreso/ingreso-viaje-total.tpl.html"
					}
				},
				data: {
					pageTitle: "Seguros"
				}
			}).state("venta-seguros-viaje-total-resumen", {
				parent: "root",
				url: "/viaje-total/resumen",
				views: {
					"main@": {
						controller: "resumenViajeTotalController",
						controllerAs: "rsvtc",
						templateUrl: "venta-seguros-viajes/src/seguros/viaje-total/resumen/resumen-viaje-total.tpl.html"
					}
				},
				data: {
					pageTitle: "Seguros"
				}
			}).state("venta-seguros-viajes-pago", {
				parent: "root",
				url: "/viaje-total/pago",
				views: {
					"main@": {
						controller: "medioPagoController",
						controllerAs: "pagoCrl",
						templateUrl: "venta-seguros-viajes/src/seguros/pago/medio-pago.tpl.html"
					}
				},
				data: {
					pageTitle: "Seguros"
				}
			}).state("venta-seguros-viajes-error500-venta-seguros", {
				parent: "root",
				url: "/error500-venta-seguros",
				views: {
					"main@": {
						controller: "messageHandlerCtrl",
						controllerAs: "messageHandler",
						templateUrl: "message-handler/message-handler/messageHandler.tpl.html"
					}
				},
				data: {
					pageTitle: "Seguros"
				}
			})
		}
		angular.module("WebBancoChile.venta-seguros-viajes").config(bancoChileConfig), bancoChileConfig.$inject = ["$stateProvider", "$httpProvider"]
	}(),
	function() {
		function segurosPersona($window, $stateParams, $scope, $state, flujoModelService, homeSegurosFactory) {
			var vm = this;
			vm.estado = null, vm.currentState = null, vm.loading = !0,
				function() {
					vm.flujoModel = flujoModelService.getFlujoModel(), vm.flujoModel.seguroUrl = {}, vm.flujoModel.seguroUrl.codNegocio = $stateParams.codNegocio, vm.flujoModel.seguroUrl.codTipo = $stateParams.codTipo, vm.flujoModel.seguroUrl.codProducto = $stateParams.codProducto, vm.flujoModel.seguroUrl.codWorkflow = $stateParams.codWorkflow, vm.loading = !1, $state.go("venta-seguros-viaje-total-simulacion")
				}()
		}
		angular.module("WebBancoChile.venta-seguros-viajes").controller("segurosPersona", segurosPersona), segurosPersona.$inject = ["$window", "$stateParams", "$scope", "$state", "flujoModelService", "homeSegurosFactory"]
	}(),
	function() {
		angular.module("WebBancoChile.visualizacion-boletas-sii-nocliente").constant("VISUALIZACION_BOLETAS_URL_BASE", "/visualizacion-boletas-sii-pub-rest/consulta-boletas").constant("visualizacion-boletas-sii-nocliente_uris", {}).constant("URL_PORTAL_LOGIN", "https://portalpersonas.bancochile.cl/persona")
	}(),
	function(angular, undefined) {
		"use strict";
		angular.module("nocaptcha.directive", []).provider("googleGrecaptcha", function() {
			var language;
			this.setLanguage = function(_language) {
				language = _language
			}, this.$get = ["$q", "$window", "$document", "$rootScope", function($q, $window, $document, $rootScope) {
				var deferred = $q.defer();
				$window.recaptchaOnloadCallback = function() {
					$rootScope.$apply(function() {
						deferred.resolve()
					})
				};
				var s = $document[0].createElement("script"),
					src = "https://www.google.com/recaptcha/api.js?onload=recaptchaOnloadCallback&render=explicit";
				return s.type = "application/javascript", language && (src += "&hl=" + language), s.src = src, $document[0].body.appendChild(s), deferred.promise
			}]
		}).provider("noCAPTCHA", ["googleGrecaptchaProvider", function(googleGrecaptchaProvider) {
			var siteKey, size, theme;
			this.setSiteKey = function(_siteKey) {
				siteKey = _siteKey
			}, this.setSize = function(_size) {
				size = _size
			}, this.setTheme = function(_theme) {
				theme = _theme
			}, this.setLanguage = function(language) {
				googleGrecaptchaProvider.setLanguage(language)
			}, this.$get = function() {
				return {
					theme: theme,
					siteKey: siteKey,
					size: size
				}
			}
		}]).directive("reCaptcha", ["noCAPTCHA", "googleGrecaptcha", "$document", "$window", function(noCaptcha, googleGrecaptcha, $document, $window) {
			var removePLSContainers = function() {
				for (var plsContainers = $document[0].getElementsByClassName("pls-container"), i = 0; i < plsContainers.length; i++)
					for (var parent = plsContainers[i].parentNode; parent.firstChild;) parent.removeChild(parent.firstChild)
			};
			return {
				restrict: "EA",
				scope: {
					gRecaptchaResponse: "=",
					siteKey: "@",
					stoken: "@",
					size: "@",
					theme: "@",
					control: "=?",
					expiredCallback: "=?"
				},
				replace: !0,
				link: function(scope, element) {
					scope.control = scope.control || {};
					var widgetId, grecaptchaCreateParameters, control = scope.control;
					if (grecaptchaCreateParameters = {
							sitekey: scope.siteKey || noCaptcha.siteKey,
							size: scope.size || noCaptcha.size,
							theme: scope.theme || noCaptcha.theme,
							callback: function(r) {
								scope.$apply(function() {
									scope.gRecaptchaResponse = r
								})
							},
							"expired-callback": function() {
								scope.expiredCallback && "function" == typeof scope.expiredCallback && scope.$apply(function() {
									scope.expiredCallback()
								})
							}
						}, scope.stoken && (grecaptchaCreateParameters.stoken = scope.stoken), !grecaptchaCreateParameters.sitekey) throw new Error("Site Key is required");
					googleGrecaptcha.then(function() {
						widgetId = $window.grecaptcha.render(element[0], grecaptchaCreateParameters), control.reset = function() {
							$window.grecaptcha.reset(widgetId), scope.gRecaptchaResponse = null
						}
					}), scope.$on("$destroy", function() {
						$window.grecaptcha && $window.grecaptcha.reset(widgetId), removePLSContainers()
					}), noCaptcha.reset = function() {
						$window.grecaptcha && $window.grecaptcha.reset(widgetId)
					}
				}
			}
		}])
	}(angular),
	function() {
		function validaUsuarioFactory($http, URL_API, VISUALIZACION_BOLETAS_URL_BASE) {
			function validaUsuario(rut, serie, captcha) {
				return $http({
					url: URL_API + VISUALIZACION_BOLETAS_URL_BASE + "?rut=" + rut + "&serie=" + serie + "&g-recaptcha-response=" + captcha,
					method: "POST",
					headers: {
						"Content-Type": "application/json"
					}
				}).then(function(response) {
					return response.data
				})
			}
			return {
				validaUsuario: validaUsuario
			}
		}
		angular.module("WebBancoChile.validaUsuarioFactory.factory", []).factory("validaUsuarioFactory", validaUsuarioFactory), validaUsuarioFactory.$inject = ["$http", "URL_API", "VISUALIZACION_BOLETAS_URL_BASE"]
	}(),
	function() {
		function visualizacionBoletasSiiNoclienteTabsCtrl($rootScope, $state, $document, error500, catalogoMensajesFactory) {
			function getPermissions() {
				init()
			}

			function init() {
				evaluateTab(), vm.loading = !1
			}

			function evaluateStatus() {
				vm.state = {
					helloWorld: $state.is("visualizacion-boletas-sii-nocliente-hello-world"),
					transactionSteps: $state.is("visualizacion-boletas-sii-nocliente-transaction-steps")
				}
			}

			function evaluateTab() {
				switch ($state.current.name) {
					case "visualizacion-boletas-sii-nocliente-hello-world":
						vm.activeTab = "visualizacion-boletas-sii-nocliente-hello-world";
						break;
					case "visualizacion-boletas-sii-nocliente-transaction-steps":
						vm.activeTab = "visualizacion-boletas-sii-nocliente-transaction-steps";
						break;
					default:
						vm.activeTab = $state.current.name
				}
				evaluateStatus()
			}
			var vm = this;
			vm.permissions = {
				helloWorld: !0,
				transactionSteps: !0
			}, vm.loading = !0, getPermissions();
			$rootScope.$on("$stateChangeSuccess", function() {
				$document[0].body.scrollTop = $document[0].documentElement.scrollTop = 0, evaluateTab()
			}), vm.stateReload = function() {
				$state.go("reloadPage", {
					state: vm.activeTab
				})
			}
		}
		angular.module("WebBancoChile.visualizacion-boletas-sii-nocliente").controller("visualizacionBoletasSiiNoclienteTabsCtrl", visualizacionBoletasSiiNoclienteTabsCtrl), visualizacionBoletasSiiNoclienteTabsCtrl.$inject = ["$rootScope", "$state", "$document", "error500", "catalogoMensajesFactory"]
	}(),
	function() {
		function visualizacionBoletasSiiNoclienteTransactionStepsController($state, $scope, $window, $filter, $location, catalogoMensajesFactory, RutHelper, validaUsuarioFactory, URL_PORTAL_LOGIN, noCAPTCHA) {
			function enterpress(e) {
				var code = e.keyCode ? e.keyCode : e.which;
				13 === code && vm.validarRut(vm.rut)
			}

			function isRutVacio(rut) {
				return "" === rut || angular.isUndefined(rut)
			}

			function validarRut(rut) {
				vm.errorRutVacio = !0, vm.showRutNoValido = !1;
				var rutValido = !1,
					rutVacio = isRutVacio(rut);
				rutVacio || (vm.errorRutVacio = !1, rutValido = RutHelper.validate(rut), rutValido || (vm.showRutNoValido = !0));
				var rutMayor50MM = !1;
				vm.showRutMayor50MM = rutMayor50MM;
				var rutAux;
				return rutVacio || (rutAux = rut.replace("K", "0").replace("k", "0")), !rutVacio && rutValido && rutAux >= vm.rut50MM && (rutMayor50MM = !0, vm.showRutMayor50MM = rutMayor50MM), !(rutVacio || !rutValido || rutMayor50MM)
			}

			function limpiarMensajes() {
				vm.showRutNoValido = !1, vm.showError = !1, vm.showRutMayor50MM = !1
			}

			function limpiarSerie() {
				vm.showError = !1
			}

			function validaUsuario() {
				vm.loadingBoton = !0, vm.esCliente = !1, vm.cedulaVigente = !0, vm.showError = !1, validarCampos() && validaUsuarioFactory.validaUsuario(RutHelper.format(vm.rut), vm.serie, vm.captchaResponse).then(function(data) {
					if (data.esClientePersonas) return vm.esCliente = !0, vm.loadingBoton = !1, !1;
					if (!data.esCedulaVigente) return vm.cedulaVigente = !1, vm.loadingBoton = !1, !1;
					var form = document.createElement("form");
					form.method = "POST", form.action = data.urlArtikos + "?TKN=" + data.tokenArtikos, document.body.appendChild(form), form.submit(), document.body.removeChild(form), vm.showError = !1, vm.esCliente = !1, vm.cedulaVigente = !0
				}, function(error) {
					vm.loadingBoton = !1, vm.showError = !0, vm.mensaje = "El servicio presenta intermitencias. Por favor, intenta nuevamente."
				}), vm.captchaReload(), vm.loadingBoton = !1
			}

			function validarCampos() {
				var errorForm = !0;
				return vm.boletasForm.username2.$error.required && (vm.boletasForm.username2.$dirty = !0, errorForm = !1), vm.boletasForm.serie.$error.required && (vm.boletasForm.serie.$dirty = !0, errorForm = !1), errorForm
			}

			function login() {
				$window.open(URL_PORTAL_LOGIN)
			}

			function init() {
				catalogoMensajesFactory.obtener(501196).then(setMensajeErrorRutVacio), catalogoMensajesFactory.obtener(501197).then(setMensajeErrorRutNoValido), catalogoMensajesFactory.obtener(501673).then(setMensajeErrorPasswordVacio), catalogoMensajesFactory.obtener(501011).then(setMensajeErrorTeclaMayuscula), catalogoMensajesFactory.obtener(501203).then(setMensajeErrorTresIntentos), catalogoMensajesFactory.obtener(501541).then(setMensajeRUTMayor50MM), catalogoMensajesFactory.obtener(501197).then(setMensajeFormatoSerie), vm.requestId = $location.search().req;
				var error = $location.search().error;
				error ? vm.showError = !0 : vm.showError = !1, vm.showRutNoValido = !1, vm.showRutMayor50MM = !1
			}

			function setMensajeErrorRutVacio(result) {
				vm.mensajeErrorRutVacio = result.texto
			}

			function setMensajeErrorRutNoValido(result) {
				vm.mensajeErrorNoValido = result.texto
			}

			function setMensajeErrorPasswordVacio(result) {
				vm.mensajeSerieVacio = result.texto
			}

			function setMensajeErrorTeclaMayuscula(result) {
				vm.mensajeTeclaMayuscula = result.texto
			}

			function setMensajeErrorTresIntentos(result) {
				vm.mensajeTresIntentos = result.texto
			}

			function setMensajeRUTMayor50MM(result) {
				vm.mensajeRUTMayor50MM = result.texto
			}

			function setMensajeFormatoSerie(result) {
				vm.mensajeFormatoSerie = result.texto
			}
			var vm = this;
			vm.rut50MM = 5e8, vm.request = {}, vm.captchaResponse = "", vm.captchaReload = {}, vm.captchaCallback = "", vm.esCliente = !1, vm.cedulaVigente = !0, vm.loadingBoton = !1, vm.validacionCaptcha = !1, vm.dataLayer = $window.dataLayer = $window.dataLayer || [], vm.validarRut = validarRut, vm.limpiarMensajes = limpiarMensajes, vm.limpiarSerie = limpiarSerie, vm.enterpress = enterpress, vm.validaUsuario = validaUsuario, vm.login = login, vm.captchaReload = function($scope) {
				noCAPTCHA.reset(), vm.captchaResponse = ""
			}, vm.captchaCallback = function() {
				vm.captchaResponse = ""
			}, init(), $scope.$watch("boletas.captchaResponse", function() {
				vm.validacionCaptcha = "" !== vm.captchaResponse && null !== vm.captchaResponse && void 0 !== vm.captchaResponse
			}), $scope.$watch("boletas.showError", function() {
				vm.showError && vm.captchaReload()
			})
		}
		angular.module("WebBancoChile.visualizacion-boletas-sii-nocliente").config(["noCAPTCHAProvider", function(noCaptchaProvider) {
			noCaptchaProvider.setSiteKey("6LfaC3oaAAAAAJLlEbuKoR3FpLss0GSq0oVucXH1"), noCaptchaProvider.setTheme("light"), noCaptchaProvider.setLanguage("es-419")
		}]).controller("visualizacionBoletasSiiNoclienteTransactionStepsController", visualizacionBoletasSiiNoclienteTransactionStepsController), visualizacionBoletasSiiNoclienteTransactionStepsController.$inject = ["$state", "$scope", "$window", "$filter", "$location", "catalogoMensajesFactory", "RutHelper", "validaUsuarioFactory", "URL_PORTAL_LOGIN", "noCAPTCHA"]
	}(),
	function() {
		function visualizacionBoletasSiiNoclienteConfig($stateProvider, $urlRouterProvider) {
			var base_url = "visualizacion-boletas-sii-nocliente/src/visualizacion-boletas-sii-nocliente/",
				pageTitle = "Consulta de boletas Banco de Chile";
			$stateProvider.state("visualizacion-boletas-sii-nocliente", {
				parent: "root",
				url: "/visualizacion-boletas-sii-nocliente",
				views: {
					"main@": {
						controller: "visualizacionBoletasSiiNoclienteTabsCtrl",
						controllerAs: "tabs",
						templateUrl: base_url + "tabs/visualizacion-boletas-sii-nocliente-tabs.tpl.html"
					}
				},
				data: {
					pageTitle: pageTitle
				}
			}).state("visualizacion-boletas-sii-nocliente-hello-world", {
				parent: "visualizacion-boletas-sii-nocliente",
				url: "/hello-world",
				controller: "visualizacionBoletasSiiNoclienteHelloWorldController",
				controllerAs: "helloWorld",
				templateUrl: base_url + "hello-world/hello-world.tpl.html",
				data: {
					pageTitle: pageTitle
				}
			}).state("visualizacion-boletas-sii-nocliente-transaction-steps", {
				parent: "visualizacion-boletas-sii-nocliente",
				url: "/transaction-steps",
				controller: "visualizacionBoletasSiiNoclienteTransactionStepsController",
				controllerAs: "boletas",
				templateUrl: base_url + "transaction-steps/transaction-steps.tpl.html",
				data: {
					pageTitle: pageTitle
				}
			}), $urlRouterProvider.otherwise("/visualizacion-boletas-sii-nocliente")
		}
		angular.module("WebBancoChile.visualizacion-boletas-sii-nocliente").config(visualizacionBoletasSiiNoclienteConfig), visualizacionBoletasSiiNoclienteConfig.$inject = ["$stateProvider", "$urlRouterProvider"]
	}();